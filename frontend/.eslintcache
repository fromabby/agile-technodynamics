[{"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\index.js":"1","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\store.js":"2","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\App.js":"3","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\reducers\\inquiryReducers.js":"4","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\reducers\\productReducers.js":"5","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\reducers\\dashboardReducers.js":"6","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\reducers\\websiteReducers.js":"7","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\reducers\\userReducers.js":"8","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\Home.js":"9","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\AboutHistory.js":"10","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\AboutCompany.js":"11","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\AboutScope.js":"12","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\AboutObjectives.js":"13","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\Products.js":"14","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\AboutMissionVision.js":"15","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\ConfirmationPage.js":"16","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\Services.js":"17","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\product\\ProductDetails.js":"18","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\EmailSent.js":"19","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\Contact.js":"20","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\layout\\Footer.js":"21","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\Profile.js":"22","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateAbout.js":"23","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdatePassword.js":"24","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateHome.js":"25","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\Dashboard.js":"26","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListAppointments.js":"27","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateFooter.js":"28","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListInquiries.js":"29","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListOthers.js":"30","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListAbout.js":"31","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ProductsList.js":"32","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListArchives.js":"33","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListTrash.js":"34","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateProduct.js":"35","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\NewProduct.js":"36","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateProfile.js":"37","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateInquiry.js":"38","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateUser.js":"39","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListUsers.js":"40","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\user\\RegisterSuccess.js":"41","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\actions\\userActions.js":"42","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\user\\ForgotPassword.js":"43","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\route\\ProtectedRoute.js":"44","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\user\\Login.js":"45","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\layout\\Header.js":"46","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\user\\NewPassword.js":"47","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\user\\Register.js":"48","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\constants\\inquiryConstants.js":"49","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\constants\\websiteConstants.js":"50","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\constants\\dashboardConstants.js":"51","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\constants\\productConstants.js":"52","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\constants\\userConstants.js":"53","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\layout\\MetaData.js":"54","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\layout\\Loader.js":"55","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\actions\\websiteActions.js":"56","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\actions\\productActions.js":"57","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\actions\\inquiryActions.js":"58","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\MissionVision.js":"59","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\product\\ProductDisplay.js":"60"},{"size":609,"mtime":1614154818332,"results":"61","hashOfConfig":"62"},{"size":1892,"mtime":1614154818334,"results":"63","hashOfConfig":"62"},{"size":6442,"mtime":1614156391806,"results":"64","hashOfConfig":"62"},{"size":4171,"mtime":1614154818333,"results":"65","hashOfConfig":"62"},{"size":4729,"mtime":1614154818333,"results":"66","hashOfConfig":"62"},{"size":489,"mtime":1614154818333,"results":"67","hashOfConfig":"62"},{"size":4887,"mtime":1614154818334,"results":"68","hashOfConfig":"62"},{"size":8210,"mtime":1614156391861,"results":"69","hashOfConfig":"62"},{"size":4912,"mtime":1614154818296,"results":"70","hashOfConfig":"62"},{"size":2454,"mtime":1614154818294,"results":"71","hashOfConfig":"62"},{"size":2366,"mtime":1614154818294,"results":"72","hashOfConfig":"62"},{"size":2446,"mtime":1614154818295,"results":"73","hashOfConfig":"62"},{"size":2481,"mtime":1614154818294,"results":"74","hashOfConfig":"62"},{"size":4695,"mtime":1614154818296,"results":"75","hashOfConfig":"62"},{"size":2363,"mtime":1614154818294,"results":"76","hashOfConfig":"62"},{"size":1095,"mtime":1614154818295,"results":"77","hashOfConfig":"62"},{"size":4142,"mtime":1614154818296,"results":"78","hashOfConfig":"62"},{"size":2410,"mtime":1614154818305,"results":"79","hashOfConfig":"62"},{"size":1079,"mtime":1614154818296,"results":"80","hashOfConfig":"62"},{"size":8291,"mtime":1614154818295,"results":"81","hashOfConfig":"62"},{"size":4145,"mtime":1614154818304,"results":"82","hashOfConfig":"62"},{"size":9561,"mtime":1614154818302,"results":"83","hashOfConfig":"62"},{"size":7839,"mtime":1614154818302,"results":"84","hashOfConfig":"62"},{"size":7032,"mtime":1614154818303,"results":"85","hashOfConfig":"62"},{"size":15733,"mtime":1614164712161,"results":"86","hashOfConfig":"62"},{"size":17005,"mtime":1614154818297,"results":"87","hashOfConfig":"62"},{"size":7964,"mtime":1614154818298,"results":"88","hashOfConfig":"62"},{"size":11040,"mtime":1614154818302,"results":"89","hashOfConfig":"62"},{"size":8168,"mtime":1614154818299,"results":"90","hashOfConfig":"62"},{"size":7949,"mtime":1614154818300,"results":"91","hashOfConfig":"62"},{"size":6545,"mtime":1614154818297,"results":"92","hashOfConfig":"62"},{"size":7639,"mtime":1614154818301,"results":"93","hashOfConfig":"62"},{"size":7950,"mtime":1614154818299,"results":"94","hashOfConfig":"62"},{"size":9466,"mtime":1614154818300,"results":"95","hashOfConfig":"62"},{"size":11661,"mtime":1614154818303,"results":"96","hashOfConfig":"62"},{"size":10032,"mtime":1614154818301,"results":"97","hashOfConfig":"62"},{"size":13420,"mtime":1614154818303,"results":"98","hashOfConfig":"62"},{"size":11461,"mtime":1614154818303,"results":"99","hashOfConfig":"62"},{"size":8654,"mtime":1614154818303,"results":"100","hashOfConfig":"62"},{"size":7672,"mtime":1614154818301,"results":"101","hashOfConfig":"62"},{"size":1330,"mtime":1614154818307,"results":"102","hashOfConfig":"62"},{"size":8061,"mtime":1614154818293,"results":"103","hashOfConfig":"62"},{"size":2361,"mtime":1614154818306,"results":"104","hashOfConfig":"62"},{"size":1604,"mtime":1614154818306,"results":"105","hashOfConfig":"62"},{"size":2701,"mtime":1614156391828,"results":"106","hashOfConfig":"62"},{"size":4267,"mtime":1614156391818,"results":"107","hashOfConfig":"62"},{"size":2958,"mtime":1614156391839,"results":"108","hashOfConfig":"62"},{"size":17569,"mtime":1614156391849,"results":"109","hashOfConfig":"62"},{"size":1100,"mtime":1614154818307,"results":"110","hashOfConfig":"62"},{"size":1490,"mtime":1614154818308,"results":"111","hashOfConfig":"62"},{"size":124,"mtime":1614154818307,"results":"112","hashOfConfig":"62"},{"size":1320,"mtime":1614154818307,"results":"113","hashOfConfig":"62"},{"size":2255,"mtime":1614154818308,"results":"114","hashOfConfig":"62"},{"size":283,"mtime":1614154818305,"results":"115","hashOfConfig":"62"},{"size":170,"mtime":1614154818305,"results":"116","hashOfConfig":"62"},{"size":7230,"mtime":1614154818294,"results":"117","hashOfConfig":"62"},{"size":4354,"mtime":1614154818293,"results":"118","hashOfConfig":"62"},{"size":3482,"mtime":1614154818293,"results":"119","hashOfConfig":"62"},{"size":592,"mtime":1614154818296,"results":"120","hashOfConfig":"62"},{"size":503,"mtime":1614154818305,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"1utfutg",{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"124"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"124"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"124"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"124"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"124"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"124"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"124"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"124"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"124"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"124"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"124"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"124"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"124"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"124"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"124"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"124"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"124"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"124"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"124"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"124"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"124"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"124"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"124"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"124"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"124"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"124"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"124"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"269"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\index.js",[],["272","273"],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\store.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\App.js",["274","275"],"import { BrowserRouter as Router, Route } from 'react-router-dom' \r\nimport { useSelector } from 'react-redux'\r\n\r\nimport Header from './components/layout/Header'\r\nimport Footer from './components/layout/Footer'\r\nimport Home from './components/Home'\r\nimport Products from './components/Products'\r\nimport ProductDetails from './components/product/ProductDetails'\r\nimport AboutCompany from './components/AboutCompany'\r\nimport AboutHistory from './components/AboutHistory'\r\nimport AboutMissionVision from './components/AboutMissionVision'\r\nimport AboutObjectives from './components/AboutObjectives'\r\nimport AboutScope from './components/AboutScope'\r\nimport Services from './components/Services'\r\nimport Contact from './components/Contact'\r\nimport ConfirmationPage from './components/ConfirmationPage'\r\n\r\nimport UpdateHome from './components/admin/UpdateHome'\r\nimport UpdateAbout from './components/admin/UpdateAbout'\r\nimport UpdateFooter from './components/admin/UpdateFooter'\r\n\r\nimport Login from './components/user/Login'\r\nimport Register from './components/user/Register'\r\nimport RegisterSuccess from './components/user/RegisterSuccess'\r\nimport Profile from './components/admin/Profile'\r\nimport UpdateProfile from './components/admin/UpdateProfile'\r\nimport UpdatePassword from './components/admin/UpdatePassword'\r\nimport ForgotPassword from './components/user/ForgotPassword'\r\nimport NewPassword from './components/user/NewPassword'\r\nimport EmailSent from './components/EmailSent'\r\n\r\nimport Dashboard from './components/admin/Dashboard'\r\nimport ListInquiries from './components/admin/ListInquiries'\r\nimport ListAppointments from './components/admin/ListAppointments'\r\nimport ListOthers from './components/admin/ListOthers'\r\nimport ListArchives from './components/admin/ListArchives'\r\nimport ListTrash from './components/admin/ListTrash'\r\nimport ListAbout from './components/admin/ListAbout'\r\nimport ProductsList from './components/admin/ProductsList'\r\nimport NewProduct from './components/admin/NewProduct'\r\nimport UpdateProduct from './components/admin/UpdateProduct'\r\nimport UpdateInquiry from './components/admin/UpdateInquiry'\r\n\r\nimport ListUsers from './components/admin/ListUsers'\r\nimport UpdateUser from './components/admin/UpdateUser'\r\n\r\nimport ProtectedRoute from './components/route/ProtectedRoute'\r\nimport { loadUser } from './actions/userActions'\r\nimport store from './store'\r\nimport { useEffect } from 'react'\r\n\r\nfunction App() {\r\n\r\n  useEffect(() => {\r\n    store.dispatch(loadUser());\r\n  }, [])\r\n\r\n  const { loading, isAuthenticated, user } = useSelector(state => state.auth);\r\n  const { isDashboard }  = useSelector(state => state.dashboard);\r\n\r\n  return (\r\n    <Router forceRefresh={true}>\r\n        <div className=\"App\">\r\n                {!loading && !isDashboard && (\r\n                    <Header/>\r\n\r\n                )}\r\n                <Route path='/' component={Home} exact/>\r\n\r\n                <Route path='/our-products' component={Products} exact/>\r\n                <Route path='/our-products/:id' component={ProductDetails} exact/>\r\n\r\n                <Route path='/about-company' component={AboutCompany} exact/>\r\n                <Route path='/about-history' component={AboutHistory} exact/>\r\n                <Route path='/about-mission-vision' component={AboutMissionVision} exact/>\r\n                <Route path='/about-objectives' component={AboutObjectives} exact/>\r\n                <Route path='/about-scope-of-activities' component={AboutScope} exact/>\r\n                <Route path='/our-services' component={Services} exact/>\r\n                <Route path='/contact-us' component={Contact} exact/>\r\n                <Route path='/confirmation' component={ConfirmationPage} exact/>\r\n                <Route path='/register-success' component={RegisterSuccess} exact/>\r\n\r\n                <ProtectedRoute path=\"/admin/me\" forAdmins={true} component={Profile} exact/>\r\n                <ProtectedRoute path=\"/admin/edit-profile\" forAdmins={true} component={UpdateProfile} exact/>\r\n                <ProtectedRoute path=\"/password/update\" forAdmins={true} component={UpdatePassword} exact/>\r\n\r\n                <Route path=\"/password/forgot\" component={ForgotPassword} exact/>\r\n                <Route path=\"/password/reset/:token\" component={NewPassword} exact/>\r\n                <Route path='/email-sent' component={EmailSent} exact/>\r\n\r\n                <Route path='/login' component={Login} exact/>\r\n                <ProtectedRoute path='/register' isSuperAdmin={true} component={Register} exact/>\r\n                <ProtectedRoute path='/admin/users' isSuperAdmin={true} component={ListUsers} exact/>\r\n                <ProtectedRoute path=\"/superadmin/user/:id\" isSuperAdmin={true} component={UpdateUser} exact/>\r\n                \r\n                <ProtectedRoute path=\"/admin/dashboard\" forAdmins={true} component={Dashboard} exact/>\r\n                <ProtectedRoute path=\"/admin/inquiries\" isAdmin={true} component={ListInquiries} exact/>\r\n                <ProtectedRoute path=\"/admin/appointments\" isAdmin={true} component={ListAppointments} exact/>\r\n                <ProtectedRoute path=\"/admin/others\" isAdmin={true} component={ListOthers} exact/>\r\n                <ProtectedRoute path=\"/admin/archives\" isAdmin={true} component={ListArchives} exact/>\r\n                <ProtectedRoute path=\"/admin/trash\" isAdmin={true} component={ListTrash} exact/>\r\n                \r\n                <ProtectedRoute path=\"/admin/about\" forAdmins={true} component={ListAbout} exact/>\r\n                <ProtectedRoute path=\"/admin/about/:id\" forAdmins={true} component={UpdateAbout} exact/>\r\n                <ProtectedRoute path=\"/admin/update-home\" forAdmins={true} component={UpdateHome} exact/>\r\n                <ProtectedRoute path=\"/admin/update-footer\" forAdmins={true} component={UpdateFooter} exact/>\r\n                \r\n                <ProtectedRoute path=\"/admin/products\" forAdmins={true} component={ProductsList} exact/>\r\n                <ProtectedRoute path=\"/admin/newProduct\" forAdmins={true} component={NewProduct} exact/>\r\n                <ProtectedRoute path=\"/admin/product/:id\" forAdmins={true} component={UpdateProduct} exact/>\r\n                <ProtectedRoute path=\"/admin/inquiry/:id\" isAdmin={true} component={UpdateInquiry} exact/>\r\n                \r\n                {!loading && !isDashboard && (\r\n                  <Footer/>\r\n                )}\r\n        </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\reducers\\inquiryReducers.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\reducers\\productReducers.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\reducers\\dashboardReducers.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\reducers\\websiteReducers.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\reducers\\userReducers.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\Home.js",["276","277","278","279","280","281","282","283"],"import React, { Fragment, useEffect } from 'react'\r\nimport '../css/styles.css'\r\nimport MetaData from './layout/MetaData'\r\nimport Loader from './layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getHomeDetails, clearErrors } from '../actions/websiteActions'\r\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Home = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { loading, error, homePage } = useSelector(state => state.homeDetails)\r\n\r\n    let titleBackground, servicesBackground, productImageLeft, productImageRight = \"\"\r\n    \r\n    if(homePage.titleBackground){\r\n        titleBackground = homePage.titleBackground.url\r\n    } \r\n\r\n    if(homePage.servicesBackground){\r\n        servicesBackground = homePage.servicesBackground.url\r\n    } \r\n\r\n    if(homePage.productImageLeft){\r\n        productImageLeft = homePage.productImageLeft.url\r\n    } \r\n\r\n    if(homePage.productImageRight){\r\n        productImageRight = homePage.productImageRight.url\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getHomeDetails())\r\n        \r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_FALSE\r\n        })\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n    }, [dispatch, alert, error]) //loop if homePage added as dependency\r\n    return (\r\n            <Fragment>\r\n                <MetaData title={'Home'}/>\r\n                {loading ? <Loader/> : (\r\n                    <Fragment>\r\n                        <section className=\"section1 welcome\" style={{height: \"100%\", width: \"100%\"}}>\r\n                            <div\r\n                                className=\"welcome-container\"\r\n                                style={{\r\n                                    background: \"linear-gradient(to bottom, rgba(216, 203, 194, 0.8) 0%, rgba(34, 33, 32, 0.8) 100%), url(\"+`${titleBackground}`+\") center / auto no-repeat\", \r\n                                    backgroundSize: \"cover\", \r\n                                    width: \"100%\", \r\n                                    height: \"100%\"}\r\n                                }>\r\n                                <img className=\"agile-logo-small\" src=\"https://res.cloudinary.com/agiletech3itf/image/upload/v1610472388/agile-logo_cqnjad.png\" alt=\"company logo\"/>\r\n                                <h1 className=\"agile-name font-weight-bold\">AGILE TECHNODYNAMICS</h1>\r\n                            </div>\r\n                        </section>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-auto description-container\">\r\n                                <div>\r\n                                    <h1 className=\"font-weight-bold\">Our Products</h1>\r\n                                    <h6 className=\"product-description\">{homePage.productDescription}&nbsp;</h6>\r\n                                </div>\r\n                                <Link to=\"/our-products\">See Products&nbsp;<i className=\"fa fa-angle-right\"></i></Link>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"product\" style={{background: \"url(\"+`${productImageLeft}`+\") center / auto no-repeat\"}}></div>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"product\" style={{background: \"url(\"+`${productImageRight}`+\") center / auto no-repeat\"}}></div>\r\n                            </div>\r\n                        </div>\r\n                        <div \r\n                            className=\"row our-services our-services-column description-container our-services-photo\" \r\n                            style={{\r\n                                background: \"linear-gradient(to right, rgb(0,0,0) 0%, rgba(151,161,179,0.4) 100%), url(\"+`${servicesBackground}`+\") no-repeat\", \r\n                                backgroundSize: \"cover\", \r\n                                backgroundPosition: \"right\"\r\n                                }}\r\n                            >\r\n                            <div className=\"col\">\r\n                                <div className=\"div-our-services\">\r\n                                    <h1 className=\"our-services font-weight-bold\">Our Services</h1>\r\n                                    <h6 className=\"description\">{homePage.servicesDescription}&nbsp;</h6>\r\n                                    <Link className=\"services-link\" to=\"/our-services\">See Services&nbsp;<i className=\"fa fa-angle-right\"></i></Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Fragment>\r\n                )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Home;","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\AboutHistory.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\AboutCompany.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\AboutScope.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\AboutObjectives.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\Products.js",["284"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport '../css/products.css'\r\nimport '../css/bootstrap.min.css'\r\nimport '../fonts/font-awesome.min.css'\r\nimport MetaData from './layout/MetaData'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getProducts, clearErrors } from '../actions/productActions'\r\n\r\nimport ProductDisplay from './product/ProductDisplay'\r\nimport Loader from './layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\nimport Pagination from 'react-js-pagination'\r\n\r\n\r\nconst Products = () => { \r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products);\r\n    const [category, setCategory] = useState('');\r\n\r\n    const categories = [\r\n        'Category1',\r\n        'Category2',\r\n        'Category3',\r\n        'Category4',\r\n        'Category5',\r\n        'Category6',\r\n        'Category7'\r\n    ]\r\n    \r\n    useEffect(() => {\r\n        if(error){\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n        dispatch(getProducts(currentPage, category));\r\n    }, [dispatch, alert, error, currentPage, category]);\r\n\r\n    function setCurrentPageNo(pageNumber) {\r\n        setCurrentPage(pageNumber);\r\n    }\r\n\r\n    let count = productsCount;\r\n    \r\n    if(category) {\r\n        count = filteredProductsCount\r\n    }\r\n\r\n    return (\r\n            <Fragment>\r\n                {loading ? <Loader/> : \r\n                (\r\n                    <Fragment>\r\n                        <MetaData title={'Our Products'}/>\r\n                        <section id=\"products\" className=\"product-section\" style={{paddingTop: '65px'}}>\r\n                            <div className=\"our-products\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <h1 className=\"products-heading-title\">Our Products</h1>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div classNme=\"mt-5\">\r\n                                            <ul className=\"pl-0\">\r\n                                                {categories.map( category => (\r\n                                                    \r\n                                                    <li style={{listStyleType: 'none', cursor: 'pointer', display: 'inline-block', paddingLeft: '10px', paddingRight: '10px'}}\r\n                                                        key={category}\r\n                                                        onClick={() => {setCurrentPageNo(1); setCategory(category)}}>\r\n                                                            <a>{category}</a>\r\n                                                    </li>\r\n                                                ))}\r\n                                            </ul>\r\n                                            {category && (\r\n                                                <a href='/our-products'>View All Products</a>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                    {products && products.map( product => (\r\n                                        <ProductDisplay key={product._id} product={product}/>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n\r\n                        {resPerPage < count && (\r\n                            <div className=\"d-flex justify-content-center mt-5\">\r\n                                <Pagination \r\n                                    activePage={currentPage}\r\n                                    itemsCountPerPage={resPerPage}\r\n                                    totalItemsCount={productsCount}\r\n                                    onChange={setCurrentPageNo}\r\n                                    nextPageText={'Next'}\r\n                                    prevPageText={'Prev'}\r\n                                    firstPageText={'First'}\r\n                                    lastPageText={'Last'}\r\n                                    itemClass='page-item'\r\n                                    linkClass='page-link'\r\n                                />\r\n                            </div>\r\n                        )} \r\n                        \r\n                    </Fragment>\r\n                )}\r\n            </Fragment>\r\n    )\r\n}\r\n\r\nexport default Products;\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\AboutMissionVision.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\ConfirmationPage.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\Services.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\product\\ProductDetails.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\EmailSent.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\Contact.js",["285","286"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport MetaData from './layout/MetaData'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from  'react-redux'\r\nimport { createInquiry, clearErrors } from './../actions/inquiryActions'\r\nimport { INQUIRY_RESET } from './../constants/inquiryConstants'\r\nimport '../css/contact.css'\r\n\r\nconst Contact = ( { history } ) => {\r\n\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [customerEmail, setCustomerEmail] = useState('');\r\n    const [companyName, setCompanyName] = useState('');\r\n    const [contactNumber, setContactNumber] = useState('');\r\n    const [position, setPosition] = useState('');\r\n    const [concernType, setConcernType] = useState('');\r\n    const [customerMessage, setCustomerMessage] = useState('');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { success, error, loading } = useSelector(state => state.newInquiry);\r\n\r\n    var errorCount = 0;\r\n    var loopCount = 0; \r\n\r\n    useEffect(() => {\r\n        if(success){\r\n            history.push('/confirmation')\r\n\r\n            dispatch({\r\n                type: INQUIRY_RESET\r\n            })\r\n        } \r\n\r\n        if(error){ //in reducer, error: true instead of error: action.payload\r\n            alert.error('Please complete the form.');\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n    }, [dispatch, success, error, loading, alert, history])\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('firstName', firstName);\r\n        formData.set('lastName', lastName);\r\n        formData.set('customerEmail', customerEmail);\r\n        formData.set('companyName', companyName);\r\n        formData.set('position', position);\r\n        formData.set('contactNumber', contactNumber);\r\n        formData.set('concernType', concernType);\r\n        formData.set('customerMessage', customerMessage);\r\n\r\n        dispatch(createInquiry(formData));\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Contact Us'}/>\r\n            <Fragment>\r\n                <form method='post' onSubmit={submitHandler} encType='application/json'>\r\n                    <div className=\"contact-container\" style={{paddingTop: '30px'}}>\r\n                        <div className=\"contact-header\">\r\n                            <h1 style={{textAlign: 'center'}}>Contact Us</h1>\r\n                        </div>\r\n                        <div className=\"labelname\">\r\n                            <label>Your Name</label>\r\n                        </div>\r\n                        <div className=\"firstname\">\r\n                            <input \r\n                                name=\"firstname\" \r\n                                type=\"text\" \r\n                                className=\"feedback-input\" \r\n                                placeholder=\"First Name\" \r\n                                value={firstName}\r\n                                onChange={(e) => setFirstName(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"lastname\">\r\n                            <input \r\n                                name=\"lastname\" \r\n                                type=\"text\" \r\n                                className=\"feedback-input\" \r\n                                placeholder=\"Last Name\" \r\n                                value={lastName}\r\n                                onChange={(e) => setLastName(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"labelcompany\">\r\n                            <label>Your Company Name</label>\r\n                        </div>\r\n                        <div className=\"companyname\">\r\n                            <input \r\n                                name=\"companyname\" \r\n                                type=\"text\" \r\n                                className=\"feedback-input\" \r\n                                placeholder=\"Company Name\" \r\n                                value={companyName}\r\n                                onChange={(e) => setCompanyName(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"labelposition\">\r\n                            <label>Your Position in Company</label>\r\n                        </div>\r\n                        <div className=\"position\">\r\n                            <input \r\n                                name=\"position\" \r\n                                type=\"text\" \r\n                                className=\"feedback-input\" \r\n                                placeholder=\"Position\" \r\n                                value={position}\r\n                                onChange={(e) => setPosition(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"labelemail\">\r\n                            <label>Your Email</label>\r\n                        </div>\r\n                        <div className=\"email\">\r\n                            <input \r\n                                name=\"email\" \r\n                                type=\"email\" \r\n                                className=\"feedback-input\" \r\n                                placeholder=\"Email\" \r\n                                value={customerEmail}\r\n                                onChange={(e) => setCustomerEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"labelcontact\">\r\n                            <label>Your Contact Number</label>\r\n                        </div>\r\n                        <div className=\"contact\">\r\n                            <input \r\n                                name=\"contactnumber\" \r\n                                type=\"tel\" \r\n                                className=\"feedback-input\" \r\n                                placeholder=\"xxxx-xxx-xxxx\" \r\n                                pattern=\"^\\d{4}-\\d{3}-\\d{4}$\"\r\n                                value={contactNumber}\r\n                                onChange={(e) => setContactNumber(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"labelconcern\">\r\n                            <label>Your Concern Type</label>\r\n                        </div>\r\n                        <div className=\"concern\">\r\n                            <select \r\n                                name=\"concern\" \r\n                                className=\"concern-dropdown\" \r\n                                value={concernType}\r\n                                onChange={(e) => setConcernType(e.target.value)}\r\n                            >\r\n                                <option>         -        </option>\r\n                                <option value=\"Inquiry\">Inquiry</option>\r\n                                <option value=\"Appointment\">Appointment</option>\r\n                                <option value=\"Others\">Others</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"labelmessage\">\r\n                            <label>Your Message</label>\r\n                        </div>\r\n                        <div className=\"message\">\r\n                            <textarea \r\n                                name=\"message\" \r\n                                className=\"feedback-input\" \r\n                                placeholder=\"Message\" \r\n                                value={customerMessage}\r\n                                onChange={(e) => setCustomerMessage(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"submit\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                value=\"SUBMIT\" \r\n                                disabled={ loading ? true : false}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </Fragment>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Contact","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\layout\\Footer.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\Profile.js",["287"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport MetaData from './../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport '../../css/profile.css'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { logout } from './../../actions/userActions'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\n\r\nconst Profile = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { user, loading } = useSelector(state => state.auth)\r\n    \r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n    \r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading ? <Loader /> : (\r\n                <Fragment>\r\n                    <MetaData title={'My Profile'} />\r\n                    <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\r\n                        <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                            <ul className=\"sidebar-nav\">\r\n                                <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                                <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                                <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                                <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                                <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                <hr/>\r\n                                {user && user.role !== 'admin' ? (\r\n                                        <Fragment>\r\n                                            <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                                            <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                                        </Fragment>\r\n                                    ) : (\r\n                                        <Fragment>\r\n                                            <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                            <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                            <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                            <hr/>\r\n                                            <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                            <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                        </Fragment>\r\n                                    )}\r\n\r\n                                <hr/>\r\n                                <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                                <li></li>\r\n                            </ul>\r\n                        </div>\r\n                            <div className=\"page-content-wrapper\">\r\n                                <div className=\"container-fluid\">\r\n                                    <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{position: 'fixed'}}>\r\n                                        <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                                    </a>\r\n                                    <div className=\"container\">\r\n                                        <div className=\"main-body\">\r\n                                            <div className=\"row gutters-sm\">\r\n                                                <div className=\"col-md-4 mb-3\">\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"d-flex flex-column align-items-center text-center\">\r\n                                                                <img src={user.avatar.url} alt=\"Admin\" className=\"rounded-circle\" width=\"100%\" style={{minWidth: '100px', maxWidth: '150px'}}/>\r\n                                                                <div className=\"mt-3\">\r\n                                                                    <h4>{user.name}</h4>\r\n                                                                    <p className=\"text-secondary mb-1\">{user.role}</p>\r\n                                                                    <Link className=\"btn btn-dark btn-sm ml-3 mt-5\" type=\"button\" to=\"/admin/edit-profile\">Edit Profile</Link>\r\n                                                                    <Link className=\"btn btn-dark btn-sm ml-3 mt-5\" type=\"button\" to=\"/password/update\">Change Password</Link>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col-md-8\">\r\n                                                    <div className=\"card mb-3\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-sm-3\">\r\n                                                                    <h6 className=\"mb-0\">Full Name</h6>\r\n                                                                </div>\r\n                                                                <div className=\"col-sm-9 text-secondary\">\r\n                                                                    {user.name}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <hr/>\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-sm-3\">\r\n                                                                    <h6 className=\"mb-0\">Email</h6>\r\n                                                                </div>\r\n                                                                <div className=\"col-sm-9 text-secondary\">\r\n                                                                    {user.email}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <hr/>\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-sm-3\">\r\n                                                                    <h6 className=\"mb-0\">Phone</h6>\r\n                                                                </div>\r\n                                                                <div className=\"col-sm-9 text-secondary\">\r\n                                                                    {user.contactNumber}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <hr/>\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-sm-3\">\r\n                                                                    <h6 className=\"mb-0\">Address</h6>\r\n                                                                </div>\r\n                                                                <div className=\"col-sm-9 text-secondary\">\r\n                                                                    {user.address}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>    \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateAbout.js",["288"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateAbout, getSingleAbout, clearErrors } from '../../actions/websiteActions'\r\nimport { UPDATE_ABOUT_RESET } from '../../constants/websiteConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst UpdateAbout = ({ match, history }) => {\r\n\r\n    const [title, setTitle] = useState('')\r\n    const [description, setDescription] = useState('')\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { error, about } = useSelector(state => state.aboutDetails)\r\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.website);\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const aboutId = match.params.id\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n    \r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if(about && about._id !== aboutId) {\r\n            dispatch(getSingleAbout(aboutId))\r\n        }\r\n        else { \r\n            setTitle(about.title)\r\n            setDescription(about.description)\r\n        }\r\n\r\n        if(error){\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(updateError){\r\n            alert.error(updateError);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(isUpdated) {\r\n            history.push('/admin/about');\r\n            alert.success('Information updated successfully.')\r\n\r\n            dispatch({\r\n                type: UPDATE_ABOUT_RESET\r\n            })\r\n        }\r\n        \r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, error, alert, isUpdated, updateError, about, aboutId, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('title', title);\r\n        formData.set('description', description);\r\n\r\n        dispatch(updateAbout(about._id, formData));\r\n    }\r\n\r\n\r\n    return (<Fragment>\r\n        <MetaData title={'Update About'}/>\r\n            <div id=\"wrapper\" style={{paddingTop: '11px'}}>\r\n            <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                        <hr/>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )}\r\n\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                    <Fragment>\r\n                        <div className=\"login-clean\">\r\n                            <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{marginTop: '-150px', position: 'fixed'}}>\r\n                                <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                            </a>\r\n                            <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data' style={{maxWidth: '500px'}}>\r\n                                <h2 className=\"sr-only\">Update About: \"{about.title}\"</h2>\r\n                                <div className=\"div-forgot-password\">\r\n                                    <h3 className=\"forgot-password-heading\">Update About \"{about.title}\"</h3>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Name</h6>\r\n                                    <textarea \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"title\"\r\n                                        value={title}\r\n                                        style={{width: '100%'}}\r\n                                        onChange={(e) => setTitle(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Description</h6>\r\n                                    <textarea\r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"description\"\r\n                                        value={description}\r\n                                        style={{width: '100%', height: '250px'}}\r\n                                        onChange={(e) => setDescription(e.target.value)}\r\n                                        height='55px'\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                        <button \r\n                                        className=\"btn btn-primary btn-block\" \r\n                                        type=\"submit\"\r\n                                        disabled={loading ? true : false}\r\n                                    >\r\n                                        Update Information\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    </Fragment>\r\n)\r\n}\r\n\r\nexport default UpdateAbout\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdatePassword.js",["289"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from  'react-redux'\r\nimport '../../css/bootstrap.min.css'\r\nimport '../../css/dashboard.css'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport { updatePassword, clearErrors } from './../../actions/userActions'\r\nimport { UPDATE_PASSWORD_RESET } from '../../constants/userConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst UpdatePassword = ( { history }) => {\r\n    \r\n    const [oldPassword, setOldPassword] = useState('');\r\n    const [newPassword, setNewPassword] = useState('');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, isUpdated, loading } = useSelector(state => state.user);\r\n    const [isToggled, setToggled] = useState('false')\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n    \r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n    \r\n    useEffect(() => {\r\n\r\n        if(error){\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n\r\n        }\r\n\r\n        if(isUpdated){\r\n            alert.success('Password updated successfully');\r\n\r\n            history.push('/admin/me')\r\n\r\n            dispatch({\r\n                type: UPDATE_PASSWORD_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n\r\n    }, [dispatch, alert, error, history, isUpdated])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('oldPassword', oldPassword);\r\n        formData.set('newPassword', newPassword);\r\n\r\n        dispatch(updatePassword(formData));\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Change Password'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\r\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                        <hr/>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )}\r\n\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{position: 'fixed'}}>\r\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                        </a>\r\n                        <div className=\"login-clean\" style={{paddingTop: '65px'}}>\r\n                            <form method=\"post\" onSubmit={submitHandler}>\r\n                                <h2 className=\"sr-only\">New Password</h2>\r\n                                <div className=\"div-forgot-password\">\r\n                                    <h3 className=\"forgot-password-heading\">New Password</h3>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Old Password</h6>\r\n                                    <input \r\n                                        type=\"password\" \r\n                                        className=\"form-control\" \r\n                                        name=\"oldPassword\"\r\n                                        value={oldPassword}\r\n                                        onChange={(e) => setOldPassword(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>New Password</h6>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        name=\"newPassword\"\r\n                                        value={newPassword}\r\n                                        onChange={(e) => setNewPassword(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <button\r\n                                        className=\"btn btn-primary btn-block\"\r\n                                        type=\"submit\"\r\n                                        disabled={ loading ? true : false}\r\n                                    >Update Password</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdatePassword\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateHome.js",["290","291","292"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateHome, getHomeDetails, clearErrors } from '../../actions/websiteActions'\r\nimport { UPDATE_HOME_RESET } from '../../constants/websiteConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst UpdateHome = ({history}) => {\r\n    \r\n    const [productDescription, setProductDescription] = useState('')\r\n    const [servicesDescription, setServicesDescription] = useState('')\r\n    const [titleBackground, setTitleBackground] = useState('')\r\n    const [servicesBackground, setServicesBackground] = useState('')\r\n    const [productImageLeft, setProductImageLeft] = useState('')\r\n    const [productImageRight, setProductImageRight] = useState('')\r\n    \r\n    //image previews\r\n    const [titleBgPreview, setTitleBgPreview] = useState('')\r\n    const [servicesBgPreview, setServicesBgPreview] = useState('')\r\n    const [prodImgLeftPreview, setProdImgLeftPreview] = useState('')\r\n    const [prodImgRightPreview, setProdImgRightPreview] = useState('')\r\n    \r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, loading, homePage } = useSelector(state => state.homeDetails) \r\n    const { loading: updateLoading, error: updateError, isUpdated } = useSelector(state => state.website)\r\n\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    let var_titleBackground, var_servicesBackground, var_productImageLeft, var_productImageRight = \"\"\r\n\r\n    if(homePage.titleBackground){\r\n        var_titleBackground = homePage.titleBackground.url\r\n    } \r\n\r\n    if(homePage.servicesBackground){\r\n        var_servicesBackground = homePage.servicesBackground.url\r\n    } \r\n\r\n    if(homePage.productImageLeft){\r\n        var_productImageLeft = homePage.productImageLeft.url\r\n    } \r\n\r\n    if(homePage.productImageRight){\r\n        var_productImageRight = homePage.productImageRight.url\r\n    }\r\n    \r\n    const [isToggled, setToggled] = useState('false')\r\n    \r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(getHomeDetails())\r\n\r\n        if(homePage){\r\n            setProductDescription(homePage.productDescription)\r\n            setServicesDescription(homePage.servicesDescription)\r\n            setTitleBgPreview(var_titleBackground)\r\n            setServicesBgPreview(var_servicesBackground)\r\n            setProdImgLeftPreview(var_productImageLeft)\r\n            setProdImgRightPreview(var_productImageRight)\r\n        }\r\n\r\n        if(error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(updateError) {\r\n            alert.error(updateError);\r\n\r\n            history.push('/dashboard')\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(isUpdated) {\r\n            history.push('/admin/dashboard')\r\n            alert.success('Home updated successfully.');\r\n\r\n            dispatch({\r\n                type: UPDATE_HOME_RESET\r\n            })\r\n        }\r\n        \r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n\r\n    }, [dispatch, alert, error, history, updateError, isUpdated])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('productDescription', productDescription);\r\n        formData.set('servicesDescription', servicesDescription);\r\n        formData.set('titleBackground', titleBackground);\r\n        formData.set('servicesBackground', servicesBackground);\r\n        formData.set('productImageLeft', productImageLeft);\r\n        formData.set('productImageRight', productImageRight);\r\n\r\n        dispatch(updateHome(formData));\r\n    }\r\n\r\n    const changeTitleBg = (e) => {\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = () => {\r\n            if(reader.readyState === 2){\r\n                setTitleBgPreview(reader.result)\r\n                setTitleBackground(reader.result)\r\n            }\r\n        }\r\n\r\n        reader.readAsDataURL(e.target.files[0])\r\n    }\r\n    \r\n    const changeProdImgLeft = (e) => {\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = () => {\r\n            if(reader.readyState === 2){\r\n                setProdImgLeftPreview(reader.result)\r\n                setProductImageLeft(reader.result)\r\n            }\r\n        }\r\n\r\n        reader.readAsDataURL(e.target.files[0])\r\n    }\r\n\r\n    const changeProdImgRight = (e) => {\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = () => {\r\n            if(reader.readyState === 2){\r\n                setProdImgRightPreview(reader.result)\r\n                setProductImageRight(reader.result)\r\n            }\r\n        }\r\n\r\n        reader.readAsDataURL(e.target.files[0])\r\n    }\r\n\r\n    const changeServicesBg = (e) => {\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = () => {\r\n            if(reader.readyState === 2){\r\n                setServicesBgPreview(reader.result)\r\n                setServicesBackground(reader.result)\r\n            }\r\n        }\r\n\r\n        reader.readAsDataURL(e.target.files[0])\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Update Home'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\r\n            <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                        <hr/>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )}\r\n\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                    {loading ? <Loader/> : (\r\n                        <Fragment>\r\n                            <div className=\"login-clean\">\r\n                                <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{marginTop: '-150px', position: 'fixed'}}>\r\n                                    <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                                </a>\r\n                                <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data'  style={{maxWidth: '500px'}}>\r\n                                    <h2 className=\"sr-only\">Update Homepage</h2>\r\n                                    <div className=\"div-forgot-password\">\r\n                                        <h3 className=\"forgot-password-heading\">Update Homepage </h3>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <h6>Main Background</h6>\r\n                                        <figure className='mr-3 item-rtl'>\r\n                                            <img \r\n                                                src={titleBgPreview}\r\n                                                className='small-avatar'\r\n                                                alt='Main Background Preview'\r\n                                            />\r\n                                        </figure>\r\n                                        <input \r\n                                            type=\"file\" \r\n                                            id=\"titleBackground\" \r\n                                            name=\"titleBackground\" \r\n                                            accept=\"images/*\"\r\n                                            onChange={changeTitleBg}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <h6>Product Description</h6>\r\n                                        <textarea \r\n                                            type=\"text\" \r\n                                            className=\"form-control\" \r\n                                            id=\"productDescription\" \r\n                                            name=\"productDescription\" \r\n                                            placeholder={productDescription}\r\n                                            value={productDescription}\r\n                                            style={{width: '100%', height: '150px'}}\r\n                                            onChange={(e) => setProductDescription(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <h6>Product Image (Left)</h6>\r\n                                        <figure className='mr-3 item-rtl'>\r\n                                            <img \r\n                                                src={prodImgLeftPreview}\r\n                                                className='small-avatar'\r\n                                                alt='Product Image Left Preview'\r\n                                            />\r\n                                        </figure>\r\n                                        <input \r\n                                            type=\"file\" \r\n                                            id=\"productImageLeft\" \r\n                                            name=\"productImageLeft\" \r\n                                            accept=\"images/*\"\r\n                                            onChange={changeProdImgLeft}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <h6>Product Image (Right)</h6>\r\n                                        <figure className='mr-3 item-rtl'>\r\n                                            <img \r\n                                                src={prodImgRightPreview}\r\n                                                className='small-avatar'\r\n                                                alt='Avatar Preview'\r\n                                            />\r\n                                        </figure>\r\n                                        <input \r\n                                            type=\"file\" \r\n                                            id=\"productImageRight\" \r\n                                            name=\"productImageRight\" \r\n                                            accept=\"images/*\"\r\n                                            onChange={changeProdImgRight}\r\n                                        />\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group\">\r\n                                        <h6>Services Description</h6>\r\n                                        <textarea \r\n                                            type=\"text\" \r\n                                            className=\"form-control\" \r\n                                            id=\"servicesDescription\" \r\n                                            name=\"servicesDescription\" \r\n                                            value={servicesDescription}\r\n                                            style={{width: '100%', height: '150px'}}\r\n                                            onChange={(e) => setServicesDescription(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <h6>Services Background</h6>\r\n                                        <figure className='mr-3 item-rtl'>\r\n                                            <img \r\n                                                src={servicesBgPreview}\r\n                                                className='small-avatar'\r\n                                                alt='Avatar Preview'\r\n                                            />\r\n                                        </figure>\r\n                                        <input \r\n                                            type=\"file\" \r\n                                            id=\"servicesBackground\" \r\n                                            name=\"servicesBackground\" \r\n                                            accept=\"images/*\"\r\n                                            onChange={changeServicesBg}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <button \r\n                                            className=\"btn btn-primary btn-block\" \r\n                                            type=\"submit\"\r\n                                            disabled={updateLoading ? true : false}\r\n                                        >\r\n                                            Update Home\r\n                                        </button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </Fragment>\r\n                    )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateHome\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\Dashboard.js",["293"],"import React, { Fragment, useEffect, useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport MetaData from './../layout/MetaData'\r\nimport Loader from './../layout/Loader'\r\nimport '../../css/bootstrap.min.css'\r\nimport '../../css/dashboard.css'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getAdminProducts } from '../../actions/productActions'\r\nimport { listInquiry } from '../../actions/inquiryActions'\r\nimport { getUsers } from '../../actions/userActions'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst Dashboard = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { loading, products } = useSelector(state => state.products)\r\n    const { users } = useSelector(state => state.users)\r\n    const { inquiries } = useSelector(state => state.listInquiry)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n    \r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getAdminProducts())\r\n        dispatch(listInquiry())\r\n        dispatch(getUsers())\r\n\r\n        // countLength()\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n\r\n\r\n    }, [dispatch])\r\n\r\n    // var inquiryLength, appointmentLength, otherConcernsLength = 0\r\n\r\n    // const countLength = () => {\r\n    //        inquiries.forEach(inquiry => {\r\n    //             if(inquiry.concernType === 'Inquiry'){\r\n    //                 inquiryLength += 1\r\n    //             }\r\n\r\n    //             if(inquiry.concernType === 'Appointment'){\r\n    //                 appointmentLength += 1\r\n    //             }\r\n\r\n    //             if(inquiry.concernType === 'Others'){\r\n    //                 otherConcernsLength += 1\r\n    //             }\r\n    //        })\r\n    //        // && (inquiry.inquiryStatus !== \"Deleted\" && inquiry.inquiryStatus !== \"Resolved\")\r\n    //        console.log('inq length', inquiryLength) //NaN\r\n    //        console.log('app length', appointmentLength) //undefined\r\n    //        console.log('oth length', otherConcernsLength) //0, didnt iterate\r\n    // }\r\n    \r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Dashboard'}/>\r\n            <Fragment>\r\n                {loading ? <Loader/> : (\r\n                    <Fragment>\r\n                        <MetaData title={'Admin Dashboard'}/>\r\n                        <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\r\n                            <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                                <ul className=\"sidebar-nav\">\r\n                                    <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                                    <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                                    <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                                    <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                    <hr/>\r\n                                    {user && user.role !== 'admin' ? (\r\n                                            <Fragment>\r\n                                                <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                                            </Fragment>\r\n                                        ) : (\r\n                                            <Fragment>\r\n                                                <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                                <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                                <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                                <hr/>\r\n                                                <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                                <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                            </Fragment>\r\n                                        )}\r\n\r\n                                    <hr/>\r\n                                    <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                                    <li></li>\r\n                                </ul>\r\n                            </div>\r\n                            <div className=\"page-content-wrapper\">\r\n                                <div className=\"container-fluid\">\r\n                                    <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{position: 'fixed'}}>\r\n                                        <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                                    </a>\r\n                                    {user && user.role !== 'admin' ? (\r\n                                        <Fragment>\r\n                                            <div className=\"main-section\" style={{paddingTop: '65px'}}>\r\n                                                <h3><strong>Overview</strong></h3>\r\n                                                <div className=\"dashbord\">\r\n                                                    <div className=\"icon-section\">\r\n                                                        <i className=\"fa fa-users\" aria-hidden=\"true\"></i><br/>\r\n                                                        <small>Admins</small>\r\n                                                        <p>{users && users.length} admins</p>\r\n                                                    </div>\r\n                                                    <div className=\"detail-section\">\r\n                                                        <Link to=\"/admin/users\">More Info </Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"dashbord dashbord-green\">\r\n                                                    <div className=\"icon-section\">\r\n                                                        <i className=\"fa fa-user-circle\" aria-hidden=\"true\"></i><br/>\r\n                                                        <small>Super Admins</small>\r\n                                                        <p>{users && users.length}  superadmins</p>\r\n                                                    </div>\r\n                                                    <div className=\"detail-section\">\r\n                                                        <Link to=\"/admin/users\">More Info </Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"dashbord dashbord-orange\">\r\n                                                    <div className=\"icon-section\">\r\n                                                        <i className=\"fa fa-shopping-bag\" aria-hidden=\"true\"></i><br/>\r\n                                                        <small>Products</small>\r\n                                                        <p>{products && products.length} products</p>\r\n                                                    </div>\r\n                                                    <div className=\"detail-section\">\r\n                                                        <Link to=\"/admin/products\">More Info </Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"main-section\" style={{paddingTop: '65px'}}>\r\n                                                <h3><strong>Settings</strong></h3>\r\n                                                <div className=\"dashbord dashbord-blue\">\r\n                                                    <div className=\"icon-section\">\r\n                                                        <i className=\"fa fa-home\" aria-hidden=\"true\"></i><br/>\r\n                                                        <p>Update Home</p>\r\n                                                    </div>\r\n                                                    <div className=\"detail-section\">\r\n                                                        <Link to=\"/admin/update-home\">Update <i className=\"fa fa-angle-right\"></i></Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"dashbord dashbord-red\">\r\n                                                    <div className=\"icon-section\">\r\n                                                        <i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i><br/>\r\n                                                        <p>Update About</p>\r\n                                                    </div>\r\n                                                    <div className=\"detail-section\">\r\n                                                        <Link to=\"/admin/about\">Update <i className=\"fa fa-angle-right\"></i></Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"dashbord dashbord-skyblue\">\r\n                                                    <div className=\"icon-section\">\r\n                                                        <i className=\"fa fa-quote-left\" aria-hidden=\"true\"></i><br/>\r\n                                                        <p>Update Footer</p>\r\n                                                    </div>\r\n                                                    <div className=\"detail-section\">\r\n                                                        <Link to=\"/admin/update-footer\">Update <i className=\"fa fa-angle-right\"></i></Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Fragment>\r\n                                    ) : (\r\n                                        <Fragment>\r\n                                            <div className=\"main-section\" style={{paddingTop: '65px'}}>\r\n                                                <h3><strong>Inbox</strong></h3>\r\n                                                <div className=\"dashbord\">\r\n                                                    <div className=\"icon-section\">\r\n                                                        <i className=\"fa fa-envelope\" aria-hidden=\"true\"></i><br/>\r\n                                                        <small>Inquiries</small>\r\n                                                        <p>{inquiries && inquiries.length} messages</p>\r\n                                                    </div>\r\n                                                    <div className=\"detail-section\">\r\n                                                        <Link to=\"/admin/inquiries\">More Info </Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"dashbord dashbord-green\">\r\n                                                    <div className=\"icon-section\">\r\n                                                        <i className=\"fa fa-archive\" aria-hidden=\"true\"></i><br/>\r\n                                                        <small>Appointments</small>\r\n                                                        <p>{inquiries && inquiries.length} messages</p>\r\n                                                    </div>\r\n                                                    <div className=\"detail-section\">\r\n                                                        <Link to=\"/admin/appointments\">More Info </Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"dashbord dashbord-orange\">\r\n                                                    <div className=\"icon-section\">\r\n                                                        <i className=\"fa fa-inbox\" aria-hidden=\"true\"></i><br/>\r\n                                                        <small>Other Concerns</small>\r\n                                                        <p>{inquiries && inquiries.length} messages</p>\r\n                                                    </div>\r\n                                                    <div className=\"detail-section\">\r\n                                                        <Link to=\"/admin/others\">More Info </Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"main-section\" style={{paddingTop: '65px'}}>\r\n                                                <h3><strong>Settings</strong></h3>\r\n                                                <div className=\"dashbord dashbord-blue\">\r\n                                                    <div className=\"icon-section\">\r\n                                                        <i className=\"fa fa-home\" aria-hidden=\"true\"></i><br/>\r\n                                                        <p>Update Home</p>\r\n                                                    </div>\r\n                                                    <div className=\"detail-section\">\r\n                                                        <Link to=\"/admin/update-home\">Update <i className=\"fa fa-angle-right\"></i></Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"dashbord dashbord-red\">\r\n                                                    <div className=\"icon-section\">\r\n                                                        <i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i><br/>\r\n                                                        <p>Update About</p>\r\n                                                    </div>\r\n                                                    <div className=\"detail-section\">\r\n                                                        <Link to=\"/admin/about\">Update <i className=\"fa fa-angle-right\"></i></Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"dashbord dashbord-skyblue\">\r\n                                                    <div className=\"icon-section\">\r\n                                                        <i className=\"fa fa-quote-left\" aria-hidden=\"true\"></i><br/>\r\n                                                        <p>Update Footer</p>\r\n                                                    </div>\r\n                                                    <div className=\"detail-section\">\r\n                                                        <Link to=\"/admin/update-footer\">Update <i className=\"fa fa-angle-right\"></i></Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Fragment>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Fragment>\r\n                )}\r\n            </Fragment>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListAppointments.js",["294"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\r\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from '../../actions/userActions'\r\n\r\nconst ListOrders = ({history}) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\r\n    const { isUpdated } = useSelector(state => state.inquiry)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n    useEffect(() => {\r\n        dispatch(listInquiry());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(isUpdated){\r\n            alert.success('Inquiry has been moved to trash successfully.');\r\n            history.push('/admin/appointments')\r\n\r\n            dispatch({\r\n                type: UPDATE_INQUIRY_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, history, isUpdated])\r\n\r\n    const updateInquiryHandler = (id, inquiryStatus) => { \r\n        const formData = new FormData();\r\n        formData.set('inquiryStatus', inquiryStatus);\r\n\r\n        dispatch(updateInquiry(id, formData));\r\n    }\r\n\r\n    const setInquiries = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Date / Time',\r\n                    field: 'createdAt',\r\n                    sort: 'desc'\r\n                },\r\n                {\r\n                    label: 'Last Name',\r\n                    field: 'lastName'\r\n                },\r\n                {\r\n                    label: 'First Name',\r\n                    field: 'firstName'\r\n                },\r\n                {\r\n                    label: 'Company Name',\r\n                    field: 'companyName'\r\n                },\r\n                \r\n                {\r\n                    label: 'Status',\r\n                    field: 'inquiryStatus'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         inquiries.forEach(inquiry => {\r\n             if(inquiry.concernType==='Appointment' && (inquiry.inquiryStatus !== \"Deleted\" && inquiry.inquiryStatus !== \"Resolved\")){\r\n                data.rows.push({\r\n                    createdAt: inquiry.createdAt,\r\n                    firstName: inquiry.firstName,\r\n                    lastName: inquiry.lastName,\r\n                    companyName: inquiry.companyName,\r\n                    inquiryStatus: inquiry.inquiryStatus && (String(inquiry.inquiryStatus).includes('Processing') || String(inquiry.inquiryStatus).includes('Resolved'))\r\n                        ? <p style={{ color: 'green' }}>{inquiry.inquiryStatus}</p>\r\n                        :  <p style={{ color: 'red' }}>{inquiry.inquiryStatus}</p>,\r\n                    actions:   <Fragment>\r\n                                <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                                    <i className='fa fa-eye'></i>\r\n                                </Link>\r\n                                <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Deleted\")}>\r\n                                    <i className='fa fa-trash'></i>\r\n                                </button>\r\n                            </Fragment>\r\n                 })\r\n             }\r\n         })\r\n\r\n         return data\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Appointments'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\r\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                        <hr/>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )}\r\n\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{position: 'fixed'}}>\r\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                        </a>\r\n                        <Fragment>\r\n                        <div style={{padding: '30px'}}>\r\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Inbox - Appointments</h1>\r\n                            {loading? <Loader/> : (\r\n                                <MDBDataTable\r\n                                    data={setInquiries()}\r\n                                    className='px-3'\r\n                                    bordered\r\n                                    striped\r\n                                    hover\r\n                                    entries={5}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListOrders","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateFooter.js",["295","296","297"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateFooter, getFooterDetails, clearErrors } from '../../actions/websiteActions'\r\nimport { UPDATE_FOOTER_RESET } from '../../constants/websiteConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst UpdateFooter = ({history}) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const [footerTitle, setFooterTitle] = useState('')\r\n    const [footerDescription, setFooterDescription] = useState('')\r\n    const [addressInfo, setAddressInfo] = useState('')\r\n    const [phoneInfo, setPhoneInfo] = useState('')\r\n    const [cellphoneInfo, setCellphoneInfo] = useState('')\r\n    const [emailInfo, setEmailInfo] = useState('')\r\n\r\n    const { error, footerInfo } = useSelector(state => state.footerDetails)\r\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.website);\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    useEffect(() => {\r\n        if(footerInfo){\r\n            setFooterTitle(footerInfo.footerTitle)\r\n            setFooterDescription(footerInfo.footerDescription)\r\n            setAddressInfo(footerInfo.addressInfo)\r\n            setPhoneInfo(footerInfo.phoneInfo)\r\n            setCellphoneInfo(footerInfo.cellphoneInfo)\r\n            setEmailInfo(footerInfo.emailInfo)\r\n        } \r\n\r\n        if(error){\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(updateError){\r\n            alert.error(updateError);\r\n            dispatch(clearErrors());\r\n        }\r\n        \r\n        if(isUpdated) {\r\n            history.push('/admin/dashboard');\r\n            alert.success('Footer updated successfully.')\r\n\r\n            dispatch({\r\n                type: UPDATE_FOOTER_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, history, updateError, isUpdated])\r\n    \r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('footerTitle', footerTitle);\r\n        formData.set('footerDescription', footerDescription);\r\n        formData.set('addressInfo', addressInfo);\r\n        formData.set('phoneInfo', phoneInfo);\r\n        formData.set('cellphoneInfo', cellphoneInfo);\r\n        formData.set('emailInfo', emailInfo);\r\n\r\n        dispatch(updateFooter(formData));\r\n    }\r\n\r\n    return (<Fragment>\r\n        <MetaData title={'Update Footer'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\r\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                        <hr/>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )}\r\n\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                    <Fragment>\r\n                        <div className=\"login-clean\">\r\n                            <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{marginTop: '-150px', position: 'fixed'}}>\r\n                                <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                            </a>\r\n                            <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data' style={{maxWidth: '500px'}}>\r\n                                <h2 className=\"sr-only\">Update Footer</h2>\r\n                                <div className=\"div-forgot-password\">\r\n                                    <h3 className=\"forgot-password-heading\">Update Footer</h3>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Footer Title</h6>\r\n                                    <textarea \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"footerTitle\"\r\n                                        value={footerTitle}\r\n                                        style={{width: '100%'}}\r\n                                        onChange={(e) => setFooterTitle(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Footer Description</h6>\r\n                                    <textarea\r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"footerDescription\"\r\n                                        value={footerDescription}\r\n                                        style={{width: '100%', height: '250px'}}\r\n                                        onChange={(e) => setFooterDescription(e.target.value)}\r\n                                        height='55px'\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Address Info</h6>\r\n                                    <textarea \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"addressInfo\"\r\n                                        value={addressInfo}\r\n                                        style={{width: '100%', height: '150px'}}\r\n                                        onChange={(e) => setAddressInfo(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Phone Info</h6>\r\n                                    <textarea \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"phoneInfo\"\r\n                                        value={phoneInfo}\r\n                                        style={{width: '100%'}}\r\n                                        onChange={(e) => setPhoneInfo(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Cellphone Info</h6>\r\n                                    <textarea \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"cellphoneInfo\"\r\n                                        value={cellphoneInfo}\r\n                                        style={{width: '100%'}}\r\n                                        onChange={(e) => setCellphoneInfo(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Email Info</h6>\r\n                                    <textarea \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"emailInfo\"\r\n                                        value={emailInfo}\r\n                                        style={{width: '100%'}}\r\n                                        onChange={(e) => setEmailInfo(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                        <button \r\n                                        className=\"btn btn-primary btn-block\" \r\n                                        type=\"submit\"\r\n                                        disabled={loading ? true : false}\r\n                                    >\r\n                                        Update Footer\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateFooter","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListInquiries.js",["298"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\r\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\n// import \"mdbreact/dist/css/mdb.css\";\r\n// import \"@fortawesome/fontawesome-free/css/all.min.css\";\r\n// import \"bootstrap-css-only/css/bootstrap.min.css\";\r\n\r\nconst ListOrders = ({history}) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\r\n    const { isUpdated } = useSelector(state => state.inquiry)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n    useEffect(() => {\r\n        dispatch(listInquiry());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(isUpdated){\r\n            alert.success('Inquiry has been moved to trash successfully.');\r\n            history.push('/admin/inquiries')\r\n\r\n            dispatch({\r\n                type: UPDATE_INQUIRY_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, isUpdated, history])\r\n\r\n    const updateInquiryHandler = (id, inquiryStatus) => { \r\n        const formData = new FormData();\r\n        formData.set('inquiryStatus', inquiryStatus);\r\n\r\n        dispatch(updateInquiry(id, formData));\r\n    }\r\n    \r\n    const setInquiries = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Date / Time',\r\n                    field: 'createdAt',\r\n                    sort: 'desc'\r\n                },\r\n                {\r\n                    label: 'Last Name',\r\n                    field: 'lastName'\r\n                },\r\n                {\r\n                    label: 'First Name',\r\n                    field: 'firstName'\r\n                },\r\n                {\r\n                    label: 'Company Name',\r\n                    field: 'companyName'\r\n                },\r\n                \r\n                {\r\n                    label: 'Status',\r\n                    field: 'inquiryStatus'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         inquiries.forEach(inquiry => {\r\n             if(inquiry.concernType==='Inquiry' && (inquiry.inquiryStatus !== \"Deleted\" && inquiry.inquiryStatus !== \"Resolved\")){\r\n                data.rows.push({\r\n                    createdAt: inquiry.createdAt,\r\n                    firstName: inquiry.firstName,\r\n                    lastName: inquiry.lastName,\r\n                    companyName: inquiry.companyName,\r\n                    inquiryStatus: inquiry.inquiryStatus && (String(inquiry.inquiryStatus).includes('Processing') || String(inquiry.inquiryStatus).includes('Resolved'))\r\n                        ? <p style={{ color: 'green' }}>{inquiry.inquiryStatus}</p>\r\n                        :  <p style={{ color: 'red' }}>{inquiry.inquiryStatus}</p>,\r\n                    actions:   <Fragment>\r\n                                <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                                    <i className='fa fa-eye'></i>\r\n                                </Link>\r\n                                <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Deleted\")}>\r\n                                    <i className='fa fa-trash'></i>\r\n                                </button>\r\n                            </Fragment>\r\n                 })\r\n             }\r\n         })\r\n\r\n         return data\r\n    }\r\n    \r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Inquiries'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\r\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                        <hr/>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )}\r\n\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{position: 'fixed'}}>\r\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                        </a>\r\n                        <Fragment>\r\n                            <div style={{padding: '30px'}}>\r\n                                <h1 className='mt-3 mb-3 ml-10 mr-10'>Inbox - Inquiry</h1>\r\n                                {loading? <Loader/> : (\r\n                                    <MDBDataTable\r\n                                        data={setInquiries()}\r\n                                        className='px-3'\r\n                                        bordered\r\n                                        striped\r\n                                        hover\r\n                                        entries={5}\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListOrders","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListOthers.js",["299"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\r\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst ListOrders = ({history}) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\r\n    const { isUpdated } = useSelector(state => state.inquiry)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(listInquiry());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(isUpdated){\r\n            alert.success('Inquiry has been moved to trash successfully.');\r\n            history.push('/admin/others')\r\n\r\n            dispatch({\r\n                type: UPDATE_INQUIRY_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, isUpdated, history])\r\n\r\n    const updateInquiryHandler = (id, inquiryStatus) => { \r\n        const formData = new FormData();\r\n        formData.set('inquiryStatus', inquiryStatus);\r\n\r\n        dispatch(updateInquiry(id, formData));\r\n    }\r\n    \r\n    const setInquiries = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Date / Time',\r\n                    field: 'createdAt',\r\n                    sort: 'desc'\r\n                },\r\n                {\r\n                    label: 'Last Name',\r\n                    field: 'lastName'\r\n                },\r\n                {\r\n                    label: 'First Name',\r\n                    field: 'firstName'\r\n                },\r\n                {\r\n                    label: 'Company Name',\r\n                    field: 'companyName'\r\n                },\r\n                \r\n                {\r\n                    label: 'Status',\r\n                    field: 'inquiryStatus'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         inquiries.forEach(inquiry => {\r\n             if(inquiry.concernType==='Others'  && (inquiry.inquiryStatus !== \"Deleted\" && inquiry.inquiryStatus !== \"Resolved\")){\r\n                data.rows.push({\r\n                    createdAt: inquiry.createdAt,\r\n                    firstName: inquiry.firstName,\r\n                    lastName: inquiry.lastName,\r\n                    companyName: inquiry.companyName,\r\n                    inquiryStatus: inquiry.inquiryStatus && (String(inquiry.inquiryStatus).includes('Processing') || String(inquiry.inquiryStatus).includes('Resolved'))\r\n                        ? <p style={{ color: 'green' }}>{inquiry.inquiryStatus}</p>\r\n                        :  <p style={{ color: 'red' }}>{inquiry.inquiryStatus}</p>,\r\n                    actions:   <Fragment>\r\n                                <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                                    <i className='fa fa-eye'></i>\r\n                                </Link>\r\n                                <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Deleted\")}>\r\n                                    <i className='fa fa-trash'></i>\r\n                                </button>\r\n                            </Fragment>\r\n                 })\r\n             }\r\n         }) \r\n         return data\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Others'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\r\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                        <hr/>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )}\r\n\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{position: 'fixed'}}>\r\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                        </a>\r\n                        <Fragment>\r\n                        <div style={{padding: '30px'}}>\r\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Inbox - Others</h1>\r\n                            {loading? <Loader/> : (\r\n                                <MDBDataTable\r\n                                    data={setInquiries()}\r\n                                    className='px-3'\r\n                                    bordered\r\n                                    striped\r\n                                    hover\r\n                                    entries={5}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListOrders","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListAbout.js",["300"],"import React, { Fragment, useEffect , useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport '../../css/dashboard.css'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getAboutDetails, clearErrors } from '../../actions/websiteActions'\r\nimport { UPDATE_ABOUT_RESET } from '../../constants/websiteConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst ListAbout = ({history}) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, abouts } = useSelector(state => state.abouts)\r\n    const { isUpdated } = useSelector(state => state.website)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getAboutDetails());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n        \r\n        if(isUpdated){\r\n            alert.success('About Us information has been updated successfully.');\r\n            history.push('/admin/about')\r\n\r\n            dispatch({\r\n                type: UPDATE_ABOUT_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, isUpdated, history])\r\n\r\n    const setAboutData = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Title',\r\n                    field: 'title',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Description',\r\n                    field: 'description',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                    sort: 'asc'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         abouts.forEach(about => {\r\n            data.rows.push({\r\n                title: about.title,\r\n                description: about.description,\r\n                actions:   <Fragment>\r\n                            <Link to={`/admin/about/${about._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                                <i className='fa fa-pencil'></i>\r\n                            </Link>\r\n                        </Fragment>\r\n             })\r\n         })\r\n\r\n         return data\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'All About Us'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\r\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                        <hr/>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )}\r\n\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{position: 'fixed'}}>\r\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                        </a>\r\n                        <Fragment>\r\n                        <div style={{padding: '30px'}}>\r\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Update About Us</h1>\r\n                            {loading ? <Loader/> : (\r\n                                <MDBDataTable\r\n                                    data={setAboutData()}\r\n                                    className='px-3'\r\n                                    bordered\r\n                                    striped\r\n                                    hover\r\n                                    entries={5}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListAbout\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ProductsList.js",["301"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport '../../css/dashboard.css'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getAdminProducts, deleteProduct, clearErrors } from '../../actions/productActions'\r\nimport { DELETE_PRODUCT_RESET } from '../../constants/productConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst ProductsList = ( {history} ) => {\r\n    \r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, products } = useSelector(state => state.products)\r\n    const { deleteError, isDeleted } = useSelector(state => state.product)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getAdminProducts());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(deleteError){\r\n            alert.error(deleteError)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(isDeleted){\r\n            alert.success('Product has been deleted successfully.');\r\n            history.push('/admin/products')\r\n\r\n            dispatch({\r\n                type: DELETE_PRODUCT_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, history, isDeleted, deleteError])\r\n\r\n    const setProducts = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Product Name',\r\n                    field: 'name',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Description',\r\n                    field: 'description',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Category',\r\n                    field: 'category',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         products.forEach(product => {\r\n             data.rows.push({\r\n                name: product.name,\r\n                description: product.description,\r\n                category: product.category,\r\n                actions: <Fragment>\r\n                            <Link to={`/admin/product/${product._id}`} className='btn btn-primary py-1 px-2'>\r\n                                <i className='fa fa-pencil'></i>\r\n                            </Link>\r\n                            <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteProductHandler(product._id)}>\r\n                                <i className='fa fa-trash'></i>\r\n                            </button>\r\n                        </Fragment>\r\n             })\r\n         })\r\n         return data\r\n    }\r\n\r\n    const deleteProductHandler = (id) => {\r\n        dispatch(deleteProduct(id))\r\n    }\r\n    \r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'All Products'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\r\n            <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                        <hr/>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )}\r\n\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{position: 'fixed'}}>\r\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                        </a>\r\n                        <Fragment>\r\n                            <div style={{padding: '30px'}}>\r\n                                <h1 className=\"mt-3 mb-3 ml-10 mr-10\">\r\n                                    All Products\r\n                                </h1>\r\n                                <Link to='/admin/newProduct'>\r\n                                    <button className='btn btn-dark btn-sm text-capitalize ml-3 mb-5'>\r\n                                        Add New Product\r\n                                    </button>\r\n                                </Link>\r\n                                {loading ? <Loader/> : (\r\n                                    <MDBDataTable\r\n                                        data={setProducts()}\r\n                                        className='px-10 table-sm'\r\n                                        bordered\r\n                                        striped\r\n                                        hover\r\n                                        entries={5}\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ProductsList\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListArchives.js",["302"],"import React, { Fragment, useEffect , useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport '../../css/dashboard.css'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\r\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst ListArchives = ({history}) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\r\n    const { isUpdated } = useSelector(state => state.inquiry)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(listInquiry());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n        \r\n        if(isUpdated){\r\n            alert.success('Inquiry status has been updated successfully.');\r\n            history.push('/admin/archives')\r\n\r\n            dispatch({\r\n                type: UPDATE_INQUIRY_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, isUpdated, history])\r\n\r\n    const updateInquiryHandler = (id, inquiryStatus) => { \r\n        const formData = new FormData();\r\n        formData.set('inquiryStatus', inquiryStatus);\r\n\r\n        dispatch(updateInquiry(id, formData));\r\n    }\r\n\r\n    const setInquiries = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Date / Time',\r\n                    field: 'createdAt',\r\n                    sort: 'desc'\r\n                },\r\n                {\r\n                    label: 'Last Name',\r\n                    field: 'lastName'\r\n                },\r\n                {\r\n                    label: 'First Name',\r\n                    field: 'firstName'\r\n                },\r\n                {\r\n                    label: 'Company Name',\r\n                    field: 'companyName'\r\n                },\r\n                \r\n                {\r\n                    label: 'Status',\r\n                    field: 'inquiryStatus'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         inquiries.forEach(inquiry => {\r\n             if(inquiry.inquiryStatus==='Resolved'){\r\n                data.rows.push({\r\n                    createdAt: inquiry.createdAt,\r\n                    firstName: inquiry.firstName,\r\n                    lastName: inquiry.lastName,\r\n                    companyName: inquiry.companyName,\r\n                    concernType: String(inquiry.concernType),\r\n                    actions:   <Fragment>\r\n                                <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                                    <i className='fa fa-eye'></i>\r\n                                </Link>\r\n                                <button className=\"btn btn-secondary py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Unresolved\")}>\r\n                                    <i className='fa fa-undo'></i>\r\n                                </button>\r\n                                <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Deleted\")}>\r\n                                    <i className='fa fa-trash'></i>\r\n                                </button>\r\n                            </Fragment>\r\n                 })\r\n             }\r\n         })\r\n\r\n         return data\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Archives'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\r\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                        <hr/>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )}\r\n\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{position: 'fixed'}}>\r\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                        </a>\r\n                        <Fragment>\r\n                            <div style={{padding: '30px'}}>\r\n                                <h1 className='mt-3 mb-3 ml-10 mr-10'>Archives</h1>\r\n                                {loading? <Loader/> : (\r\n                                    <MDBDataTable\r\n                                        data={setInquiries()}\r\n                                        className='px-3'\r\n                                        bordered\r\n                                        striped\r\n                                        hover\r\n                                        entries={5}\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListArchives","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListTrash.js",["303","304","305"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { deleteInquiry, updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\r\nimport { DELETE_INQUIRY_RESET, UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst ListTrash = ( { history} ) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\r\n    const { deleteError, isUpdated, isDeleted } = useSelector(state => state.inquiry)\r\n\r\n    let deleteAll = false\r\n\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(listInquiry());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n        \r\n        if(deleteError){\r\n            alert.error(deleteError)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(isUpdated){\r\n            alert.success('Inquiry has been updated successfully.');\r\n            history.push('/admin/trash')\r\n\r\n            dispatch({\r\n                type: UPDATE_INQUIRY_RESET\r\n            })\r\n        }\r\n\r\n        if(isDeleted && deleteAll){\r\n            alert.success('Inquiry has been deleted successfully.');\r\n            history.push('/admin/trash')\r\n\r\n            dispatch({\r\n                type: DELETE_INQUIRY_RESET\r\n            })\r\n        }\r\n        \r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, history, isDeleted, isUpdated, deleteError])\r\n\r\n    const setInquiries = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Date / Time',\r\n                    field: 'createdAt',\r\n                    sort: 'desc'\r\n                },\r\n                {\r\n                    label: 'Last Name',\r\n                    field: 'lastName'\r\n                },\r\n                {\r\n                    label: 'First Name',\r\n                    field: 'firstName'\r\n                },\r\n                {\r\n                    label: 'Company Name',\r\n                    field: 'companyName'\r\n                },\r\n                \r\n                {\r\n                    label: 'Status',\r\n                    field: 'inquiryStatus'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         inquiries.forEach(inquiry => {\r\n             if(inquiry.inquiryStatus==='Deleted'){\r\n                data.rows.push({\r\n                    createdAt: inquiry.createdAt,\r\n                    firstName: inquiry.firstName,\r\n                    lastName: inquiry.lastName,\r\n                    companyName: inquiry.companyName,\r\n                    concernType: String(inquiry.concernType),\r\n                    actions:   <Fragment>\r\n                                <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                                    <i className='fa fa-eye'></i>\r\n                                </Link>\r\n                                <button className=\"btn btn-secondary py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Resolved\")}>\r\n                                    <i className='fa fa-undo'></i>\r\n                                </button>\r\n                                <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteInquiryHandler(inquiry._id)}>\r\n                                    <i className='fa fa-trash'></i>\r\n                                </button>\r\n                            </Fragment>\r\n                 })\r\n             }\r\n         })\r\n\r\n         return data\r\n    }\r\n\r\n    const updateInquiryHandler = (id, inquiryStatus) => { \r\n        const formData = new FormData();\r\n        formData.set('inquiryStatus', inquiryStatus);\r\n\r\n        dispatch(updateInquiry(id, formData));\r\n    }\r\n\r\n    const deleteInquiryHandler = (id) => {\r\n\r\n        if(window.confirm(\"Are you sure you want to delete this message? This cannot be undone.\")){\r\n            dispatch(deleteInquiry(id))\r\n        }\r\n    }\r\n\r\n    const emptyTrash = () => {\r\n        if(window.confirm(\"Are you sure you want to delete ALL messages? This cannot be undone.\")){\r\n            deleteAll = true \r\n\r\n            let deletedInquiryCount = 0\r\n\r\n            inquiries.forEach(inquiry => {\r\n\r\n                if(inquiry.inquiryStatus === 'Deleted') {\r\n                    deletedInquiryCount += 1\r\n                    dispatch(deleteInquiry(inquiry._id))\r\n                    deletedInquiryCount -= 1\r\n                }\r\n            })\r\n\r\n            if(deletedInquiryCount == 0){\r\n                alert.success('Trash has been emptied.'); //this is working\r\n            }\r\n        }   \r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Trash'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\r\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                        <hr/>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )}\r\n\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{position: 'fixed'}}>\r\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                        </a>\r\n                        <Fragment>\r\n                        <div style={{padding: '30px'}}>\r\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Trash</h1>\r\n                            <Link>\r\n                                <button className='btn btn-dark btn-sm text-capitalize mb-5' onClick={emptyTrash}>\r\n                                    Empty Trash\r\n                                </button>\r\n                            </Link>\r\n                            {loading? <Loader/> : (\r\n                                <MDBDataTable\r\n                                    data={setInquiries()}\r\n                                    className='px-3'\r\n                                    bordered\r\n                                    striped\r\n                                    hover\r\n                                    entries={5}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListTrash","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateProduct.js",["306"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateProduct, getProductDetails, clearErrors } from '../../actions/productActions'\r\nimport { UPDATE_PRODUCT_RESET } from '../../constants/productConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst UpdateProduct = ( { match, history } ) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [images, setImages] = useState([]);\r\n    const [category, setCategory] = useState('');\r\n    const [imagesPreview, setImagesPreview] = useState([])\r\n    const [oldImages, setOldImages] = useState([]);\r\n    \r\n    const categories = [\r\n        'Category1',\r\n        'Category2',\r\n        'Category3',\r\n        'Category4',\r\n        'Category5',\r\n        'Category6',\r\n        'Category7'\r\n    ]\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { error, product } = useSelector(state => state.productDetails)\r\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.product);\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const productId = match.params.id\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n    \r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if(product && product._id !== productId) {\r\n            dispatch(getProductDetails(productId))\r\n        }\r\n        else { \r\n            setName(product.name)\r\n            setDescription(product.description)\r\n            setCategory(product.category)\r\n            setOldImages(product.images)\r\n        }\r\n\r\n        if(error){\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(updateError){\r\n            alert.error(updateError);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(isUpdated) {\r\n            history.push('/admin/products');\r\n            alert.success('Product updated successfully.')\r\n\r\n            dispatch({\r\n                type: UPDATE_PRODUCT_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, error, alert, isUpdated, updateError, product, productId, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('description', description);\r\n        formData.set('category', category);\r\n\r\n        images.forEach(image => {\r\n            formData.append('images', image)\r\n        });\r\n\r\n        dispatch(updateProduct(product._id, formData));\r\n    }\r\n\r\n    const onChange = e => {\r\n\r\n        const files = Array.from(e.target.files)\r\n\r\n        setImagesPreview([]);\r\n        setImages([])\r\n        setOldImages([])\r\n\r\n        files.forEach(file => {\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = () => {\r\n                if(reader.readyState === 2){\r\n                    setImagesPreview(oldArray => [...oldArray, reader.result])\r\n                    setImages(oldArray => [...oldArray, reader.result])\r\n                }\r\n            }\r\n\r\n            reader.readAsDataURL(file)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Update Product'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\r\n            <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                        <hr/>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )}\r\n\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <Fragment>\r\n                        <div className=\"login-clean\">\r\n                            <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{marginTop: '-150px', position: 'fixed'}}>\r\n                                <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                            </a>\r\n                            <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data' style={{maxWidth: '500px'}}>\r\n                                <h2 className=\"sr-only\">Update Product</h2>\r\n                                <div className=\"div-forgot-password\">\r\n                                    <h3 className=\"forgot-password-heading\">Update Product</h3>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Name</h6>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"product_name\"\r\n                                        value={name}\r\n                                        style={{width: '100%'}}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Description</h6>\r\n                                    <textarea\r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"product_name\"\r\n                                        value={description}\r\n                                        style={{width: '100%', height: '150px'}}\r\n                                        onChange={(e) => setDescription(e.target.value)}\r\n                                        height='55px'\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Category</h6>\r\n                                    <div className=\"dropdown show\">\r\n                                        <select \r\n                                            name=\"category\" \r\n                                            className=\"product-dropdown\" \r\n                                            id=\"category\"\r\n                                            value={category}\r\n                                            onChange={(e) => setCategory(e.target.value)}\r\n                                        >\r\n                                            {categories.map(category => (\r\n                                                <option key={category} value={category}>{category}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Images</h6>\r\n                                    <input \r\n                                        type=\"file\" \r\n                                        name=\"product_images\" \r\n                                        onChange={onChange}\r\n                                        multiple\r\n                                    />\r\n                                </div>\r\n                                \r\n                                {oldImages && oldImages.map(img => (\r\n                                    <img \r\n                                        className='mt-3 mr-2'\r\n                                        src={img.url}\r\n                                        alt={img.url}\r\n                                        key={img}\r\n                                        width='55' \r\n                                        height='52'\r\n                                    />\r\n\r\n                                ))}\r\n\r\n                                {imagesPreview.map(img => (\r\n                                    <img \r\n                                        src={img} \r\n                                        key={img} \r\n                                        alt='Images Preview'\r\n                                        className='mt-3 mr-2' \r\n                                        width='110' \r\n                                        height='104'\r\n                                    />\r\n                                ))}\r\n\r\n                                <div className=\"form-group\">\r\n                                        <button \r\n                                        className=\"btn btn-primary btn-block\" \r\n                                        type=\"submit\"\r\n                                        disabled={loading ? true : false}\r\n                                    >\r\n                                        Update Product\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateProduct\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\NewProduct.js",["307"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { newProduct, clearErrors } from '../../actions/productActions'\r\nimport { NEW_PRODUCT_RESET } from '../../constants/productConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst NewProduct = ( { history } ) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [images, setImages] = useState([]);\r\n    const [category, setCategory] = useState('');\r\n    const [imagesPreview, setImagesPreview] = useState([])\r\n\r\n    const categories = [\r\n        ' - ',\r\n        'Category1',\r\n        'Category2',\r\n        'Category3',\r\n        'Category4',\r\n        'Category5',\r\n        'Category6',\r\n        'Category7'\r\n    ]\r\n\r\n    const { loading, error, success } = useSelector(state => state.newProduct);\r\n\r\n    const { user } = useSelector(state => state.auth)\r\n    const [isToggled, setToggled] = useState('false')\r\n    \r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n    \r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(error){\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(success) {\r\n            history.push('/admin/products');\r\n            alert.success('Product created successfully.')\r\n\r\n            dispatch({\r\n                type: NEW_PRODUCT_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, error, alert, success, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('description', description);\r\n        formData.set('category', category);\r\n\r\n        images.forEach(image => {\r\n            formData.append('images', image)\r\n        });\r\n\r\n        dispatch(newProduct(formData));\r\n    }\r\n\r\n    const onChange = e => {\r\n\r\n        const files = Array.from(e.target.files)\r\n\r\n        setImagesPreview([]);\r\n        setImages([])\r\n\r\n        files.forEach(file => {\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = () => {\r\n                if(reader.readyState === 2){\r\n                    setImagesPreview(oldArray => [...oldArray, reader.result])\r\n                    setImages(oldArray => [...oldArray, reader.result])\r\n                }\r\n            }\r\n\r\n            reader.readAsDataURL(file)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'New Product'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\r\n            <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                        <hr/>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )}\r\n\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                    <Fragment>\r\n                    <div className=\"login-clean\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{marginTop: '-150px', position: 'fixed'}}>\r\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                        </a>\r\n                        <form method=\"post\" onSubmit={submitHandler} encType='multipart/form-data' style={{maxWidth: '500px'}}>\r\n                            <h2 className=\"sr-only\">New Product</h2>\r\n                            <div className=\"div-forgot-password\">\r\n                                <h3 className=\"forgot-password-heading\">New Product</h3>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <h6>Name</h6>\r\n                                <textarea \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    name=\"product_name\"\r\n                                    value={name}\r\n                                    style={{width: '100%'}}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <h6>Description</h6>\r\n                                <textarea\r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    name=\"product_name\"\r\n                                    style={{width: '100%', height: '150px'}}\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <h6>Category</h6>\r\n                                <div className=\"dropdown show\">\r\n                                    <select \r\n                                        name=\"category\" \r\n                                        className=\"product-dropdown\" \r\n                                        id=\"category\"\r\n                                        value={category}\r\n                                        onChange={(e) => setCategory(e.target.value)}\r\n                                    >\r\n                                        {categories.map(category => (\r\n                                            <option key={category} value={category}>{category}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <h6>Images</h6>\r\n                                <input \r\n                                    type=\"file\" \r\n                                    name=\"product_images\" \r\n                                    onChange={onChange}\r\n                                    multiple\r\n                                />\r\n                            </div>\r\n                            \r\n                            {imagesPreview.map(img => (\r\n                                <img \r\n                                    src={img} \r\n                                    key={img} \r\n                                    alt='Images Preview'\r\n                                    className='mt-3 mr-2' \r\n                                    width='55' \r\n                                    height='52'\r\n                                />\r\n                            ))}\r\n\r\n                            <div className=\"form-group\">\r\n                                    <button \r\n                                    className=\"btn btn-primary btn-block\" \r\n                                    type=\"submit\"\r\n                                    disabled={loading ? true : false}\r\n                                >\r\n                                    Create\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NewProduct\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateProfile.js",["308"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from  'react-redux'\r\nimport { updateProfile, loadUser, clearErrors } from './../../actions/userActions'\r\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants'\r\n\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { logout } from './../../actions/userActions'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\n\r\nconst UpdateProfile = ({ history }) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [contactNumber, setContactNumber] = useState('');\r\n    const [address, setAddress] = useState('');\r\n    const [avatar, setAvatar] = useState('');\r\n    const [avatarPreview, setAvatarPreview] = useState('images/default_avatar.png');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user } = useSelector(state => state.auth);\r\n    const { error, isUpdated, loading } = useSelector(state => state.user);\r\n    \r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(user) {\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n            setContactNumber(user.contactNumber);\r\n            setAddress(user.address);\r\n            setAvatarPreview(user.avatar.url);\r\n        }\r\n\r\n        if(error){\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n\r\n        }\r\n\r\n        if(isUpdated){\r\n            alert.success('User updated successfully');\r\n            dispatch(loadUser());\r\n\r\n            history.push('/admin/me')\r\n\r\n            dispatch({\r\n                type: UPDATE_PROFILE_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n\r\n    }, [dispatch, alert, error, history, user, isUpdated])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('email', email);\r\n        formData.set('contactNumber', contactNumber);\r\n        formData.set('address', address);\r\n        formData.set('avatar', avatar);\r\n\r\n        dispatch(updateProfile(formData));\r\n    }\r\n\r\n    const onChange = e => {\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = () => {\r\n            if(reader.readyState === 2){\r\n                setAvatarPreview(reader.result)\r\n                setAvatar(reader.result)\r\n            }\r\n        }\r\n\r\n        reader.readAsDataURL(e.target.files[0])\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Update Profile'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\r\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                        <hr/>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )}\r\n\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\r\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                        </a>\r\n                        <div className=\"container\">\r\n                            <div className=\"main-body\">\r\n                                <div className=\"row gutters-sm\">\r\n                                    <div className=\"col-md-4 mb-3\">\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-body\">\r\n                                                <div className=\"d-flex flex-column align-items-center text-center\">\r\n                                                    <img src={avatarPreview} alt=\"Admin\" className=\"rounded-circle\" width=\"100%\" style={{minWidth: '100px', maxWidth: '150px'}}/>\r\n                                                    <div className=\"mt-3\">\r\n                                                    <hr/>\r\n                                                    <input \r\n                                                        type=\"file\" \r\n                                                        id=\"avatar\" \r\n                                                        name=\"avatar\" \r\n                                                        accept=\"images/*\"\r\n                                                        onChange={onChange}\r\n                                                        style={{width: '90%'}}\r\n                                                    />\r\n                                                    <br/>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-8\">\r\n                                        <div className=\"card mb-3\">\r\n                                            <div className=\"card-body\">\r\n                                                <form method=\"post\" onSubmit={submitHandler}>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-sm-3\">\r\n                                                        <h6 className=\"mb-0\">Full Name</h6>\r\n                                                        </div>\r\n                                                        <div className=\"col-sm-9 text-secondary\">\r\n                                                        <input \r\n                                                            type=\"text\" \r\n                                                            className=\"form-control\" \r\n                                                            name=\"name\"\r\n                                                            value={name}\r\n                                                            onChange={(e) => setName(e.target.value)}\r\n                                                        />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <hr/>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-sm-3\">\r\n                                                        <h6 className=\"mb-0\">Email</h6>\r\n                                                        </div>\r\n                                                        <div className=\"col-sm-9 text-secondary\">\r\n                                                        <input \r\n                                                            type=\"email\" \r\n                                                            className=\"form-control\" \r\n                                                            name=\"email\"\r\n                                                            value={email}\r\n                                                            onChange={(e) => setEmail(e.target.value)}\r\n                                                        />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <hr/>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-sm-3\">\r\n                                                        <h6 className=\"mb-0\">Phone</h6>\r\n                                                        </div>\r\n                                                        <div className=\"col-sm-9 text-secondary\">\r\n                                                        <input \r\n                                                            type=\"text\" \r\n                                                            className=\"form-control\" \r\n                                                            name=\"contactNumber\"\r\n                                                            value={contactNumber}\r\n                                                            onChange={(e) => setContactNumber(e.target.value)}\r\n                                                        />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <hr/>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-sm-3\">\r\n                                                        <h6 className=\"mb-0\">Address</h6>\r\n                                                        </div>\r\n                                                        <div className=\"col-sm-9 text-secondary\">\r\n                                                            <textarea \r\n                                                                type=\"text\"\r\n                                                                className=\"form-control\"\r\n                                                                name=\"address\"\r\n                                                                value={address}\r\n                                                                onChange={(e) => setAddress(e.target.value)}\r\n                                                                style={{height: '150px'}}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"row\">\r\n                                                        <br/>\r\n                                                        <br/>\r\n                                                        <button\r\n                                                            className=\"btn btn-primary btn-block\"\r\n                                                            type=\"submit\"\r\n                                                            disabled={ loading ? true : false}\r\n                                                        >Update Profile</button>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>    \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateProfile\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateInquiry.js",["309"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateInquiry, getInquiryDetails, clearErrors } from '../../actions/inquiryActions'\r\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst UpdateInquiry = ( { match, history } ) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { error, inquiry } = useSelector(state => state.inquiryDetails)\r\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.inquiry);\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const inquiryId = match.params.id\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => { \r\n        if(inquiry && inquiry._id !== inquiryId) {\r\n            dispatch(getInquiryDetails(inquiryId))\r\n        }\r\n\r\n        if(error){\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(updateError){\r\n            alert.error(updateError);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(isUpdated) {\r\n            history.push('/admin/dashboard');\r\n            alert.success('Inquiry updated successfully.')\r\n\r\n            dispatch({\r\n                type: UPDATE_INQUIRY_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, error, alert, isUpdated, updateError, inquiry, inquiryId, history])\r\n\r\n    const updateInquiryHandler = (id, inquiryStatus) => { \r\n        const formData = new FormData();\r\n        formData.set('inquiryStatus', inquiryStatus);\r\n\r\n        dispatch(updateInquiry(id, formData));\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'View Message'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\r\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                        <hr/>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )}\r\n\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                    <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{position: 'fixed'}}>\r\n                        <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                    </a>\r\n                    <Fragment>\r\n                        {loading ? <Loader/> : (\r\n                            <section className=\"process-section\" style={{backgroundColor: '#f1f7fc', fontSize: '100%', fontWeight: '400', lineHeight: '1.4', color: '#000'}}>\r\n                                <table style={{maxWidth: '670px', margin: '0 auto 20px auto', backgroundColor: '#fff', padding: '30px', WebkitBorderRadius: '3px', MozBorderRadius: '3px', borderRadius: '3px', WebkitBoxShadow: '0 1px 3px rgba(0,0,0.12), 0 1px 2px rgba(0,0,0,.24)', MozBoxShadow: '0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24)', boxShadow: '0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24)', borderTop: 'solid 10px #1b1449'}}>\r\n                                    <thead>\r\n                                        <tr>\r\n                                        <th style={{textAlign: 'left'}}><img style={{maxWidth: '300px'}} src=\"https://res.cloudinary.com/agiletech3itf/image/upload/v1610472388/agile-tech-big-blue-logo_cej4nt.png\" alt=\"logo\"/></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                        <td style={{height: '35px'}}></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                        <td colspan=\"2\" style={{border: 'solid 1px #ddd', padding:'10px 20px'}}>\r\n                                            <p style={{fontSize:'14px', margin:'0 0 6px 0'}}><span style={{fontWeight: 'bold', display: 'inline-block', minWidth: '150px'}}>Concern Type</span><b style={{color: 'green', fontWeight: 'normal', margin: '0'}}>{inquiry.concernType}</b></p>\r\n                                        </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                        <td style={{height: '35px'}}></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                        <td style={{width: '100%', padding: '20px', verticalAlign: 'top'}}>\r\n                                            <h2 style={{margin: '0 0 10px 0', padding: '0'}}>Sender Details</h2>\r\n                                            <p style={{margin: '0 0 10[x 0', padding: '0', fontSize: '14px'}}><span style={{display: 'block', fontWeight: 'bold', fontSize: '13px'}}>Name</span> {inquiry.firstName} {inquiry.lastName}</p>\r\n                                            <p style={{margin: '0 0 10[x 0', padding: '0', fontSize: '14px'}}><span style={{display: 'block', fontWeight: 'bold', fontSize: '13px'}}>Company and Position</span> {inquiry.companyName}, {inquiry.position}</p>\r\n                                            <p style={{margin: '0 0 10[x 0', padding: '0', fontSize: '14px'}}><span style={{display: 'block', fontWeight: 'bold', fontSize: '13px'}}>Email</span> {inquiry.customerEmail}</p>\r\n                                            <p style={{margin: '0 0 10[x 0', padding: '0', fontSize: '14px'}}><span style={{display: 'block', fontWeight: 'bold', fontSize: '13px'}}>Phone</span> {inquiry.contactNumber}</p>\r\n                                        </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                        <td colspan=\"2\" style={{padding: '30px 15px 0 15px'}}>\r\n                                            <h2 style={{margin: '0 0 10px 0', padding: '0'}}>Message Content</h2>\r\n                                        </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                        <td colspan=\"2\" style={{padding:'15px'}}>\r\n                                            <p style={{fontSize: '14px', margin: '0', padding: '10px', textAlign: 'justify'}}>\r\n                                            {inquiry.customerMessage}\r\n                                            </p>\r\n                                        </td>\r\n                                        </tr>\r\n                                        <tr style={{ width: '100%'}}>\r\n                                            {(inquiry.inquiryStatus === 'Resolved') ? (\r\n                                                <Fragment>\r\n                                                    <button \r\n                                                        className=\"btn btn-primary update-status-button\" \r\n                                                        type=\"button\"\r\n                                                        onClick={() => updateInquiryHandler(inquiry._id, 'Unresolved')}\r\n                                                        style={{margin: '50px auto 50px auto', display: 'block'}}>\r\n                                                        Mark this message as 'Resolved'\r\n                                                        Restore message back to {inquiry.concernType}\r\n                                                    </button>\r\n                                                </Fragment>\r\n                                            ) : (\r\n                                                <Fragment>\r\n                                                    <button \r\n                                                        className=\"btn btn-primary update-status-button align-center\" \r\n                                                        type=\"button\"\r\n                                                        onClick={() => updateInquiryHandler(inquiry._id, 'Resolved')}\r\n                                                        style={{margin: '50px auto 50px auto', display: 'block'}}>\r\n                                                        Mark this message as 'Resolved'\r\n                                                    </button>\r\n                                                </Fragment>\r\n                                            )}\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </section>\r\n                        )}\r\n                    </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateInquiry\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateUser.js",["310"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateUser, getUserDetails, clearErrors } from '../../actions/userActions'\r\nimport { UPDATE_USER_RESET } from '../../constants/userConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\n\r\nconst UpdateUser = ({ match, history }) => {\r\n    const [name, setName] = useState('');\r\n    const [contactNumber, setContactNumber] = useState('');\r\n    const [role, setRole] = useState([]);\r\n    const [address, setAddress] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { error, user } = useSelector(state => state.getUser)\r\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.updateUser);\r\n\r\n    const userId = match.params.id\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n    \r\n    const roles = [\r\n        'admin',\r\n        'superadmin'\r\n    ]\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if(user && user._id !== userId) {\r\n            dispatch(getUserDetails(userId))\r\n        }\r\n        else { \r\n            setName(user.name)\r\n            setContactNumber(user.contactNumber)\r\n            setRole(user.role)\r\n            setAddress(user.address)\r\n        }\r\n\r\n        if(error){\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(updateError){\r\n            alert.error(updateError);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(isUpdated) {\r\n            history.push('/');\r\n            alert.success('User updated successfully.')\r\n\r\n            dispatch({\r\n                type: UPDATE_USER_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, error, alert, isUpdated, updateError, user, userId, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('contactNumber', contactNumber);\r\n        formData.set('address', address);\r\n        formData.set('role', role);\r\n\r\n        dispatch(updateUser(user._id, formData));\r\n    }\r\n    \r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Update User'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\r\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                        <hr/>\r\n                        <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                        <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <Fragment>\r\n                        <div className=\"login-clean\">\r\n                            <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{marginTop: '-150px', position: 'fixed'}}>\r\n                                <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                            </a>\r\n                            <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data' style={{maxWidth: '500px'}}>\r\n                                <h2 className=\"sr-only\">Update User</h2>\r\n                                <div className=\"div-forgot-password\">\r\n                                    <h3 className=\"forgot-password-heading\">Update User</h3>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Name</h6>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"name\"\r\n                                        value={name}\r\n                                        style={{width: '100%'}}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Contact Number</h6>\r\n                                    <input\r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"contactNumber\"\r\n                                        value={contactNumber}\r\n                                        onChange={(e) => setContactNumber(e.target.value)}\r\n                                        height='55px'\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Address</h6>\r\n                                    <textarea\r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"address\"\r\n                                        value={address}\r\n                                        style={{width: '100%', height: '150px'}}\r\n                                        onChange={(e) => setAddress(e.target.value)}\r\n                                        height='55px'\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Role</h6>\r\n                                    <div className=\"dropdown show\">\r\n                                        <select \r\n                                            name=\"role\" \r\n                                            className=\"product-dropdown\" \r\n                                            id=\"role\"\r\n                                            value={role}\r\n                                            onChange={(e) => setRole(e.target.value)}\r\n                                        >\r\n                                            {roles.map(role => (\r\n                                                <option key={role} value={role}>{role}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                        <button \r\n                                        className=\"btn btn-primary btn-block\" \r\n                                        type=\"submit\"\r\n                                        disabled={loading ? true : false}\r\n                                    >\r\n                                        Update User\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateUser\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListUsers.js",["311"],"import React, { Fragment, useEffect , useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport '../../css/dashboard.css'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getUsers, deleteUser, clearErrors } from '../../actions/userActions'\r\nimport { DELETE_USER_RESET, UPDATE_USER_RESET } from '../../constants/userConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst ListUsers = ({history}) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, users } = useSelector(state => state.users)\r\n    const { user } = useSelector(state => state.auth)\r\n    const { deleteError, isUpdated, isDeleted } = useSelector(state => state.updateUser)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getUsers());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n        \r\n        if(deleteError){\r\n            alert.error(deleteError)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(isUpdated){\r\n            alert.success('User has been updated successfully.');\r\n            history.push('/admin/users')\r\n\r\n            dispatch({\r\n                type: UPDATE_USER_RESET\r\n            })\r\n        }\r\n\r\n        if(isDeleted){\r\n            alert.success('User has been deleted successfully.');\r\n            history.push('/admin/users')\r\n\r\n            dispatch({\r\n                type: DELETE_USER_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, isDeleted, isUpdated, deleteError, history])\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    const setUsersData = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Role',\r\n                    field: 'role',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Name',\r\n                    field: 'name',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Contact Number',\r\n                    field: 'contactNumber',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Email',\r\n                    field: 'email',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                    sort: 'asc'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         users.forEach(user => {\r\n            data.rows.push({\r\n                role: user.role,\r\n                name: user.name,\r\n                contactNumber: user.contactNumber,\r\n                email: user.email,\r\n                actions:   <Fragment>\r\n                    <Link to={`/superadmin/user/${user._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                        <i className='fa fa-pencil'></i>\r\n                    </Link>\r\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\"\r\n                            disabled={user.role === 'superadmin' ? true : false}\r\n                            onClick={() => deleteUserHandler(user._id)}\r\n                    >\r\n                        <i className='fa fa-trash'></i>\r\n                    </button>\r\n                </Fragment>\r\n             })\r\n         })\r\n\r\n         return data\r\n    }\r\n\r\n    const deleteUserHandler = (id) => {\r\n\r\n        if(window.confirm(\"Are you sure you want to delete this user? This cannot be undone.\")){\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Users'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\r\n            <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                <ul className=\"sidebar-nav\">\r\n                    <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                    <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                    <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                    <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                    <hr/>\r\n                    {user && user.role !== 'admin' ? (\r\n                            <Fragment>\r\n                                <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                                <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                            </Fragment>\r\n                        ) : (\r\n                            <Fragment>\r\n                                <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                <hr/>\r\n                                <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                            </Fragment>\r\n                        )}\r\n\r\n                    <hr/>\r\n                    <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                    <li></li>\r\n                </ul>\r\n            </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{position: 'fixed'}}>\r\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                        </a>\r\n                        <Fragment>\r\n                        <div style={{padding: '30px'}}>\r\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Users</h1>\r\n                            {loading? <Loader/> : (\r\n                                <MDBDataTable\r\n                                    data={setUsersData()}\r\n                                    className='px-3'\r\n                                    bordered\r\n                                    striped\r\n                                    hover\r\n                                    entries={5}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListUsers\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\user\\RegisterSuccess.js",["312","313"],"import React, { Fragment, useEffect } from 'react'\r\nimport '../../css/confirmationpage.css'\r\nimport '../../css/contact.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport '../../fonts/font-awesome.min.css'\r\nimport { useDispatch } from 'react-redux'\r\nimport { INSIDE_DASHBOARD_FALSE } from '../../constants/dashboardConstants'\r\n\r\nimport MetaData from './../layout/MetaData'\r\n\r\nconst ConfirmationPage = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        // dispatch({\r\n        //     type: INSIDE_DASHBOARD_FALSE\r\n        // })\r\n    })\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Registration Success'}/>\r\n            <Fragment>\r\n                <section className=\"contact-form-section\" style={{paddingTop: '65px'}}>\r\n                    <h1>\r\n                        <i className=\"fa fa-check-circle confirm-icon\"></i>\r\n                    </h1>\r\n                    <h1>Form Sent!</h1>\r\n                    <h6 className=\"congratulations-text\">\r\n                        User has been successfully created<br/>\r\n                    </h6>\r\n                    <a className=\"back-to-home\" href=\"/\">Back to Home&nbsp;<i className=\"fa fa-angle-right\"></i></a>\r\n                </section>\r\n            </Fragment>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ConfirmationPage\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\actions\\userActions.js",["314","315"],"import axios from 'axios'\r\nimport {\r\n    LOGIN_REQUEST,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    REGISTER_USER_REQUEST,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAIL,\r\n    LOAD_USER_REQUEST,\r\n    LOAD_USER_SUCCESS,\r\n    LOAD_USER_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    UPDATE_PROFILE_REQUEST,\r\n    UPDATE_PROFILE_SUCCESS,\r\n    UPDATE_PROFILE_FAIL,\r\n    UPDATE_PASSWORD_REQUEST,\r\n    UPDATE_PASSWORD_SUCCESS,\r\n    UPDATE_PASSWORD_FAIL,\r\n    FORGOT_PASSWORD_REQUEST,\r\n    FORGOT_PASSWORD_SUCCESS,\r\n    FORGOT_PASSWORD_FAIL,\r\n    NEW_PASSWORD_REQUEST,\r\n    NEW_PASSWORD_SUCCESS,\r\n    NEW_PASSWORD_FAIL,\r\n    ALL_USERS_REQUEST,\r\n    ALL_USERS_SUCCESS,\r\n    ALL_USERS_FAIL,\r\n    GET_USER_REQUEST,\r\n    GET_USER_SUCCESS,\r\n    GET_USER_FAIL,\r\n    UPDATE_USER_REQUEST,\r\n    UPDATE_USER_SUCCESS,\r\n    UPDATE_USER_FAIL,\r\n    UPDATE_USER_RESET,\r\n    DELETE_USER_REQUEST,\r\n    DELETE_USER_SUCCESS,\r\n    DELETE_USER_RESET,\r\n    DELETE_USER_FAIL,\r\n    LOGOUT_FAIL,\r\n    CLEAR_ERRORS\r\n} from '../constants/userConstants'\r\n\r\n//Get product details\r\nexport const getUserDetails = (id) => async(dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: GET_USER_REQUEST\r\n        })\r\n\r\n        const { data } = await axios.get(`/api/v1/superadmin/user/${id}`)\r\n\r\n        dispatch({\r\n            type: GET_USER_SUCCESS,\r\n            payload: data.user\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type: GET_USER_FAIL,\r\n            payload: error.response.data.message\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n// Update user (SUPERADMIN)\r\nexport const updateUser = (id, userData) => async(dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: UPDATE_USER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }\r\n        const { data } = await axios.put(`/api/v1/superadmin/user/${id}`, userData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_USER_SUCCESS,\r\n            payload: data.success\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type: UPDATE_USER_FAIL,\r\n            payload: error.response.data.message\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n// Delete user (ADMIN)\r\nexport const deleteUser = (id) => async(dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: DELETE_USER_REQUEST\r\n        })\r\n\r\n        const { data } = await axios.delete(`/api/v1/superadmin/user/${id}`)\r\n\r\n        dispatch({\r\n            type: DELETE_USER_SUCCESS,\r\n            payload: data.success\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type: DELETE_USER_FAIL,\r\n            payload: error.response.data.message\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport const getUsers = () => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: ALL_USERS_REQUEST\r\n        })\r\n\r\n        const { data } = await axios.get('/api/v1/superadmin/users')\r\n\r\n        dispatch({\r\n            type: ALL_USERS_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type: ALL_USERS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Login\r\nexport const login = ( email, password ) => async (dispatch) => {\r\n    try {\r\n        dispatch ({\r\n            type: LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/v1/login', { email, password }, config)\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOGIN_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Register user\r\nexport const register = ( userData ) => async (dispatch) => {\r\n    try {\r\n        dispatch ({\r\n            type: REGISTER_USER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/v1/superadmin/register', userData, config)\r\n\r\n        dispatch({\r\n            type: REGISTER_USER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: REGISTER_USER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Load user\r\nexport const loadUser = () => async (dispatch) => {\r\n    try {\r\n        dispatch ({\r\n            type: LOAD_USER_REQUEST\r\n        })\r\n\r\n        const { data } = await axios.get('/api/v1/me')\r\n\r\n        dispatch({\r\n            type: LOAD_USER_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOAD_USER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Logout user\r\nexport const logout = () => async (dispatch) => {\r\n    try {\r\n        await axios.get('/api/v1/logout')\r\n\r\n        dispatch({\r\n            type: LOGOUT_SUCCESS\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOGOUT_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Update user profile\r\nexport const updateProfile = ( userData ) => async (dispatch) => {\r\n    try {\r\n        dispatch ({\r\n            type: UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put('/api/v1/me/update', userData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_PROFILE_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Update user password\r\nexport const updatePassword = ( passwords ) => async (dispatch) => {\r\n    try {\r\n        dispatch ({\r\n            type: UPDATE_PASSWORD_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put('/api/v1/password/update', passwords, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_PASSWORD_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_PASSWORD_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Forgot password\r\nexport const forgotPassword = ( email ) => async (dispatch) => {\r\n    try {\r\n        dispatch ({\r\n            type: FORGOT_PASSWORD_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/v1/password/forgot', email, config)\r\n\r\n        dispatch({\r\n            type: FORGOT_PASSWORD_SUCCESS,\r\n            payload: data.message\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: FORGOT_PASSWORD_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// New password\r\nexport const resetPassword = ( token, passwords ) => async (dispatch) => {\r\n    try {\r\n        dispatch ({\r\n            type: NEW_PASSWORD_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/password/reset/${token}`, passwords, config)\r\n\r\n        dispatch({\r\n            type: NEW_PASSWORD_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_PASSWORD_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n//clear errors\r\nexport const clearErrors = () => async(dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERRORS\r\n    })\r\n}","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\user\\ForgotPassword.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\route\\ProtectedRoute.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\user\\Login.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\layout\\Header.js",["316","317","318","319"],"import React from 'react'\r\nimport { Fragment } from 'react'\r\nimport '../../css/styles.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useAlert } from 'react-alert'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst Header = () => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user, loading } = useSelector(state => state.auth)\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n    \r\n    let userAvatar = \"\"\r\n\r\n    if(user && user.avatar) {\r\n        userAvatar = user.avatar.url\r\n    } else {\r\n        userAvatar = \"\"\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n        <nav className=\"navbar navbar-dark navbar-expand-md fixed-top\">\r\n            <div className=\"container\">\r\n                <button data-toggle=\"collapse\" data-target=\"#navcol-1\" className=\"navbar-toggler\">\r\n                    <span className=\"sr-only\">Toggle navigation</span>\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <a href=\"/\">\r\n                    <img className=\"agile-logo\" src=\"https://res.cloudinary.com/agiletech3itf/image/upload/v1610472388/agile-tech-big-blue-logo_cej4nt.png\"/>\r\n                </a>\r\n                <div className=\"collapse navbar-collapse\" id=\"navcol-1\">\r\n                    <ul className=\"nav navbar-nav flex-grow-1 justify-content-between\">\r\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"#\"></Link></li>\r\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/\"><strong>Home</strong></Link></li>\r\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/about-company\"><strong>About Us</strong></Link></li>\r\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/our-products\"><strong>Products</strong></Link></li>\r\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/our-services\"><strong>Services</strong></Link></li>\r\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/contact-us\"><strong>Contact Us</strong></Link></li>\r\n                        {user ? (\r\n                                <div className=\"dropdown d-inline\">\r\n                                    \r\n                                    <button\r\n                                    className=\"btn dropdown-toggle text-black mr-4\"\r\n                                    type=\"button\"\r\n                                    id=\"dropDownMenuButton\"\r\n                                    data-toggle=\"dropdown\"\r\n                                    aria-aria-haspopup=\"true\"\r\n                                    aria-expanded=\"false\">\r\n                                    \r\n                                    <img \r\n                                        className='mr-2 rounded-circle'\r\n                                        src={userAvatar}\r\n                                        width='30' \r\n                                        height='32'\r\n                                    />\r\n                                    {user && user.name}\r\n\r\n                                    </button>\r\n                                    <div className=\"dropdown-menu\" aria-aria-labelledby=\"dropDownMenuButton\">\r\n                                        <Link className=\"dropdown-item\" to=\"/admin/dashboard\">\r\n                                            Dashboard\r\n                                        </Link>\r\n                                        <Link className=\"dropdown-item text-danger\" to=\"/\" onClick={logoutHandler}>\r\n                                            Log out\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                            ) : !loading && <Link to=\"/login\">\r\n                                <div></div>\r\n                            </Link>}\r\n                    </ul> \r\n                </div>\r\n            </div>\r\n        </nav>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Header;","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\user\\NewPassword.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\user\\Register.js",["320","321"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from  'react-redux'\r\nimport { register, clearErrors } from './../../actions/userActions'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Register = ( { history } ) => {\r\n\r\n    const [user, setUser] = useState({\r\n        name: '',\r\n        email: '',\r\n        contactNumber: '',\r\n        address: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    })\r\n\r\n    const { name, email, contactNumber, address, password, confirmPassword, } = user;\r\n    const [avatar, setAvatar] = useState('');\r\n    const [avatarPreview, setAvatarPreview] = useState('images/default_avatar.png');\r\n    const [useDefaultImage, setUseDefaultImage] = useState('')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { isCreated, error, loading, success } = useSelector(state => state.register);\r\n\r\n    const [isChecked, setChecked] = useState('false')\r\n\r\n    const checkboxCheck = () => {\r\n        setChecked(!isChecked)\r\n    }\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n    \r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(error){\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n        if(success){\r\n            // history.push('/register-success')\r\n            history.push('/')\r\n            alert.success(success)\r\n        }\r\n        \r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n\r\n    }, [dispatch, alert, isCreated, error, success, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('email', email);\r\n        formData.set('password', password);\r\n        formData.set('confirmPassword', confirmPassword);\r\n        formData.set('contactNumber', contactNumber);\r\n        formData.set('address', address);\r\n        formData.set('avatar', avatar);\r\n        formData.set('useDefaultImage', useDefaultImage)\r\n\r\n        dispatch(register(formData));\r\n    }\r\n\r\n    const onChange = e => {\r\n        \r\n        if(e.target.name === 'useDefaultImage') {\r\n            let chkbox = document.getElementById('useDefaultImage')\r\n\r\n            if(chkbox.checked == true) { //if changed to ===, register would not work\r\n                setUseDefaultImage(\"True\")\r\n            }\r\n            else{\r\n                setUseDefaultImage(\"False\")\r\n            }\r\n\r\n        } else {\r\n            if(e.target.name === 'avatar') {\r\n\r\n                const reader = new FileReader();\r\n    \r\n                reader.onload = () => {\r\n                    if(reader.readyState === 2){\r\n                        setAvatarPreview(reader.result)\r\n                        setAvatar(reader.result)\r\n                    }\r\n                }\r\n    \r\n                reader.readAsDataURL(e.target.files[0])\r\n    \r\n            }\r\n            else {\r\n                setUser({\r\n                    ...user,\r\n                    [e.target.name]: e.target.value\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Register'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\r\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                        <hr/>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )}\r\n\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{position: 'fixed'}}>\r\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                        </a>\r\n                        <div className=\"container\">\r\n                            <div className=\"main-body\">\r\n                                <div className=\"row gutters-sm\">\r\n                                    <div className=\"col-md-4 mb-3\">\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-body\">   \r\n                                                <div className=\"row text-center\">\r\n                                                    <h3 className=\"ml-3 mb-5 \">Register New User</h3>\r\n                                                </div>\r\n                                                <div className=\"d-flex flex-column align-items-center text-center\">\r\n                                                    <img src={avatarPreview} alt=\"Admin\" className=\"rounded-circle\" width=\"150\"/>\r\n                                                    <div className=\"mt-3\">\r\n                                                        <hr/>\r\n                                                        <input \r\n                                                            type='checkbox'\r\n                                                            id='useDefaultImage'\r\n                                                            name='useDefaultImage'\r\n                                                            value={useDefaultImage}\r\n                                                            onChange={onChange}\r\n                                                            onClick={checkboxCheck}/>\r\n                                                            &nbsp;Use default image\r\n                                                            <br/>\r\n                                                            <br/>\r\n                                                            <input \r\n                                                                type=\"file\" \r\n                                                                id=\"avatar\" \r\n                                                                name=\"avatar\" \r\n                                                                accept=\"images/*\"\r\n                                                                onChange={onChange}\r\n                                                                style={{width: '90%'}}\r\n                                                                disabled={isChecked ? false : true}\r\n                                                            />\r\n                                                        <br/>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-8\">\r\n                                        <div className=\"card mb-3\">\r\n                                            <div className=\"card-body\">\r\n                                                <form method=\"post\" onSubmit={submitHandler}>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-sm-3\">\r\n                                                            <h6 className=\"mb-0\">Full Name</h6>\r\n                                                        </div>\r\n                                                        <div className=\"col-sm-9 text-secondary\">\r\n                                                            <input \r\n                                                                type=\"text\" \r\n                                                                className=\"form-control\" \r\n                                                                name=\"name\"\r\n                                                                value={name}\r\n                                                                onChange={onChange}\r\n                                                            />\r\n                                                            </div>\r\n                                                    </div>\r\n                                                    <hr/>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-sm-3\">\r\n                                                            <h6 className=\"mb-0\">Email</h6>\r\n                                                        </div>\r\n                                                        <div className=\"col-sm-9 text-secondary\">\r\n                                                            <input \r\n                                                                type=\"email\" \r\n                                                                className=\"form-control\" \r\n                                                                name=\"email\"\r\n                                                                value={email}\r\n                                                                onChange={onChange}\r\n                                                            />\r\n                                                            </div>\r\n                                                    </div>\r\n                                                    <hr/>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-sm-3\">\r\n                                                            <h6 className=\"mb-0\">Contact Number</h6>\r\n                                                        </div>\r\n                                                        <div className=\"col-sm-9 text-secondary\">\r\n                                                            <input \r\n                                                                type=\"tel\" \r\n                                                                className=\"form-control\" \r\n                                                                name=\"contactNumber\" \r\n                                                                value={contactNumber}\r\n                                                                pattern=\"^\\d{4}-\\d{3}-\\d{4}$\"\r\n                                                                onChange={onChange}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <hr/>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-sm-3\">\r\n                                                            <h6 className=\"mb-0\">Address</h6>\r\n                                                        </div>\r\n                                                        <div className=\"col-sm-9 text-secondary\">\r\n                                                            <textarea \r\n                                                                type=\"text\"\r\n                                                                className=\"form-control\"\r\n                                                                name=\"address\"\r\n                                                                value={address}\r\n                                                                onChange={onChange}\r\n                                                                style={{height: '150px'}}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <hr/>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-sm-3\">\r\n                                                            <h6 className=\"mb-0\">Password</h6>\r\n                                                        </div>\r\n                                                        <div className=\"col-sm-9 text-secondary\">\r\n                                                            <input \r\n                                                                type=\"password\" \r\n                                                                className=\"form-control\" \r\n                                                                name=\"password\"\r\n                                                                value={password}\r\n                                                                onChange={onChange}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <hr/>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-sm-3\">\r\n                                                            <h6 className=\"mb-0\">Confirm Password</h6>\r\n                                                        </div>\r\n                                                        <div className=\"col-sm-9 text-secondary\">\r\n                                                            <input \r\n                                                                type=\"password\" \r\n                                                                className=\"form-control\" \r\n                                                                name=\"confirmPassword\"\r\n                                                                value={confirmPassword}\r\n                                                                onChange={onChange}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"row\">\r\n                                                        <br/>\r\n                                                        <br/>\r\n                                                        <button\r\n                                                            className=\"btn btn-primary btn-block\"\r\n                                                            type=\"submit\"\r\n                                                            disabled={ loading ? true : false}\r\n                                                        >Register</button>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>    \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\constants\\inquiryConstants.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\constants\\websiteConstants.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\constants\\dashboardConstants.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\constants\\productConstants.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\constants\\userConstants.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\layout\\MetaData.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\layout\\Loader.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\actions\\websiteActions.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\actions\\productActions.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\actions\\inquiryActions.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\MissionVision.js",["322","323"],"import React, { Fragment } from 'react'\r\nimport { Markup } from 'interweave'\r\n\r\nconst MissionVision = ({ about }) => {\r\n    return (\r\n        <div>\r\n            {(about._id == '602905ed5135781774314621' || about._id == '602905e55135781774314620') ? (\r\n            <Fragment>\r\n                <h1>{about.title}</h1>\r\n                <hr />\r\n                <p className=\"text-justify\">\r\n                    <Markup content={about.description} />\r\n                </p>\r\n            </Fragment>) :\r\n            (<Fragment></Fragment>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MissionVision\r\n",["324","325"],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\product\\ProductDisplay.js",[],{"ruleId":"326","replacedBy":"327"},{"ruleId":"328","replacedBy":"329"},{"ruleId":"330","severity":1,"message":"331","line":58,"column":20,"nodeType":"332","messageId":"333","endLine":58,"endColumn":35},{"ruleId":"330","severity":1,"message":"334","line":58,"column":37,"nodeType":"332","messageId":"333","endLine":58,"endColumn":41},{"ruleId":"335","severity":1,"message":"336","line":58,"column":140,"nodeType":"337","messageId":"338","endLine":58,"endColumn":141},{"ruleId":"335","severity":1,"message":"336","line":58,"column":161,"nodeType":"337","messageId":"338","endLine":58,"endColumn":162},{"ruleId":"335","severity":1,"message":"336","line":76,"column":84,"nodeType":"337","messageId":"338","endLine":76,"endColumn":85},{"ruleId":"335","severity":1,"message":"336","line":76,"column":106,"nodeType":"337","messageId":"338","endLine":76,"endColumn":107},{"ruleId":"335","severity":1,"message":"336","line":79,"column":84,"nodeType":"337","messageId":"338","endLine":79,"endColumn":85},{"ruleId":"335","severity":1,"message":"336","line":79,"column":107,"nodeType":"337","messageId":"338","endLine":79,"endColumn":108},{"ruleId":"335","severity":1,"message":"336","line":85,"column":121,"nodeType":"337","messageId":"338","endLine":85,"endColumn":122},{"ruleId":"335","severity":1,"message":"336","line":85,"column":145,"nodeType":"337","messageId":"338","endLine":85,"endColumn":146},{"ruleId":"339","severity":1,"message":"340","line":70,"column":61,"nodeType":"341","endLine":70,"endColumn":64},{"ruleId":"330","severity":1,"message":"342","line":25,"column":9,"nodeType":"332","messageId":"333","endLine":25,"endColumn":19},{"ruleId":"330","severity":1,"message":"343","line":26,"column":9,"nodeType":"332","messageId":"333","endLine":26,"endColumn":18},{"ruleId":"339","severity":1,"message":"340","line":74,"column":37,"nodeType":"341","endLine":74,"endColumn":147},{"ruleId":"339","severity":1,"message":"340","line":121,"column":29,"nodeType":"341","endLine":121,"endColumn":160},{"ruleId":"339","severity":1,"message":"340","line":106,"column":25,"nodeType":"341","endLine":106,"endColumn":135},{"ruleId":"344","severity":1,"message":"345","line":106,"column":8,"nodeType":"346","endLine":106,"endColumn":65,"suggestions":"347"},{"ruleId":"339","severity":1,"message":"340","line":212,"column":33,"nodeType":"341","endLine":212,"endColumn":164},{"ruleId":"348","severity":1,"message":"349","line":253,"column":45,"nodeType":"341","endLine":257,"endColumn":47},{"ruleId":"339","severity":1,"message":"340","line":116,"column":37,"nodeType":"341","endLine":116,"endColumn":147},{"ruleId":"339","severity":1,"message":"340","line":158,"column":25,"nodeType":"341","endLine":158,"endColumn":135},{"ruleId":"330","severity":1,"message":"350","line":9,"column":24,"nodeType":"332","messageId":"333","endLine":9,"endColumn":40},{"ruleId":"344","severity":1,"message":"351","line":64,"column":8,"nodeType":"346","endLine":64,"endColumn":65,"suggestions":"352"},{"ruleId":"339","severity":1,"message":"340","line":126,"column":29,"nodeType":"341","endLine":126,"endColumn":160},{"ruleId":"339","severity":1,"message":"340","line":162,"column":25,"nodeType":"341","endLine":162,"endColumn":135},{"ruleId":"339","severity":1,"message":"340","line":158,"column":25,"nodeType":"341","endLine":158,"endColumn":135},{"ruleId":"339","severity":1,"message":"340","line":132,"column":25,"nodeType":"341","endLine":132,"endColumn":135},{"ruleId":"339","severity":1,"message":"340","line":148,"column":25,"nodeType":"341","endLine":148,"endColumn":135},{"ruleId":"339","severity":1,"message":"340","line":161,"column":25,"nodeType":"341","endLine":161,"endColumn":135},{"ruleId":"344","severity":1,"message":"353","line":75,"column":8,"nodeType":"346","endLine":75,"endColumn":76,"suggestions":"354"},{"ruleId":"355","severity":1,"message":"356","line":165,"column":36,"nodeType":"337","messageId":"357","endLine":165,"endColumn":38},{"ruleId":"339","severity":1,"message":"340","line":206,"column":25,"nodeType":"341","endLine":206,"endColumn":135},{"ruleId":"339","severity":1,"message":"340","line":164,"column":29,"nodeType":"341","endLine":164,"endColumn":160},{"ruleId":"339","severity":1,"message":"340","line":144,"column":25,"nodeType":"341","endLine":144,"endColumn":156},{"ruleId":"339","severity":1,"message":"340","line":135,"column":25,"nodeType":"341","endLine":135,"endColumn":107},{"ruleId":"339","severity":1,"message":"340","line":109,"column":21,"nodeType":"341","endLine":109,"endColumn":131},{"ruleId":"339","severity":1,"message":"340","line":117,"column":29,"nodeType":"341","endLine":117,"endColumn":160},{"ruleId":"339","severity":1,"message":"340","line":171,"column":25,"nodeType":"341","endLine":171,"endColumn":135},{"ruleId":"330","severity":1,"message":"358","line":7,"column":10,"nodeType":"332","messageId":"333","endLine":7,"endColumn":32},{"ruleId":"330","severity":1,"message":"359","line":13,"column":11,"nodeType":"332","messageId":"333","endLine":13,"endColumn":19},{"ruleId":"330","severity":1,"message":"360","line":34,"column":5,"nodeType":"332","messageId":"333","endLine":34,"endColumn":22},{"ruleId":"330","severity":1,"message":"361","line":37,"column":5,"nodeType":"332","messageId":"333","endLine":37,"endColumn":22},{"ruleId":"362","severity":1,"message":"363","line":40,"column":21,"nodeType":"341","endLine":40,"endColumn":158},{"ruleId":"364","severity":1,"message":"365","line":58,"column":37,"nodeType":"366","endLine":58,"endColumn":62},{"ruleId":"362","severity":1,"message":"363","line":61,"column":37,"nodeType":"341","endLine":66,"endColumn":39},{"ruleId":"364","severity":1,"message":"367","line":70,"column":68,"nodeType":"366","endLine":70,"endColumn":109},{"ruleId":"355","severity":1,"message":"356","line":87,"column":31,"nodeType":"337","messageId":"357","endLine":87,"endColumn":33},{"ruleId":"339","severity":1,"message":"340","line":153,"column":25,"nodeType":"341","endLine":153,"endColumn":135},{"ruleId":"355","severity":1,"message":"356","line":7,"column":25,"nodeType":"337","messageId":"357","endLine":7,"endColumn":27},{"ruleId":"355","severity":1,"message":"356","line":7,"column":68,"nodeType":"337","messageId":"357","endLine":7,"endColumn":70},{"ruleId":"326","replacedBy":"368"},{"ruleId":"328","replacedBy":"369"},"no-native-reassign",["370"],"no-negated-in-lhs",["371"],"no-unused-vars","'isAuthenticated' is assigned a value but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'errorCount' is assigned a value but never used.","'loopCount' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'homePage', 'var_productImageLeft', 'var_productImageRight', 'var_servicesBackground', and 'var_titleBackground'. Either include them or remove the dependency array.","ArrayExpression",["372"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'getFooterDetails' is defined but never used.","React Hook useEffect has a missing dependency: 'footerInfo'. Either include it or remove the dependency array.",["373"],"React Hook useEffect has a missing dependency: 'deleteAll'. Either include it or remove the dependency array.",["374"],"eqeqeq","Expected '===' and instead saw '=='.","unexpected","'INSIDE_DASHBOARD_FALSE' is defined but never used.","'dispatch' is assigned a value but never used.","'UPDATE_USER_RESET' is defined but never used.","'DELETE_USER_RESET' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/aria-props","aria-aria-haspopup: This attribute is an invalid ARIA attribute.","JSXAttribute","aria-aria-labelledby: This attribute is an invalid ARIA attribute.",["370"],["371"],"no-global-assign","no-unsafe-negation",{"desc":"375","fix":"376"},{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},"Update the dependencies array to be: [dispatch, alert, error, history, updateError, isUpdated, homePage, var_titleBackground, var_servicesBackground, var_productImageLeft, var_productImageRight]",{"range":"381","text":"382"},"Update the dependencies array to be: [dispatch, alert, error, history, updateError, isUpdated, footerInfo]",{"range":"383","text":"384"},"Update the dependencies array to be: [dispatch, alert, error, history, isDeleted, isUpdated, deleteError, deleteAll]",{"range":"385","text":"386"},[3602,3659],"[dispatch, alert, error, history, updateError, isUpdated, homePage, var_titleBackground, var_servicesBackground, var_productImageLeft, var_productImageRight]",[2312,2369],"[dispatch, alert, error, history, updateError, isUpdated, footerInfo]",[2248,2316],"[dispatch, alert, error, history, isDeleted, isUpdated, deleteError, deleteAll]"]