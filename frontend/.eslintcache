[{"/Users/abby/Desktop/agile-technodynamics/frontend/src/index.js":"1","/Users/abby/Desktop/agile-technodynamics/frontend/src/store.js":"2","/Users/abby/Desktop/agile-technodynamics/frontend/src/App.js":"3","/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/productReducers.js":"4","/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/userReducers.js":"5","/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/inquiryReducers.js":"6","/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/websiteReducers.js":"7","/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/dashboardReducers.js":"8","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Products.js":"9","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductsOthers.js":"10","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductsDC.js":"11","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductsEEE.js":"12","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductsME.js":"13","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductsTE.js":"14","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/About.js":"15","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Services.js":"16","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Contact.js":"17","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ConfirmationPage.js":"18","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/EmailSent.js":"19","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/Footer.js":"20","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/Loader.js":"21","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateHome.js":"22","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateAbout.js":"23","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateFooter.js":"24","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/Profile.js":"25","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateProfile.js":"26","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdatePassword.js":"27","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListAppointments.js":"28","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListInquiries.js":"29","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListOthers.js":"30","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListArchives.js":"31","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListTrash.js":"32","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListAbout.js":"33","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListHome.js":"34","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListFooter.js":"35","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListServices.js":"36","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateInquiry.js":"37","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateProduct.js":"38","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListSuperAdmins.js":"39","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateServices.js":"40","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListAdmins.js":"41","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/product/ProductDetails.js":"42","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateUser.js":"43","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/user/Register.js":"44","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/user/PasswordSuccess.js":"45","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/user/ForgotPassword.js":"46","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/user/NewPassword.js":"47","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/route/ProtectedRoute.js":"48","/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/userActions.js":"49","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/NewProduct.js":"50","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Home.js":"51","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/Dashboard.js":"52","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/Header.js":"53","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/user/Login.js":"54","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/MetaData.js":"55","/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/productActions.js":"56","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/product/ProductDisplay.js":"57","/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/productConstants.js":"58","/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/userConstants.js":"59","/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/inquiryConstants.js":"60","/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/websiteConstants.js":"61","/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/dashboardConstants.js":"62","/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/websiteActions.js":"63","/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/inquiryActions.js":"64","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateUserSuccess.js":"65","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListProducts.js":"66"},{"size":586,"mtime":1615182325413,"results":"67","hashOfConfig":"68"},{"size":2112,"mtime":1615623379439,"results":"69","hashOfConfig":"68"},{"size":7283,"mtime":1615620540691,"results":"70","hashOfConfig":"68"},{"size":4766,"mtime":1615623270341,"results":"71","hashOfConfig":"68"},{"size":8602,"mtime":1615815516146,"results":"72","hashOfConfig":"68"},{"size":4248,"mtime":1615623291699,"results":"73","hashOfConfig":"68"},{"size":9758,"mtime":1615623199948,"results":"74","hashOfConfig":"68"},{"size":497,"mtime":1615623306470,"results":"75","hashOfConfig":"68"},{"size":3936,"mtime":1615818825117,"results":"76","hashOfConfig":"68"},{"size":3382,"mtime":1615819005552,"results":"77","hashOfConfig":"68"},{"size":4097,"mtime":1615818960368,"results":"78","hashOfConfig":"68"},{"size":4048,"mtime":1615818932005,"results":"79","hashOfConfig":"68"},{"size":4118,"mtime":1615818896099,"results":"80","hashOfConfig":"68"},{"size":4321,"mtime":1615818990844,"results":"81","hashOfConfig":"68"},{"size":4008,"mtime":1615622801768,"results":"82","hashOfConfig":"68"},{"size":6229,"mtime":1615819325519,"results":"83","hashOfConfig":"68"},{"size":9512,"mtime":1615622751385,"results":"84","hashOfConfig":"68"},{"size":1292,"mtime":1615622765970,"results":"85","hashOfConfig":"68"},{"size":1306,"mtime":1615622710810,"results":"86","hashOfConfig":"68"},{"size":3855,"mtime":1615816444162,"results":"87","hashOfConfig":"68"},{"size":411,"mtime":1615359817965,"results":"88","hashOfConfig":"68"},{"size":14014,"mtime":1615621294027,"results":"89","hashOfConfig":"68"},{"size":10535,"mtime":1615621292850,"results":"90","hashOfConfig":"68"},{"size":14388,"mtime":1615819832609,"results":"91","hashOfConfig":"68"},{"size":10406,"mtime":1615621306509,"results":"92","hashOfConfig":"68"},{"size":17616,"mtime":1615817792392,"results":"93","hashOfConfig":"68"},{"size":11881,"mtime":1615621337341,"results":"94","hashOfConfig":"68"},{"size":8861,"mtime":1615815963225,"results":"95","hashOfConfig":"68"},{"size":8878,"mtime":1615815829765,"results":"96","hashOfConfig":"68"},{"size":8799,"mtime":1615815925001,"results":"97","hashOfConfig":"68"},{"size":9237,"mtime":1615815822309,"results":"98","hashOfConfig":"68"},{"size":12295,"mtime":1615819693464,"results":"99","hashOfConfig":"68"},{"size":6497,"mtime":1615817848084,"results":"100","hashOfConfig":"68"},{"size":7073,"mtime":1615815934070,"results":"101","hashOfConfig":"68"},{"size":6883,"mtime":1615816503066,"results":"102","hashOfConfig":"68"},{"size":7153,"mtime":1615815912891,"results":"103","hashOfConfig":"68"},{"size":18798,"mtime":1615621308097,"results":"104","hashOfConfig":"68"},{"size":18017,"mtime":1615819891525,"results":"105","hashOfConfig":"68"},{"size":7327,"mtime":1615816238456,"results":"106","hashOfConfig":"68"},{"size":15489,"mtime":1615817617524,"results":"107","hashOfConfig":"68"},{"size":8727,"mtime":1615816245997,"results":"108","hashOfConfig":"68"},{"size":3205,"mtime":1615820090361,"results":"109","hashOfConfig":"68"},{"size":10382,"mtime":1615621298781,"results":"110","hashOfConfig":"68"},{"size":26326,"mtime":1615820135433,"results":"111","hashOfConfig":"68"},{"size":1353,"mtime":1615621744506,"results":"112","hashOfConfig":"68"},{"size":2683,"mtime":1615621996180,"results":"113","hashOfConfig":"68"},{"size":6410,"mtime":1615621992443,"results":"114","hashOfConfig":"68"},{"size":1765,"mtime":1615622014277,"results":"115","hashOfConfig":"68"},{"size":7723,"mtime":1615818499832,"results":"116","hashOfConfig":"68"},{"size":19228,"mtime":1615819740928,"results":"117","hashOfConfig":"68"},{"size":4958,"mtime":1615818527772,"results":"118","hashOfConfig":"68"},{"size":12689,"mtime":1615819356686,"results":"119","hashOfConfig":"68"},{"size":6978,"mtime":1615820056708,"results":"120","hashOfConfig":"68"},{"size":5878,"mtime":1615621931658,"results":"121","hashOfConfig":"68"},{"size":270,"mtime":1615182325200,"results":"122","hashOfConfig":"68"},{"size":4343,"mtime":1615623132422,"results":"123","hashOfConfig":"68"},{"size":747,"mtime":1615820100918,"results":"124","hashOfConfig":"68"},{"size":1292,"mtime":1615182325212,"results":"125","hashOfConfig":"68"},{"size":2376,"mtime":1615559253219,"results":"126","hashOfConfig":"68"},{"size":1077,"mtime":1615182325212,"results":"127","hashOfConfig":"68"},{"size":2226,"mtime":1615182325214,"results":"128","hashOfConfig":"68"},{"size":123,"mtime":1615182325211,"results":"129","hashOfConfig":"68"},{"size":7270,"mtime":1615623015297,"results":"130","hashOfConfig":"68"},{"size":3362,"mtime":1615623152866,"results":"131","hashOfConfig":"68"},{"size":1175,"mtime":1615621348426,"results":"132","hashOfConfig":"68"},{"size":9347,"mtime":1615815802809,"results":"133","hashOfConfig":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},"15m85vh",{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"136"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"136"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"136"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"136"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"136"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"136"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"136"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"136"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/abby/Desktop/agile-technodynamics/frontend/src/index.js",[],["275","276"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/store.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/App.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/productReducers.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/userReducers.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/inquiryReducers.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/websiteReducers.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/dashboardReducers.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Products.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductsOthers.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductsDC.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductsEEE.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductsME.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductsTE.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/About.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Services.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Contact.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ConfirmationPage.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/EmailSent.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/Footer.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/Loader.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateHome.js",["277","278","279"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { OverlayTrigger, Tooltip, Modal, Button } from 'react-bootstrap'\nimport { updateHome, getHomeDetails, clearErrors } from '../../actions/websiteActions'\nimport { logout } from '../../actions/userActions'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { UPDATE_HOME_RESET, UPDATE_HOME_REQUEST } from '../../constants/websiteConstants'\nimport imageCompression from 'browser-image-compression'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst UpdateHome = ({match, history}) => {\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { loading: homeLoading, error, home } = useSelector(state => state.homeDetails)\n    const { error: updateError, isUpdated, loading } = useSelector(state => state.website)\n    const { user } = useSelector(state => state.auth)\n    \n    const [name, setName] = useState('')\n    const [description, setDescription] = useState('')\n    const [image, setImage] = useState('')\n    const [imagePreview, setImagePreview] = useState('images/default_avatar.png')\n    const [isToggled, setToggled] = useState('false')\n    const [show, setShow] = useState(false)\n\n    const homeId = match.params.id\n\n    const handleToggle = () => setToggled(!isToggled)\n    const handleClose = () => setShow(false)\n    const handleShow = () => setShow(true)\n\n    const logoutHandler = () => {\n        dispatch(logout());\n        alert.success('Logged out successfully')\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('description', description);\n        formData.set('image', image);\n\n        dispatch(updateHome(home._id, formData));\n    }\n\n    const onChange = file => {\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            if(reader.readyState === 2){\n                setImagePreview(reader.result)\n                setImage(reader.result)\n            }\n        }\n\n        reader.readAsDataURL(file)\n        dispatch({\n            type: UPDATE_HOME_RESET\n        })\n    }\n\n    const handleImageUpload = e => {\n\n        var imageFile = e.target.files[0];\n        console.log('originalFile instanceof Blob', imageFile instanceof Blob); // true\n        console.log(`originalFile size ${imageFile.size / 1024 / 1024} MB`);\n      \n        var options = {\n          maxSizeMB: 0.6,\n          maxWidthOrHeight: 1920,\n          useWebWorker: true\n        }\n        \n        imageCompression(imageFile, options)\n          .then(function (compressedFile) {\n      \n                onChange(compressedFile); // write your own logic\n            })\n            .catch(function (error) {\n                console.log(error.message);\n            });\t\n\n            dispatch({\n                type: UPDATE_HOME_REQUEST\n            })\n    }\n\n    const discardChanges = () => {\n        handleClose()\n        history.push('/admin/home')\n    }\n\n    useEffect(() => {\n        if(home && home._id !== homeId) {\n            dispatch(getHomeDetails(homeId))\n        }\n        else {\n            setName(home.name);\n            setDescription(home.description);\n            setImagePreview(home.image.url);\n        }\n\n        if(error){\n            history.push('/admin/home')\n            alert.error(error);\n            dispatch(clearErrors());\n            dispatch({\n                type: UPDATE_HOME_RESET\n            })\n        }\n        \n        if(updateError){\n            history.push('/admin/home')\n            alert.error(updateError);\n            dispatch(clearErrors());\n            dispatch({\n                type: UPDATE_HOME_RESET\n            })\n        }\n\n        if(isUpdated){\n            alert.success('Home updated successfully');\n\n            history.push('/admin/home')\n\n            dispatch({\n                type: UPDATE_HOME_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n\n    }, [dispatch, alert, error, history, home, homeId, isUpdated, updateError])\n    \n    return (\n        <Fragment>\n            <MetaData title={'Update Home'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}>\n            <div id=\"sidebar-wrapper\">\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )\n                        }\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} >\n                            <i className=\"fa fa-bars\"   ></i>\n                        </a>\n                        <Modal show={show} onHide={handleClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Discard Changes?</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>Are you sure you want to discard your changes?</Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={handleClose}>\n                                    Close\n                                </Button>\n                                <Button variant=\"primary\" onClick={discardChanges}>\n                                    Yes, I'm sure\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                        {homeLoading ? <Loader/> : (\n                            <Fragment>\n                                <div className=\"login-clean\">\n                                    <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data' >\n                                        <h2 className=\"sr-only\">Update Home</h2>\n                                        <div className=\"div-forgot-password\">\n                                            <h3 className=\"forgot-password-heading\">Update Home </h3>\n                                        </div>\n\n                                        <div className=\"form-group\">\n                                            <h6>Name</h6>\n                                            <input \n                                                type=\"text\" \n                                                className=\"form-control\" \n                                                id=\"name\" \n                                                name=\"name\" \n                                                value={name}\n                                                disabled={true}\n                                                style={{backgroundColor: '#dde5f1', color: '#333'}}\n                                                onChange={(e) => setName(e.target.value)}\n                                            />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <h6>Description</h6>\n                                            <textarea \n                                                type=\"text\" \n                                                className=\"form-control\" \n                                                id=\"description\" \n                                                name=\"description\" \n                                                placeholder=\"Description\"\n                                                value={description}\n                                                disabled={String(home.name).includes('Description') ? false : true}\n                                                style={String(home.name).includes('Description') ? {width: '100%', height: '150px'} : {backgroundColor: '#6f7a85', color: '#333', width: '100%', height: '150px'}}\n                                                onChange={(e) => setDescription(e.target.value)}\n                                            />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <h6>Image</h6>\n                                            <figure>\n                                                <img \n                                                    src={imagePreview} \n                                                    className='mt-3 mr-2' \n                                                    width='110' \n                                                    height='104'\n                                                />\n                                            </figure>\n                                            {String(home.name).includes('Description') ? (\n                                                <OverlayTrigger overlay={<Tooltip id=\"tooltip-disabled\">Image upload disabled</Tooltip>}>\n                                                    <span className=\"d-inline-block\">\n                                                        <input \n                                                            type=\"file\" \n                                                            id=\"image\" \n                                                            name=\"image\" \n                                                            accept=\"images/*\"\n                                                            disabled={true} \n                                                            style={{ pointerEvents: 'none' }}\n                                                        />\n                                                    </span>\n                                                </OverlayTrigger>\n                                            ) : (\n                                                <input \n                                                    type=\"file\" \n                                                    id=\"image\" \n                                                    name=\"image\" \n                                                    accept=\"images/*\"\n                                                    onChange={handleImageUpload}\n                                                />\n                                            )}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <button \n                                                className=\"btn btn-primary btn-block\" \n                                                type=\"submit\"\n                                                disabled={loading ? true : false}\n                                            >\n                                                Update Home\n                                            </button>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <a\n                                                className=\"btn btn-secondary btn-block mt-2\"\n                                                onClick={handleShow}\n                                                style={{color: 'white'}}\n                                            >Discard</a>\n                                        </div>\n                                    </form>\n                                </div>\n                            </Fragment>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default UpdateHome\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateAbout.js",["280","281"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Modal, Button } from 'react-bootstrap'\nimport { updateAbout, getSingleAbout, clearErrors } from '../../actions/websiteActions'\nimport { logout } from './../../actions/userActions'\nimport { UPDATE_ABOUT_RESET } from '../../constants/websiteConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst UpdateAbout = ({match, history}) => {\n    const dispatch = useDispatch()\n    const alert = useAlert()\n\n    const { loading: detailsLoading, error, about } = useSelector(state => state.aboutDetails)\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.website)\n    const { user } = useSelector(state => state.auth)\n\n    const [title, setTitle] = useState('')\n    const [description, setDescription] = useState('')\n    const [isToggled, setToggled] = useState('false')\n    const [show, setShow] = useState(false);\n\n    const aboutId = match.params.id\n    \n    const handleClose = () => setShow(false)\n    const handleShow = () => setShow(true)\n    const handleToggle = () => setToggled(!isToggled)\n\n    const logoutHandler = () => {\n        dispatch(logout());\n        alert.success('Logged out successfully')\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        const formData = new FormData()\n        formData.set('title', title)\n        formData.set('description', description)\n\n        dispatch(updateAbout(about._id, formData))\n    }\n\n    const discardChanges = () => {\n        handleClose()\n        history.push('/admin/about')\n    }\n\n    useEffect(() => {\n        if(about && about._id !== aboutId) {\n            dispatch(getSingleAbout(aboutId))\n        }\n        else { \n            setTitle(about.title)\n            setDescription(about.description)\n        }\n\n        if(error){\n            history.push('/admin/about');\n            alert.error(error);\n            dispatch(clearErrors());\n            dispatch({\n                type: UPDATE_ABOUT_RESET\n            })\n        }\n\n        if(updateError){\n            history.push('/admin/about');\n            alert.error(updateError);\n            dispatch(clearErrors());\n            dispatch({\n                type: UPDATE_ABOUT_RESET\n            })\n        }\n\n        if(isUpdated) {\n            history.push('/admin/about');\n            alert.success('Information updated successfully.')\n\n            dispatch({\n                type: UPDATE_ABOUT_RESET\n            })\n        }\n        \n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, error, alert, isUpdated, updateError, about, aboutId, history])\n    \n    return (\n        <Fragment>\n            <MetaData title={'Update About'}/>\n                <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\n                    <div id=\"sidebar-wrapper\" >\n                        <ul className=\"sidebar-nav\">\n                            <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                            <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                            <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                            <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                            {user && user.role !== 'admin' ? (\n                                    <Fragment>\n                                        <hr/>\n                                            <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                            <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                            <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                    </Fragment>\n                                ) : (\n                                    <Fragment>\n                                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                        <hr/>\n                                        <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                        <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                        <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                        <hr/>\n                                        <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                        <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                    </Fragment>\n                                )\n                            }\n                            <hr/>\n                            <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"page-content-wrapper\">\n                        <div className=\"container-fluid\">\n                            <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} >\n                                <i className=\"fa fa-bars\" ></i>\n                            </a>\n                            <Modal show={show} onHide={handleClose}>\n                                <Modal.Header closeButton>\n                                    <Modal.Title>Discard Changes?</Modal.Title>\n                                </Modal.Header>\n                                <Modal.Body>Are you sure you want to discard your changes?</Modal.Body>\n                                <Modal.Footer>\n                                    <Button variant=\"secondary\" onClick={handleClose}>\n                                        Close\n                                    </Button>\n                                    <Button variant=\"primary\" onClick={discardChanges}>\n                                        Yes, I'm sure\n                                    </Button>\n                                </Modal.Footer>\n                            </Modal>\n                            {detailsLoading ? <Loader/> : (\n                                <Fragment>\n                                    <div className=\"login-clean\">\n                                        <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data'   >\n                                            <h2 className=\"sr-only\">Update About: \"{about.title}\"</h2>\n                                            <div className=\"div-forgot-password\">\n                                                <h3 className=\"forgot-password-heading\">Update About \"{about.title}\"</h3>\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <h6>Name</h6>\n                                                <textarea \n                                                    type=\"text\" \n                                                    className=\"form-control\" \n                                                    name=\"title\"\n                                                    value={title}\n                                                    placeholder=\"Title\"\n                                                    style={{width: '100%'}}\n                                                    onChange={(e) => setTitle(e.target.value)}\n                                                />\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <h6>Description</h6>\n                                                <textarea\n                                                    type=\"text\" \n                                                    className=\"form-control\" \n                                                    name=\"description\"\n                                                    value={description}\n                                                    placeholder=\"Description\"\n                                                    style={{width: '100%', height: '250px'}}\n                                                    onChange={(e) => setDescription(e.target.value)}\n                                                    height='55px'\n                                                />\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <button \n                                                    className=\"btn btn-primary btn-block\" \n                                                    type=\"submit\"\n                                                    disabled={loading ? true : false}\n                                                >\n                                                    Update Information\n                                                </button>\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <a\n                                                    className=\"btn btn-secondary btn-block mt-2\"\n                                                    onClick={handleShow}\n                                                    style={{color: 'white'}}\n                                                >Discard</a>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </Fragment>\n                            )}\n                        </div>\n                    </div>\n                </div>\n        </Fragment>\n    )\n}\n\nexport default UpdateAbout\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateFooter.js",["282","283"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/Profile.js",["284"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useAlert } from 'react-alert'\nimport { logout } from './../../actions/userActions'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport MetaData from './../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/profile.css'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst Profile = () => {\n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const { user, loading } = useSelector(state => state.auth)\n    \n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => setToggled(!isToggled)\n    \n    const logoutHandler = () => {\n        dispatch(logout());\n        alert.success('Logged out successfully')\n    }\n\n    useEffect(() => {\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch])\n\n    return (\n        <Fragment>\n            {loading ? <Loader /> : (\n                <Fragment>\n                    <MetaData title={'My Profile'} />\n                    <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\n                        <div id=\"sidebar-wrapper\" >\n                            <ul className=\"sidebar-nav\">\n                                <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                                <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                                <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                                <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                                {user && user.role !== 'admin' ? (\n                                        <Fragment>\n                                            <hr/>\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                        </Fragment>\n                                    ) : (\n                                        <Fragment>\n                                            <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                            <hr/>\n                                            <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                            <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                            <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                            <hr/>\n                                            <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                            <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                        </Fragment>\n                                    )\n                                }\n                                <hr/>\n                                <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                            </ul>\n                        </div>\n                            <div className=\"page-content-wrapper\">\n                                <div className=\"container-fluid\">\n                                    <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\n                                        <i className=\"fa fa-bars\"   ></i>\n                                    </a>\n                                    <div className=\"container\">\n                                        <div className=\"main-body\">\n                                            <h1 style={{textAlign: 'center', padding:'0 0 15px 0'}}>My Profile</h1>\n                                            {loading ? <Loader/> : (\n                                                <Fragment>\n                                                    <div className=\"row gutters-sm\">\n                                                        <div className=\"col-md-4 mb-3\">\n                                                            <div className=\"card\">\n                                                                <div className=\"card-body\">\n                                                                    <div className=\"d-flex flex-column align-items-center text-center\">\n                                                                        <img src={user.avatar.url} alt=\"Avatar\" className=\"rounded-circle\" width=\"150px\" height=\"150px\"/>\n                                                                        <div className=\"mt-3\">\n                                                                            <h4>{user.name}</h4>\n                                                                            <p className=\"text-secondary mb-1\" style={{textTransform: 'uppercase'}}>{user.role}</p>\n                                                                            <Link className=\"btn btn-dark btn-sm ml-3 mt-3\" type=\"button\" to=\"/admin/edit-profile\">Edit Profile</Link>\n                                                                            <Link className=\"btn btn-dark btn-sm ml-3 mt-3\" type=\"button\" to=\"/password/update\">Change Password</Link>\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <div className=\"col-md-8\">\n                                                            <div className=\"card mb-3\">\n                                                                <div className=\"card-body\">\n                                                                    <div className=\"row\">\n                                                                        <div className=\"col-sm-3\">\n                                                                            <h6 className=\"mb-0\">Full Name</h6>\n                                                                        </div>\n                                                                        <div className=\"col-sm-9 text-secondary\">\n                                                                            {user.name}\n                                                                        </div>\n                                                                    </div>\n                                                                    <hr/>\n                                                                    <div className=\"row\">\n                                                                        <div className=\"col-sm-3\">\n                                                                            <h6 className=\"mb-0\">Email</h6>\n                                                                        </div>\n                                                                        <div className=\"col-sm-9 text-secondary\">\n                                                                            {user.email}\n                                                                        </div>\n                                                                    </div>\n                                                                    <hr/>\n                                                                    <div className=\"row\">\n                                                                        <div className=\"col-sm-3\">\n                                                                            <h6 className=\"mb-0\">Phone</h6>\n                                                                        </div>\n                                                                        <div className=\"col-sm-9 text-secondary\">\n                                                                            {user.contactNumber}\n                                                                        </div>\n                                                                    </div>\n                                                                    <hr/>\n                                                                    <div className=\"row\">\n                                                                        <div className=\"col-sm-3\">\n                                                                            <h6 className=\"mb-0\">Address</h6>\n                                                                        </div>\n                                                                        <div className=\"col-sm-9 text-secondary\">\n                                                                            {user.address}\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </Fragment>\n                                            )}\n                                        </div>\n                                    </div>    \n                                </div>\n                            </div>\n                        </div>\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nexport default Profile\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateProfile.js",["285"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdatePassword.js",["286","287","288","289"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from  'react-redux'\nimport { Popover, OverlayTrigger, Modal, Button } from 'react-bootstrap'\nimport { updatePassword, clearErrors, logout } from './../../actions/userActions'\nimport { UPDATE_PASSWORD_RESET } from '../../constants/userConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport MetaData from '../layout/MetaData'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst popover = (\n    <Popover id=\"popover-basic\">\n      <Popover.Title as=\"h3\">Password Requirements</Popover.Title>\n      <Popover.Content>\n          &bull; Minimum of <strong>6 characters</strong>. <br/>\n          &bull; Must have at least 1 <strong>Uppercase and Lowercase</strong> letter.<br/>\n          &bull; Must have at least 2 <strong>numeric digits</strong>.<br/>\n          &bull; Must have <strong>no spaces</strong>.\n      </Popover.Content>\n    </Popover>\n)\n\nconst UpdatePassword = ({history}) => {\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { error, isUpdated, loading } = useSelector(state => state.user)\n    const { user } = useSelector(state => state.auth)\n\n    const [oldPassword, setOldPassword] = useState('')\n    const [newPassword, setNewPassword] = useState('')\n    const [isToggled, setToggled] = useState('false')\n    const [showOld, setOld] = useState('false')\n    const [showNew, setNew] = useState('false')\n    const [show, setShow] = useState(false)\n\n    const showOldToggle = () => setOld(!showOld)\n    const showNewToggle = () => setNew(!showNew)\n    const handleToggle = () => setToggled(!isToggled)\n    const handleClose = () => setShow(false)\n    const handleShow = () => setShow(true)\n    \n    const logoutHandler = () => {\n        dispatch(logout());\n        alert.success('Logged out successfully')\n    }\n    \n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('oldPassword', oldPassword);\n        formData.set('newPassword', newPassword);\n\n        dispatch(updatePassword(formData));\n    }\n    \n    const discardChanges = () => {\n        handleClose()\n        history.push('/admin/me')\n    }\n\n    useEffect(() => {\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors());\n            dispatch({\n                type: UPDATE_PASSWORD_RESET\n            })\n        }\n\n        if(isUpdated){\n            history.push('/admin/me');\n            alert.success('Password updated successfully.')\n\n            dispatch({\n                type: UPDATE_PASSWORD_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n\n    }, [dispatch, alert, error, history, isUpdated])\n    \n    return (\n        <Fragment>\n            <MetaData title={'Change Password'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}>\n                <div id=\"sidebar-wrapper\" >\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )\n                        }\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\n                            <i className=\"fa fa-bars\"></i>\n                        </a>\n                        <Modal show={show} onHide={handleClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Discard Changes?</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>Are you sure you want to discard your changes?</Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={handleClose}>\n                                    Close\n                                </Button>\n                                <Button variant=\"primary\" onClick={discardChanges}>\n                                    Yes, I'm sure\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                        <div className=\"login-clean\" style={{paddingTop: '65px'}}>\n                            <form method=\"post\" onSubmit={submitHandler}>\n                                <h2 className=\"sr-only\">Change Password</h2>\n                                <div className=\"div-forgot-password\">\n                                    <h3 className=\"forgot-password-heading\">Change Password \n                                    <span className='fa-xs' style={{margin: 'auto', paddingLeft: '15px'}}>\n                                        <OverlayTrigger trigger=\"hover\" placement=\"right\" overlay={popover}>\n                                            <i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i>\n                                        </OverlayTrigger>\n                                    </span>\n                                    </h3>\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Old Password</h6>\n                                    <div class=\"input-group mb-3\">\n                                        <input \n                                            type={showOld ? \"password\" : \"text\"} \n                                            className=\"form-control\" \n                                            name=\"oldPassword\"\n                                            value={oldPassword}\n                                            placeholder=\"Old Password\"\n                                            onChange={(e) => setOldPassword(e.target.value)}\n                                            aria-label=\"oldpassword\" aria-describedby=\"basic-addon1\"\n                                        />\n                                        <div class=\"input-group-prepend\">\n                                            <span class=\"input-group-text\" id=\"basic-addon1\">\n                                                <a\n                                                    onClick={showOldToggle}\n                                                    style={{cursor: 'pointer'}}\n                                                >\n                                                    <span className=\"fa-lg\">\n                                                        <i className={showOld ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\n                                                    </span>\n                                                </a>\n                                            </span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>New Password</h6>\n                                    <div class=\"input-group mb-3\">\n                                        <input\n                                            type={showNew ? \"password\" : \"text\"} \n                                            className=\"form-control\"\n                                            name=\"newPassword\"\n                                            value={newPassword}\n                                            placeholder=\"New Password\"\n                                            onChange={(e) => setNewPassword(e.target.value)}\n                                            aria-label=\"newpassword\" aria-describedby=\"basic-addon1\"\n                                        />\n                                        <div class=\"input-group-prepend\">\n                                            <span class=\"input-group-text\" id=\"basic-addon1\">\n                                                <a\n                                                    onClick={showNewToggle}\n                                                    style={{cursor: 'pointer'}}\n                                                >\n                                                    <span className=\"fa-lg\">\n                                                        <i className={showNew ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\n                                                    </span>\n                                                </a>\n                                            </span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"form-group\">\n                                    <button\n                                        className=\"btn btn-primary btn-block\"\n                                        type=\"submit\"\n                                        disabled={loading ? true : false}\n                                    >Update Password</button>\n                                </div>\n                                <div className=\"form-group\">\n                                    <a\n                                        className=\"btn btn-secondary btn-block mt-2\"\n                                        onClick={handleShow}\n                                        style={{color: 'white'}}\n                                    >Discard</a>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default UpdatePassword\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListAppointments.js",["290"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListInquiries.js",["291"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListOthers.js",["292"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListArchives.js",["293"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListTrash.js",["294"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListAbout.js",["295"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListHome.js",["296","297"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListFooter.js",["298"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListServices.js",["299"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateInquiry.js",["300"],"import React, { Fragment, useEffect, useState } from 'react'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport { Link } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Modal, Button } from 'react-bootstrap'\nimport { updateInquiry, deleteInquiry, getInquiryDetails, clearErrors } from '../../actions/inquiryActions'\nimport { logout } from './../../actions/userActions'\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst UpdateInquiry = ({match, history}) => {\n    const dispatch = useDispatch()\n    const alert = useAlert()\n\n    const { loading, error, inquiry } = useSelector(state => state.inquiryDetails)\n    const {error: updateError, isUpdated } = useSelector(state => state.inquiry)\n    const { user } = useSelector(state => state.auth)\n\n    const [isToggled, setToggled] = useState('false')\n    const [id, setId] = useState('')\n    const [inTrash, setInTrash] = useState('')\n    const [inArchives, setInArchives] = useState('')\n    const [concernType, setConcernType] = useState('')\n    const [show, setShow] = useState(false)\n    const [emptyShow, setEmptyShow] = useState(false)\n\n    const inquiryId = match.params.id\n\n    const handleToggle = () => setToggled(!isToggled)\n    const handleClose = () => setShow(false)\n    const handleShow = () => setShow(true)\n    const handleEmptyClose = () => setEmptyShow(false)\n    const handleEmptyShow = () => setEmptyShow(true)\n\n    const logoutHandler = () => {\n        dispatch(logout())\n        alert.success('Logged out successfully')\n    }\n\n    const updateInquiryHandler = (id, inquiryStatus, concernType, inTrash, inArchives) => { \n        const formData = new FormData();\n        formData.set('inquiryStatus', inquiryStatus);\n\n        if(inquiryStatus === 'Unresolved') {\n            dispatch(updateInquiry(id, formData));\n            alert.success('Message has been restored.')\n            history.push('/admin/archives')\n        } else if (inquiryStatus === 'Resolved'){\n            dispatch(updateInquiry(id, formData));\n\n            if(inTrash) {\n                alert.success('Message has been restored.')\n                history.push('/admin/trash')\n\n            } else if(inArchives) {\n                alert.success('Message has been restored.')\n                history.push('/admin/archives')\n\n            } else {\n                alert.success('Message has been moved to archives.')\n\n                if(concernType === 'Inquiry'){\n                    history.push('/admin/inquiries')\n                } else if(concernType === 'Appointment'){\n                    history.push('/admin/appointments')\n                } else {\n                    history.push('/admin/others')\n                }\n            }\n        } else {\n            dispatch(updateInquiry(id, formData));\n            alert.success('Message has been moved to Trash.')\n\n            if(concernType === 'Inquiry'){\n                history.push('/admin/inquiries')\n            } else if(concernType === 'Appointment'){\n                history.push('/admin/appointments')\n            } else {\n                history.push('/admin/others')\n            }\n            handleEmptyClose()\n        }\n    }\n\n    const deleteInquiryHandler = (id) => {\n        handleEmptyShow()\n        dispatch(deleteInquiry(id))\n    }\n    \n    useEffect(() => { \n        if(inquiry && inquiry._id !== inquiryId) {\n            dispatch(getInquiryDetails(inquiryId))\n        }\n\n        if(error){\n            history.push('/admin/dashboard')\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if(updateError){\n            history.push('/admin/dashboard')\n            alert.error(updateError);\n            dispatch(clearErrors());\n        }\n\n        if(isUpdated) {\n            dispatch({\n                type: UPDATE_INQUIRY_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, error, alert, isUpdated, updateError, inquiry, inquiryId, history])\n\n    return (\n        <Fragment>\n            <MetaData title={'View Message'}/>\n            <div id=\"wrapper\" className={isToggled ? null : \"toggled\"}>\n                <div id=\"sidebar-wrapper\" >\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )\n                        }\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                    <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\n                        <i className=\"fa fa-bars\"   ></i>\n                    </a>\n                    <Modal show={show} onHide={handleClose}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>Move to Trash?</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>Are you sure you want to move this message to Trash?</Modal.Body>\n                        <Modal.Footer>\n                            <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                            </Button>\n                            <Button variant=\"primary\" onClick={() => updateInquiryHandler(id, \"Deleted\", concernType, inTrash, inArchives)}>\n                            Yes, I'm sure\n                            </Button>\n                        </Modal.Footer>\n                    </Modal>\n                    <Modal show={emptyShow} onHide={handleEmptyClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Delete Message?</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>Are you sure you want to delete this? This cannot be undone.</Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={handleEmptyClose}>\n                                    Close\n                                </Button>\n                                <Button variant=\"primary\" onClick={() => deleteInquiryHandler(id)}>\n                                    Yes, I'm sure\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                    <Fragment>\n                        {loading ? <Loader/> : (\n                            <section className=\"process-section\" style={{fontSize: '100%', fontWeight: '400', lineHeight: '1.3', color: '#000', width: '100%', paddingTop: '11px'}}>\n                                <table style={{width: '85%', minWidth: '150px', margin: '20px auto', backgroundColor: '#fff', padding: '30px', WebkitBorderRadius: '3px', MozBorderRadius: '3px', borderRadius: '3px', WebkitBoxShadow: '0 1px 3px rgba(0,0,0.12), 0 1px 2px rgba(0,0,0,.24)', MozBoxShadow: '0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24)', boxShadow: '0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24)', borderTop: 'solid 10px #1b1449'}}>\n                                    <tbody>\n                                        <tr>\n                                            <td style={{height: '20px'}}></td>\n                                        </tr>\n                                        <tr>\n                                            <td style={{width: '100%', padding: '15px', verticalAlign: 'top'}}>\n                                                <p style={{margin: '0 0 10[x 0', padding: '0', fontSize: '14px'}}><span style={{display: 'block', fontWeight: 'bold', fontSize: '13px'}}>Concern Type</span> {inquiry.concernType}</p>\n                                                <p style={{margin: '0 0 10[x 0', padding: '0', fontSize: '14px'}}><span style={{display: 'block', fontWeight: 'bold', fontSize: '13px'}}>Status</span> {inquiry.inquiryStatus}</p>\n                                                <br/>\n                                                <p style={{margin: '0 0 10[x 0', padding: '0', fontSize: '14px'}}><span style={{display: 'block', fontWeight: 'bold', fontSize: '13px'}}>Name</span> {inquiry.firstName} {inquiry.lastName}</p>\n                                                <p style={{margin: '0 0 10[x 0', padding: '0', fontSize: '14px'}}><span style={{display: 'block', fontWeight: 'bold', fontSize: '13px'}}>Company and Position</span> {inquiry.companyName}, {inquiry.position}</p>\n                                                <p style={{margin: '0 0 10[x 0', padding: '0', fontSize: '14px'}}><span style={{display: 'block', fontWeight: 'bold', fontSize: '13px'}}>Email</span> {inquiry.customerEmail}</p>\n                                                <p style={{margin: '0 0 10[x 0', padding: '0', fontSize: '14px'}}><span style={{display: 'block', fontWeight: 'bold', fontSize: '13px'}}>Phone</span> {inquiry.contactNumber}</p>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td colspan=\"2\" style={{padding: '0 15px'}}>\n                                                <h3 style={{margin: '0 0 10px 0', padding: '0'}}>Message Content</h3>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td colspan=\"2\" style={{padding:'15px'}}>\n                                                <p style={{fontSize: '15px', margin: '0', padding: '10px 40px', textAlign: 'justify'}}>\n                                                {inquiry.customerMessage}\n                                                </p>\n                                            </td>\n                                        </tr>\n                                        <tr style={{ width: '100%'}}>\n                                            {(inquiry.inquiryStatus === 'Resolved' ) ? (\n                                                <Fragment>\n                                                    <div style={{margin: '20px auto', display: 'flex', alignContent: 'center', justifyContent: 'center'}}>\n                                                        <button \n                                                            className=\"btn btn-primary update-status-button align-center ml-2 mr-2\" \n                                                            type=\"button\"\n                                                            onClick={() => updateInquiryHandler(inquiry._id, 'Unresolved', inquiry.concernType, false, true)}\n                                                        >\n                                                            Restore message back to {inquiry.concernType}\n                                                        </button>\n                                                        <button \n                                                            className=\"btn btn-secondary update-status-button align-center ml-2 mr-2\" \n                                                            type=\"button\"\n                                                            onClick={() => \n                                                            {\n                                                                handleShow()\n                                                                setId(inquiry._id)\n                                                                setInTrash(false)\n                                                                setInArchives(true)\n                                                                setConcernType(inquiry.concernType)\n                                                            }}\n                                                        >\n                                                            Delete message\n                                                        </button>\n                                                    </div>\n                                                </Fragment>\n                                            ) : ((inquiry.inquiryStatus === 'Deleted') ? (\n                                                <Fragment>\n                                                    <div style={{margin: '20px auto', display: 'flex', alignContent: 'center', justifyContent: 'center'}}>\n                                                        <button \n                                                            className=\"btn btn-primary update-status-button align-center ml-2 mr-2\" \n                                                            type=\"button\"\n                                                            onClick={() => updateInquiryHandler(inquiry._id, 'Resolved', inquiry.concernType, true, false)}\n                                                        >\n                                                            Restore message back to Archives\n                                                        </button>\n                                                        <button \n                                                            className=\"btn btn-secondary update-status-button align-center ml-2 mr-2\" \n                                                            type=\"button\"\n                                                            onClick={() => {\n                                                                handleEmptyShow()\n                                                                setId(inquiry._id)\n                                                            }}>\n                                                            Delete message permanently\n                                                        </button>\n                                                    </div>\n                                                </Fragment>\n                                            ) : (\n                                                <Fragment>\n                                                    <div style={{margin: '20px auto', display: 'flex', alignContent: 'center', justifyContent: 'center'}}>\n                                                        <button \n                                                            className=\"btn btn-primary update-status-button align-center ml-2 mr-2\" \n                                                            type=\"button\"\n                                                            onClick={() => updateInquiryHandler(inquiry._id, 'Resolved', inquiry.concernType, false, false)}\n                                                        >\n                                                            Resolve message\n                                                        </button>\n                                                        <button \n                                                            className=\"btn btn-secondary update-status-button align-center ml-2 mr-2\" \n                                                            type=\"button\"\n                                                            onClick={() => \n                                                            {\n                                                                handleShow()\n                                                                setId(inquiry._id)\n                                                                setInTrash(false)\n                                                                setInArchives(false)\n                                                                setConcernType(inquiry.concernType)\n                                                            }}\n                                                        >\n                                                            Delete message\n                                                        </button>\n                                                    </div>\n                                                </Fragment>\n                                                )\n                                            )}\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </section>\n                        )}\n                    </Fragment>\n                    </div>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default UpdateInquiry\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateProduct.js",["301","302","303"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListSuperAdmins.js",["304","305","306"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateServices.js",["307","308"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListAdmins.js",["309"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/product/ProductDetails.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateUser.js",["310","311"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Modal, Button } from 'react-bootstrap'\nimport { updateUser, getUserDetails, clearErrors, logout } from '../../actions/userActions'\nimport { UPDATE_USER_RESET } from '../../constants/userConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport MetaData from '../layout/MetaData'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst UpdateUser = ({match, history}) => {\n    const dispatch = useDispatch()\n    const alert = useAlert()\n\n    const { error, user } = useSelector(state => state.getUser)\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.updateUser)\n\n    const [name, setName] = useState('')\n    const [contactNumber, setContactNumber] = useState('')\n    const [role, setRole] = useState([])\n    const [address, setAddress] = useState('')\n    const [isToggled, setToggled] = useState('false')\n    const [show, setShow] = useState(false)\n\n    const userId = match.params.id\n    const roles = ['admin', 'superadmin']\n\n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('contactNumber', contactNumber);\n        formData.set('address', address);\n        formData.set('role', role);\n\n        dispatch(updateUser(user._id, formData));\n    }\n    \n    const discardChanges = (role) => {\n        if(role === 'admin') {\n            handleClose()\n            history.push('/admin/users/admin')\n        } else {\n            handleClose()\n            history.push('/admin/users/superadmin')\n        }\n    }\n\n    const handleClose = () => setShow(false)\n    const handleShow = () => setShow(true)\n\n    useEffect(() => {\n        if(user && user._id !== userId) {\n            dispatch(getUserDetails(userId))\n        }\n        else { \n            setName(user.name)\n            setContactNumber(user.contactNumber)\n            setRole(user.role)\n            setAddress(user.address)\n        }\n\n        if(error){\n            history.push('/admin/dashboard')\n            alert.error(error);\n            dispatch(clearErrors());\n            dispatch({\n                type: UPDATE_USER_RESET\n            })\n        }\n\n        if(updateError){\n            history.push('/admin/dashboard')\n            alert.error(updateError);\n            dispatch(clearErrors());\n            dispatch({\n                type: UPDATE_USER_RESET\n            })\n        }\n\n        if(isUpdated) {\n            history.push('/admin/update-success')\n            alert.success('User has been updated.')\n\n            dispatch({\n                type: UPDATE_USER_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, error, alert, isUpdated, updateError, user, userId, history])\n    \n    return (\n        <Fragment>\n            <MetaData title={'Update User'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\n                <div id=\"sidebar-wrapper\" >\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        <hr/>\n                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} >\n                            <i className=\"fa fa-bars\"   ></i>\n                        </a>\n                        <Modal show={show} onHide={handleClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Discard Changes?</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>Are you sure you want to discard your changes?</Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={handleClose}>\n                                    Close\n                                </Button>\n                                <Button variant=\"primary\" onClick={discardChanges}>\n                                    Yes, I'm sure\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                        <Fragment>\n                        <div className=\"login-clean\">\n                            <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data'   >\n                                <h2 className=\"sr-only\">Update User</h2>\n                                <div className=\"div-forgot-password\">\n                                    <h3 className=\"forgot-password-heading\">Update User</h3>\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Name</h6>\n                                    <input \n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        name=\"name\"\n                                        value={name}\n                                        placeholder=\"Name\"\n                                        pattern=\"[A-Za-z\\s]{1,}\"\n                                        style={{width: '100%'}}\n                                        onChange={(e) => setName(e.target.value)}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Contact Number</h6>\n                                    <input\n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        name=\"contactNumber\"\n                                        value={contactNumber}\n                                        placeholder=\"09xx-xxx-xxxx\" \n                                        pattern=\"^[0][9]\\d{2}-\\d{3}-\\d{4}$\"\n                                        onChange={(e) => setContactNumber(e.target.value)}\n                                        height='55px'\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Address</h6>\n                                    <textarea\n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        name=\"address\"\n                                        value={address}\n                                        placeholder=\"Address\"\n                                        style={{width: '100%', height: '150px'}}\n                                        onChange={(e) => setAddress(e.target.value)}\n                                        height='55px'\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Role</h6>\n                                    <div className=\"dropdown show\">\n                                        <select \n                                            name=\"role\" \n                                            className=\"product-dropdown\" \n                                            id=\"role\"\n                                            value={role}\n                                            onChange={(e) => setRole(e.target.value)}\n                                        >\n                                            {roles.map(role => (\n                                                <option key={role} value={role}>{role}</option>\n                                            ))}\n                                        </select>\n                                    </div>\n                                </div>\n                                <div className=\"form-group\">\n                                    <button \n                                        className=\"btn btn-primary btn-block\" \n                                        type=\"submit\"\n                                        disabled={loading ? true : false}\n                                    >\n                                        Update User\n                                    </button>\n                                </div>\n                                <div className=\"form-group\">\n                                    <a\n                                        className=\"btn btn-secondary btn-block mt-2\"\n                                        onClick={handleShow}\n                                        style={{color: 'white'}}\n                                    >Discard</a>\n                                </div>\n                            </form>\n                        </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default UpdateUser\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/user/Register.js",["312","313","314"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/user/PasswordSuccess.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/user/ForgotPassword.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/user/NewPassword.js",["315","316"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Popover, OverlayTrigger} from 'react-bootstrap'\nimport { resetPassword, clearErrors } from './../../actions/userActions'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { NEW_PASSWORD_RESET } from '../../constants/userConstants'\nimport MetaData from '../layout/MetaData'\nimport '../../css/forms.css'\n\nconst popover = (\n    <Popover id=\"popover-basic\">\n      <Popover.Title as=\"h3\">Password Requirements</Popover.Title>\n      <Popover.Content>\n          &bull; Minimum of <strong>6 characters</strong>. <br/>\n          &bull; Must have at least 1 <strong>Uppercase and Lowercase</strong> letter.<br/>\n          &bull; Must have at least 2 <strong>numeric digits</strong>.<br/>\n          &bull; Must have <strong>no spaces</strong>.\n      </Popover.Content>\n    </Popover>\n);\n\nconst NewPassword = ({history, match}) => {\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { error, success, loading } = useSelector(state => state.forgotPassword)\n\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [showOld, setOld] = useState('false')\n    const [showNew, setNew] = useState('false')\n\n    const showOldToggle = () => setOld(!showOld)\n    const showNewToggle = () => setNew(!showNew)\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('password', password);\n        formData.set('confirmPassword', confirmPassword);\n\n        dispatch(resetPassword(match.params.token, formData));\n    }\n    \n    useEffect(() => {\n        if(success){\n            history.push('/password-success')\n            alert.success('Password updated successfully');\n            dispatch({\n                type: NEW_PASSWORD_RESET\n            })\n        }\n        \n        if(error){\n            alert.error(error);\n            dispatch(clearErrors());\n            dispatch({\n                type: NEW_PASSWORD_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n\n    }, [dispatch, alert, error, success, history])\n\n    return (\n        <Fragment>\n            <MetaData title={'Reset Password'}/>\n            <div className=\"login\" style={{paddingTop: '100px'}}>\n                <form onSubmit={submitHandler}>\n                    <h2 className=\"sr-only\">New Password</h2>\n                    <div className=\"div-forgot-password\">\n                        <h3 className=\"forgot-password-heading\">New Password \n                            <span className='fa-xs' style={{margin: 'auto', paddingLeft: '15px'}}>\n                                <OverlayTrigger trigger=\"hover\" placement=\"right\" overlay={popover}>\n                                    <i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i>\n                                </OverlayTrigger>\n                            </span>\n                        </h3>\n                    </div>\n                    <div className=\"form-group\">\n                        <h6>New Password</h6>\n                        <div class=\"input-group mb-3\">\n                            <input \n                                type={showOld ? \"password\" : \"text\"} \n                                className=\"form-control\" \n                                name=\"password\"\n                                value={password}\n                                placeholder=\"New Password\"\n                                onChange={(e) => setPassword(e.target.value)}\n                                aria-label=\"oldpassword\" aria-describedby=\"basic-addon1\"\n                            />\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\" id=\"basic-addon1\">\n                                    <a\n                                        onClick={showOldToggle}\n                                        style={{cursor: 'pointer'}}\n                                    >\n                                        <span className=\"fa-lg\">\n                                            <i className={showOld ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\n                                        </span>\n                                    </a>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <h6>Confirm Password</h6>\n                        <div class=\"input-group mb-3\">\n                            <input\n                                type={showNew ? \"password\" : \"text\"} \n                                className=\"form-control\"\n                                name=\"confirmPassword\"\n                                value={confirmPassword}\n                                placeholder=\"Confirm Password\"\n                                onChange={(e) => setConfirmPassword(e.target.value)}\n                                aria-label=\"confirm\" aria-describedby=\"basic-addon1\"\n                            />\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\" id=\"basic-addon1\">\n                                    <a\n                                        onClick={showNewToggle}\n                                        style={{cursor: 'pointer'}}\n                                    >\n                                        <span className=\"fa-lg\">\n                                            <i className={showNew ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\n                                        </span>\n                                    </a>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <button \n                            className=\"btn btn-primary btn-block\" \n                            type=\"submit\"\n                            disabled={loading ? true : false}\n                        >Set Password</button>\n                    </div>\n                </form>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default NewPassword\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/route/ProtectedRoute.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/userActions.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/NewProduct.js",["317","318"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Home.js",["319","320","321","322","323","324","325","326"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/Dashboard.js",["327"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/Header.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/user/Login.js",["328","329"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from  'react-redux'\nimport { login, clearErrors } from './../../actions/userActions'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport MetaData from '../layout/MetaData'\nimport '../../css/forms.css'\n\nconst Login = ({history}) => {\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth)\n\n    const [ email, setEmail ] = useState('')\n    const [ password, setPassword ] = useState('')\n    const [isChecked, setChecked] = useState('false')\n    const [userInput, setUserInput ] = useState('')\n    const [isCorrect, setIsCorrect ] = useState('false')\n    const [attempts, setAttempts] = useState(2)\n\n    const loginPassword = 'cgJBHJXe'\n\n    const checkboxCheck = () => setChecked(!isChecked)\n\n    const passwordCheck = (userInput) => {\n        if(userInput === loginPassword) {\n            setIsCorrect(!isCorrect)\n            alert.success('Access code is correct.')\n        } else {\n            setAttempts((attempts-1))\n\n            if(attempts > 0) {\n                alert.error(`You have ${attempts} attempts left`)\n            } else {\n                alert.error('Cannot redirect to log in page.')\n                history.push('/')\n            }\n        }\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        dispatch(login(email, password));\n    }\n\n    useEffect(() => {\n        if(isAuthenticated) {\n            history.push('/admin/dashboard')\n            alert.success('Logged in successfully.')\n        }\n\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors());\n        } //loadError in load_user_fail\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, isAuthenticated, error, history])\n\n    return (\n        <Fragment>\n            <MetaData title={'Log In'}/>\n            <div className={isCorrect ? \"login\" : \"d-none\"} style={{margin: 'auto'}}>\n                <form>\n                    <div className=\"illustration\">\n                        <img className=\"login-logo\" alt=\"company logo\" src=\"https://res.cloudinary.com/agiletechnodynamicsinc/image/upload/v1615205387/websiteImages/agile-logo-home_nhud2z.png\"/>\n                    </div>\n                    <div className=\"form-group\">\n                        <h6>Enter access code</h6>\n                        <p style={{color: '#333', fontSize: '10px'}}>If you don't know the code, contact your administrator.</p>\n                        <input \n                            className=\"form-control\" \n                            type=\"text\" \n                            name=\"userInput\"\n                            value={userInput}\n                            placeholder=\"xxxxxxxx\"\n                            maxLength=\"8\"\n                            onChange={(e) => setUserInput(e.target.value)}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <a\n                            className=\"btn btn-primary btn-block\"\n                            style={{color: 'white'}}\n                            onClick={() => passwordCheck(userInput)}\n                        >Submit</a>\n                    </div>\n                </form>\n            </div>\n            <div className={isCorrect ? \"d-none\" : \"login\"} style={{margin: 'auto'}}>\n                <form onSubmit={submitHandler}>\n                    <h2 className=\"sr-only\">Login Form</h2>\n                    <div className=\"illustration\">\n                        <img className=\"login-logo\" alt=\"company logo\" src=\"https://res.cloudinary.com/agiletechnodynamicsinc/image/upload/v1615205387/websiteImages/agile-logo-home_nhud2z.png\"/>\n                    </div>\n                    <div className=\"form-group\">\n                        <input className=\"form-control\" type=\"email\" name=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <div class=\"input-group mb-3\">\n                            <input \n                                className=\"form-control\" \n                                type={isChecked ? \"password\" : \"text\"}  \n                                name=\"password\" \n                                placeholder=\"Password\" \n                                value={password} \n                                onChange={(e) => setPassword(e.target.value)}\n                            />\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\" id=\"basic-addon1\">\n                                    <a\n                                        onClick={checkboxCheck}\n                                        style={{cursor: 'pointer'}}\n                                    >\n                                        <span className=\"fa-lg\">\n                                            <i className={isChecked ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\n                                        </span>\n                                    </a>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <button className=\"btn btn-primary btn-block\" type=\"submit\" disabled={loading ? true : false}>Log In</button>\n                    </div>\n                    <Link className=\"forgot\" to=\"/password/forgot\">Forgot your password?</Link>\n                </form>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default Login\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/MetaData.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/productActions.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/product/ProductDisplay.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/productConstants.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/userConstants.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/inquiryConstants.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/websiteConstants.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/dashboardConstants.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/websiteActions.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/inquiryActions.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateUserSuccess.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListProducts.js",["330"],{"ruleId":"331","replacedBy":"332"},{"ruleId":"333","replacedBy":"334"},{"ruleId":"335","severity":1,"message":"336","line":181,"column":25,"nodeType":"337","endLine":181,"endColumn":108},{"ruleId":"338","severity":1,"message":"339","line":237,"column":49,"nodeType":"337","endLine":242,"endColumn":51},{"ruleId":"335","severity":1,"message":"336","line":277,"column":45,"nodeType":"337","endLine":281,"endColumn":46},{"ruleId":"335","severity":1,"message":"336","line":132,"column":29,"nodeType":"337","endLine":132,"endColumn":112},{"ruleId":"335","severity":1,"message":"336","line":192,"column":49,"nodeType":"337","endLine":196,"endColumn":50},{"ruleId":"335","severity":1,"message":"336","line":138,"column":29,"nodeType":"337","endLine":138,"endColumn":111},{"ruleId":"335","severity":1,"message":"336","line":246,"column":49,"nodeType":"337","endLine":250,"endColumn":50},{"ruleId":"335","severity":1,"message":"336","line":73,"column":37,"nodeType":"337","endLine":73,"endColumn":121},{"ruleId":"335","severity":1,"message":"336","line":167,"column":25,"nodeType":"337","endLine":167,"endColumn":107},{"ruleId":"335","severity":1,"message":"336","line":126,"column":25,"nodeType":"337","endLine":126,"endColumn":107},{"ruleId":"335","severity":1,"message":"336","line":169,"column":49,"nodeType":"337","endLine":172,"endColumn":50},{"ruleId":"335","severity":1,"message":"336","line":195,"column":49,"nodeType":"337","endLine":198,"endColumn":50},{"ruleId":"335","severity":1,"message":"336","line":215,"column":37,"nodeType":"337","endLine":219,"endColumn":38},{"ruleId":"335","severity":1,"message":"336","line":167,"column":25,"nodeType":"337","endLine":167,"endColumn":109},{"ruleId":"335","severity":1,"message":"336","line":166,"column":25,"nodeType":"337","endLine":166,"endColumn":109},{"ruleId":"335","severity":1,"message":"336","line":166,"column":25,"nodeType":"337","endLine":166,"endColumn":109},{"ruleId":"335","severity":1,"message":"336","line":175,"column":25,"nodeType":"337","endLine":175,"endColumn":109},{"ruleId":"335","severity":1,"message":"336","line":219,"column":25,"nodeType":"337","endLine":219,"endColumn":109},{"ruleId":"335","severity":1,"message":"336","line":131,"column":25,"nodeType":"337","endLine":131,"endColumn":109},{"ruleId":"338","severity":1,"message":"339","line":88,"column":25,"nodeType":"337","endLine":93,"endColumn":27},{"ruleId":"335","severity":1,"message":"336","line":146,"column":25,"nodeType":"337","endLine":146,"endColumn":109},{"ruleId":"335","severity":1,"message":"336","line":124,"column":25,"nodeType":"337","endLine":124,"endColumn":107},{"ruleId":"335","severity":1,"message":"336","line":148,"column":25,"nodeType":"337","endLine":148,"endColumn":109},{"ruleId":"335","severity":1,"message":"336","line":159,"column":21,"nodeType":"337","endLine":159,"endColumn":105},{"ruleId":"335","severity":1,"message":"336","line":192,"column":25,"nodeType":"337","endLine":192,"endColumn":107},{"ruleId":"340","severity":1,"message":"341","line":315,"column":41,"nodeType":"337","endLine":321,"endColumn":43},{"ruleId":"335","severity":1,"message":"336","line":333,"column":45,"nodeType":"337","endLine":337,"endColumn":46},{"ruleId":"342","severity":1,"message":"343","line":6,"column":20,"nodeType":"344","messageId":"345","endLine":6,"endColumn":30},{"ruleId":"342","severity":1,"message":"346","line":8,"column":10,"nodeType":"344","messageId":"345","endLine":8,"endColumn":27},{"ruleId":"335","severity":1,"message":"336","line":155,"column":25,"nodeType":"337","endLine":155,"endColumn":109},{"ruleId":"335","severity":1,"message":"336","line":141,"column":21,"nodeType":"337","endLine":141,"endColumn":104},{"ruleId":"335","severity":1,"message":"336","line":271,"column":45,"nodeType":"337","endLine":275,"endColumn":46},{"ruleId":"335","severity":1,"message":"336","line":172,"column":25,"nodeType":"337","endLine":172,"endColumn":109},{"ruleId":"335","severity":1,"message":"336","line":129,"column":25,"nodeType":"337","endLine":129,"endColumn":108},{"ruleId":"335","severity":1,"message":"336","line":218,"column":37,"nodeType":"337","endLine":222,"endColumn":38},{"ruleId":"335","severity":1,"message":"336","line":209,"column":25,"nodeType":"337","endLine":209,"endColumn":107},{"ruleId":"335","severity":1,"message":"336","line":372,"column":73,"nodeType":"337","endLine":375,"endColumn":74},{"ruleId":"335","severity":1,"message":"336","line":403,"column":73,"nodeType":"337","endLine":406,"endColumn":74},{"ruleId":"335","severity":1,"message":"336","line":99,"column":37,"nodeType":"337","endLine":102,"endColumn":38},{"ruleId":"335","severity":1,"message":"336","line":125,"column":37,"nodeType":"337","endLine":128,"endColumn":38},{"ruleId":"335","severity":1,"message":"336","line":185,"column":29,"nodeType":"337","endLine":185,"endColumn":111},{"ruleId":"335","severity":1,"message":"336","line":344,"column":41,"nodeType":"337","endLine":348,"endColumn":42},{"ruleId":"347","severity":1,"message":"348","line":48,"column":140,"nodeType":"349","messageId":"350","endLine":48,"endColumn":141},{"ruleId":"347","severity":1,"message":"348","line":48,"column":161,"nodeType":"349","messageId":"350","endLine":48,"endColumn":162},{"ruleId":"347","severity":1,"message":"348","line":69,"column":102,"nodeType":"349","messageId":"350","endLine":69,"endColumn":103},{"ruleId":"347","severity":1,"message":"348","line":69,"column":124,"nodeType":"349","messageId":"350","endLine":69,"endColumn":125},{"ruleId":"347","severity":1,"message":"348","line":72,"column":102,"nodeType":"349","messageId":"350","endLine":72,"endColumn":103},{"ruleId":"347","severity":1,"message":"348","line":72,"column":125,"nodeType":"349","messageId":"350","endLine":72,"endColumn":126},{"ruleId":"347","severity":1,"message":"348","line":78,"column":125,"nodeType":"349","messageId":"350","endLine":78,"endColumn":126},{"ruleId":"347","severity":1,"message":"348","line":78,"column":149,"nodeType":"349","messageId":"350","endLine":78,"endColumn":150},{"ruleId":"335","severity":1,"message":"336","line":81,"column":37,"nodeType":"337","endLine":81,"endColumn":119},{"ruleId":"335","severity":1,"message":"336","line":87,"column":25,"nodeType":"337","endLine":91,"endColumn":26},{"ruleId":"335","severity":1,"message":"336","line":116,"column":37,"nodeType":"337","endLine":119,"endColumn":38},{"ruleId":"335","severity":1,"message":"336","line":162,"column":25,"nodeType":"337","endLine":162,"endColumn":109},"no-native-reassign",["351"],"no-negated-in-lhs",["352"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-unused-vars","'deleteUser' is defined but never used.","Identifier","unusedVar","'DELETE_USER_RESET' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation"]