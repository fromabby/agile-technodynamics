[{"/Users/abby/Desktop/agile-technodynamics/frontend/src/index.js":"1","/Users/abby/Desktop/agile-technodynamics/frontend/src/store.js":"2","/Users/abby/Desktop/agile-technodynamics/frontend/src/App.js":"3","/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/productReducers.js":"4","/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/userReducers.js":"5","/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/dashboardReducers.js":"6","/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/websiteReducers.js":"7","/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/inquiryReducers.js":"8","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Home.js":"9","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/About.js":"10","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Contact.js":"11","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ConfirmationPage.js":"12","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/EmailSent.js":"13","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/route/ProtectedRoute.js":"14","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/Footer.js":"15","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/Login.js":"16","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/ForgotPassword.js":"17","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/NewPassword.js":"18","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/ScrollToTop.js":"19","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/PasswordSuccess.js":"20","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/superadmin/UpdateUserSuccess.js":"21","/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/userActions.js":"22","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Services.js":"23","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductDetails.js":"24","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Products.js":"25","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/Header.js":"26","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/UpdateProfile.js":"27","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/ListAbout.js":"28","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/ListHome.js":"29","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/ListFooter.js":"30","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/Profile.js":"31","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/UpdatePassword.js":"32","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/Dashboard.js":"33","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/ListServices.js":"34","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/UpdateHome.js":"35","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/UpdateAbout.js":"36","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/UpdateServices.js":"37","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/UpdateFooter.js":"38","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListInquiries.js":"39","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListAppointments.js":"40","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListOthers.js":"41","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListArchives.js":"42","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListTrash.js":"43","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/NewProduct.js":"44","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateProduct.js":"45","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateInquiry.js":"46","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/superadmin/ListSuperAdmins.js":"47","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/superadmin/ListAdmins.js":"48","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListProducts.js":"49","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/superadmin/UpdateUser.js":"50","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/superadmin/Register.js":"51","/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/productConstants.js":"52","/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/dashboardConstants.js":"53","/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/websiteConstants.js":"54","/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/userConstants.js":"55","/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/inquiryConstants.js":"56","/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/websiteActions.js":"57","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/MetaData.js":"58","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/Loader.js":"59","/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/productActions.js":"60","/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/inquiryActions.js":"61","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/Help.js":"62"},{"size":582,"mtime":1615917684922,"results":"63","hashOfConfig":"64"},{"size":2231,"mtime":1619192025168,"results":"65","hashOfConfig":"64"},{"size":7417,"mtime":1619431597213,"results":"66","hashOfConfig":"64"},{"size":4764,"mtime":1616862407505,"results":"67","hashOfConfig":"64"},{"size":9278,"mtime":1619191874066,"results":"68","hashOfConfig":"64"},{"size":497,"mtime":1615623306470,"results":"69","hashOfConfig":"64"},{"size":9758,"mtime":1615623199948,"results":"70","hashOfConfig":"64"},{"size":4248,"mtime":1616859234919,"results":"71","hashOfConfig":"64"},{"size":4974,"mtime":1619191119720,"results":"72","hashOfConfig":"64"},{"size":5460,"mtime":1616609146002,"results":"73","hashOfConfig":"64"},{"size":9848,"mtime":1616854456472,"results":"74","hashOfConfig":"64"},{"size":1299,"mtime":1617526023263,"results":"75","hashOfConfig":"64"},{"size":1306,"mtime":1617526050642,"results":"76","hashOfConfig":"64"},{"size":1351,"mtime":1619177545641,"results":"77","hashOfConfig":"64"},{"size":3845,"mtime":1617181915017,"results":"78","hashOfConfig":"64"},{"size":6572,"mtime":1619428673117,"results":"79","hashOfConfig":"64"},{"size":3148,"mtime":1616851597231,"results":"80","hashOfConfig":"64"},{"size":6607,"mtime":1617533722263,"results":"81","hashOfConfig":"64"},{"size":385,"mtime":1615959594292,"results":"82","hashOfConfig":"64"},{"size":1353,"mtime":1615921002338,"results":"83","hashOfConfig":"64"},{"size":1175,"mtime":1615920926357,"results":"84","hashOfConfig":"64"},{"size":8223,"mtime":1618816531184,"results":"85","hashOfConfig":"64"},{"size":6392,"mtime":1616649474115,"results":"86","hashOfConfig":"64"},{"size":3279,"mtime":1616649474113,"results":"87","hashOfConfig":"64"},{"size":13784,"mtime":1616649474114,"results":"88","hashOfConfig":"64"},{"size":4446,"mtime":1617181714703,"results":"89","hashOfConfig":"64"},{"size":18790,"mtime":1619431447351,"results":"90","hashOfConfig":"64"},{"size":6746,"mtime":1619431824687,"results":"91","hashOfConfig":"64"},{"size":7153,"mtime":1619431851720,"results":"92","hashOfConfig":"64"},{"size":7047,"mtime":1619431447351,"results":"93","hashOfConfig":"64"},{"size":10482,"mtime":1619431447352,"results":"94","hashOfConfig":"64"},{"size":12742,"mtime":1619431446994,"results":"95","hashOfConfig":"64"},{"size":14479,"mtime":1619431446994,"results":"96","hashOfConfig":"64"},{"size":7373,"mtime":1619431845000,"results":"97","hashOfConfig":"64"},{"size":15550,"mtime":1619431447352,"results":"98","hashOfConfig":"64"},{"size":11400,"mtime":1619431891398,"results":"99","hashOfConfig":"64"},{"size":17545,"mtime":1619431447351,"results":"100","hashOfConfig":"64"},{"size":15583,"mtime":1619431446994,"results":"101","hashOfConfig":"64"},{"size":9305,"mtime":1619431733977,"results":"102","hashOfConfig":"64"},{"size":9276,"mtime":1619431714988,"results":"103","hashOfConfig":"64"},{"size":9267,"mtime":1619431789189,"results":"104","hashOfConfig":"64"},{"size":9614,"mtime":1619431725119,"results":"105","hashOfConfig":"64"},{"size":12674,"mtime":1619431775235,"results":"106","hashOfConfig":"64"},{"size":20427,"mtime":1619431447352,"results":"107","hashOfConfig":"64"},{"size":19319,"mtime":1619431753622,"results":"108","hashOfConfig":"64"},{"size":17320,"mtime":1619431447351,"results":"109","hashOfConfig":"64"},{"size":7968,"mtime":1619431924825,"results":"110","hashOfConfig":"64"},{"size":8898,"mtime":1619431930341,"results":"111","hashOfConfig":"64"},{"size":9745,"mtime":1619431781053,"results":"112","hashOfConfig":"64"},{"size":11859,"mtime":1619432196664,"results":"113","hashOfConfig":"64"},{"size":27954,"mtime":1619431447352,"results":"114","hashOfConfig":"64"},{"size":1292,"mtime":1616862410329,"results":"115","hashOfConfig":"64"},{"size":123,"mtime":1615182325211,"results":"116","hashOfConfig":"64"},{"size":2226,"mtime":1615182325214,"results":"117","hashOfConfig":"64"},{"size":2512,"mtime":1619191884143,"results":"118","hashOfConfig":"64"},{"size":1077,"mtime":1615182325212,"results":"119","hashOfConfig":"64"},{"size":7217,"mtime":1618816519288,"results":"120","hashOfConfig":"64"},{"size":270,"mtime":1615182325200,"results":"121","hashOfConfig":"64"},{"size":411,"mtime":1615359817965,"results":"122","hashOfConfig":"64"},{"size":4442,"mtime":1616518930948,"results":"123","hashOfConfig":"64"},{"size":3362,"mtime":1615623152866,"results":"124","hashOfConfig":"64"},{"size":4186,"mtime":1619431703442,"results":"125","hashOfConfig":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},"15m85vh",{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"128"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"128"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"128"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"128"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"128"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"128"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"128"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"128"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"128"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"128"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"128"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"128"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"128"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"128"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"128"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"128"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"241","messages":"242","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"128"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/abby/Desktop/agile-technodynamics/frontend/src/index.js",[],["268","269"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/store.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/App.js",["270"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/productReducers.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/userReducers.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/dashboardReducers.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/websiteReducers.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/inquiryReducers.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Home.js",["271","272","273","274","275","276","277","278"],"import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getHomes, clearErrors } from '../actions/websiteActions'\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\nimport MetaData from './layout/MetaData'\nimport Loader from './layout/Loader'\nimport '../css/styles.css'\n\nconst Home = () => {\n    const dispatch = useDispatch()\n    const alert = useAlert()\n\n    const { loading,\n            error,\n            productsDescription,\n            servicesDescription,\n            productImageLeft,\n            productImageRight,\n            titleBackground,\n            servicesBackground\n        } = useSelector(state => state.homes)\n\n    useEffect(() => {\n        dispatch(getHomes())\n\n        dispatch({\n            type: INSIDE_DASHBOARD_FALSE\n        })\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n    }, [dispatch, alert, error])\n\n    return (\n            <Fragment>\n                <MetaData title={'Home'}/>\n                {loading ? <Loader/> : (\n                    <Fragment>\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                <div className=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 text-center\"\n                                    style={{\n                                    background: \"linear-gradient(to bottom, rgba(216, 203, 194, 0.8) 0%, rgba(34, 33, 32, 0.8) 100%), url(\"+`${titleBackground}`+\") center / auto no-repeat\", \n                                    backgroundSize: \"cover\", \n                                    width: \"100%\", \n                                    height: \"100%\"}\n                                }>\n                                    <div className=\"main-section\">\n                                        <img className=\"logo\" alt=\"Logo of Agile Technodynamics, Inc.\" src=\"https://res.cloudinary.com/agiletechnodynamicsinc/image/upload/v1615205387/websiteImages/agile-logo-home_nhud2z.png\"/>\n                                        <h1 className=\"pt-3 main-text\">AGILE TECHNODYNAMICS, INC.</h1>\n                                    </div>\n                                </div>\n                            </div>\n                            <div>\n                                <div className=\"row agile-products-home\">\n                                    <div className=\"col\">\n                                        <h1>Our Products</h1>\n                                        <p className=\"our-products-description pb-3\" >{productsDescription}</p>\n                                        <Link className=\"mt-4\" to=\"/products\">See Products <i className=\"fa fa-angle-right\"></i></Link>\n                                    </div>\n                                </div>\n                                <div className=\"row\" style={{margin: 'auto'}}>\n                                    <div className=\"col-sm-12 col-md-6\">\n                                        <div className=\"product-container\" style={{background: \"url(\"+`${productImageLeft}`+\") center / auto no-repeat\", backgroundSize: 'contain'}}></div>\n                                    </div>\n                                    <div className=\"col-sm-12 col-md-6\">\n                                        <div className=\"product-container\" style={{background: \"url(\"+`${productImageRight}`+\") center / auto no-repeat\", backgroundSize: 'contain'}}></div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row services-container\" \n                                style={{\n                                    background: \"linear-gradient(to right, rgb(0,0,0) 0%, rgba(151,161,179,0.4) 100%), url(\"+`${servicesBackground}`+\") no-repeat\", \n                                    backgroundSize: \"cover\", \n                                    backgroundPosition: \"right\"\n                                }}\n                            >\n                                <div className=\"col-sm-12 col-md-6\">\n                                    <div>\n                                        <div className=\"col-auto our-services-description\">\n                                            <h1 className=\"text-center\">Our Services</h1>\n                                            <p>{servicesDescription}</p>\n                                            <Link className=\"mt-4\" to=\"/services\" style={{color: 'white'}}>See Services <i className=\"fa fa-angle-right\"></i></Link>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </Fragment>\n                )}\n        </Fragment>\n    )\n}\n\nexport default Home","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/About.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Contact.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ConfirmationPage.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/EmailSent.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/route/ProtectedRoute.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/Footer.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/Login.js",["279","280","281"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/ForgotPassword.js",["282"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from  'react-redux'\nimport { forgotPassword, clearErrors } from '../../actions/userActions'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { FORGOT_PASSWORD_RESET } from '../../constants/userConstants'\nimport MetaData from '../layout/MetaData'\nimport '../../css/forms.css'\n\nconst ForgotPassword = ({history}) => {\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { error, loading, message } = useSelector(state => state.forgotPassword)\n    \n    const [email, setEmail] = useState('')\n\n    const submitHandler = e => {\n        e.preventDefault()\n\n        const formData = new FormData()\n        formData.set('email', email)\n\n        dispatch(forgotPassword(formData))\n    }\n\n    const goBack = () => {\n        window.history.back()\n    }\n\n    useEffect(() => {\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n            dispatch({\n                type: FORGOT_PASSWORD_RESET\n            })\n        }\n\n        if(message){\n            //alert.success(message)\n            history.push('/email-sent')\n            dispatch({\n                type: FORGOT_PASSWORD_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, message, history])\n\n    return (\n        <Fragment>\n            <MetaData title={'Forgot Password'}/>\n            <div className=\"login\" style={{paddingTop: '100px'}}>\n                <form onSubmit={submitHandler}>\n                    <h2 className=\"sr-only\">Forgot Password</h2>\n                    <div className=\"div-forgot-password\">\n                        <h3 className=\"forgot-password-heading\">Forgot password</h3>\n                    </div>\n                    <div className=\"form-group\">\n                        <h6>Enter email</h6>\n                        <input \n                            className=\"form-control\" \n                            type=\"email\" \n                            name=\"email\"\n                            value={email}\n                            onChange={e => setEmail(e.target.value)}\n                            required\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <button\n                            className=\"btn btn-primary btn-block\"\n                            type=\"submit\"\n                            disabled={ loading ? true : false}\n                        >Send Email</button>\n                    </div>\n                    <div className=\"form-group\">\n                        <button\n                            className=\"btn btn-secondary btn-block text-decoration-none\"\n                            style={{color: 'white'}}\n                            onClick={goBack}\n                        >Go Back</button>\n                    </div>\n                </form>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ForgotPassword\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/NewPassword.js",["283","284"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Popover, OverlayTrigger} from 'react-bootstrap'\nimport { resetPassword, clearErrors } from './../../actions/userActions'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { NEW_PASSWORD_RESET } from '../../constants/userConstants'\nimport MetaData from '../layout/MetaData'\nimport '../../css/forms.css'\n\nconst popover = (\n    <Popover id=\"popover-basic\">\n      <Popover.Title as=\"h3\">Password Requirements</Popover.Title>\n      <Popover.Content>\n          &bull; Minimum of <strong>6 characters</strong>. <br/>\n          &bull; Maximum of <strong>15 characters</strong>. <br/>\n          &bull; Must have at least 1 <strong>Uppercase and Lowercase</strong> letter.<br/>\n          &bull; Must have at least 2 <strong>numeric digits</strong>.<br/>\n          &bull; Must have <strong>no spaces</strong>.\n      </Popover.Content>\n    </Popover>\n)\n\nconst NewPassword = ({history, match}) => {\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { error, success, loading } = useSelector(state => state.forgotPassword)\n\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [showOld, setOld] = useState('false')\n    const [showNew, setNew] = useState('false')\n\n    const showOldToggle = () => setOld(!showOld)\n    const showNewToggle = () => setNew(!showNew)\n\n    const submitHandler = e => {\n        e.preventDefault()\n\n        const formData = new FormData()\n        formData.set('password', password)\n        formData.set('confirmPassword', confirmPassword)\n\n        dispatch(resetPassword(match.params.token, formData))\n    }\n    \n    useEffect(() => {\n        if(success){\n            history.push('/password-success')\n            alert.success('Password updated successfully')\n            dispatch({\n                type: NEW_PASSWORD_RESET\n            })\n        }\n        \n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n            dispatch({\n                type: NEW_PASSWORD_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n\n    }, [dispatch, alert, error, success, history])\n\n    return (\n        <Fragment>\n            <MetaData title={'Reset Password'}/>\n            <div className=\"login\" style={{paddingTop: '100px'}}>\n                <form onSubmit={submitHandler}>\n                    <h2 className=\"sr-only\">New Password</h2>\n                    <div className=\"div-forgot-password\">\n                        <h3 className=\"forgot-password-heading\">New Password \n                            <span className='fa-xs' style={{margin: 'auto', paddingLeft: '15px'}}>\n                                <OverlayTrigger trigger=\"hover\" placement=\"right\" overlay={popover}>\n                                    <i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i>\n                                </OverlayTrigger>\n                            </span>\n                        </h3>\n                    </div>\n                    <div className=\"form-group\">\n                        <h6>New Password</h6>\n                        <div class=\"input-group mb-3\">\n                            <input \n                                type={showOld ? \"password\" : \"text\"} \n                                className=\"form-control\" \n                                name=\"password\"\n                                value={password}\n                                placeholder=\"New Password\"\n                                onChange={e => setPassword(e.target.value)}\n                                aria-label=\"oldpassword\"\n                                aria-describedby=\"basic-addon1\"\n                                required\n                            />\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\" id=\"basic-addon1\">\n                                    <a\n                                        onClick={showOldToggle}\n                                        style={{cursor: 'pointer'}}\n                                    >\n                                        <span className=\"fa-lg\">\n                                            <i className={showOld ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\n                                        </span>\n                                    </a>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <h6>Confirm Password</h6>\n                        <div class=\"input-group mb-3\">\n                            <input\n                                type={showNew ? \"password\" : \"text\"} \n                                className=\"form-control\"\n                                name=\"confirmPassword\"\n                                value={confirmPassword}\n                                placeholder=\"Confirm Password\"\n                                onChange={e => setConfirmPassword(e.target.value)}\n                                aria-label=\"confirm\"\n                                aria-describedby=\"basic-addon2\"\n                                required\n                            />\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\" id=\"basic-addon2\">\n                                    <a\n                                        onClick={showNewToggle}\n                                        style={{cursor: 'pointer'}}\n                                    >\n                                        <span className=\"fa-lg\">\n                                            <i className={showNew ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\n                                        </span>\n                                    </a>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <button \n                            className=\"btn btn-primary btn-block\" \n                            type=\"submit\"\n                            disabled={loading ? true : false}\n                        >Set Password</button>\n                    </div>\n                </form>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default NewPassword\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/ScrollToTop.js",["285"],"import React, { useEffect, Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nfunction ScrollToTop({ history, children }) {\n  useEffect(() => {\n    const unlisten = history.listen(() => {\n      window.scrollTo(0, 0);\n    });\n    return () => {\n      unlisten();\n    }\n  }, []);\n\n  return <Fragment>{children}</Fragment>;\n}\n\nexport default withRouter(ScrollToTop);","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/PasswordSuccess.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/superadmin/UpdateUserSuccess.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/userActions.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Services.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductDetails.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Products.js",["286","287"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport Pagination from 'react-js-pagination'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Container, Row, Col, ButtonGroup, Button, Dropdown } from 'react-bootstrap'\nimport { getProducts, clearErrors } from './../actions/productActions'\nimport { INSIDE_DASHBOARD_FALSE } from './../constants/dashboardConstants'\nimport Loader from './layout/Loader'\nimport MetaData from './layout/MetaData'\nimport './../css/bootstrap.min.css'\nimport './../fonts/font-awesome.min.css'\n\nconst Products = () => { \n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products)\n\n    const [category, setMainCategory] = useState('')\n    const [subcategory, setSubCategory] = useState('')\n    const [currentPage, setCurrentPage] = useState(1)\n    \n    const me_subCategory = ['', 'Pumps and System', 'Fire Protection Systems', 'Others']\n    const dc_subCategory = ['', 'Uninterrupted Power System', 'Battery Monitoring System', 'Batteries', 'Others']\n    const eee_subCategory = ['', 'Transformers', 'Others']\n    const te_subCategory = ['', 'Partial Discharge Detection', 'Battery Discharge Capacity Tester', 'Battery Impedance or Internal Resistance', 'Load Banks', 'Battery Test Monitor', 'Portable Direct Ground Fault Finder', 'Earth Tester or Clamp Type', 'Others']\n\n    function setCurrentPageNo(pageNumber) {\n        setCurrentPage(pageNumber)\n    }\n\n    let count = productsCount\n    \n    if(category) {\n        count = filteredProductsCount\n    }\n\n    function getName(name) {\n        var x = name\n        var y = x.split(' ')\n        var z = x.split(' ').slice(0,5).join(' ')\n\n        if(y.length > 5) {\n            z = z + \"...\"\n        }\n        \n        return z\n    }\n\n    useEffect(() => {\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n        \n        dispatch(getProducts(currentPage, category, subcategory))\n\n        dispatch({\n            type: INSIDE_DASHBOARD_FALSE\n        })\n    }, [dispatch, alert, error, currentPage, category, subcategory])\n\n    return (\n        <Fragment>\n            <MetaData title={'Our Products'}/>\n            <Container fluid style={{paddingTop: '100px', margin: '0'}}>\n                <Row>\n                    <Col>\n                        <h1 className=\"text-center\" style={{fontWeight: 'bolder'}}>OUR PRODUCTS</h1>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        {subcategory ? \n                            <Fragment>\n                                <p className=\"text-center product-category\" style={{color: '#0d163f'}}>\n                                    <a onClick={() => {\n                                        setCurrentPageNo(1) \n                                        setMainCategory(category)\n                                        setSubCategory('')\n                                        }}  \n                                        style={{textDecoration: 'underline', cursor: 'pointer'}}\n                                    >{category}</a>\n                                    &nbsp;\n                                    <i className=\"fa fa-angle-right\"></i> \n                                    &nbsp;\n                                    {subcategory}\n                                </p> \n                            </Fragment>:\n                            <p className=\"text-center product-category\" style={{color: '#0d163f'}}>\n                                {category}\n                            </p>\n                        }\n                        {category ? \n                            <li \n                                onClick={() => {setMainCategory(''); setSubCategory(''); setCurrentPage(1)}}\n                                style={{listStyle: 'none', textDecoration: 'underline', cursor: 'pointer', color: '#0d163f', fontSize: '1rem', paddingBottom: '5px', width: '130px', marginLeft: 'auto', marginRight: 'auto'}}    \n                            >View All Products</li> :\n                            <Link></Link>\n                        }\n                    </Col>\n                </Row>\n                <hr/>\n                <Row style={{padding: '20px 0 50px 0'}} noGutters={true}>\n                    <Col sm={3}>\n                        <h4 style={{padding: '0 13px', fontWeight: 'bold'}}>Categories</h4>\n                        <ButtonGroup vertical>\n                            <Dropdown as={ButtonGroup}>\n                                <Button\n                                    variant='transparent'\n                                    style={{textAlign: 'left'}}\n                                    onClick={() => {\n                                        setCurrentPageNo(1) \n                                        setMainCategory('Mechanical Engineering')\n                                        setSubCategory('')\n                                        }\n                                    }    \n                                >Mechanical Engineering</Button>\n                                <Dropdown.Toggle variant=\"transparent\" id=\"dropdown-basic\"></Dropdown.Toggle>\n                                <Dropdown.Menu>\n                                    {me_subCategory.map(currentActive => (\n                                        <Dropdown.Item\n                                            onClick={() => {\n                                                setCurrentPageNo(1) \n                                                setMainCategory('Mechanical Engineering')\n                                                setSubCategory(currentActive)\n                                                }\n                                            }\n                                        >{currentActive}</Dropdown.Item>\n                                    ))}\n                                </Dropdown.Menu>\n                            </Dropdown>\n                        \n                            <Dropdown as={ButtonGroup}>\n                                <Button\n                                    variant='transparent'\n                                    style={{textAlign: 'left'}}\n                                    onClick={() => {\n                                        setCurrentPageNo(1) \n                                        setMainCategory('DC Power Systems')\n                                        setSubCategory('')\n                                        }\n                                    }  \n                                >DC Power Systems</Button>\n                                <Dropdown.Toggle variant=\"transparent\" id=\"dropdown-basic\"></Dropdown.Toggle>\n                                <Dropdown.Menu>\n                                    {dc_subCategory.map(currentActive => (\n                                        <Dropdown.Item\n                                            key={currentActive}\n                                            onClick={() => {\n                                                setCurrentPageNo(1) \n                                                setMainCategory('DC Power Systems')\n                                                setSubCategory(currentActive)\n                                                }\n                                            }\n                                        >{currentActive}</Dropdown.Item>\n                                    ))}\n                                </Dropdown.Menu>\n                            </Dropdown>\n                        \n                            <Dropdown as={ButtonGroup}>\n                                <Button\n                                    variant='transparent'\n                                    style={{textAlign: 'left'}}\n                                    onClick={() => {\n                                        setCurrentPageNo(1) \n                                        setMainCategory('Electrical Engineering Equipment')\n                                        setSubCategory('')\n                                        }\n                                    }   \n                                >\n                                    Electrical Engineering<br/>Equipment\n                                </Button>\n                                <Dropdown.Toggle variant=\"transparent\" id=\"dropdown-basic\" split></Dropdown.Toggle>\n                                <Dropdown.Menu>\n                                    {eee_subCategory.map(currentActive => (\n                                        <Dropdown.Item\n                                            key={currentActive}\n                                            onClick={() => {\n                                                setCurrentPageNo(1) \n                                                setMainCategory('Electrical Engineering Equipment')\n                                                setSubCategory(currentActive)\n                                                }\n                                            }\n                                        >{currentActive}</Dropdown.Item>\n                                    ))}\n                                </Dropdown.Menu>\n                            </Dropdown>\n                        \n                            <Dropdown as={ButtonGroup}>\n                                <Button\n                                    variant='transparent'\n                                    style={{textAlign: 'left'}}\n                                    onClick={() => {\n                                        setCurrentPageNo(1) \n                                        setMainCategory('Test Equipment')\n                                        setSubCategory('')\n                                        }\n                                    }\n                                >\n                                    Test Equipment\n                                </Button>\n                                <Dropdown.Toggle variant=\"transparent\" id=\"dropdown-basic\" split></Dropdown.Toggle>\n                                <Dropdown.Menu>\n                                    {te_subCategory.map(currentActive => (\n                                        <Dropdown.Item\n                                            key={currentActive}\n                                            onClick={() => {\n                                                setCurrentPageNo(1) \n                                                setMainCategory('Test Equipment')\n                                                setSubCategory(currentActive)\n                                                }\n                                            }\n                                        >{currentActive}</Dropdown.Item>\n                                    ))}\n                                </Dropdown.Menu>\n                            </Dropdown>\n\n                            <Dropdown as={ButtonGroup}>\n                                <Button\n                                    variant='transparent'\n                                    style={{textAlign: 'left'}}\n                                    onClick={() => {\n                                        setCurrentPageNo(1) \n                                        setMainCategory('Others')\n                                        setSubCategory('')\n                                        }\n                                    }\n                                >\n                                    Others\n                                </Button>\n                            </Dropdown>\n                        </ButtonGroup>\n                    </Col>\n                    <Col sm={9} style={{padding: '10px'}}>\n                        {loading ? <Loader/> : (\n                            <Row style={{textAlign: 'center', paddingRight: '20px'}}>\n                                {products && (products.length !== 0) ? products.map( product => (\n                                    <Col style={{padding: '10px 0 15px 0', marginLeft: '10px'}}>\n                                        <img src={`${product.image.url}`} height='200px' width='200px' className='mb-3'/>\n                                        <br/>\n                                        <Link to={`/product/${product._id}`} className=\"text-nowrap\">\n                                            {getName(product.name)}\n                                        </Link>\n                                    </Col>\n                                )) : (\n                                    <Col>\n                                        <h3 style={{margin: '10px 0'}}>No products found.</h3>\n                                    </Col>\n                                )}\n                            </Row>\n                        )}\n                    </Col>\n                </Row>\n            </Container>\n\n            {resPerPage < count && (\n                <div className=\"d-flex justify-content-center mt-5\">\n                    <Pagination \n                        activePage={currentPage}\n                        itemsCountPerPage={resPerPage}\n                        totalItemsCount={productsCount}\n                        onChange={setCurrentPageNo}\n                        nextPageText={'Next'}\n                        prevPageText={'Prev'}\n                        firstPageText={'First'}\n                        lastPageText={'Last'}\n                        itemClass='page-item'\n                        linkClass='page-link'\n                    />\n                </div>\n            )}\n        </Fragment>\n    )\n}\n\nexport default Products","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/Header.js",["288","289","290"],"import React, { Fragment, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useAlert } from 'react-alert'\nimport { logout } from './../../actions/userActions'\nimport {Navbar, Nav, Dropdown, Card } from 'react-bootstrap'\nimport '../../css/bootstrap.min.css'\nimport '../../css/styles.css'\n\nconst Header = () => {\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { user } = useSelector(state => state.auth)\n\n    const logoutHandler = () => {\n        dispatch(logout())\n        alert.success('Logged out successfully')\n    }\n    \n    let userAvatar = \"\"\n    let userName = \"\"\n\n    if(user && user.avatar) {\n        userAvatar = user.avatar.url\n    } else {\n        userAvatar = \"\"\n    }\n\n    if (user && user.name) {\n        userName = user.name\n    } else {\n        userName = ''\n    }\n    \n    function getFirstName() {\n        let x = userName.split(' ')\n        let name = x[0]\n        let firstName = ''\n\n        for (var i = 0; i < name.length; i++) {\n            if(i == 8) {\n                firstName += '...'\n                break\n            }\n\n            firstName += name.charAt(i)\n        }\n        \n        return firstName\n    }\n\n    return (\n        <Fragment>\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\" fixed=\"top\">\n                <Navbar.Brand>\n                    <Link to='/'>\n                        <img className=\"nav-link nav-logo\" alt=\"Agile Technodynamics, Inc.\" src=\"https://res.cloudinary.com/agiletechnodynamicsinc/image/upload/v1615205387/websiteImages/agile-header-logo_tan5lw.png\"/>\n                    </Link>\n                </Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <Nav className=\"mr-auto justify-space-between flex-grow-1\">\n                        <Nav.Link  href='/' className=\"header-link\" style={{fontWeight: 'bold', color: \"rgb(13, 22, 63)\"}}>\n                            Home\n                        </Nav.Link>\n                        <Nav.Link  href='/about-us' className=\"header-link\" style={{fontWeight: 'bold', color: \"rgb(13, 22, 63)\"}}>\n                            About Us\n                        </Nav.Link>\n                        <Nav.Link  href='/products' className=\"header-link\" style={{fontWeight: 'bold', color: \"rgb(13, 22, 63)\"}}>\n                            Products\n                        </Nav.Link>\n                        <Nav.Link  href='/services' className=\"header-link\" style={{fontWeight: 'bold', color: \"rgb(13, 22, 63)\"}}>\n                            Services\n                        </Nav.Link>\n                        <Nav.Link  href='/contact-us' className=\"header-link\" style={{fontWeight: 'bold', color: \"rgb(13, 22, 63)\"}}>\n                            Contact Us\n                        </Nav.Link>\n                    </Nav>\n                    {user ? (\n                        <Nav inline>\n                            <Dropdown className=\"user-dropdown\">\n                                <Dropdown.Toggle\n                                    variant=\"transparent\"\n                                    id=\"dropdown-basic\"\n                                >\n                                    <img \n                                        class='mr-2 rounded-circle'\n                                        src={userAvatar}\n                                        alt=\"Avatar\"\n                                        width='30' \n                                        height='32'\n                                    /> {user && getFirstName()}\n                                </Dropdown.Toggle>\n\n                                <Dropdown.Menu>\n                                    <Dropdown.Item>\n                                        <Link to='/admin/dashboard'>Dashboard</Link>\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"text-danger\"\n                                        onClick={() => logoutHandler()}\n                                    >Log Out</Dropdown.Item>\n                                </Dropdown.Menu>\n                            </Dropdown>\n                        </Nav>\n                    ) : <Nav></Nav>}\n                </Navbar.Collapse>\n            </Navbar>\n        </Fragment>\n    )\n}\n\nexport default Header","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/UpdateProfile.js",["291"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { useAlert } from 'react-alert'\nimport { Link } from 'react-router-dom'\nimport { Modal, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateProfile, loadUser, clearErrors, logout} from './../../actions/userActions'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { UPDATE_PROFILE_RESET, UPDATE_PROFILE_REQUEST } from '../../constants/userConstants'\nimport imageCompression from 'browser-image-compression'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/sidebar.css'\nimport '../../css/sidebar-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst UpdateProfile = ({history}) => {\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { loading: userLoading, user } = useSelector(state => state.auth)\n    const { error, isUpdated, loading } = useSelector(state => state.user)\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [contactNumber, setContactNumber] = useState('')\n    const [address, setAddress] = useState('')\n    const [avatar, setAvatar] = useState('')\n    const [avatarPreview, setAvatarPreview] = useState('images/default_avatar.png')\n    const [isToggled, setToggled] = useState('false')\n    const [show, setShow] = useState(false)\n\n    const handleToggle = () => setToggled(!isToggled)\n    const handleClose = () => setShow(false)\n    const handleShow = () => setShow(true)\n\n    const logoutHandler = () => {\n        dispatch(logout())\n        alert.success('Logged out successfully')\n    }\n\n    const discardChanges = () => {\n        handleClose()\n        window.history.back()\n    }\n\n    const submitHandler = e => {\n        e.preventDefault()\n\n        const formData = new FormData()\n        formData.set('name', name)\n        formData.set('email', email)\n        formData.set('contactNumber', contactNumber)\n        formData.set('address', address)\n        formData.set('avatar', avatar)\n\n        dispatch(updateProfile(formData))\n    }\n\n    const onChange = file => {\n        const reader = new FileReader()\n\n        reader.onload = () => {\n            if(reader.readyState === 2){\n                setAvatarPreview(reader.result)\n                setAvatar(reader.result)\n            }\n        }\n        \n        reader.readAsDataURL(file)\n\n        dispatch({\n            type: UPDATE_PROFILE_RESET\n        })\n    }\n    \n    const handleImageUpload = e => {\n        var imageFile = e.target.files[0]\n      \n        if(!imageFile.type.match(/image.*/)){\n            dispatch({\n                type: UPDATE_PROFILE_REQUEST\n            })\n\n            setAvatarPreview(user.avatar.url)\n            return alert.error('Please upload an image file')\n        }\n\n        var options = {\n          maxSizeMB: 0.6,\n          maxWidthOrHeight: 1920,\n          useWebWorker: true\n        }\n\n        imageCompression(imageFile, options)\n            .then(function (compressedFile) {\n                onChange(compressedFile)  \n            })\n            .catch(function (error) {\n                console.log(error.message)\n            })\n\n        dispatch({\n            type: UPDATE_PROFILE_REQUEST\n        })\n    }\n\n    useEffect(() => {\n        if(user) {\n            setName(user.name)\n            setEmail(user.email)\n            setContactNumber(user.contactNumber)\n            setAddress(user.address)\n            setAvatarPreview(user.avatar.url)\n        }\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n            dispatch({\n                type: UPDATE_PROFILE_RESET\n            })\n        }\n\n        if(isUpdated){\n            history.push('/admin/me')\n            alert.success('User updated successfully')\n            dispatch(loadUser())\n\n            dispatch({\n                type: UPDATE_PROFILE_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n\n    }, [dispatch, alert, error, history, user, isUpdated])\n\n    return (\n        <Fragment>\n            <MetaData title={'Edit Profile'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}>\n                <div id=\"sidebar-wrapper\" >\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )\n                        }\n                        <hr/>\n                        <li> <Link to=\"/admin/dashboard/help\"><i className=\"fa fa-question-circle\"></i> Help</Link></li>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <div style={{width: '100%', height: '40px', position: 'fixed', background: 'white', zIndex: '999'}}>\n                            <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\n                                <i className=\"fa fa-bars\"></i>\n                            </a>\n                            <button className=\"btn btn-primary\" onClick={handleShow} style={{marginLeft: '35px', marginTop: '5px', fontSize: '12px', background: 'transparent', color: '#0d163f', border: 'none', position: 'fixed', zIndex: '999'}}>\n                                <i className=\"fa fa-arrow-left fa-inverse\" style={{color: '#0d163f'}}></i> Back\n                            </button>\n                        </div>\n                        <Modal show={show} onHide={handleClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Discard Changes?</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>Are you sure you want to discard your changes?</Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={handleClose}>\n                                    Close\n                                </Button>\n                                <Button variant=\"primary\" onClick={discardChanges}>\n                                    Yes, I'm sure\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                        <div className=\"container\">\n                            <div className=\"main-body\">\n                                <h1 style={{textAlign: 'center', padding:'0 0 15px 0'}}>Edit Profile</h1>\n                                {userLoading ? <Loader/> : (\n                                    <Fragment>\n                                        <div className=\"row gutters-sm\">\n                                            <div className=\"col-md-4 mb-3\">\n                                                <div className=\"card\">\n                                                    <div className=\"card-body\">\n                                                        <div className=\"d-flex flex-column align-items-center text-center\">\n                                                            <img src={avatarPreview} alt=\"Avatar\" className=\"rounded-circle\" width=\"150px\" height=\"150px\"/>\n                                                            <div className=\"mt-3\">\n                                                            <hr/>\n                                                            <input \n                                                                type=\"file\" \n                                                                id=\"avatar\" \n                                                                name=\"avatar\" \n                                                                accept=\"images/*\"\n                                                                onChange={handleImageUpload}\n                                                                style={{width: '90%'}}\n                                                                required\n                                                            />\n                                                            <br/>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"col-md-8\">\n                                                <div className=\"card mb-3\">\n                                                    <div className=\"card-body\">\n                                                        <form method=\"post\" onSubmit={submitHandler}>\n                                                            <div className=\"row\">\n                                                                <div className=\"col-sm-3\">\n                                                                <h6 className=\"mb-0\">Full Name</h6>\n                                                                </div>\n                                                                <div className=\"col-sm-9 text-secondary\">\n                                                                <input \n                                                                    type=\"text\" \n                                                                    className=\"form-control\" \n                                                                    name=\"name\"\n                                                                    value={name}\n                                                                    pattern=\"[A-Za-z.\\s]{1,}\"\n                                                                    placeholder=\"Name\"\n                                                                    onChange={e => setName(e.target.value)}\n                                                                    required\n                                                                />\n                                                                </div>\n                                                            </div>\n                                                            <hr/>\n                                                            <div className=\"row\">\n                                                                <div className=\"col-sm-3\">\n                                                                <h6 className=\"mb-0\">Email</h6>\n                                                                </div>\n                                                                <div className=\"col-sm-9 text-secondary\">\n                                                                <input \n                                                                    type=\"email\" \n                                                                    className=\"form-control\" \n                                                                    name=\"email\"\n                                                                    value={email}\n                                                                    placeholder=\"Email\"\n                                                                    onChange={e => setEmail(e.target.value)}\n                                                                    required\n                                                                />\n                                                                </div>\n                                                            </div>\n                                                            <hr/>\n                                                            <div className=\"row\">\n                                                                <div className=\"col-sm-3\">\n                                                                <h6 className=\"mb-0\">Phone</h6>\n                                                                </div>\n                                                                <div className=\"col-sm-9 text-secondary\">\n                                                                <input \n                                                                    type=\"text\" \n                                                                    className=\"form-control\" \n                                                                    name=\"contactNumber\"\n                                                                    value={contactNumber}\n                                                                    placeholder=\"09xx-xxx-xxxx\"\n                                                                    pattern=\"^[0][9]\\d{2}-\\d{3}-\\d{4}$\"\n                                                                    onChange={e => setContactNumber(e.target.value)}\n                                                                    required\n                                                                />\n                                                                </div>\n                                                            </div>\n                                                            <hr/>\n                                                            <div className=\"row\">\n                                                                <div className=\"col-sm-3\">\n                                                                <h6 className=\"mb-0\">Address</h6>\n                                                                </div>\n                                                                <div className=\"col-sm-9 text-secondary\">\n                                                                    <textarea \n                                                                        type=\"text\"\n                                                                        className=\"form-control\"\n                                                                        name=\"address\"\n                                                                        value={address}\n                                                                        placeholder=\"Address\"\n                                                                        onChange={e => setAddress(e.target.value)}\n                                                                        style={{height: '150px', minHeight: '50px'}}\n                                                                    />\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"row\">\n                                                                <div className=\"col-sm-12\">\n                                                                    <button\n                                                                        className=\"btn btn-primary btn-block mt-5\"\n                                                                        type=\"submit\"\n                                                                        disabled={loading ? true : false}\n                                                                        style={loading ? {pointerEvents: 'none'} : {cursor: 'pointer'}}\n                                                                    >Update Profile</button>\n                                                                </div>\n                                                            </div>\n                                                        </form>\n                                                            <div className=\"row\">\n                                                                <div className=\"col-sm-12\">\n                                                                    <button\n                                                                        className=\"btn btn-secondary btn-block mt-2\"\n                                                                        onClick={handleShow}\n                                                                    >Discard</button>\n                                                                </div>\n                                                            </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </Fragment>\n                                )}\n                            </div>\n                        </div>    \n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default UpdateProfile\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/ListAbout.js",["292"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/ListHome.js",["293","294"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/ListFooter.js",["295"],"import React, { Fragment, useEffect , useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTableV5 } from 'mdbreact'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getFooterDetails, clearErrors } from '../../actions/websiteActions'\nimport { logout } from './../../actions/userActions'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { UPDATE_FOOTER_RESET } from '../../constants/websiteConstants'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/sidebar.css'\nimport '../../css/sidebar-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst ListFooter = ({history}) => {\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { loading, error, footerInfo } = useSelector(state => state.footerDetails)\n    const { isUpdated } = useSelector(state => state.website)\n    const { user } = useSelector(state => state.auth)\n\n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => setToggled(!isToggled)\n\n    const logoutHandler = () => {\n        dispatch(logout())\n        alert.success('Logged out successfully')\n    }\n\n    useEffect(() => {\n        dispatch(getFooterDetails())\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n        \n        if(isUpdated){\n            alert.success('Footer has been updated successfully.')\n            history.push('/admin/footer')\n\n            dispatch({\n                type: UPDATE_FOOTER_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, isUpdated, history])\n\n    const setFooterData = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Details',\n                    field: 'text',\n                }\n            ],\n            rows: [\n                {\n                    text: footerInfo.footerTitle\n                },\n                {\n                    text: footerInfo.footerDescription\n                },\n                {\n                    text: footerInfo.addressInfo\n                },\n                {\n                    text: footerInfo.phoneInfo\n                },\n                {\n                    text: footerInfo.cellphoneInfo\n                },\n                {\n                    text: footerInfo.emailInfo\n                }\n            ]\n         }\n         return data\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Footer Details'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}>\n                <div id=\"sidebar-wrapper\">\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )\n                        }\n                        <hr/>\n                        <li> <Link to=\"/admin/dashboard/help\"><i className=\"fa fa-question-circle\"></i> Help</Link></li>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\n                        </a>\n                        <Fragment>\n                        <div style={{padding: '30px'}}>\n                            <div style={{display: 'flex'}}>\n                                <div style={{marginRight: 'auto'}}>\n                                    <h1 className='mt-3 mb-3 ml-10 mr-10'>Footer Details</h1>\n                                </div>\n                                <div style={{marginLeft: 'auto', marginTop: '30px'}}>\n                                    <Link to='/admin/update-footer'>\n                                        <button className='btn btn-primary btn-sm text-capitalize mb-5'>\n                                            Update\n                                        </button>\n                                    </Link>\n                                </div>\n                            </div>\n                            {loading ? <Loader/> : (\n                                <MDBDataTableV5\n                                    data={setFooterData()}\n                                    paging={false}\n                                    searcing={false}\n                                    searchTop\n                                    searchBottom={false}\n                                    scrollX\n                                    sortable={false}\n                                    hover\n                                />\n                            )}\n                        </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListFooter\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/Profile.js",["296"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useAlert } from 'react-alert'\nimport { logout } from './../../actions/userActions'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport MetaData from './../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/profile.css'\nimport '../../css/sidebar.css'\nimport '../../css/sidebar-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst Profile = () => {\n    const dispatch = useDispatch()\n    const alert = useAlert()\n\n    const { user, loading } = useSelector(state => state.auth)\n    \n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => setToggled(!isToggled)\n    \n    const logoutHandler = () => {\n        dispatch(logout())\n        alert.success('Logged out successfully')\n    }\n\n    useEffect(() => {\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch])\n\n    return (\n        <Fragment>\n            {loading ? <Loader /> : (\n                <Fragment>\n                    <MetaData title={'My Profile'} />\n                    <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}>\n                        <div id=\"sidebar-wrapper\" >\n                            <ul className=\"sidebar-nav\">\n                                <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                                <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                                <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                                <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                                {user && user.role !== 'admin' ? (\n                                        <Fragment>\n                                            <hr/>\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                        </Fragment>\n                                    ) : (\n                                        <Fragment>\n                                            <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                            <hr/>\n                                            <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                            <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                            <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                            <hr/>\n                                            <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                            <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                        </Fragment>\n                                    )\n                                }\n                                <hr/>\n                                <li> <Link to=\"/admin/dashboard/help\"><i className=\"fa fa-question-circle\"></i> Help</Link></li>\n                                <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                            </ul>\n                        </div>\n                            <div className=\"page-content-wrapper\">\n                                <div className=\"container-fluid\">\n                                    <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\n                                        <i className=\"fa fa-bars\"   ></i>\n                                    </a>\n                                    <div className=\"container\">\n                                        <div className=\"main-body\">\n                                            <h1 style={{textAlign: 'center', padding:'0 0 15px 0'}}>My Profile</h1>\n                                            {loading ? <Loader/> : (\n                                                <Fragment>\n                                                    <div className=\"row gutters-sm\">\n                                                        <div className=\"col-md-4 mb-3\">\n                                                            <div className=\"card\">\n                                                                <div className=\"card-body\">\n                                                                    <div className=\"d-flex flex-column align-items-center text-center\">\n                                                                        <img src={user.avatar.url} alt=\"Avatar\" className=\"rounded-circle\" width=\"150px\" height=\"150px\"/>\n                                                                        <div className=\"mt-3\">\n                                                                            <h4>{user.name}</h4>\n                                                                            <p className=\"text-dark mb-1\" style={{textTransform: 'uppercase'}}>{user.role}</p>\n                                                                            <Link className=\"btn btn-dark btn-sm ml-3 mt-3\" type=\"button\" to=\"/admin/edit-profile\">Edit Profile</Link>\n                                                                            <Link className=\"btn btn-dark btn-sm ml-3 mt-3\" type=\"button\" to=\"/password/update\">Change Password</Link>\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <div className=\"col-md-8\">\n                                                            <div className=\"card mb-3\">\n                                                                <div className=\"card-body\">\n                                                                    <div className=\"row\">\n                                                                        <div className=\"col-sm-3\">\n                                                                            <h6 className=\"mb-0\">Full Name</h6>\n                                                                        </div>\n                                                                        <div className=\"col-sm-9 text-dark\">\n                                                                            {user.name}\n                                                                        </div>\n                                                                    </div>\n                                                                    <hr/>\n                                                                    <div className=\"row\">\n                                                                        <div className=\"col-sm-3\">\n                                                                            <h6 className=\"mb-0\">Email</h6>\n                                                                        </div>\n                                                                        <div className=\"col-sm-9 text-dark\">\n                                                                            {user.email}\n                                                                        </div>\n                                                                    </div>\n                                                                    <hr/>\n                                                                    <div className=\"row\">\n                                                                        <div className=\"col-sm-3\">\n                                                                            <h6 className=\"mb-0\">Phone</h6>\n                                                                        </div>\n                                                                        <div className=\"col-sm-9 text-dark\">\n                                                                            {user.contactNumber}\n                                                                        </div>\n                                                                    </div>\n                                                                    <hr/>\n                                                                    <div className=\"row\">\n                                                                        <div className=\"col-sm-3\">\n                                                                            <h6 className=\"mb-0\">Address</h6>\n                                                                        </div>\n                                                                        <div className=\"col-sm-9 text-dark\">\n                                                                            {user.address}\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </Fragment>\n                                            )}\n                                        </div>\n                                    </div>    \n                                </div>\n                            </div>\n                        </div>\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nexport default Profile\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/UpdatePassword.js",["297","298","299","300"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from  'react-redux'\nimport { Popover, OverlayTrigger, Modal, Button } from 'react-bootstrap'\nimport { updatePassword, clearErrors, logout } from './../../actions/userActions'\nimport { UPDATE_PASSWORD_RESET } from '../../constants/userConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport MetaData from '../layout/MetaData'\nimport '../../css/sidebar.css'\nimport '../../css/sidebar-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst popover = (\n    <Popover id=\"popover-basic\">\n      <Popover.Title as=\"h3\">Password Requirements</Popover.Title>\n      <Popover.Content>\n          &bull; Minimum of <strong>6 characters</strong>. <br/>\n          &bull; Must have at least 1 <strong>Uppercase and Lowercase</strong> letter.<br/>\n          &bull; Must have at least 2 <strong>numeric digits</strong>.<br/>\n          &bull; Must have <strong>no spaces</strong>.\n      </Popover.Content>\n    </Popover>\n)\n\nconst UpdatePassword = ({history}) => {\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { error, isUpdated, loading } = useSelector(state => state.user)\n    const { user } = useSelector(state => state.auth)\n\n    const [oldPassword, setOldPassword] = useState('')\n    const [newPassword, setNewPassword] = useState('')\n    const [isToggled, setToggled] = useState('false')\n    const [showOld, setOld] = useState('false')\n    const [showNew, setNew] = useState('false')\n    const [show, setShow] = useState(false)\n\n    const showOldToggle = () => setOld(!showOld)\n    const showNewToggle = () => setNew(!showNew)\n    const handleToggle = () => setToggled(!isToggled)\n    const handleClose = () => setShow(false)\n    const handleShow = () => setShow(true)\n    \n    const logoutHandler = () => {\n        dispatch(logout())\n        alert.success('Logged out successfully')\n    }\n    \n    const submitHandler = e => {\n        e.preventDefault()\n\n        const formData = new FormData()\n        formData.set('oldPassword', oldPassword)\n        formData.set('newPassword', newPassword)\n\n        dispatch(updatePassword(formData))\n    }\n    \n    const discardChanges = () => {\n        handleClose()\n        window.history.back()\n    }\n\n    useEffect(() => {\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n            dispatch({\n                type: UPDATE_PASSWORD_RESET\n            })\n        }\n\n        if(isUpdated){\n            history.push('/admin/me')\n            alert.success('Password updated successfully.')\n\n            dispatch({\n                type: UPDATE_PASSWORD_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n\n    }, [dispatch, alert, error, history, isUpdated])\n    \n    return (\n        <Fragment>\n            <MetaData title={'Change Password'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}>\n                <div id=\"sidebar-wrapper\" >\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )\n                        }\n                        <hr/>\n                        <li> <Link to=\"/admin/dashboard/help\"><i className=\"fa fa-question-circle\"></i> Help</Link></li>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <div style={{width: '100%', height: '40px', position: 'fixed', background: 'white'}}>\n                            <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\n                                <i className=\"fa fa-bars\"></i>\n                            </a>\n                            <button className=\"btn btn-primary\" onClick={handleShow} style={{marginLeft: '35px', marginTop: '5px', fontSize: '12px', background: 'transparent', color: '#0d163f', border: 'none', position: 'fixed', zIndex: '999'}}>\n                                <i className=\"fa fa-arrow-left fa-inverse\" style={{color: '#0d163f'}}></i> Back\n                            </button>\n                        </div>\n                        <Modal show={show} onHide={handleClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Discard Changes?</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>Are you sure you want to discard your changes?</Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={handleClose}>\n                                    Close\n                                </Button>\n                                <Button variant=\"primary\" onClick={discardChanges}>\n                                    Yes, I'm sure\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                        <div className=\"login-clean\" style={{paddingTop: '65px'}}>\n                            <form method=\"post\" onSubmit={submitHandler}>\n                                <h2 className=\"sr-only\">Change Password</h2>\n                                <div className=\"div-forgot-password\">\n                                    <h3 className=\"forgot-password-heading\">Change Password \n                                        <span className='fa-xs' style={{margin: 'auto', paddingLeft: '15px'}}>\n                                            <OverlayTrigger trigger=\"hover\" placement=\"right\" overlay={popover}>\n                                                <i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i>\n                                            </OverlayTrigger>\n                                        </span>\n                                    </h3>\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Old Password</h6>\n                                    <div class=\"input-group mb-3\">\n                                        <input \n                                            type={showOld ? \"password\" : \"text\"} \n                                            className=\"form-control\" \n                                            name=\"oldPassword\"\n                                            value={oldPassword}\n                                            placeholder=\"Old Password\"\n                                            onChange={e => setOldPassword(e.target.value)}\n                                            aria-label=\"oldpassword\" aria-describedby=\"basic-addon1\"\n                                            required\n                                        />\n                                        <div class=\"input-group-prepend\">\n                                            <span class=\"input-group-text\" id=\"basic-addon1\">\n                                                <a\n                                                    onClick={showOldToggle}\n                                                    style={{cursor: 'pointer'}}\n                                                >\n                                                    <span className=\"fa-lg\">\n                                                        <i className={showOld ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\n                                                    </span>\n                                                </a>\n                                            </span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>New Password</h6>\n                                    <div class=\"input-group mb-3\">\n                                        <input\n                                            type={showNew ? \"password\" : \"text\"} \n                                            className=\"form-control\"\n                                            name=\"newPassword\"\n                                            value={newPassword}\n                                            placeholder=\"New Password\"\n                                            onChange={e => setNewPassword(e.target.value)}\n                                            aria-label=\"newpassword\" aria-describedby=\"basic-addon1\"\n                                            required\n                                        />\n                                        <div class=\"input-group-prepend\">\n                                            <span class=\"input-group-text\" id=\"basic-addon1\">\n                                                <a\n                                                    onClick={showNewToggle}\n                                                    style={{cursor: 'pointer'}}\n                                                >\n                                                    <span className=\"fa-lg\">\n                                                        <i className={showNew ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\n                                                    </span>\n                                                </a>\n                                            </span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"form-group\">\n                                    <button\n                                        className=\"btn btn-primary btn-block\"\n                                        type=\"submit\"\n                                        disabled={loading ? true : false}\n                                        style={loading ? {pointerEvents: 'none'} : {cursor: 'pointer'}}\n                                    >Update Password</button>\n                                </div>\n                                <div className=\"form-group\">\n                                    <a\n                                        className=\"btn btn-secondary btn-block mt-2\"\n                                        onClick={handleShow}\n                                        style={{color: 'white'}}\n                                    >Discard</a>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default UpdatePassword\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/Dashboard.js",["301","302"],"import React, { Fragment, useEffect, useState} from 'react'\nimport { Link } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { listInquiry } from '../../actions/inquiryActions'\nimport { getUsers, logout } from '../../actions/userActions'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/dashboard.css'\nimport '../../css/sidebar.css'\nimport '../../css/sidebar-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst Dashboard = () => {\n    const dispatch = useDispatch()\n    const alert = useAlert()\n\n    const { loading, adminCount, superadminCount } = useSelector(state => state.users)\n    const { inquiryCount, appointmentCount, otherCount } = useSelector(state => state.listInquiry)\n    const { user } = useSelector(state => state.auth)\n\n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => setToggled(!isToggled)\n    \n    const logoutHandler = () => {\n        dispatch(logout())\n        alert.success('Logged out successfully')\n    }\n\n    useEffect(() => {\n        if(user.role === 'admin'){\n            dispatch(listInquiry())\n        } else {\n            dispatch(getUsers())\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch])\n    \n    return (\n        <Fragment>\n            <MetaData title={'Dashboard'}/>\n            <Fragment>\n                {loading ? <Loader/> : (\n                    <Fragment>\n                        <MetaData title={'Admin Dashboard'}/>\n                        <div id=\"wrapper\" className={isToggled ? null : \"toggled\"}>\n                            <div id=\"sidebar-wrapper\" >\n                                <ul className=\"sidebar-nav\">\n                                    <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                                    <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                                    <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                                    <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                                    {user && user.role !== 'admin' ? (\n                                            <Fragment>\n                                                <hr/>\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                            </Fragment>\n                                        ) : (\n                                            <Fragment>\n                                                <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                                <hr/>\n                                                <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                                <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                                <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                                <hr/>\n                                                <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                                <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                            </Fragment>\n                                        )\n                                    }\n                                    <hr/>\n                                    <li> <Link to=\"/admin/dashboard/help\"><i className=\"fa fa-question-circle\"></i> Help</Link></li>\n                                    <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                                </ul>\n                            </div>\n                            <div className=\"page-content-wrapper\">\n                                <div className=\"container-fluid\">\n                                    <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\n                                        <i className=\"fa fa-bars\"   ></i>\n                                    </a>\n                                    {user && user.role !== 'admin' ? (\n                                        <Fragment>\n                                            <div className=\"main-section\" style={{paddingTop: '65px'}}>\n                                                <h3><strong>Overview</strong></h3>\n                                                <div className=\"dashbord\">\n                                                    <div className=\"icon-section\">\n                                                        <i className=\"fa fa-users\" aria-hidden=\"true\"></i><br/>\n                                                        <small>Admins</small>\n                                                        <p>{adminCount} admins</p>\n                                                    </div>\n                                                    <Link to=\"/admin/users/admin\" className=\"text-decoration-none text-white\">\n                                                        <div className=\"detail-section\">\n                                                            View <i className=\"fa fa-angle-right\"></i>\n                                                        </div>\n                                                    </Link>\n                                                </div>\n                                                <div className=\"dashbord\">\n                                                    <div className=\"icon-section\">\n                                                        <i className=\"fa fa-user-circle\" aria-hidden=\"true\"></i><br/>\n                                                        <small>Super Admins</small>\n                                                        <p>{superadminCount}  superadmins</p>\n                                                    </div>\n                                                    <Link to=\"/admin/users/superadmin\" className=\"text-decoration-none text-white\">\n                                                        <div className=\"detail-section\">\n                                                            View <i className=\"fa fa-angle-right\"></i>\n                                                        </div>\n                                                    </Link>\n                                                </div>\n                                            </div>\n                                        </Fragment>\n                                    ) : (\n                                        <Fragment>\n                                            <div className=\"main-section\" style={{paddingTop: '65px'}}>\n                                                <h3><strong>Inbox</strong></h3>\n                                                <div className=\"dashbord\">\n                                                    <div className=\"icon-section\">\n                                                        <i className=\"fa fa-envelope\" aria-hidden=\"true\"></i><br/>\n                                                        <small>Inquiries</small>\n                                                        <p>{inquiryCount} messages</p>\n                                                    </div>\n                                                    <Link to=\"/admin/inquiries\" className=\"text-decoration-none text-white\">\n                                                        <div className=\"detail-section\">\n                                                            View <i className=\"fa fa-angle-right\"></i>\n                                                        </div>\n                                                    </Link>\n                                                </div>\n                                                <div className=\"dashbord\">\n                                                    <div className=\"icon-section\">\n                                                        <i className=\"fa fa-archive\" aria-hidden=\"true\"></i><br/>\n                                                        <small>Appointments</small>\n                                                        <p>{appointmentCount} messages</p>\n                                                    </div>\n                                                    <Link to=\"/admin/appointments\" className=\"text-decoration-none text-white\">\n                                                        <div className=\"detail-section\">\n                                                            View <i className=\"fa fa-angle-right\"></i>\n                                                        </div>\n                                                    </Link>\n                                                </div>\n                                                <div className=\"dashbord\">\n                                                    <div className=\"icon-section\">\n                                                        <i className=\"fa fa-inbox\" aria-hidden=\"true\"></i><br/>\n                                                        <small>Other Concerns</small>\n                                                        <p>{otherCount} messages</p>\n                                                    </div>\n                                                    <Link to=\"/admin/others\" className=\"text-decoration-none text-white\">\n                                                        <div className=\"detail-section\">\n                                                            View <i className=\"fa fa-angle-right\"></i>\n                                                        </div>\n                                                    </Link>\n                                                </div>\n                                            </div>\n                                        </Fragment>\n                                    )}\n                                    <div className=\"main-section\" style={{paddingTop: '65px', paddingBottom: '65px'}}>\n                                        <h3><strong>Settings</strong></h3>\n                                        <div className=\"dashbord dashbord-25\">\n                                            <div className=\"icon-section\">\n                                                <i className=\"fa fa-home\" aria-hidden=\"true\"></i><br/>\n                                                <p>Update Home</p>\n                                            </div>\n                                            <Link to=\"/admin/home\" className=\"text-decoration-none text-white\">\n                                                <div className=\"detail-section\">\n                                                    Update <i className=\"fa fa-angle-right\"></i>\n                                                </div>\n                                            </Link>\n                                        </div>\n                                        <div className=\"dashbord dashbord-25\">\n                                            <div className=\"icon-section\">\n                                                <i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i><br/>\n                                                <p>Update About</p>\n                                            </div>\n                                            <Link to=\"/admin/about\" className=\"text-decoration-none text-white\">\n                                                <div className=\"detail-section\">\n                                                    Update <i className=\"fa fa-angle-right\"></i>\n                                                </div>\n                                            </Link>\n                                        </div>\n                                        <div className=\"dashbord dashbord-25\">\n                                            <div className=\"icon-section\">\n                                                <i className=\"fa fa-quote-left\" aria-hidden=\"true\"></i><br/>\n                                                <p>Update Footer</p>\n                                            </div>\n                                            <Link to=\"/admin/footer\" className=\"text-decoration-none text-white\">\n                                                <div className=\"detail-section\">\n                                                    Update <i className=\"fa fa-angle-right\"></i>\n                                                </div>\n                                            </Link>\n                                        </div>\n                                        <div className=\"dashbord dashbord-25\">\n                                            <div className=\"icon-section\">\n                                                <i className=\"fa fa-check\" aria-hidden=\"true\"></i><br/>\n                                                <p>Update Services</p>\n                                            </div>\n                                            <Link to=\"/admin/service\" className=\"text-decoration-none text-white\">\n                                                <div className=\"detail-section\">\n                                                    Update <i className=\"fa fa-angle-right\"></i>\n                                                </div>\n                                            </Link>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </Fragment>\n                )}\n            </Fragment>\n        </Fragment>\n    )\n}\n\nexport default Dashboard\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/ListServices.js",["303"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/UpdateHome.js",["304","305","306"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { OverlayTrigger, Tooltip, Modal, Button } from 'react-bootstrap'\nimport { updateHome, getHomeDetails, clearErrors } from '../../actions/websiteActions'\nimport { logout } from '../../actions/userActions'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { UPDATE_HOME_RESET, UPDATE_HOME_REQUEST } from '../../constants/websiteConstants'\nimport imageCompression from 'browser-image-compression'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/sidebar.css'\nimport '../../css/sidebar-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst UpdateHome = ({match, history}) => {\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { loading: homeLoading, error, home } = useSelector(state => state.homeDetails)\n    const { error: updateError, isUpdated, loading } = useSelector(state => state.website)\n    const { user } = useSelector(state => state.auth)\n    \n    const [name, setName] = useState('')\n    const [description, setDescription] = useState('')\n    const [image, setImage] = useState('')\n    const [imagePreview, setImagePreview] = useState('images/default_avatar.png')\n    const [isToggled, setToggled] = useState('false')\n    const [show, setShow] = useState(false)\n\n    const homeId = match.params.id\n\n    const handleToggle = () => setToggled(!isToggled)\n    const handleClose = () => setShow(false)\n    const handleShow = () => setShow(true)\n\n    const logoutHandler = () => {\n        dispatch(logout())\n        alert.success('Logged out successfully')\n    }\n\n    const submitHandler = e => {\n        e.preventDefault()\n\n        const formData = new FormData()\n        formData.set('name', name)\n        formData.set('description', description)\n        formData.set('image', image)\n\n        dispatch(updateHome(home._id, formData))\n    }\n\n    const onChange = file => {\n        const reader = new FileReader()\n\n        reader.onload = () => {\n            if(reader.readyState === 2){\n                setImagePreview(reader.result)\n                setImage(reader.result)\n            }\n        }\n\n        reader.readAsDataURL(file)\n        dispatch({\n            type: UPDATE_HOME_RESET\n        })\n    }\n\n    const handleImageUpload = e => {\n\n        var imageFile = e.target.files[0]\n\n        if(!imageFile.type.match(/image.*/)){\n            dispatch({\n                type: UPDATE_HOME_REQUEST\n            })\n\n            setImagePreview(home.image.url)\n            return alert.error('Please upload an image file')\n        }\n      \n        var options = {\n          maxSizeMB: 0.6,\n          maxWidthOrHeight: 1920,\n          useWebWorker: true\n        }\n        \n        imageCompression(imageFile, options)\n          .then(function (compressedFile) {\n      \n                onChange(compressedFile)  \n            })\n            .catch(function (error) {\n                console.log(error.message)\n            })\t\n\n            dispatch({\n                type: UPDATE_HOME_REQUEST\n            })\n    }\n\n    const discardChanges = () => {\n        handleClose()\n        window.history.back()\n    }\n\n    useEffect(() => {\n        if(home && home._id !== homeId) {\n            dispatch(getHomeDetails(homeId))\n        }\n        else {\n            setName(home.name)\n            setDescription(home.description)\n            setImagePreview(home.image.url)\n        }\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n            dispatch({\n                type: UPDATE_HOME_RESET\n            })\n        }\n        \n        if(updateError){\n            alert.error(updateError)\n            dispatch(clearErrors())\n            dispatch({\n                type: UPDATE_HOME_RESET\n            })\n        }\n\n        if(isUpdated){\n            alert.success('Home updated successfully')\n            dispatch(getHomeDetails(homeId))\n            history.push('/admin/home')\n\n            dispatch({\n                type: UPDATE_HOME_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n\n    }, [dispatch, alert, error, history, home, homeId, isUpdated, updateError])\n    \n    return (\n        <Fragment>\n            <MetaData title={'Update Home'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}>\n                <div id=\"sidebar-wrapper\">\n                        <ul className=\"sidebar-nav\">\n                            <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                            <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                            <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                            <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                            {user && user.role !== 'admin' ? (\n                                    <Fragment>\n                                        <hr/>\n                                            <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                            <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                            <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                    </Fragment>\n                                ) : (\n                                    <Fragment>\n                                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                        <hr/>\n                                        <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                        <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                        <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                        <hr/>\n                                        <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                        <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                    </Fragment>\n                                )\n                            }\n                            <hr/>\n                            <li> <Link to=\"/admin/dashboard/help\"><i className=\"fa fa-question-circle\"></i> Help</Link></li>\n                            <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"page-content-wrapper\">\n                        <div className=\"container-fluid\">\n                            <div style={{width: '100%', height: '40px', position: 'fixed', background: 'white'}}>\n                                <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\n                                    <i className=\"fa fa-bars\"></i>\n                                </a>\n                                <button className=\"btn btn-primary\" onClick={handleShow} style={{marginLeft: '35px', marginTop: '5px', fontSize: '12px', background: 'transparent', color: '#0d163f', border: 'none', position: 'fixed', zIndex: '999'}}>\n                                    <i className=\"fa fa-arrow-left fa-inverse\" style={{color: '#0d163f'}}></i> Back\n                                </button>\n                            </div>\n                            <Modal show={show} onHide={handleClose}>\n                                <Modal.Header closeButton>\n                                    <Modal.Title>Discard Changes?</Modal.Title>\n                                </Modal.Header>\n                                <Modal.Body>Are you sure you want to discard your changes?</Modal.Body>\n                                <Modal.Footer>\n                                    <Button variant=\"secondary\" onClick={handleClose}>\n                                        Close\n                                    </Button>\n                                    <Button variant=\"primary\" onClick={discardChanges}>\n                                        Yes, I'm sure\n                                    </Button>\n                                </Modal.Footer>\n                            </Modal>\n                            {homeLoading ? <Loader/> : (\n                                <Fragment>\n                                    <div className=\"login-clean\">\n                                        <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data' >\n                                            <h2 className=\"sr-only\">Update Home</h2>\n                                            <div className=\"div-forgot-password\">\n                                                <h3 className=\"forgot-password-heading\">Update Home </h3>\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <h6>Name</h6>\n                                                <input \n                                                    type=\"text\" \n                                                    className=\"form-control\" \n                                                    id=\"name\" \n                                                    name=\"name\" \n                                                    value={name}\n                                                    disabled={true}\n                                                    style={{backgroundColor: '#F5F5F5', color: 'gray'}}\n                                                    onChange={e => setName(e.target.value)}\n                                                    required\n                                                />\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <h6>Description</h6>\n                                                <textarea \n                                                    type=\"text\" \n                                                    className=\"form-control\" \n                                                    id=\"description\" \n                                                    name=\"description\" \n                                                    placeholder=\"Description\"\n                                                    value={description}\n                                                    disabled={String(home.name).includes('Description') ? false : true}\n                                                    style={String(home.name).includes('Description') ? {width: '100%', height: '150px', minHeight: '50px'} : {backgroundColor: '#F5F5F5', color: 'gray', width: '100%', height: '150px'}}\n                                                    onChange={e => setDescription(e.target.value)}\n                                                    required\n                                                />\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <h6>Image</h6>\n                                                <figure>\n                                                    <img \n                                                        src={imagePreview} \n                                                        className='mt-3 mr-2' \n                                                        width='110' \n                                                        height='104'\n                                                    />\n                                                </figure>\n                                                {String(home.name).includes('Description') ? (\n                                                    <OverlayTrigger overlay={<Tooltip id=\"tooltip-disabled\">Image upload disabled</Tooltip>}>\n                                                        <span className=\"d-inline-block\">\n                                                            <input \n                                                                type=\"file\" \n                                                                id=\"image\" \n                                                                name=\"image\" \n                                                                accept=\"images/*\"\n                                                                disabled={true} \n                                                                style={{ pointerEvents: 'none' }}\n                                                            />\n                                                        </span>\n                                                    </OverlayTrigger>\n                                                ) : (\n                                                    <input \n                                                        type=\"file\" \n                                                        id=\"image\" \n                                                        name=\"image\" \n                                                        accept=\"images/*\"\n                                                        onChange={handleImageUpload}\n                                                        required\n                                                    />\n                                                )}\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <button \n                                                    className=\"btn btn-primary btn-block\" \n                                                    type=\"submit\"\n                                                    disabled={loading ? true : false}\n                                                    style={loading ? {pointerEvents: 'none'} : {cursor: 'pointer'}}\n                                                >\n                                                    Update Home\n                                                </button>\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <a\n                                                    className=\"btn btn-secondary btn-block mt-2\"\n                                                    onClick={handleShow}\n                                                    style={{color: 'white'}}\n                                                >Discard</a>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </Fragment>\n                            )}\n                        </div>\n                    </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default UpdateHome\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/UpdateAbout.js",["307","308"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/UpdateServices.js",["309","310","311","312","313"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Link, Redirect } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Popover, OverlayTrigger, Modal, Button } from 'react-bootstrap'\nimport { updateServices, getServiceDetails, clearErrors } from '../../actions/websiteActions'\nimport { logout } from '../../actions/userActions'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { UPDATE_SERVICES_RESET } from '../../constants/websiteConstants'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/sidebar.css'\nimport '../../css/sidebar-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst popover = (\n    <Popover id=\"popover-basic\">\n      <Popover.Title as=\"h3\">Font Awesome Icons</Popover.Title>\n      <Popover.Content>\n            You may refer to this <a href='https://fontawesome.com/v4.7.0/icons/' target='_blank'>link</a> to the icon names.\n      </Popover.Content>\n    </Popover>\n)\n\nconst UpdateServices = ({match, history}) => {\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { loading: servicesLoading, error, service } = useSelector(state => state.serviceDetails)\n    const { error: updateError, isUpdated, loading } = useSelector(state => state.website)\n    const { user } = useSelector(state => state.auth)\n\n    const [title, setTitle] = useState('')\n    const [subtitle, setSubtitle] = useState('')\n    const [description, setDescription] = useState('')\n    const [iconBackground, setIconBackground] = useState('')\n    const [icon, setIcon] = useState('')\n    const [isToggled, setToggled] = useState('false')\n    const [show, setShow] = useState(false)\n\n    const serviceId = match.params.id\n\n    const handleToggle = () => setToggled(!isToggled)\n    const handleClose = () => setShow(false)\n    const handleShow = () => setShow(true)\n\n    const logoutHandler = () => {\n        dispatch(logout())\n\n        alert.success('Logged out successfully')\n    }\n\n    const submitHandler = e => {\n        e.preventDefault()\n\n        const formData = new FormData()\n        formData.set('title', title)\n        formData.set('subtitle', subtitle)\n        formData.set('description', description)\n        formData.set('iconBackground', iconBackground)\n        formData.set('icon', icon)\n\n        dispatch(updateServices(service._id, formData))\n    }\n\n    const discardChanges = () => {\n        handleClose()\n        window.history.back()\n    }\n\n    useEffect(() => {\n        if(service && service._id !== serviceId) {\n            dispatch(getServiceDetails(serviceId))\n        }\n        else {\n            setTitle(service.title)\n            setSubtitle(service.subtitle)\n            setDescription(service.description)\n            setIconBackground(service.iconBackground)\n            setIcon(service.icon)\n        }\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n            dispatch({\n                type: UPDATE_SERVICES_RESET\n            })\n        }\n        \n        if(updateError){\n            alert.error(updateError)\n            dispatch(clearErrors())\n            dispatch({\n                type: UPDATE_SERVICES_RESET\n            })\n        }\n\n        if(isUpdated){\n            dispatch(getServiceDetails(serviceId))\n            alert.success('Service updated successfully')\n            history.push('/admin/service')\n            dispatch({\n                type: UPDATE_SERVICES_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n\n    }, [dispatch, alert, error, history, service, serviceId, isUpdated, updateError])\n    \n    return (\n        <Fragment>\n            <MetaData title={'Update Services'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}>\n                <div id=\"sidebar-wrapper\" >\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )\n                        }\n                        <hr/>\n                        <li> <Link to=\"/admin/dashboard/help\"><i className=\"fa fa-question-circle\"></i> Help</Link></li>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div style={{width: '100%', height: '40px', position: 'fixed', background: 'white'}}>\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\n                            <i className=\"fa fa-bars\"></i>\n                        </a>\n                        <button className=\"btn btn-primary\" onClick={handleShow} style={{marginLeft: '35px', marginTop: '5px', fontSize: '12px', background: 'transparent', color: '#0d163f', border: 'none', position: 'fixed', zIndex: '999'}}>\n                            <i className=\"fa fa-arrow-left fa-inverse\" style={{color: '#0d163f'}}></i> Back\n                        </button>\n                    </div>\n                    <Modal show={show} onHide={handleClose}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>Discard Changes?</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>Are you sure you want to discard your changes?</Modal.Body>\n                        <Modal.Footer>\n                            <Button variant=\"secondary\" onClick={handleClose}>\n                                Close\n                            </Button>\n                            <Button variant=\"primary\" onClick={discardChanges}>\n                                Yes, I'm sure\n                            </Button>\n                        </Modal.Footer>\n                    </Modal>\n                    <div className=\"container-fluid\">\n                        {servicesLoading ? <Loader/> : (\n                            <Fragment>\n                                <div className=\"login-clean\">\n                                    <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data'>\n                                        <h2 className=\"sr-only\">Update Services</h2>\n                                        <div className=\"div-forgot-password\">\n                                            <h3 className=\"forgot-password-heading\">Update Services </h3>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <h6>Title</h6>\n                                            <input \n                                                type=\"text\" \n                                                className=\"form-control\" \n                                                id=\"title\" \n                                                name=\"title\" \n                                                placeholder=\"Title\"\n                                                value={title}\n                                                disabled={true}\n                                                style={{backgroundColor: '#F5F5F5', color: 'gray'}}\n                                                onChange={e => setTitle(e.target.value)}\n                                                required\n                                            />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <h6>Subtitle</h6>\n                                            <input \n                                                type=\"text\" \n                                                className=\"form-control\" \n                                                id=\"subtitle\" \n                                                name=\"subtitle\" \n                                                value={subtitle}\n                                                disabled={true}\n                                                onChange={e => setSubtitle(e.target.value)}\n                                                required\n                                            />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <h6>Description</h6>\n                                            <textarea\n                                                type=\"text\" \n                                                className=\"form-control\" \n                                                name=\"description\"\n                                                value={description}\n                                                placeholder=\"Services Description\"\n                                                style={{width: '100%', height: '150px', minHeight: '50px'}}\n                                                onChange={e => setDescription(e.target.value)}\n                                                height='55px'\n                                                required\n                                            />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <h6>Icon Background</h6>\n                                            <div class=\"input-group mb-3\">\n                                                <div class=\"input-group-prepend\">\n                                                    <span class=\"input-group-text\" id=\"basic-addon2\">\n                                                        Color\n                                                    </span>\n                                                </div>\n                                                <select\n                                                    id=\"iconBackground\" \n                                                    name=\"iconBackground\" \n                                                    value={iconBackground}\n                                                    aria-label=\"iconBackground\"\n                                                    aria-describedby=\"basic-addon2\"\n                                                    className=\"form-control\" \n                                                    onChange={e => setIconBackground(e.target.value)}\n                                                    required\n                                                >\n                                                    <option value=\"primary\">Blue</option>\n                                                    <option value=\"secondary\">Gray</option>\n                                                    <option value=\"success\">Green</option>\n                                                    <option value=\"info\">Light Blue</option>\n                                                    <option value=\"warning\">Yellow</option>\n                                                    <option value=\"danger\">Red</option>\n                                                    <option value=\"dark\">Dark Gray</option>\n                                                    <option value=\"indigo\">Indigo</option>\n                                                </select>\n                                            </div>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <h6>Icon (eg. eye, check, info) \n                                                <a href='https://fontawesome.com/v4.7.0/icons/' target='_blank' className='text-dark'>\n                                                    <span className='fa-m' style={{margin: 'auto', paddingLeft: '5px'}}>\n                                                        <OverlayTrigger trigger=\"hover\" placement=\"right\" overlay={popover}>\n                                                            <i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i>\n                                                        </OverlayTrigger>\n                                                    </span>\n                                                </a>\n                                            </h6>\n                                            <div class=\"input-group mb-3\">\n                                                <div class=\"input-group-prepend\">\n                                                    <span class=\"input-group-text\" id=\"basic-addon1\">\n                                                        fa-\n                                                    </span>\n                                                </div>\n                                                <input \n                                                    type=\"text\" \n                                                    className=\"form-control\" \n                                                    id=\"icon\" \n                                                    name=\"icon\" \n                                                    value={icon}\n                                                    onChange={e => setIcon(e.target.value)}\n                                                    aria-label=\"icon\"\n                                                    aria-describedby=\"basic-addon1\"\n                                                    required\n                                                />\n                                            </div>\n                                        </div>\n                                        <div className=\"form-group text-center\">\n                                            <h6 style={{textAlign: 'left'}}>Icon Preview</h6>\n                                            <span className=\"fa-stack fa-4x\">\n                                                <i className={`fa fa-circle fa-stack-2x text-${iconBackground}`}></i>\n                                                <i className={`fa fa-${icon} fa-stack-1x fa-inverse`}></i>\n                                            </span>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <button \n                                                className=\"btn btn-primary btn-block\" \n                                                type=\"submit\"\n                                                disabled={loading ? true : false}\n                                                style={loading ? {pointerEvents: 'none'} : {cursor: 'pointer'}}\n                                            >\n                                                Update Services\n                                            </button>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <a\n                                                className=\"btn btn-secondary btn-block mt-2\"\n                                                onClick={handleShow}\n                                                style={{color: 'white'}}\n                                            >Discard</a>\n                                        </div>\n                                    </form>\n                                </div>\n                            </Fragment>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default UpdateServices\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/UpdateFooter.js",["314","315"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Modal, Button } from 'react-bootstrap'\nimport { getFooterDetails, updateFooter, clearErrors } from '../../actions/websiteActions'\nimport { logout } from './../../actions/userActions'\nimport { UPDATE_FOOTER_RESET } from '../../constants/websiteConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/sidebar.css'\nimport '../../css/sidebar-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst UpdateFooter = ({history}) => {\n\n    const dispatch = useDispatch()\n    const alert = useAlert()\n\n    const { loading: footerLoading, error, footerInfo } = useSelector(state => state.footerDetails)\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.website)\n    const { user } = useSelector(state => state.auth)\n\n    const [footerTitle, setFooterTitle] = useState('')\n    const [footerDescription, setFooterDescription] = useState('')\n    const [addressInfo, setAddressInfo] = useState('')\n    const [phoneInfo, setPhoneInfo] = useState('')\n    const [cellphoneInfo, setCellphoneInfo] = useState('')\n    const [emailInfo, setEmailInfo] = useState('')\n    const [isToggled, setToggled] = useState('false')\n    const [show, setShow] = useState(false)\n\n    const handleToggle = () => setToggled(!isToggled)\n    const handleClose = () => setShow(false)\n    const handleShow = () => setShow(true)\n\n    const logoutHandler = () => {\n        dispatch(logout())\n        alert.success('Logged out successfully')\n    }\n\n    const submitHandler = e => {\n        e.preventDefault()\n\n        const formData = new FormData()\n        formData.set('footerTitle', footerTitle)\n        formData.set('footerDescription', footerDescription)\n        formData.set('addressInfo', addressInfo)\n        formData.set('phoneInfo', phoneInfo)\n        formData.set('cellphoneInfo', cellphoneInfo)\n        formData.set('emailInfo', emailInfo)\n\n        dispatch(updateFooter(formData))\n    }\n\n    const discardChanges = () => {\n        handleClose()\n        window.history.back()\n    }\n\n    useEffect(() => {\n        if(footerInfo){\n            setFooterTitle(footerInfo.footerTitle)\n            setFooterDescription(footerInfo.footerDescription)\n            setAddressInfo(footerInfo.addressInfo)\n            setPhoneInfo(footerInfo.phoneInfo)\n            setCellphoneInfo(footerInfo.cellphoneInfo)\n            setEmailInfo(footerInfo.emailInfo)\n        }\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n            dispatch({\n                type: UPDATE_FOOTER_RESET\n            })\n        }\n\n        if(updateError){\n            alert.error(updateError)\n            dispatch(clearErrors())\n            dispatch({\n                type: UPDATE_FOOTER_RESET\n            })\n        }\n        \n        if(isUpdated) {\n            dispatch(getFooterDetails())\n            history.push('/admin/footer')\n            alert.success('Footer updated successfully.')\n\n            dispatch({\n                type: UPDATE_FOOTER_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, history, updateError, isUpdated, footerInfo])\n    \n    return (\n        <Fragment>\n            <MetaData title={'Update Footer'}/>\n                <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}>\n                    <div id=\"sidebar-wrapper\" >\n                        <ul className=\"sidebar-nav\">\n                            <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                            <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                            <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                            <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                            {user && user.role !== 'admin' ? (\n                                    <Fragment>\n                                        <hr/>\n                                            <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                            <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                            <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                    </Fragment>\n                                ) : (\n                                    <Fragment>\n                                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                        <hr/>\n                                        <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                        <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                        <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                        <hr/>\n                                        <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                        <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                    </Fragment>\n                                )\n                            }\n                            <hr/>\n                            <li> <Link to=\"/admin/dashboard/help\"><i className=\"fa fa-question-circle\"></i> Help</Link></li>\n                            <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"page-content-wrapper\">\n                        <div className=\"container-fluid\">\n                            <div style={{width: '100%', height: '40px', position: 'fixed', background: 'white'}}>\n                                <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\n                                    <i className=\"fa fa-bars\"></i>\n                                </a>\n                                <button className=\"btn btn-primary\" onClick={handleShow} style={{marginLeft: '35px', marginTop: '5px', fontSize: '12px', background: 'transparent', color: '#0d163f', border: 'none', position: 'fixed', zIndex: '999'}}>\n                                    <i className=\"fa fa-arrow-left fa-inverse\" style={{color: '#0d163f'}}></i> Back\n                                </button>\n                            </div>\n                            <Modal show={show} onHide={handleClose}>\n                                <Modal.Header closeButton>\n                                    <Modal.Title>Discard Changes?</Modal.Title>\n                                </Modal.Header>\n                                <Modal.Body>Are you sure you want to discard your changes?</Modal.Body>\n                                <Modal.Footer>\n                                    <Button variant=\"secondary\" onClick={handleClose}>\n                                        Close\n                                    </Button>\n                                    <Button variant=\"primary\" onClick={discardChanges}>\n                                        Yes, I'm sure\n                                    </Button>\n                                </Modal.Footer>\n                            </Modal>\n                            {footerLoading ? <Loader/> : (\n                                <Fragment>\n                                    <div className=\"login-clean\">\n                                        <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data'>\n                                            <h2 className=\"sr-only\">Update Footer</h2>\n                                            <div className=\"div-forgot-password\">\n                                                <h3 className=\"forgot-password-heading\">Update Footer</h3>\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <h6>Footer Title</h6>\n                                                <input \n                                                    type=\"text\" \n                                                    className=\"form-control\" \n                                                    name=\"footerTitle\"\n                                                    value={footerTitle}\n                                                    placeholder=\"Title\"\n                                                    style={{width: '100%'}}\n                                                    onChange={e => setFooterTitle(e.target.value)}\n                                                    required\n                                                />\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <h6>Footer Description</h6>\n                                                <textarea\n                                                    type=\"text\" \n                                                    className=\"form-control\" \n                                                    name=\"footerDescription\"\n                                                    value={footerDescription}\n                                                    placeholder=\"Description\"\n                                                    style={{width: '100%', height: '250px', minHeight: '50px'}}\n                                                    onChange={e => setFooterDescription(e.target.value)}\n                                                    height='55px'\n                                                    required\n                                                />\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <h6>Address Info</h6>\n                                                <textarea \n                                                    type=\"text\" \n                                                    className=\"form-control\" \n                                                    name=\"addressInfo\"\n                                                    value={addressInfo}\n                                                    placeholder=\"Address\"\n                                                    style={{width: '100%', height: '150px', minHeight: '50px'}}\n                                                    onChange={e => setAddressInfo(e.target.value)}\n                                                    required\n                                                />\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <h6>Phone Info</h6>\n                                                <input \n                                                    type=\"text\" \n                                                    className=\"form-control\" \n                                                    name=\"phoneInfo\"\n                                                    value={phoneInfo}\n                                                    placeholder=\"Phone Number\"\n                                                    style={{width: '100%'}}\n                                                    onChange={e => setPhoneInfo(e.target.value)}\n                                                    required\n                                                />\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <h6>Cellphone Info</h6>\n                                                <input \n                                                    type=\"text\" \n                                                    className=\"form-control\" \n                                                    name=\"cellphoneInfo\"\n                                                    value={cellphoneInfo}\n                                                    placeholder=\"Cellphone Number\"\n                                                    style={{width: '100%'}}\n                                                    onChange={e => setCellphoneInfo(e.target.value)}\n                                                    required\n                                                />\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <h6>Email Info</h6>\n                                                <input \n                                                    type=\"text\" \n                                                    className=\"form-control\" \n                                                    name=\"emailInfo\"\n                                                    value={emailInfo}\n                                                    placeholder=\"Email\"\n                                                    style={{width: '100%'}}\n                                                    onChange={e => setEmailInfo(e.target.value)}\n                                                    required\n                                                />\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <button \n                                                    className=\"btn btn-primary btn-block\" \n                                                    type=\"submit\"\n                                                    disabled={loading ? true : false}\n                                                    style={loading ? {pointerEvents: 'none'} : {cursor: 'pointer'}}\n                                                >\n                                                    Update Footer\n                                                </button>\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <a\n                                                    className=\"btn btn-secondary btn-block mt-2\"\n                                                    onClick={handleShow}\n                                                    style={{color: 'white'}}\n                                                >Discard</a>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </Fragment>\n                            )}\n                        </div>\n                    </div>\n                </div>\n        </Fragment>\n    )\n}\n\nexport default UpdateFooter","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListInquiries.js",["316"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListAppointments.js",["317"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListOthers.js",["318"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListArchives.js",["319"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListTrash.js",["320"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/NewProduct.js",["321","322"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Modal, Button, OverlayTrigger, Tooltip} from 'react-bootstrap'\nimport imageCompression from 'browser-image-compression'\nimport { logout } from './../../actions/userActions'\nimport { newProduct, clearErrors } from '../../actions/productActions'\nimport { NEW_PRODUCT_RESET, NEW_PRODUCT_REQUEST } from '../../constants/productConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport MetaData from '../layout/MetaData'\nimport '../../css/sidebar.css'\nimport '../../css/sidebar-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst NewProduct = ({history}) => {\n    const dispatch = useDispatch()\n    const alert = useAlert()\n\n    const { loading, error, success } = useSelector(state => state.newProduct)\n    const { user } = useSelector(state => state.auth)\n\n    const [name, setName] = useState('')\n    const [description, setDescription] = useState('')\n    const [image, setImage] = useState('')\n    const [category, setMainCategory] = useState('')\n    const [subcategory, setSubCategory] = useState('')\n    const [imagePreview, setImagePreview] = useState('https://res.cloudinary.com/agiletechnodynamicsinc/image/upload/v1615204932/products/default-image-620x600_sdhmvy.jpg')\n    const [useDefaultImage, setUseDefaultImage] = useState('')\n    const [isChecked, setChecked] = useState('false')\n    const [isToggled, setToggled] = useState('false')\n    const [show, setShow] = useState(false)\n\n    const categories = ['', 'Mechanical Engineering', 'DC Power Systems', 'Electrical Engineering Equipment', 'Test Equipment', 'Others']\n    const me_subCategory = ['', 'Pumps and System', 'Fire Protection Systems', 'Others']\n    const dc_subCategory = ['', 'Uninterrupted Power System', 'Battery Monitoring System', 'Batteries', 'Others']\n    const eee_subCategory = ['', 'Transformers', 'Others']\n    const te_subCategory = ['', 'Partial Discharge Detection', 'Battery Discharge Capacity Tester', 'Battery Impedance or Internal Resistance', 'Load Banks', 'Battery Test Monitor', 'Portable Direct Ground Fault Finder', 'Earth Tester or Clamp Type', 'Others']\n\n    const checkboxCheck = () => setChecked(!isChecked)\n    const handleClose = () => setShow(false)\n    const handleShow = () => setShow(true)\n    const handleToggle = () => setToggled(!isToggled)\n    \n    const logoutHandler = () => {\n        dispatch(logout())\n        alert.success('Logged out successfully')\n    }\n\n    const submitHandler = e => {\n        e.preventDefault()\n\n        const formData = new FormData()\n        formData.set('name', name)\n        formData.set('description', description)\n        formData.set('category', category)\n\n        if(String(category).includes(\"Others\")) {\n            formData.set('subcategory', \"Others\")\n        } else {\n            formData.set('subcategory', subcategory)\n        }\n\n        formData.set('useDefaultImage', useDefaultImage)\n        formData.set('image', image)\n\n        dispatch(newProduct(formData))\n    }\n\n    const onChange = e => {\n        if(e.target.name === 'useDefaultImage') {\n            let chkbox = document.getElementById('useDefaultImage')\n\n            if(chkbox.checked === true) { //if changed to ===, register would not work\n                setUseDefaultImage(\"True\")\n                setImagePreview('https://res.cloudinary.com/agiletechnodynamicsinc/image/upload/v1615204932/products/default-image-620x600_sdhmvy.jpg')\n            }\n            else{\n                setUseDefaultImage(\"False\")\n            }\n        } \n    }\n\n    const handleImageUpload = e => {\n        var imageFile = e.target.files[0]\n        \n        if(!imageFile.type.match(/image.*/)){\n            dispatch({\n                type: NEW_PRODUCT_REQUEST\n            })\n\n            setImagePreview('https://res.cloudinary.com/agiletechnodynamicsinc/image/upload/v1615204932/products/default-image-620x600_sdhmvy.jpg')\n            return alert.error('Please upload an image file')\n        }\n\n        var options = {\n          maxSizeMB: 0.6,\n          maxWidthOrHeight: 1920,\n          useWebWorker: true\n        }\n        \n        imageCompression(imageFile, options)\n          .then(function (compressedFile) {\n                addImage(compressedFile)  \n          })\n          .catch(function (error) {\n            console.log(error.message)\n          })\n\n          dispatch({\n              type: NEW_PRODUCT_REQUEST\n          })\n      }\n\n    const addImage = file => {\n        const reader = new FileReader()\n\n        reader.onload = () => {\n            if(reader.readyState === 2){\n                setImagePreview(reader.result)\n                setImage(reader.result)\n            }\n        }\n        reader.readAsDataURL(file)\n\n        dispatch({\n            type: NEW_PRODUCT_RESET\n        })\n    }\n\n    const discardChanges = () => {\n        handleClose()\n        window.history.back()\n    }\n\n    useEffect(() => {\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n        if(success) {\n            history.push('/admin/products')\n            alert.success('Product created successfully.')\n        \n            dispatch({\n                type: NEW_PRODUCT_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, error, alert, success, history])\n\n    return (\n        <Fragment>\n            <MetaData title={'New Product'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}>\n                <div id=\"sidebar-wrapper\">\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )\n                        }\n                        <hr/>\n                        <li> <Link to=\"/admin/dashboard/help\"><i className=\"fa fa-question-circle\"></i> Help</Link></li>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <div style={{width: '100%', height: '40px', position: 'fixed', background: 'white'}}>\n                            <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\n                                <i className=\"fa fa-bars\"></i>\n                            </a>\n                            <button className=\"btn btn-primary\" onClick={handleShow} style={{marginLeft: '35px', marginTop: '5px', fontSize: '12px', background: 'transparent', color: '#0d163f', border: 'none', position: 'fixed', zIndex: '999'}}>\n                                <i className=\"fa fa-arrow-left fa-inverse\" style={{color: '#0d163f'}}></i> Back\n                            </button>\n                        </div>\n                        <Modal show={show} onHide={handleClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Discard Changes?</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>Are you sure you want to discard your changes?</Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={handleClose}>\n                                    Close\n                                </Button>\n                                <Button variant=\"primary\" onClick={discardChanges}>\n                                    Yes, I'm sure\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                        <Fragment>\n                            <div className=\"login-clean\">\n                                <form method=\"post\" onSubmit={submitHandler} encType='multipart/form-data'>\n                                    <h2 className=\"sr-only\">New Product</h2>\n                                    \n                                    <div className=\"div-forgot-password\">\n                                        <h3 className=\"forgot-password-heading\">New Product</h3>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <h6>Name</h6>\n                                        <input \n                                            type=\"text\" \n                                            className=\"form-control\" \n                                            name=\"name\"\n                                            value={name}\n                                            placeholder=\"Product Name\"\n                                            onChange={e => setName(e.target.value)}\n                                            required\n                                        />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <h6>Description</h6>\n                                        <textarea\n                                            type=\"text\" \n                                            className=\"form-control\" \n                                            name=\"description\"\n                                            style={{width: '100%', height: '150px'}}\n                                            value={description}\n                                            placeholder=\"Product Description\"\n                                            onChange={e => setDescription(e.target.value)}\n                                            required\n                                        />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <h6>Main Category</h6>\n                                        <div className=\"dropdown show\">\n                                            <select \n                                                name=\"mainCategory\" \n                                                className=\"product-dropdown\" \n                                                id=\"mainCategory\"\n                                                value={category}\n                                                onChange={e => setMainCategory(e.target.value)}\n                                                required\n                                            >\n                                                {categories.map(category => (\n                                                    <option key={category} value={category}>{category}</option>\n                                                ))}\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <h6>Sub Category</h6>\n                                        <div className=\"dropdown show\">\n                                            <select \n                                                name=\"subCategory\" \n                                                className=\"product-dropdown\" \n                                                id=\"subCategory\"\n                                                value={subcategory}\n                                                disabled={(category === \"\" || String(category).includes(\"Others\") ) ? true : false}\n                                                onChange={e => setSubCategory(e.target.value)}\n                                                required\n                                            >\n                                            {String(category).includes(\"Mechanical Engineering\") ? (\n                                                <Fragment>\n                                                    {me_subCategory.map(category => (\n                                                        <option key={category} value={category}>{category}</option>\n                                                    ))}\n                                                </Fragment>\n                                            ) : ((String(category).includes(\"DC Power Systems\") ? (\n                                                <Fragment>\n                                                    {dc_subCategory.map(category => (\n                                                        <option key={category} value={category}>{category}</option>\n                                                    ))}\n                                                </Fragment>) : (\n                                                    (String(category).includes(\"Electrical Engineering Equipment\")) ? (\n                                                        <Fragment>\n                                                            {eee_subCategory.map(category => (\n                                                                <option key={category} value={category}>{category}</option>\n                                                            ))}\n                                                        </Fragment>\n                                                    ) : (\n                                                        (String(category).includes(\"Test Equipment\")) ? (\n                                                            <Fragment>\n                                                                {te_subCategory.map(category => (\n                                                                    <option key={category} value={category}>{category}</option>\n                                                                ))}\n                                                            </Fragment>) : (\n                                                                <Fragment>\n                                                                    <option key=\"Others\" value=\"Others\">Others</option>\n                                                                </Fragment>)\n                                                    )\n                                                )))\n                                            }\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <h6>Product Image</h6>\n                                        {isChecked ? (\n                                            <input \n                                                type=\"file\" \n                                                name=\"image\" \n                                                onChange={handleImageUpload}\n                                                required\n                                            />\n                                        ) : (\n                                            <OverlayTrigger overlay={<Tooltip id=\"tooltip-disabled\">Image upload disabled</Tooltip>}>\n                                                <span className=\"d-inline-block\">\n                                                    <input \n                                                        type=\"file\" \n                                                        name=\"image\" \n                                                        onChange={handleImageUpload}\n                                                        disabled = {true}\n                                                        style={{pointerEvents: 'none' }}\n                                                    />\n                                                </span>\n                                            </OverlayTrigger>\n                                        )}\n                                        <br/>\n                                        <input \n                                            type='checkbox'\n                                            id='useDefaultImage'\n                                            name='useDefaultImage'\n                                            value={useDefaultImage}\n                                            onChange={onChange}\n                                            onClick={checkboxCheck}\n                                        />\n                                            &nbsp;or Use default image\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <img \n                                            src={imagePreview} \n                                            alt={`Preview of ${name}`}\n                                            className='mt-3 mr-2' \n                                            width='55' \n                                            height='52'\n                                        />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <button \n                                            className=\"btn btn-primary btn-block\" \n                                            type=\"submit\"\n                                            disabled={loading ? true : false}\n                                            style={loading ? {pointerEvents: 'none'} : {cursor: 'pointer'}}\n                                        >\n                                            Create\n                                        </button>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <a\n                                            className=\"btn btn-secondary btn-block mt-2\"\n                                            onClick={handleShow}\n                                            style={{color: 'white'}}\n                                        >\n                                            Discard\n                                        </a>\n                                    </div>\n                                </form>\n                            </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default NewProduct","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateProduct.js",["323","324"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateInquiry.js",["325"],"import React, { Fragment, useEffect, useState } from 'react'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport { Link } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Modal, Button } from 'react-bootstrap'\nimport { updateInquiry, deleteInquiry, getInquiryDetails, clearErrors } from '../../actions/inquiryActions'\nimport { logout } from './../../actions/userActions'\nimport { UPDATE_INQUIRY_RESET, DELETE_INQUIRY_RESET } from '../../constants/inquiryConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport '../../css/sidebar.css'\nimport '../../css/sidebar-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst UpdateInquiry = ({match, history}) => {\n    const dispatch = useDispatch()\n    const alert = useAlert()\n\n    const { loading, error, inquiry } = useSelector(state => state.inquiryDetails)\n    const {error: updateError, isUpdated, isDeleted } = useSelector(state => state.inquiry)\n    const { user } = useSelector(state => state.auth)\n\n    const [isToggled, setToggled] = useState('false')\n    const [id, setId] = useState('')\n    const [show, setShow] = useState(false)\n    const [emptyShow, setEmptyShow] = useState(false)\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [companyName, setCompanyName] = useState('')\n    const [position, setPosition] = useState('')\n    const [customerEmail, setCustomerEmail] = useState('')\n    const [contactNumber, setContactNumber] = useState('')\n    const [concernType, setConcernType] = useState('')\n    const [inquiryStatus, setInquiryStatus] = useState('')\n    const [customerMessage, setCustomerMessage] = useState('')\n\n    const inquiryId = match.params.id\n\n    const handleToggle = () => setToggled(!isToggled)\n    const handleClose = () => setShow(false)\n    const handleShow = () => setShow(true)\n    const handleEmptyClose = () => setEmptyShow(false)\n    const handleEmptyShow = () => setEmptyShow(true)\n\n\n    const logoutHandler = () => {\n        dispatch(logout())\n        alert.success('Logged out successfully')\n    }\n\n    const goBack = () => {\n        window.history.back()\n    }\n\n    const updateInquiryHandler = (id, inquiryStatus) => { \n        const formData = new FormData()\n        formData.set('inquiryStatus', inquiryStatus)\n\n        if(inquiryStatus === 'Unresolved') {\n            dispatch(updateInquiry(id, formData))\n            alert.success('Message has been restored.')\n            dispatch(getInquiryDetails(inquiryId))\n            dispatch({\n                type: UPDATE_INQUIRY_RESET\n            })\n            window.history.back()\n        } else if (inquiryStatus === 'Resolved'){\n            dispatch(updateInquiry(id, formData))\n            alert.success('Message has been moved to Archives.')\n            dispatch(getInquiryDetails(inquiryId))\n            dispatch({\n                type: UPDATE_INQUIRY_RESET\n            })\n            window.history.back()\n        } else {\n            dispatch(updateInquiry(id, formData))\n            alert.success('Message has been moved to Trash.')\n            dispatch(getInquiryDetails(inquiryId))\n            dispatch({\n                type: UPDATE_INQUIRY_RESET\n            })\n            handleClose()\n            window.history.back()\n        }\n    }\n\n    const deleteInquiryHandler = (id) => {\n        handleEmptyClose()\n        dispatch(deleteInquiry(id))\n        window.history.back()\n    }\n    \n    useEffect(() => { \n        if(inquiry && inquiry._id !== inquiryId) {\n            dispatch(getInquiryDetails(inquiryId))\n        }\n        else { \n            setFirstName(inquiry.firstName)\n            setLastName(inquiry.lastName)\n            setCompanyName(inquiry.companyName)\n            setPosition(inquiry.position)\n            setCustomerEmail(inquiry.customerEmail)\n            setContactNumber(inquiry.contactNumber)\n            setConcernType(inquiry.concernType)\n            setInquiryStatus(inquiry.inquiryStatus)\n            setCustomerMessage(inquiry.customerMessage)\n        }\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n        if(updateError){\n            alert.error(updateError)\n            dispatch(clearErrors())\n        }\n\n        if(isUpdated) {\n            dispatch({\n                type: UPDATE_INQUIRY_RESET\n            })\n        }\n\n        if(isDeleted) {\n            dispatch({\n                type: DELETE_INQUIRY_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, error, alert, isUpdated, isDeleted, updateError, inquiry, inquiryId, history])\n\n    return (\n        <Fragment>\n            <MetaData title={'View Message'}/>\n            <div id=\"wrapper\" className={isToggled ? null : \"toggled\"}>\n                <div id=\"sidebar-wrapper\" >\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )\n                        }\n                        <hr/>\n                        <li> <Link to=\"/admin/dashboard/help\"><i className=\"fa fa-question-circle\"></i> Help</Link></li>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <div style={{width: '100%', height: '40px', position: 'fixed', background: 'white'}}>\n                            <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\n                                <i className=\"fa fa-bars\"></i>\n                            </a>\n                            <button className=\"btn btn-primary\" onClick={goBack} style={{marginLeft: '35px', marginTop: '5px', fontSize: '12px', background: 'transparent', color: '#0d163f', border: 'none', position: 'fixed', zIndex: '999'}}>\n                                <i className=\"fa fa-arrow-left fa-inverse\" style={{color: '#0d163f'}}></i> Back\n                            </button>\n                        </div>\n                        <Modal show={show} onHide={handleClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Move to Trash?</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>Are you sure you want to move this message to Trash?</Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={handleClose}>\n                                    Close\n                                </Button>\n                                <Button variant=\"primary\" onClick={() => updateInquiryHandler(id, \"Deleted\")}>\n                                    Yes, I'm sure\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                        <Modal show={emptyShow} onHide={handleEmptyClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Delete Message?</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>Are you sure you want to delete this? This cannot be undone.</Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={handleEmptyClose}>\n                                    Close\n                                </Button>\n                                <Button variant=\"primary\" onClick={() => deleteInquiryHandler(id)}>\n                                    Yes, I'm sure\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                    <Fragment>\n                        {loading ? <Loader/> : (\n                            <section className=\"process-section\" style={{fontSize: '100%', fontWeight: '400', lineHeight: '1.3', color: '#000', width: '100%', paddingTop: '51px'}}>\n                                <table style={{width: '85%', minWidth: '150px', margin: '20px auto', backgroundColor: '#fff', padding: '30px', WebkitBorderRadius: '3px', MozBorderRadius: '3px', borderRadius: '3px', WebkitBoxShadow: '0 1px 3px rgba(0,0,0.12), 0 1px 2px rgba(0,0,0,.24)', MozBoxShadow: '0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24)', boxShadow: '0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24)', borderTop: 'solid 10px #1b1449'}}>\n                                    <tbody>\n                                        <tr>\n                                            <td style={{height: '20px'}}></td>\n                                        </tr>\n                                        <tr>\n                                            <td style={{width: '100%', padding: '15px', verticalAlign: 'top'}}>\n                                                <p style={{margin: '0 0 10[x 0', padding: '0', fontSize: '14px'}}><span style={{display: 'block', fontWeight: 'bold', fontSize: '13px'}}>Concern Type</span> {concernType}</p>\n                                                <p style={{margin: '0 0 10[x 0', padding: '0', fontSize: '14px'}}><span style={{display: 'block', fontWeight: 'bold', fontSize: '13px'}}>Status</span> {inquiryStatus}</p>\n                                                <br/>\n                                                <p style={{margin: '0 0 10[x 0', padding: '0', fontSize: '14px'}}><span style={{display: 'block', fontWeight: 'bold', fontSize: '13px'}}>Name</span> {firstName} {lastName}</p>\n                                                <p style={{margin: '0 0 10[x 0', padding: '0', fontSize: '14px'}}><span style={{display: 'block', fontWeight: 'bold', fontSize: '13px'}}>Company and Position</span> {companyName}, {position}</p>\n                                                <p style={{margin: '0 0 10[x 0', padding: '0', fontSize: '14px'}}><span style={{display: 'block', fontWeight: 'bold', fontSize: '13px'}}>Email</span> {customerEmail}</p>\n                                                <p style={{margin: '0 0 10[x 0', padding: '0', fontSize: '14px'}}><span style={{display: 'block', fontWeight: 'bold', fontSize: '13px'}}>Phone</span> {contactNumber}</p>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td colspan=\"2\" style={{padding: '0 15px'}}>\n                                                <h3 style={{margin: '0 0 10px 0', padding: '0'}}>Message Content</h3>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td colspan=\"2\" style={{padding:'15px'}}>\n                                                <p style={{fontSize: '15px', margin: '0', padding: '10px 40px', textAlign: 'justify'}}>\n                                                {customerMessage}\n                                                </p>\n                                            </td>\n                                        </tr>\n                                        <tr style={{ width: '100%'}}>\n                                            <div style={{margin: '20px auto', display: 'flex', alignContent: 'center', justifyContent: 'center'}}>\n                                                <button \n                                                    className=\"btn btn-primary update-status-button align-center ml-2 mr-2\" \n                                                    type=\"button\"\n                                                    disabled={(inquiry.inquiryStatus !== 'Unresolved' && inquiry.inquiryStatus !== 'Deleted') ? true : false}\n                                                    style={(inquiry.inquiryStatus !== 'Unresolved' && inquiry.inquiryStatus !== 'Deleted') ? {pointerEvents: 'none'} : {cursor: 'pointer'}}\n                                                    onClick={() => updateInquiryHandler(inquiry._id, 'Resolved')}\n                                                >\n                                                    Resolve\n                                                </button>\n                                                <button \n                                                    className=\"btn btn-warning update-status-button align-center ml-2 mr-2\" \n                                                    type=\"button\"\n                                                    disabled={(inquiry.inquiryStatus !== 'Resolved' && inquiry.inquiryStatus !== 'Deleted') ? true : false}\n                                                    style={(inquiry.inquiryStatus !== 'Resolved' && inquiry.inquiryStatus !== 'Deleted') ? {pointerEvents: 'none'} : {cursor: 'pointer'}}\n                                                    onClick={() => updateInquiryHandler(inquiry._id, 'Unresolved')}\n                                                >\n                                                    Restore\n                                                </button>\n                                                {(inquiry.inquiryStatus !== 'Deleted') ? (\n                                                    <button \n                                                        className=\"btn btn-danger update-status-button align-center ml-2 mr-2\" \n                                                        type=\"button\"\n                                                        onClick={() => \n                                                        {\n                                                            handleShow()\n                                                            setId(inquiry._id)\n                                                        }}\n                                                    >\n                                                        Move To Trash\n                                                    </button>\n                                                ) : (\n                                                    <button \n                                                        className=\"btn btn-danger update-status-button align-center ml-2 mr-2\" \n                                                        type=\"button\"\n                                                        onClick={() => {\n                                                            handleEmptyShow()\n                                                            setId(inquiry._id)\n                                                        }}>\n                                                            Delete message permanently\n                                                    </button>\n                                                )}\n                                            </div>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </section>\n                        )}\n                    </Fragment>\n                    </div>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default UpdateInquiry\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/superadmin/ListSuperAdmins.js",["326","327","328"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/superadmin/ListAdmins.js",["329"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListProducts.js",["330"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/superadmin/UpdateUser.js",["331","332"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/superadmin/Register.js",["333","334","335","336"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { useAlert } from 'react-alert'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Popover, OverlayTrigger, Tooltip, Modal, Button } from 'react-bootstrap'\nimport { register, clearErrors, logout } from '../../actions/userActions'\nimport { REGISTER_USER_RESET, REGISTER_USER_REQUEST } from '../../constants/userConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport imageCompression from 'browser-image-compression'\nimport MetaData from '../layout/MetaData'\nimport '../../css/profile.css'\n\nconst popover = (\n    <Popover id=\"popover-basic\">\n      <Popover.Title as=\"h3\">Password Requirements</Popover.Title>\n      <Popover.Content>\n          &bull; Minimum of <strong>6 characters</strong>. <br/>\n          &bull; Maximum of <strong>15 characters</strong>. <br/>\n          &bull; Must have at least 1 <strong>Uppercase and Lowercase</strong> letter.<br/>\n          &bull; Must have at least 2 <strong>numeric digits</strong>.<br/>\n          &bull; Must have <strong>no spaces</strong>.\n      </Popover.Content>\n    </Popover>\n)\n\nconst Register = ({history}) => {\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { error, loading, isCreated } = useSelector(state => state.register)\n\n    const [avatar, setAvatar] = useState('')\n    const [avatarPreview, setAvatarPreview] = useState('https://res.cloudinary.com/agiletechnodynamicsinc/image/upload/v1615204943/avatars/default-avatar_uzyujj.png')\n    const [useDefaultImage, setUseDefaultImage] = useState('')\n    const [isChecked, setChecked] = useState('false')\n    const [showOld, setOld] = useState('false')\n    const [showNew, setNew] = useState('false')\n    const [isToggled, setToggled] = useState('false')\n    const [show, setShow] = useState(false)\n    const [user, setUser] = useState({\n        name: '',\n        email: '',\n        contactNumber: '',\n        address: '',\n        password: '',\n        confirmPassword: ''\n    })\n\n    const { name, email, contactNumber, address, password, confirmPassword } = user\n\n    const checkboxCheck = () => setChecked(!isChecked)\n    const showOldToggle = () => setOld(!showOld)\n    const showNewToggle = () => setNew(!showNew)\n    const handleToggle = () => setToggled(!isToggled)\n    const handleClose = () => setShow(false)\n    const handleShow = () => setShow(true)\n\n    const logoutHandler = () => {\n        dispatch(logout())\n        alert.success('Logged out successfully')\n    }\n\n    const submitHandler = e => {\n        e.preventDefault()\n\n        const formData = new FormData()\n        formData.set('name', name)\n        formData.set('email', email)\n        formData.set('password', password)\n        formData.set('confirmPassword', confirmPassword)\n        formData.set('contactNumber', contactNumber)\n        formData.set('address', address)\n        formData.set('avatar', avatar)\n        formData.set('useDefaultImage', useDefaultImage)\n\n        dispatch(register(formData))\n    }\n\n    const onChange = e => {\n        if(e.target.name === 'useDefaultImage') {\n            let chkbox = document.getElementById('useDefaultImage')\n\n            if(chkbox.checked === true) { //if changed to ===, register would not work\n                setUseDefaultImage(\"True\")\n                setAvatarPreview('https://res.cloudinary.com/agiletechnodynamicsinc/image/upload/v1615204943/avatars/default-avatar_uzyujj.png')\n            }\n            else{\n                setUseDefaultImage(\"False\")\n            }\n\n        } else {\n            setUser({\n                ...user,\n                [e.target.name]: e.target.value\n            })\n        }\n    }\n\n    const addAvatar = file => {\n        const reader = new FileReader()\n    \n        reader.onload = () => {\n            if(reader.readyState === 2){\n                setAvatarPreview(reader.result)\n                setAvatar(reader.result)\n            }\n        }\n        reader.readAsDataURL(file)\n        dispatch({\n            type: REGISTER_USER_RESET\n        })\n    }\n\n    const handleImageUpload = e => {\n\n        var imageFile = e.target.files[0]\n\n        if(!imageFile.type.match(/image.*/)){\n            dispatch({\n                type: REGISTER_USER_REQUEST\n            })\n\n            setAvatarPreview('https://res.cloudinary.com/agiletechnodynamicsinc/image/upload/v1615204943/avatars/default-avatar_uzyujj.png')\n            return alert.error('Please upload an image file')\n        }\n\n        var options = {\n          maxSizeMB: 0.6,\n          maxWidthOrHeight: 1920,\n          useWebWorker: true\n        }\n        \n        imageCompression(imageFile, options)\n          .then(function (compressedFile) {\n                addAvatar(compressedFile)  \n            })\n            .catch(function (error) {\n                console.log(error.message)\n            })\t\n\n        dispatch({\n            type: REGISTER_USER_REQUEST\n        })\n    }\n\n    const discardChanges = () => {\n        handleClose()\n        window.history.back()\n    }\n    \n    useEffect(() => {\n        if(error){\n            if(error.statusCode === 500) {\n                alert.error('Please complete the form.')\n                dispatch(clearErrors())\n                dispatch({\n                    type: REGISTER_USER_RESET\n                })\n            } else {\n                alert.error(error)\n                dispatch(clearErrors())\n                dispatch({\n                    type: REGISTER_USER_RESET\n                })\n            }\n        }\n        \n        if(isCreated){\n            alert.success('Registration successful')\n            history.push('/admin/dashboard')\n\n            dispatch({\n                type: REGISTER_USER_RESET\n            })\n        }\n        \n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n\n    }, [dispatch, alert, error, isCreated, history])\n\n    return (\n        <Fragment>\n            <MetaData title={'Register'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}>\n                <div id=\"sidebar-wrapper\" >\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )\n                        }\n                        <hr/>\n                        <li> <Link to=\"/admin/dashboard/help\"><i className=\"fa fa-question-circle\"></i> Help</Link></li>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <div style={{width: '100%', height: '40px', position: 'fixed', background: 'white', zIndex: '999'}}>\n                            <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\n                                <i className=\"fa fa-bars\"></i>\n                            </a>\n                            <button className=\"btn btn-primary\" onClick={handleShow} style={{marginLeft: '35px', marginTop: '5px', fontSize: '12px', background: 'transparent', color: '#0d163f', border: 'none', position: 'fixed', zIndex: '999', zIndex: '999'}}>\n                                <i className=\"fa fa-arrow-left fa-inverse\" style={{color: '#0d163f'}}></i> Back\n                            </button>\n                        </div>\n                        <Modal show={show} onHide={handleClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Discard Changes?</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>Are you sure you want to discard your changes?</Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={handleClose}>\n                                    Close\n                                </Button>\n                                <Button variant=\"primary\" onClick={discardChanges}>\n                                    Yes, I'm sure\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                        <div className=\"container\">\n                            <div className=\"main-body\">\n                            <h1 style={{textAlign: 'center', padding:'0 0 15px 0'}}>Register New User</h1>\n                                <div className=\"row gutters-sm\">\n                                    <div className=\"col-md-4 mb-3\">\n                                        <div className=\"card\">\n                                            <div className=\"card-body\">   \n                                                <div className=\"d-flex flex-column align-items-center text-center\">\n                                                    <img src={avatarPreview} alt=\"Admin\" className=\"rounded-circle\" width=\"150px\" height=\"150px\"/>\n                                                    <div className=\"mt-3\">\n                                                        <hr/>\n                                                        {isChecked ? (\n                                                            <input \n                                                                type=\"file\" \n                                                                id=\"avatar\" \n                                                                name=\"avatar\" \n                                                                accept=\"images/*\"\n                                                                onChange={handleImageUpload}\n                                                                style={{width: '90%'}}\n                                                                required\n                                                            />\n                                                        ) : (\n                                                            <OverlayTrigger overlay={<Tooltip id=\"tooltip-disabled\">Image upload disabled</Tooltip>}>\n                                                                <span className=\"d-inline-block\">\n                                                                <input \n                                                                    type=\"file\" \n                                                                    id=\"avatar\" \n                                                                    name=\"avatar\" \n                                                                    accept=\"images/*\"\n                                                                    onChange={onChange}\n                                                                    style={{width: '90%',  pointerEvents: 'none' }}\n                                                                    disabled={true}\n                                                                />\n                                                                </span>\n                                                            </OverlayTrigger>\n                                                        )}\n                                                        <br/>\n                                                        <input \n                                                            type='checkbox'\n                                                            id='useDefaultImage'\n                                                            name='useDefaultImage'\n                                                            value={useDefaultImage}\n                                                            onChange={onChange}\n                                                            onClick={checkboxCheck}\n                                                        />\n                                                            &nbsp;Use default image\n                                                        <br/>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <div className=\"card mb-3\">\n                                            <div className=\"card-body\">\n                                                <form method=\"post\" onSubmit={submitHandler}>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-3\">\n                                                            <h6 className=\"mb-0\">Full Name</h6>\n                                                        </div>\n                                                        <div className=\"col-sm-9 text-secondary\">\n                                                            <input \n                                                                type=\"text\" \n                                                                className=\"form-control\" \n                                                                name=\"name\"\n                                                                value={name}\n                                                                placeholder=\"Name\"\n                                                                pattern=\"[A-Za-z.\\s]{1,}\"\n                                                                onChange={onChange}\n                                                                required\n                                                            />\n                                                            </div>\n                                                    </div>\n                                                    <hr/>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-3\">\n                                                            <h6 className=\"mb-0\">Email</h6>\n                                                        </div>\n                                                        <div className=\"col-sm-9 text-secondary\">\n                                                            <input \n                                                                type=\"email\" \n                                                                className=\"form-control\" \n                                                                name=\"email\"\n                                                                value={email}\n                                                                placeholder=\"Email\"\n                                                                onChange={onChange}\n                                                                required\n                                                            />\n                                                            </div>\n                                                    </div>\n                                                    <hr/>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-3\">\n                                                            <h6 className=\"mb-0\">Contact Number</h6>\n                                                        </div>\n                                                        <div className=\"col-sm-9 text-secondary\">\n                                                            <input \n                                                                type=\"tel\" \n                                                                className=\"form-control\" \n                                                                name=\"contactNumber\" \n                                                                value={contactNumber}\n                                                                placeholder=\"09xx-xxx-xxxx\"\n                                                                pattern=\"^[0][9]\\d{2}-\\d{3}-\\d{4}$\"\n                                                                onChange={onChange}\n                                                                required\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                    <hr/>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-3\">\n                                                            <h6 className=\"mb-0\">Address</h6>\n                                                        </div>\n                                                        <div className=\"col-sm-9 text-secondary\">\n                                                            <textarea \n                                                                type=\"text\"\n                                                                className=\"form-control\"\n                                                                name=\"address\"\n                                                                value={address}\n                                                                onChange={onChange}\n                                                                placeholder=\"Address\"\n                                                                style={{height: '150px', minHeight: '50px'}}\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                    <hr/>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-3\">\n                                                            <h6 className=\"mb-0\">Password \n                                                                <span className='fa-m' style={{margin: 'auto', paddingLeft: '15px'}}>\n                                                                    <OverlayTrigger trigger=\"hover\" placement=\"right\" overlay={popover}>\n                                                                        <i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i>\n                                                                    </OverlayTrigger>\n                                                                </span>\n                                                            </h6>\n                                                        </div>\n                                                        <div className=\"col-sm-9 text-secondary\">\n                                                            <div class=\"input-group mb-3\">\n                                                                <input \n                                                                    type={showOld ? \"password\" : \"text\"} \n                                                                    className=\"form-control\" \n                                                                    name=\"password\"\n                                                                    value={password}\n                                                                    placeholder=\"Password\"\n                                                                    onChange={onChange}\n                                                                    aria-label=\"password\" aria-describedby=\"basic-addon1\"\n                                                                    required\n                                                                />\n                                                                <div class=\"input-group-prepend\">\n                                                                    <span class=\"input-group-text\" id=\"basic-addon1\">\n                                                                        <a\n                                                                            onClick={showOldToggle}\n                                                                            style={{cursor: 'pointer'}}\n                                                                        >\n                                                                            <span className=\"fa-lg\">\n                                                                                <i className={showOld ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\n                                                                            </span>\n                                                                        </a>\n                                                                    </span>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <hr/>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-3\">\n                                                            <h6 className=\"mb-0\">Confirm Password</h6>\n                                                        </div>\n                                                        <div className=\"col-sm-9 text-secondary\">\n                                                            <div class=\"input-group mb-3\">\n                                                                <input\n                                                                    type={showNew ? \"password\" : \"text\"} \n                                                                    className=\"form-control\"\n                                                                    name=\"confirmPassword\"\n                                                                    value={confirmPassword}\n                                                                    placeholder=\"Confirm Password\"\n                                                                    onChange={onChange}\n                                                                    aria-label=\"confirm\"\n                                                                    aria-describedby=\"basic-addon2\"\n                                                                    required\n                                                                />\n                                                                <div class=\"input-group-prepend\">\n                                                                    <span class=\"input-group-text\" id=\"basic-addon2\">\n                                                                        <a\n                                                                            onClick={showNewToggle}\n                                                                            style={{cursor: 'pointer'}}\n                                                                        >\n                                                                            <span className=\"fa-lg\">\n                                                                                <i className={showNew ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\n                                                                            </span>\n                                                                        </a>\n                                                                    </span>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-12\">\n                                                            <button\n                                                                className=\"btn btn-primary btn-block mt-5\"\n                                                                type=\"submit\"\n                                                                disabled={loading ? true : false}\n                                                                style={loading ? {pointerEvents: 'none'} : {cursor: 'pointer'}}\n                                                            >Register</button>\n                                                        </div>\n                                                    </div>\n                                                    <div className='row'>\n                                                        <div className=\"col-sm-12\">\n                                                            <button\n                                                                className=\"btn btn-secondary btn-block mt-2\"\n                                                                onClick={handleShow}\n                                                            >Discard</button>\n                                                        </div>\n                                                    </div>\n                                                </form>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>    \n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default Register","/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/productConstants.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/dashboardConstants.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/websiteConstants.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/userConstants.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/inquiryConstants.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/websiteActions.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/MetaData.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/Loader.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/productActions.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/inquiryActions.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/Help.js",["337"],{"ruleId":"338","replacedBy":"339"},{"ruleId":"340","replacedBy":"341"},{"ruleId":"342","severity":1,"message":"343","line":1,"column":35,"nodeType":"344","messageId":"345","endLine":1,"endColumn":43},{"ruleId":"346","severity":1,"message":"347","line":48,"column":140,"nodeType":"348","messageId":"349","endLine":48,"endColumn":141},{"ruleId":"346","severity":1,"message":"347","line":48,"column":161,"nodeType":"348","messageId":"349","endLine":48,"endColumn":162},{"ruleId":"346","severity":1,"message":"347","line":69,"column":102,"nodeType":"348","messageId":"349","endLine":69,"endColumn":103},{"ruleId":"346","severity":1,"message":"347","line":69,"column":124,"nodeType":"348","messageId":"349","endLine":69,"endColumn":125},{"ruleId":"346","severity":1,"message":"347","line":72,"column":102,"nodeType":"348","messageId":"349","endLine":72,"endColumn":103},{"ruleId":"346","severity":1,"message":"347","line":72,"column":125,"nodeType":"348","messageId":"349","endLine":72,"endColumn":126},{"ruleId":"346","severity":1,"message":"347","line":78,"column":125,"nodeType":"348","messageId":"349","endLine":78,"endColumn":126},{"ruleId":"346","severity":1,"message":"347","line":78,"column":149,"nodeType":"348","messageId":"349","endLine":78,"endColumn":150},{"ruleId":"350","severity":1,"message":"351","line":73,"column":8,"nodeType":"352","endLine":73,"endColumn":84,"suggestions":"353"},{"ruleId":"354","severity":1,"message":"355","line":97,"column":25,"nodeType":"356","endLine":103,"endColumn":26},{"ruleId":"354","severity":1,"message":"355","line":137,"column":37,"nodeType":"356","endLine":140,"endColumn":38},{"ruleId":"342","severity":1,"message":"357","line":2,"column":10,"nodeType":"344","messageId":"345","endLine":2,"endColumn":14},{"ruleId":"354","severity":1,"message":"355","line":102,"column":37,"nodeType":"356","endLine":105,"endColumn":38},{"ruleId":"354","severity":1,"message":"355","line":130,"column":37,"nodeType":"356","endLine":133,"endColumn":38},{"ruleId":"350","severity":1,"message":"358","line":12,"column":6,"nodeType":"352","endLine":12,"endColumn":8,"suggestions":"359"},{"ruleId":"354","severity":1,"message":"355","line":78,"column":37,"nodeType":"356","endLine":84,"endColumn":38},{"ruleId":"360","severity":1,"message":"361","line":241,"column":41,"nodeType":"356","endLine":241,"endColumn":122},{"ruleId":"342","severity":1,"message":"362","line":1,"column":27,"nodeType":"344","messageId":"345","endLine":1,"endColumn":35},{"ruleId":"342","severity":1,"message":"363","line":6,"column":32,"nodeType":"344","messageId":"345","endLine":6,"endColumn":36},{"ruleId":"364","severity":1,"message":"365","line":42,"column":18,"nodeType":"348","messageId":"366","endLine":42,"endColumn":20},{"ruleId":"354","severity":1,"message":"355","line":178,"column":29,"nodeType":"356","endLine":178,"endColumn":111},{"ruleId":"354","severity":1,"message":"355","line":132,"column":25,"nodeType":"356","endLine":132,"endColumn":107},{"ruleId":"360","severity":1,"message":"361","line":88,"column":25,"nodeType":"356","endLine":93,"endColumn":27},{"ruleId":"354","severity":1,"message":"355","line":147,"column":25,"nodeType":"356","endLine":147,"endColumn":107},{"ruleId":"354","severity":1,"message":"355","line":124,"column":25,"nodeType":"356","endLine":124,"endColumn":107},{"ruleId":"354","severity":1,"message":"355","line":74,"column":37,"nodeType":"356","endLine":74,"endColumn":119},{"ruleId":"354","severity":1,"message":"355","line":128,"column":29,"nodeType":"356","endLine":128,"endColumn":111},{"ruleId":"354","severity":1,"message":"355","line":176,"column":49,"nodeType":"356","endLine":179,"endColumn":50},{"ruleId":"354","severity":1,"message":"355","line":203,"column":49,"nodeType":"356","endLine":206,"endColumn":50},{"ruleId":"354","severity":1,"message":"355","line":224,"column":37,"nodeType":"356","endLine":228,"endColumn":38},{"ruleId":"350","severity":1,"message":"367","line":42,"column":8,"nodeType":"352","endLine":42,"endColumn":18,"suggestions":"368"},{"ruleId":"354","severity":1,"message":"355","line":85,"column":37,"nodeType":"356","endLine":85,"endColumn":119},{"ruleId":"354","severity":1,"message":"355","line":149,"column":25,"nodeType":"356","endLine":149,"endColumn":107},{"ruleId":"354","severity":1,"message":"355","line":188,"column":33,"nodeType":"356","endLine":188,"endColumn":115},{"ruleId":"360","severity":1,"message":"361","line":249,"column":53,"nodeType":"356","endLine":254,"endColumn":55},{"ruleId":"354","severity":1,"message":"355","line":291,"column":49,"nodeType":"356","endLine":295,"endColumn":50},{"ruleId":"354","severity":1,"message":"355","line":133,"column":33,"nodeType":"356","endLine":133,"endColumn":115},{"ruleId":"354","severity":1,"message":"355","line":200,"column":49,"nodeType":"356","endLine":204,"endColumn":50},{"ruleId":"342","severity":1,"message":"343","line":2,"column":16,"nodeType":"344","messageId":"345","endLine":2,"endColumn":24},{"ruleId":"369","severity":1,"message":"370","line":20,"column":35,"nodeType":"356","endLine":20,"endColumn":99},{"ruleId":"354","severity":1,"message":"355","line":151,"column":25,"nodeType":"356","endLine":151,"endColumn":107},{"ruleId":"369","severity":1,"message":"370","line":254,"column":49,"nodeType":"356","endLine":254,"endColumn":135},{"ruleId":"354","severity":1,"message":"355","line":299,"column":45,"nodeType":"356","endLine":303,"endColumn":46},{"ruleId":"354","severity":1,"message":"355","line":141,"column":33,"nodeType":"356","endLine":141,"endColumn":115},{"ruleId":"354","severity":1,"message":"355","line":260,"column":49,"nodeType":"356","endLine":264,"endColumn":50},{"ruleId":"354","severity":1,"message":"355","line":173,"column":25,"nodeType":"356","endLine":173,"endColumn":107},{"ruleId":"354","severity":1,"message":"355","line":174,"column":25,"nodeType":"356","endLine":174,"endColumn":107},{"ruleId":"354","severity":1,"message":"355","line":173,"column":25,"nodeType":"356","endLine":173,"endColumn":107},{"ruleId":"354","severity":1,"message":"355","line":181,"column":25,"nodeType":"356","endLine":181,"endColumn":107},{"ruleId":"354","severity":1,"message":"355","line":225,"column":25,"nodeType":"356","endLine":225,"endColumn":107},{"ruleId":"354","severity":1,"message":"355","line":194,"column":29,"nodeType":"356","endLine":194,"endColumn":111},{"ruleId":"354","severity":1,"message":"355","line":364,"column":41,"nodeType":"356","endLine":368,"endColumn":42},{"ruleId":"354","severity":1,"message":"355","line":202,"column":29,"nodeType":"356","endLine":202,"endColumn":111},{"ruleId":"354","severity":1,"message":"355","line":351,"column":45,"nodeType":"356","endLine":355,"endColumn":46},{"ruleId":"354","severity":1,"message":"355","line":175,"column":29,"nodeType":"356","endLine":175,"endColumn":111},{"ruleId":"342","severity":1,"message":"371","line":6,"column":35,"nodeType":"344","messageId":"345","endLine":6,"endColumn":40},{"ruleId":"342","severity":1,"message":"372","line":6,"column":42,"nodeType":"344","messageId":"345","endLine":6,"endColumn":48},{"ruleId":"354","severity":1,"message":"355","line":163,"column":25,"nodeType":"356","endLine":163,"endColumn":107},{"ruleId":"354","severity":1,"message":"355","line":173,"column":25,"nodeType":"356","endLine":173,"endColumn":107},{"ruleId":"354","severity":1,"message":"355","line":169,"column":25,"nodeType":"356","endLine":169,"endColumn":107},{"ruleId":"354","severity":1,"message":"355","line":144,"column":29,"nodeType":"356","endLine":144,"endColumn":111},{"ruleId":"354","severity":1,"message":"355","line":242,"column":37,"nodeType":"356","endLine":246,"endColumn":38},{"ruleId":"354","severity":1,"message":"355","line":221,"column":29,"nodeType":"356","endLine":221,"endColumn":111},{"ruleId":"373","severity":1,"message":"374","line":224,"column":245,"nodeType":"375","messageId":"366","endLine":224,"endColumn":251},{"ruleId":"354","severity":1,"message":"355","line":392,"column":73,"nodeType":"356","endLine":395,"endColumn":74},{"ruleId":"354","severity":1,"message":"355","line":425,"column":73,"nodeType":"356","endLine":428,"endColumn":74},{"ruleId":"354","severity":1,"message":"355","line":70,"column":25,"nodeType":"356","endLine":70,"endColumn":107},"no-native-reassign",["376"],"no-negated-in-lhs",["377"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isCorrect'. Either include it or remove the dependency array.","ArrayExpression",["378"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["379"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useState' is defined but never used.","'Card' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","React Hook useEffect has a missing dependency: 'user.role'. Either include it or remove the dependency array.",["380"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'Modal' is defined but never used.","'Button' is defined but never used.","no-dupe-keys","Duplicate key 'zIndex'.","ObjectExpression","no-global-assign","no-unsafe-negation",{"desc":"381","fix":"382"},{"desc":"383","fix":"384"},{"desc":"385","fix":"386"},"Update the dependencies array to be: [dispatch, alert, isAuthenticated, loadError, error, loginPassword, history, isCorrect]",{"range":"387","text":"388"},"Update the dependencies array to be: [history]",{"range":"389","text":"390"},"Update the dependencies array to be: [dispatch, user.role]",{"range":"391","text":"392"},[2258,2334],"[dispatch, alert, isAuthenticated, loadError, error, loginPassword, history, isCorrect]",[295,297],"[history]",[1398,1408],"[dispatch, user.role]"]