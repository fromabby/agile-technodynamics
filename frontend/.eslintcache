[{"/Users/abby/Desktop/agile-technodynamics/frontend/src/index.js":"1","/Users/abby/Desktop/agile-technodynamics/frontend/src/store.js":"2","/Users/abby/Desktop/agile-technodynamics/frontend/src/App.js":"3","/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/productReducers.js":"4","/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/userReducers.js":"5","/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/dashboardReducers.js":"6","/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/websiteReducers.js":"7","/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/inquiryReducers.js":"8","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Home.js":"9","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/About.js":"10","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Contact.js":"11","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ConfirmationPage.js":"12","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/EmailSent.js":"13","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/route/ProtectedRoute.js":"14","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/Footer.js":"15","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/Login.js":"16","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/ForgotPassword.js":"17","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/NewPassword.js":"18","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/ScrollToTop.js":"19","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/PasswordSuccess.js":"20","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/superadmin/UpdateUserSuccess.js":"21","/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/userActions.js":"22","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Services.js":"23","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductDetails.js":"24","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Products.js":"25","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/Header.js":"26","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/UpdateProfile.js":"27","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/ListAbout.js":"28","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/ListHome.js":"29","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/ListFooter.js":"30","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/Profile.js":"31","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/UpdatePassword.js":"32","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/Dashboard.js":"33","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/ListServices.js":"34","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/UpdateHome.js":"35","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/UpdateAbout.js":"36","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/UpdateServices.js":"37","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/UpdateFooter.js":"38","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListInquiries.js":"39","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListAppointments.js":"40","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListOthers.js":"41","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListArchives.js":"42","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListTrash.js":"43","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/NewProduct.js":"44","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateProduct.js":"45","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateInquiry.js":"46","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/superadmin/ListSuperAdmins.js":"47","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/superadmin/ListAdmins.js":"48","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListProducts.js":"49","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/superadmin/UpdateUser.js":"50","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/superadmin/Register.js":"51","/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/productConstants.js":"52","/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/dashboardConstants.js":"53","/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/websiteConstants.js":"54","/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/userConstants.js":"55","/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/inquiryConstants.js":"56","/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/websiteActions.js":"57","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/MetaData.js":"58","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/Loader.js":"59","/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/productActions.js":"60","/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/inquiryActions.js":"61"},{"size":582,"mtime":1615917684922,"results":"62","hashOfConfig":"63"},{"size":2109,"mtime":1615917678639,"results":"64","hashOfConfig":"63"},{"size":7034,"mtime":1616649474112,"results":"65","hashOfConfig":"63"},{"size":4764,"mtime":1615917707229,"results":"66","hashOfConfig":"63"},{"size":8601,"mtime":1615917713902,"results":"67","hashOfConfig":"63"},{"size":497,"mtime":1615623306470,"results":"68","hashOfConfig":"63"},{"size":9758,"mtime":1615623199948,"results":"69","hashOfConfig":"63"},{"size":4248,"mtime":1616831999066,"results":"70","hashOfConfig":"63"},{"size":4982,"mtime":1616605998243,"results":"71","hashOfConfig":"63"},{"size":5460,"mtime":1616609146002,"results":"72","hashOfConfig":"63"},{"size":9848,"mtime":1616854456472,"results":"73","hashOfConfig":"63"},{"size":1291,"mtime":1615950488407,"results":"74","hashOfConfig":"63"},{"size":1306,"mtime":1615917657291,"results":"75","hashOfConfig":"63"},{"size":1351,"mtime":1615960508906,"results":"76","hashOfConfig":"63"},{"size":3849,"mtime":1616167818521,"results":"77","hashOfConfig":"63"},{"size":6142,"mtime":1616853166932,"results":"78","hashOfConfig":"63"},{"size":3148,"mtime":1616851597231,"results":"79","hashOfConfig":"63"},{"size":6541,"mtime":1615953880444,"results":"80","hashOfConfig":"63"},{"size":385,"mtime":1615959594292,"results":"81","hashOfConfig":"63"},{"size":1353,"mtime":1615921002338,"results":"82","hashOfConfig":"63"},{"size":1175,"mtime":1615920926357,"results":"83","hashOfConfig":"63"},{"size":7723,"mtime":1615818499832,"results":"84","hashOfConfig":"63"},{"size":6392,"mtime":1616649474115,"results":"85","hashOfConfig":"63"},{"size":3279,"mtime":1616649474113,"results":"86","hashOfConfig":"63"},{"size":13784,"mtime":1616649474114,"results":"87","hashOfConfig":"63"},{"size":4369,"mtime":1616742325059,"results":"88","hashOfConfig":"63"},{"size":18701,"mtime":1616854433939,"results":"89","hashOfConfig":"63"},{"size":6580,"mtime":1616740833737,"results":"90","hashOfConfig":"63"},{"size":7047,"mtime":1616740763932,"results":"91","hashOfConfig":"63"},{"size":6936,"mtime":1616741704499,"results":"92","hashOfConfig":"63"},{"size":10363,"mtime":1616649474141,"results":"93","hashOfConfig":"63"},{"size":12631,"mtime":1616854438655,"results":"94","hashOfConfig":"63"},{"size":14320,"mtime":1616649474130,"results":"95","hashOfConfig":"63"},{"size":7267,"mtime":1616831884558,"results":"96","hashOfConfig":"63"},{"size":15413,"mtime":1616854442667,"results":"97","hashOfConfig":"63"},{"size":11242,"mtime":1616854451704,"results":"98","hashOfConfig":"63"},{"size":17386,"mtime":1616854428054,"results":"99","hashOfConfig":"63"},{"size":15409,"mtime":1616854447920,"results":"100","hashOfConfig":"63"},{"size":9199,"mtime":1616740510841,"results":"101","hashOfConfig":"63"},{"size":9170,"mtime":1616740520549,"results":"102","hashOfConfig":"63"},{"size":9161,"mtime":1616740506518,"results":"103","hashOfConfig":"63"},{"size":9505,"mtime":1616741239219,"results":"104","hashOfConfig":"63"},{"size":12568,"mtime":1616854032179,"results":"105","hashOfConfig":"63"},{"size":20338,"mtime":1616854403176,"results":"106","hashOfConfig":"63"},{"size":19068,"mtime":1616854385886,"results":"107","hashOfConfig":"63"},{"size":15913,"mtime":1616853954285,"results":"108","hashOfConfig":"63"},{"size":7846,"mtime":1616740289473,"results":"109","hashOfConfig":"63"},{"size":8768,"mtime":1616740307313,"results":"110","hashOfConfig":"63"},{"size":9636,"mtime":1616853594209,"results":"111","hashOfConfig":"63"},{"size":11690,"mtime":1616854414399,"results":"112","hashOfConfig":"63"},{"size":27799,"mtime":1616854423310,"results":"113","hashOfConfig":"63"},{"size":1292,"mtime":1615182325212,"results":"114","hashOfConfig":"63"},{"size":123,"mtime":1615182325211,"results":"115","hashOfConfig":"63"},{"size":2226,"mtime":1615182325214,"results":"116","hashOfConfig":"63"},{"size":2376,"mtime":1615559253219,"results":"117","hashOfConfig":"63"},{"size":1077,"mtime":1615182325212,"results":"118","hashOfConfig":"63"},{"size":7270,"mtime":1615623015297,"results":"119","hashOfConfig":"63"},{"size":270,"mtime":1615182325200,"results":"120","hashOfConfig":"63"},{"size":411,"mtime":1615359817965,"results":"121","hashOfConfig":"63"},{"size":4442,"mtime":1616518930948,"results":"122","hashOfConfig":"63"},{"size":3362,"mtime":1615623152866,"results":"123","hashOfConfig":"63"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"15m85vh",{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"126"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"126"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"126"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"126"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"126"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"126"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"126"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"126"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"126"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"126"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"126"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"126"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"126"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"126"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"126"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"126"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"233","messages":"234","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"126"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"126"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"241","messages":"242","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"/Users/abby/Desktop/agile-technodynamics/frontend/src/index.js",[],["265","266"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/store.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/App.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/productReducers.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/userReducers.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/dashboardReducers.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/websiteReducers.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/inquiryReducers.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Home.js",["267","268","269","270","271","272","273","274"],"import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getHomes, clearErrors } from '../actions/websiteActions'\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\nimport MetaData from './layout/MetaData'\nimport Loader from './layout/Loader'\nimport '../css/styles.css'\n\nconst Home = () => {\n    const dispatch = useDispatch()\n    const alert = useAlert()\n\n    const { loading,\n            error,\n            productsDescription,\n            servicesDescription,\n            productImageLeft,\n            productImageRight,\n            titleBackground,\n            servicesBackground\n        } = useSelector(state => state.homes)\n\n    useEffect(() => {\n        dispatch(getHomes())\n\n        dispatch({\n            type: INSIDE_DASHBOARD_FALSE\n        })\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n    }, [dispatch, alert, error])\n\n    return (\n            <Fragment>\n                <MetaData title={'Home'}/>\n                {loading ? <Loader/> : (\n                    <Fragment>\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                <div className=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 text-center\"\n                                    style={{\n                                    background: \"linear-gradient(to bottom, rgba(216, 203, 194, 0.8) 0%, rgba(34, 33, 32, 0.8) 100%), url(\"+`${titleBackground}`+\") center / auto no-repeat\", \n                                    backgroundSize: \"cover\", \n                                    width: \"100%\", \n                                    height: \"100%\"}\n                                }>\n                                    <div className=\"main-section\">\n                                        <img className=\"logo\" alt=\"Logo of Agile Technodynamics, Inc.\" src=\"https://res.cloudinary.com/agiletechnodynamicsinc/image/upload/v1615205387/websiteImages/agile-logo-home_nhud2z.png\"/>\n                                        <h1 className=\"pt-3 main-text\">AGILE TECHNODYNAMICS, INC.</h1>\n                                    </div>\n                                </div>\n                            </div>\n                            <div>\n                                <div className=\"row agile-products-home\">\n                                    <div className=\"col\">\n                                        <h1>Our Products</h1>\n                                        <p className=\"our-products-description pb-3\" >{productsDescription}</p>\n                                        <Link className=\"mt-4\" to=\"/our-products\">See Products <i className=\"fa fa-angle-right\"></i></Link>\n                                    </div>\n                                </div>\n                                <div className=\"row\" style={{margin: 'auto'}}>\n                                    <div className=\"col-sm-12 col-md-6\">\n                                        <div className=\"product-container\" style={{background: \"url(\"+`${productImageLeft}`+\") center / auto no-repeat\", backgroundSize: 'contain'}}></div>\n                                    </div>\n                                    <div className=\"col-sm-12 col-md-6\">\n                                        <div className=\"product-container\" style={{background: \"url(\"+`${productImageRight}`+\") center / auto no-repeat\", backgroundSize: 'contain'}}></div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row services-container\" \n                                style={{\n                                    background: \"linear-gradient(to right, rgb(0,0,0) 0%, rgba(151,161,179,0.4) 100%), url(\"+`${servicesBackground}`+\") no-repeat\", \n                                    backgroundSize: \"cover\", \n                                    backgroundPosition: \"right\"\n                                }}\n                            >\n                                <div className=\"col-sm-12 col-md-6\">\n                                    <div>\n                                        <div className=\"col-auto our-services-description\">\n                                            <h1 className=\"text-center\">Our Services</h1>\n                                            <p>{servicesDescription}</p>\n                                            <Link className=\"mt-4\" to=\"/our-services\" style={{color: 'white'}}>See Services <i className=\"fa fa-angle-right\"></i></Link>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </Fragment>\n                )}\n        </Fragment>\n    )\n}\n\nexport default Home","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/About.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Contact.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ConfirmationPage.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/EmailSent.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/route/ProtectedRoute.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/Footer.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/Login.js",["275","276"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from  'react-redux'\nimport { login, clearErrors } from './../../actions/userActions'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport MetaData from '../layout/MetaData'\nimport '../../css/forms.css'\n\nconst Login = ({history}) => {\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth)\n\n    const [ email, setEmail ] = useState('')\n    const [ password, setPassword ] = useState('')\n    const [isChecked, setChecked] = useState('false')\n    const [userInput, setUserInput ] = useState('')\n    const [isCorrect, setIsCorrect ] = useState('false')\n    const [attempts, setAttempts] = useState(2)\n\n    const loginPassword = 'cgJBHJXe'\n\n    const checkboxCheck = () => setChecked(!isChecked)\n\n    const passwordCheck = (userInput) => {\n        if(userInput === loginPassword) {\n            setIsCorrect(!isCorrect)\n            alert.success('Access code is correct.')\n        } else {\n            setAttempts((attempts-1))\n\n            if(attempts > 0) {\n                alert.error(`You have ${attempts} attempts left`)\n            } else {\n                alert.error('Cannot redirect to log in page.')\n                history.push('/')\n            }\n        }\n    }\n\n    const submitHandler = e => {\n        e.preventDefault()\n\n        dispatch(login(email, password))\n    }\n\n    useEffect(() => {\n        if(isAuthenticated) {\n            history.push('/admin/dashboard')\n            alert.success('Logged in successfully.')\n        }\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        } //loadError in load_user_fail\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, isAuthenticated, error, history])\n\n    return (\n        <Fragment>\n            <MetaData title={'Log In'}/>\n            <div className={isCorrect ? \"login\" : \"d-none\"} style={{margin: 'auto'}}>\n                <form>\n                    <div className=\"illustration\">\n                        <img className=\"login-logo\" alt=\"company logo\" src=\"https://res.cloudinary.com/agiletechnodynamicsinc/image/upload/v1615205387/websiteImages/agile-logo-home_nhud2z.png\"/>\n                    </div>\n                    <div className=\"form-group\">\n                        <h6>Enter access code</h6>\n                        <p style={{color: '#333', fontSize: '10px'}}>If you don't know the code, contact your administrator.</p>\n                        <input \n                            className=\"form-control\" \n                            type=\"text\" \n                            name=\"userInput\"\n                            value={userInput}\n                            placeholder=\"xxxxxxxx\"\n                            maxLength=\"8\"\n                            onChange={e => setUserInput(e.target.value)}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <a\n                            className=\"btn btn-primary btn-block\"\n                            style={{color: 'white'}}\n                            onClick={() => passwordCheck(userInput)}\n                        >Submit</a>\n                    </div>\n                </form>\n            </div>\n            <div className={isCorrect ? \"d-none\" : \"login\"} style={{margin: 'auto'}}>\n                <form onSubmit={submitHandler}>\n                    <h2 className=\"sr-only\">Login Form</h2>\n                    <div className=\"illustration\">\n                        <img className=\"login-logo\" alt=\"company logo\" src=\"https://res.cloudinary.com/agiletechnodynamicsinc/image/upload/v1615205387/websiteImages/agile-logo-home_nhud2z.png\"/>\n                    </div>\n                    <div className=\"form-group\">\n                        <input\n                            className=\"form-control\" \n                            type=\"email\" \n                            name=\"email\" \n                            placeholder=\"Email\" \n                            value={email} \n                            onChange={e => setEmail(e.target.value)}\n                            required\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <div class=\"input-group mb-3\">\n                            <input \n                                className=\"form-control\" \n                                type={isChecked ? \"password\" : \"text\"}  \n                                name=\"password\" \n                                placeholder=\"Password\" \n                                value={password} \n                                onChange={e => setPassword(e.target.value)}\n                                required\n                            />\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\" id=\"basic-addon1\">\n                                    <a\n                                        onClick={checkboxCheck}\n                                        style={{cursor: 'pointer'}}\n                                    >\n                                        <span className=\"fa-lg\">\n                                            <i className={isChecked ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\n                                        </span>\n                                    </a>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <button className=\"btn btn-primary btn-block\" type=\"submit\" disabled={loading ? true : false}>Log In</button>\n                    </div>\n                    <Link className=\"forgot\" to=\"/password/forgot\">Forgot your password?</Link>\n                </form>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default Login\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/ForgotPassword.js",["277"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/NewPassword.js",["278","279"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Popover, OverlayTrigger} from 'react-bootstrap'\nimport { resetPassword, clearErrors } from './../../actions/userActions'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { NEW_PASSWORD_RESET } from '../../constants/userConstants'\nimport MetaData from '../layout/MetaData'\nimport '../../css/forms.css'\n\nconst popover = (\n    <Popover id=\"popover-basic\">\n      <Popover.Title as=\"h3\">Password Requirements</Popover.Title>\n      <Popover.Content>\n          &bull; Minimum of <strong>6 characters</strong>. <br/>\n          &bull; Must have at least 1 <strong>Uppercase and Lowercase</strong> letter.<br/>\n          &bull; Must have at least 2 <strong>numeric digits</strong>.<br/>\n          &bull; Must have <strong>no spaces</strong>.\n      </Popover.Content>\n    </Popover>\n)\n\nconst NewPassword = ({history, match}) => {\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { error, success, loading } = useSelector(state => state.forgotPassword)\n\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [showOld, setOld] = useState('false')\n    const [showNew, setNew] = useState('false')\n\n    const showOldToggle = () => setOld(!showOld)\n    const showNewToggle = () => setNew(!showNew)\n\n    const submitHandler = e => {\n        e.preventDefault()\n\n        const formData = new FormData()\n        formData.set('password', password)\n        formData.set('confirmPassword', confirmPassword)\n\n        dispatch(resetPassword(match.params.token, formData))\n    }\n    \n    useEffect(() => {\n        if(success){\n            history.push('/password-success')\n            alert.success('Password updated successfully')\n            dispatch({\n                type: NEW_PASSWORD_RESET\n            })\n        }\n        \n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n            dispatch({\n                type: NEW_PASSWORD_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n\n    }, [dispatch, alert, error, success, history])\n\n    return (\n        <Fragment>\n            <MetaData title={'Reset Password'}/>\n            <div className=\"login\" style={{paddingTop: '100px'}}>\n                <form onSubmit={submitHandler}>\n                    <h2 className=\"sr-only\">New Password</h2>\n                    <div className=\"div-forgot-password\">\n                        <h3 className=\"forgot-password-heading\">New Password \n                            <span className='fa-xs' style={{margin: 'auto', paddingLeft: '15px'}}>\n                                <OverlayTrigger trigger=\"hover\" placement=\"right\" overlay={popover}>\n                                    <i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i>\n                                </OverlayTrigger>\n                            </span>\n                        </h3>\n                    </div>\n                    <div className=\"form-group\">\n                        <h6>New Password</h6>\n                        <div class=\"input-group mb-3\">\n                            <input \n                                type={showOld ? \"password\" : \"text\"} \n                                className=\"form-control\" \n                                name=\"password\"\n                                value={password}\n                                placeholder=\"New Password\"\n                                onChange={e => setPassword(e.target.value)}\n                                aria-label=\"oldpassword\"\n                                aria-describedby=\"basic-addon1\"\n                                required\n                            />\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\" id=\"basic-addon1\">\n                                    <a\n                                        onClick={showOldToggle}\n                                        style={{cursor: 'pointer'}}\n                                    >\n                                        <span className=\"fa-lg\">\n                                            <i className={showOld ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\n                                        </span>\n                                    </a>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <h6>Confirm Password</h6>\n                        <div class=\"input-group mb-3\">\n                            <input\n                                type={showNew ? \"password\" : \"text\"} \n                                className=\"form-control\"\n                                name=\"confirmPassword\"\n                                value={confirmPassword}\n                                placeholder=\"Confirm Password\"\n                                onChange={e => setConfirmPassword(e.target.value)}\n                                aria-label=\"confirm\"\n                                aria-describedby=\"basic-addon2\"\n                                required\n                            />\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\" id=\"basic-addon2\">\n                                    <a\n                                        onClick={showNewToggle}\n                                        style={{cursor: 'pointer'}}\n                                    >\n                                        <span className=\"fa-lg\">\n                                            <i className={showNew ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\n                                        </span>\n                                    </a>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <button \n                            className=\"btn btn-primary btn-block\" \n                            type=\"submit\"\n                            disabled={loading ? true : false}\n                        >Set Password</button>\n                    </div>\n                </form>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default NewPassword\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/ScrollToTop.js",["280"],"import React, { useEffect, Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nfunction ScrollToTop({ history, children }) {\n  useEffect(() => {\n    const unlisten = history.listen(() => {\n      window.scrollTo(0, 0);\n    });\n    return () => {\n      unlisten();\n    }\n  }, []);\n\n  return <Fragment>{children}</Fragment>;\n}\n\nexport default withRouter(ScrollToTop);","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/PasswordSuccess.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/superadmin/UpdateUserSuccess.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/userActions.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Services.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductDetails.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Products.js",["281","282"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport Pagination from 'react-js-pagination'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Container, Row, Col, ButtonGroup, Button, Dropdown } from 'react-bootstrap'\nimport { getProducts, clearErrors } from './../actions/productActions'\nimport { INSIDE_DASHBOARD_FALSE } from './../constants/dashboardConstants'\nimport Loader from './layout/Loader'\nimport MetaData from './layout/MetaData'\nimport './../css/bootstrap.min.css'\nimport './../fonts/font-awesome.min.css'\n\nconst Products = () => { \n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products)\n\n    const [category, setMainCategory] = useState('')\n    const [subcategory, setSubCategory] = useState('')\n    const [currentPage, setCurrentPage] = useState(1)\n    \n    const me_subCategory = ['', 'Pumps and System', 'Fire Protection Systems', 'Others']\n    const dc_subCategory = ['', 'Uninterrupted Power System', 'Battery Monitoring System', 'Batteries', 'Others']\n    const eee_subCategory = ['', 'Transformers', 'Others']\n    const te_subCategory = ['', 'Partial Discharge Detection', 'Battery Discharge Capacity Tester', 'Battery Impedance or Internal Resistance', 'Load Banks', 'Battery Test Monitor', 'Portable Direct Ground Fault Finder', 'Earth Tester or Clamp Type', 'Others']\n\n    function setCurrentPageNo(pageNumber) {\n        setCurrentPage(pageNumber)\n    }\n\n    let count = productsCount\n    \n    if(category) {\n        count = filteredProductsCount\n    }\n\n    function getName(name) {\n        var x = name\n        var y = x.split(' ')\n        var z = x.split(' ').slice(0,5).join(' ')\n\n        if(y.length > 5) {\n            z = z + \"...\"\n        }\n        \n        return z\n    }\n\n    useEffect(() => {\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n        \n        dispatch(getProducts(currentPage, category, subcategory))\n\n        dispatch({\n            type: INSIDE_DASHBOARD_FALSE\n        })\n    }, [dispatch, alert, error, currentPage, category, subcategory])\n\n    return (\n        <Fragment>\n            <MetaData title={'Our Products'}/>\n            <Container fluid style={{paddingTop: '100px', margin: '0'}}>\n                <Row>\n                    <Col>\n                        <h1 className=\"text-center\" style={{fontWeight: 'bolder'}}>OUR PRODUCTS</h1>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        {subcategory ? \n                            <Fragment>\n                                <p className=\"text-center product-category\" style={{color: '#0d163f'}}>\n                                    <a onClick={() => {\n                                        setCurrentPageNo(1) \n                                        setMainCategory(category)\n                                        setSubCategory('')\n                                        }}  \n                                        style={{textDecoration: 'underline', cursor: 'pointer'}}\n                                    >{category}</a>\n                                    &nbsp;\n                                    <i className=\"fa fa-angle-right\"></i> \n                                    &nbsp;\n                                    {subcategory}\n                                </p> \n                            </Fragment>:\n                            <p className=\"text-center product-category\" style={{color: '#0d163f'}}>\n                                {category}\n                            </p>\n                        }\n                        {category ? \n                            <li \n                                onClick={() => {setMainCategory(''); setSubCategory(''); setCurrentPage(1)}}\n                                style={{listStyle: 'none', textDecoration: 'underline', cursor: 'pointer', color: '#0d163f', fontSize: '1rem', paddingBottom: '5px', width: '130px', marginLeft: 'auto', marginRight: 'auto'}}    \n                            >View All Products</li> :\n                            <Link></Link>\n                        }\n                    </Col>\n                </Row>\n                <hr/>\n                <Row style={{padding: '20px 0 50px 0'}} noGutters={true}>\n                    <Col sm={3}>\n                        <h4 style={{padding: '0 13px', fontWeight: 'bold'}}>Categories</h4>\n                        <ButtonGroup vertical>\n                            <Dropdown as={ButtonGroup}>\n                                <Button\n                                    variant='transparent'\n                                    style={{textAlign: 'left'}}\n                                    onClick={() => {\n                                        setCurrentPageNo(1) \n                                        setMainCategory('Mechanical Engineering')\n                                        setSubCategory('')\n                                        }\n                                    }    \n                                >Mechanical Engineering</Button>\n                                <Dropdown.Toggle variant=\"transparent\" id=\"dropdown-basic\"></Dropdown.Toggle>\n                                <Dropdown.Menu>\n                                    {me_subCategory.map(currentActive => (\n                                        <Dropdown.Item\n                                            onClick={() => {\n                                                setCurrentPageNo(1) \n                                                setMainCategory('Mechanical Engineering')\n                                                setSubCategory(currentActive)\n                                                }\n                                            }\n                                        >{currentActive}</Dropdown.Item>\n                                    ))}\n                                </Dropdown.Menu>\n                            </Dropdown>\n                        \n                            <Dropdown as={ButtonGroup}>\n                                <Button\n                                    variant='transparent'\n                                    style={{textAlign: 'left'}}\n                                    onClick={() => {\n                                        setCurrentPageNo(1) \n                                        setMainCategory('DC Power Systems')\n                                        setSubCategory('')\n                                        }\n                                    }  \n                                >DC Power Systems</Button>\n                                <Dropdown.Toggle variant=\"transparent\" id=\"dropdown-basic\"></Dropdown.Toggle>\n                                <Dropdown.Menu>\n                                    {dc_subCategory.map(currentActive => (\n                                        <Dropdown.Item\n                                            key={currentActive}\n                                            onClick={() => {\n                                                setCurrentPageNo(1) \n                                                setMainCategory('DC Power Systems')\n                                                setSubCategory(currentActive)\n                                                }\n                                            }\n                                        >{currentActive}</Dropdown.Item>\n                                    ))}\n                                </Dropdown.Menu>\n                            </Dropdown>\n                        \n                            <Dropdown as={ButtonGroup}>\n                                <Button\n                                    variant='transparent'\n                                    style={{textAlign: 'left'}}\n                                    onClick={() => {\n                                        setCurrentPageNo(1) \n                                        setMainCategory('Electrical Engineering Equipment')\n                                        setSubCategory('')\n                                        }\n                                    }   \n                                >\n                                    Electrical Engineering<br/>Equipment\n                                </Button>\n                                <Dropdown.Toggle variant=\"transparent\" id=\"dropdown-basic\" split></Dropdown.Toggle>\n                                <Dropdown.Menu>\n                                    {eee_subCategory.map(currentActive => (\n                                        <Dropdown.Item\n                                            key={currentActive}\n                                            onClick={() => {\n                                                setCurrentPageNo(1) \n                                                setMainCategory('Electrical Engineering Equipment')\n                                                setSubCategory(currentActive)\n                                                }\n                                            }\n                                        >{currentActive}</Dropdown.Item>\n                                    ))}\n                                </Dropdown.Menu>\n                            </Dropdown>\n                        \n                            <Dropdown as={ButtonGroup}>\n                                <Button\n                                    variant='transparent'\n                                    style={{textAlign: 'left'}}\n                                    onClick={() => {\n                                        setCurrentPageNo(1) \n                                        setMainCategory('Test Equipment')\n                                        setSubCategory('')\n                                        }\n                                    }\n                                >\n                                    Test Equipment\n                                </Button>\n                                <Dropdown.Toggle variant=\"transparent\" id=\"dropdown-basic\" split></Dropdown.Toggle>\n                                <Dropdown.Menu>\n                                    {te_subCategory.map(currentActive => (\n                                        <Dropdown.Item\n                                            key={currentActive}\n                                            onClick={() => {\n                                                setCurrentPageNo(1) \n                                                setMainCategory('Test Equipment')\n                                                setSubCategory(currentActive)\n                                                }\n                                            }\n                                        >{currentActive}</Dropdown.Item>\n                                    ))}\n                                </Dropdown.Menu>\n                            </Dropdown>\n\n                            <Dropdown as={ButtonGroup}>\n                                <Button\n                                    variant='transparent'\n                                    style={{textAlign: 'left'}}\n                                    onClick={() => {\n                                        setCurrentPageNo(1) \n                                        setMainCategory('Others')\n                                        setSubCategory('')\n                                        }\n                                    }\n                                >\n                                    Others\n                                </Button>\n                            </Dropdown>\n                        </ButtonGroup>\n                    </Col>\n                    <Col sm={9} style={{padding: '10px'}}>\n                        {loading ? <Loader/> : (\n                            <Row style={{textAlign: 'center', paddingRight: '20px'}}>\n                                {products && (products.length !== 0) ? products.map( product => (\n                                    <Col style={{padding: '10px 0 15px 0', marginLeft: '10px'}}>\n                                        <img src={`${product.image.url}`} height='200px' width='200px' className='mb-3'/>\n                                        <br/>\n                                        <Link to={`/product/${product._id}`} className=\"text-nowrap\">\n                                            {getName(product.name)}\n                                        </Link>\n                                    </Col>\n                                )) : (\n                                    <Col>\n                                        <h3 style={{margin: '10px 0'}}>No products found.</h3>\n                                    </Col>\n                                )}\n                            </Row>\n                        )}\n                    </Col>\n                </Row>\n            </Container>\n\n            {resPerPage < count && (\n                <div className=\"d-flex justify-content-center mt-5\">\n                    <Pagination \n                        activePage={currentPage}\n                        itemsCountPerPage={resPerPage}\n                        totalItemsCount={productsCount}\n                        onChange={setCurrentPageNo}\n                        nextPageText={'Next'}\n                        prevPageText={'Prev'}\n                        firstPageText={'First'}\n                        lastPageText={'Last'}\n                        itemClass='page-item'\n                        linkClass='page-link'\n                    />\n                </div>\n            )}\n        </Fragment>\n    )\n}\n\nexport default Products","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/Header.js",["283","284"],"import React, { Fragment, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useAlert } from 'react-alert'\nimport { logout } from './../../actions/userActions'\nimport {Navbar, Nav, Dropdown } from 'react-bootstrap'\nimport '../../css/bootstrap.min.css'\nimport '../../css/styles.css'\n\nconst Header = () => {\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { user } = useSelector(state => state.auth)\n\n    const logoutHandler = () => {\n        dispatch(logout())\n        alert.success('Logged out successfully')\n    }\n    \n    let userAvatar = \"\"\n    let userName = \"\"\n\n    if(user && user.avatar) {\n        userAvatar = user.avatar.url\n    } else {\n        userAvatar = \"\"\n    }\n\n    if (user && user.name) {\n        userName = user.name\n    } else {\n        userName = ''\n    }\n    \n    function getFirstName() {\n        let x = userName.split(' ')\n        let name = x[0]\n        let firstName = ''\n\n        for (var i = 0; i < name.length; i++) {\n            if(i == 8) {\n                firstName += '...'\n                break\n            }\n\n            firstName += name.charAt(i)\n        }\n        \n        return firstName\n    }\n\n    return (\n        <Fragment>\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\" fixed=\"top\">\n                <Navbar.Brand>\n                    <Link to='/'>\n                        <img className=\"nav-link nav-logo\" alt=\"Agile Technodynamics, Inc.\" src=\"https://res.cloudinary.com/agiletechnodynamicsinc/image/upload/v1615205387/websiteImages/agile-header-logo_tan5lw.png\"/>\n                    </Link>\n                </Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <Nav className=\"mr-auto justify-space-between flex-grow-1\">\n                        <Nav.Link  className=\"header-link\" style={{fontWeight: 'bold'}}>\n                            <Link to='/'>Home</Link>\n                        </Nav.Link>\n                        <Nav.Link  className=\"header-link\" style={{fontWeight: 'bold'}}>\n                            <Link to='/about-us'>About Us</Link>\n                        </Nav.Link>\n                        <Nav.Link  className=\"header-link\" style={{fontWeight: 'bold'}}>\n                            <Link to=\"/products\">Products</Link>\n                        </Nav.Link>\n                        <Nav.Link  className=\"header-link\" style={{fontWeight: 'bold'}}>\n                            <Link to=\"/our-services\">Services</Link>\n                        </Nav.Link>\n                        <Nav.Link  className=\"header-link\" style={{fontWeight: 'bold'}}>\n                            <Link to=\"/contact-us\">Contact Us</Link>\n                        </Nav.Link>\n                    </Nav>\n                    {user ? (\n                        <Nav inline>\n                            <Dropdown className=\"user-dropdown\">\n                                <Dropdown.Toggle\n                                    variant=\"transparent\"\n                                    id=\"dropdown-basic\"\n                                >\n                                    <img \n                                        class='mr-2 rounded-circle'\n                                        src={userAvatar}\n                                        alt=\"Avatar\"\n                                        width='30' \n                                        height='32'\n                                    /> {user && getFirstName()}\n                                </Dropdown.Toggle>\n\n                                <Dropdown.Menu>\n                                    <Dropdown.Item>\n                                        <Link to='/admin/dashboard'>Dashboard</Link>\n                                    </Dropdown.Item>\n                                    <Dropdown.Item className=\"text-danger\"\n                                        onClick={() => logoutHandler()}\n                                    >Log Out</Dropdown.Item>\n                                </Dropdown.Menu>\n                            </Dropdown>\n                        </Nav>\n                    ) : <Nav></Nav>}\n                </Navbar.Collapse>\n            </Navbar>\n        </Fragment>\n    )\n}\n\nexport default Header","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/UpdateProfile.js",["285"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/ListAbout.js",["286"],"import React, { Fragment, useEffect , useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTableV5 } from 'mdbreact'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAboutDetails, clearErrors } from '../../actions/websiteActions'\nimport { logout } from './../../actions/userActions'\nimport { UPDATE_ABOUT_RESET } from '../../constants/websiteConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/sidebar.css'\nimport '../../css/sidebar-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst ListAbout = ({history}) => {\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { loading, error, abouts } = useSelector(state => state.abouts)\n    const { isUpdated } = useSelector(state => state.website)\n    const { user } = useSelector(state => state.auth)\n\n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => setToggled(!isToggled)\n\n    const logoutHandler = () => {\n        dispatch(logout())\n        alert.success('Logged out successfully')\n    }\n\n    useEffect(() => {\n        dispatch(getAboutDetails())\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n        \n        if(isUpdated){\n            alert.success('About Us information has been updated successfully.')\n            history.push('/admin/about')\n\n            dispatch({\n                type: UPDATE_ABOUT_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, isUpdated, history])\n\n    const setAboutData = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Title',\n                    field: 'title',\n                    width: 150\n                },\n                {\n                    label: 'Description',\n                    field: 'description',\n                    width: 600\n                },\n                {\n                    label: 'Edit',\n                    field: 'actions',\n                    width: 100\n                }\n            ],\n            rows: []\n         }\n\n         abouts.forEach(about => {\n            data.rows.push({\n                title: about.title,\n                description: about.description,\n                actions:\n                <Fragment>\n                    <div style={{display: 'flex'}}>\n                        <Link to={`/admin/about/${about._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                            <i className='fa fa-pencil'></i>\n                        </Link>\n                    </div>\n                </Fragment>\n             })\n         })\n\n         return data\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'About Us Details'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\n                <div id=\"sidebar-wrapper\" >\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )\n                        }\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\n                            <i className=\"fa fa-bars\"   ></i>\n                        </a>\n                        <Fragment>\n                        <div style={{padding: '30px'}}>\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>About Us Details</h1>\n                            {loading ? <Loader/> : (\n                                <MDBDataTableV5\n                                    data={setAboutData()}\n                                    paging={false}\n                                    searching={false}\n                                    searchTop\n                                    searchBottom={false}\n                                    scrollX\n                                    sortable={false}\n                                    hover\n                                />\n                            )}\n                        </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListAbout\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/ListHome.js",["287","288"],"import React, { Fragment, useEffect , useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTableV5 } from 'mdbreact'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getHomes, clearErrors } from '../../actions/websiteActions'\nimport { logout } from './../../actions/userActions'\nimport { UPDATE_HOME_RESET } from '../../constants/websiteConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/sidebar.css'\nimport '../../css/sidebar-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst ListHome = ({history}) => {\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { loading, error, homes } = useSelector(state => state.homes)\n    const { isUpdated } = useSelector(state => state.website)\n    const { user } = useSelector(state => state.auth)\n\n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => setToggled(!isToggled)\n\n    const logoutHandler = () => {\n        dispatch(logout())\n        alert.success('Logged out successfully')\n    }\n\n    useEffect(() => {\n        dispatch(getHomes())\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n        \n        if(isUpdated){\n            alert.success('Home information has been updated successfully.')\n            history.push('/admin/homes')\n\n            dispatch({\n                type: UPDATE_HOME_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, isUpdated, history])\n\n    const setHomeData = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Title',\n                    field: 'name',\n                    width: 250\n                },\n                {\n                    label: 'Description',\n                    field: 'description',\n                    width: 430\n                },\n                {\n                    label: 'Image Preview',\n                    field: 'image',\n                    width: 150\n                },\n                {\n                    label: 'Edit',\n                    field: 'actions',\n                    width: 100\n                }\n            ],\n            rows: []\n         }\n\n         homes.forEach(home => {\n            data.rows.push({\n                name: home.name,\n                description: home.description,\n                image: <Fragment>\n                    <figure>\n                        <img \n                            src={home.image.url} \n                            className='mt-3 mr-2' \n                            width='110' \n                            height='104'\n                        />\n                    </figure>\n                </Fragment>,\n                actions:\n                <Fragment>\n                    <div style={{display: 'flex'}}>\n                        <Link to={`/admin/home/${home._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                            <i className='fa fa-pencil'></i>\n                        </Link>\n                    </div>\n                </Fragment>\n             })\n         })\n\n         return data\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Home Details'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\n                <div id=\"sidebar-wrapper\" >\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )\n                        }\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\n                            <i className=\"fa fa-bars\"   ></i>\n                        </a>\n                        <Fragment>\n                        <div style={{padding: '30px'}}>\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Home Details</h1>\n                            {loading ? <Loader/> : (\n                                <MDBDataTableV5\n                                    data={setHomeData()}\n                                    paging={false}\n                                    searching={false}\n                                    searchTop\n                                    searchBottom={false}\n                                    scrollX\n                                    sortable={false}\n                                    hover\n                                />\n                            )}\n                        </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListHome\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/ListFooter.js",["289"],"import React, { Fragment, useEffect , useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTableV5 } from 'mdbreact'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getFooterDetails, clearErrors } from '../../actions/websiteActions'\nimport { logout } from './../../actions/userActions'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { UPDATE_FOOTER_RESET } from '../../constants/websiteConstants'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/sidebar.css'\nimport '../../css/sidebar-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst ListFooter = ({history}) => {\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { loading, error, footerInfo } = useSelector(state => state.footerDetails)\n    const { isUpdated } = useSelector(state => state.website)\n    const { user } = useSelector(state => state.auth)\n\n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => setToggled(!isToggled)\n\n    const logoutHandler = () => {\n        dispatch(logout())\n        alert.success('Logged out successfully')\n    }\n\n    useEffect(() => {\n        dispatch(getFooterDetails())\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n        \n        if(isUpdated){\n            alert.success('Footer has been updated successfully.')\n            history.push('/admin/footer')\n\n            dispatch({\n                type: UPDATE_FOOTER_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, isUpdated, history])\n\n    const setFooterData = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Details',\n                    field: 'text',\n                }\n            ],\n            rows: [\n                {\n                    text: footerInfo.footerTitle\n                },\n                {\n                    text: footerInfo.footerDescription\n                },\n                {\n                    text: footerInfo.addressInfo\n                },\n                {\n                    text: footerInfo.phoneInfo\n                },\n                {\n                    text: footerInfo.cellphoneInfo\n                },\n                {\n                    text: footerInfo.emailInfo\n                }\n            ]\n         }\n         return data\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Footer Details'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}>\n                <div id=\"sidebar-wrapper\">\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )\n                        }\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\n                        </a>\n                        <Fragment>\n                        <div style={{padding: '30px'}}>\n                            <div style={{display: 'flex'}}>\n                                <div style={{marginRight: 'auto'}}>\n                                    <h1 className='mt-3 mb-3 ml-10 mr-10'>Footer Details</h1>\n                                </div>\n                                <div style={{marginLeft: 'auto', marginTop: '30px'}}>\n                                    <Link to='/admin/update-footer'>\n                                        <button className='btn btn-primary btn-sm text-capitalize mb-5'>\n                                            Update\n                                        </button>\n                                    </Link>\n                                </div>\n                            </div>\n                            {loading ? <Loader/> : (\n                                <MDBDataTableV5\n                                    data={setFooterData()}\n                                    paging={false}\n                                    searcing={false}\n                                    searchTop\n                                    searchBottom={false}\n                                    scrollX\n                                    sortable={false}\n                                    hover\n                                />\n                            )}\n                        </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListFooter\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/Profile.js",["290"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useAlert } from 'react-alert'\nimport { logout } from './../../actions/userActions'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport MetaData from './../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/profile.css'\nimport '../../css/sidebar.css'\nimport '../../css/sidebar-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst Profile = () => {\n    const dispatch = useDispatch()\n    const alert = useAlert()\n\n    const { user, loading } = useSelector(state => state.auth)\n    \n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => setToggled(!isToggled)\n    \n    const logoutHandler = () => {\n        dispatch(logout())\n        alert.success('Logged out successfully')\n    }\n\n    useEffect(() => {\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch])\n\n    return (\n        <Fragment>\n            {loading ? <Loader /> : (\n                <Fragment>\n                    <MetaData title={'My Profile'} />\n                    <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}>\n                        <div id=\"sidebar-wrapper\" >\n                            <ul className=\"sidebar-nav\">\n                                <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                                <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                                <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                                <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                                {user && user.role !== 'admin' ? (\n                                        <Fragment>\n                                            <hr/>\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                        </Fragment>\n                                    ) : (\n                                        <Fragment>\n                                            <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                            <hr/>\n                                            <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                            <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                            <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                            <hr/>\n                                            <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                            <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                        </Fragment>\n                                    )\n                                }\n                                <hr/>\n                                <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                            </ul>\n                        </div>\n                            <div className=\"page-content-wrapper\">\n                                <div className=\"container-fluid\">\n                                    <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\n                                        <i className=\"fa fa-bars\"   ></i>\n                                    </a>\n                                    <div className=\"container\">\n                                        <div className=\"main-body\">\n                                            <h1 style={{textAlign: 'center', padding:'0 0 15px 0'}}>My Profile</h1>\n                                            {loading ? <Loader/> : (\n                                                <Fragment>\n                                                    <div className=\"row gutters-sm\">\n                                                        <div className=\"col-md-4 mb-3\">\n                                                            <div className=\"card\">\n                                                                <div className=\"card-body\">\n                                                                    <div className=\"d-flex flex-column align-items-center text-center\">\n                                                                        <img src={user.avatar.url} alt=\"Avatar\" className=\"rounded-circle\" width=\"150px\" height=\"150px\"/>\n                                                                        <div className=\"mt-3\">\n                                                                            <h4>{user.name}</h4>\n                                                                            <p className=\"text-dark mb-1\" style={{textTransform: 'uppercase'}}>{user.role}</p>\n                                                                            <Link className=\"btn btn-dark btn-sm ml-3 mt-3\" type=\"button\" to=\"/admin/edit-profile\">Edit Profile</Link>\n                                                                            <Link className=\"btn btn-dark btn-sm ml-3 mt-3\" type=\"button\" to=\"/password/update\">Change Password</Link>\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <div className=\"col-md-8\">\n                                                            <div className=\"card mb-3\">\n                                                                <div className=\"card-body\">\n                                                                    <div className=\"row\">\n                                                                        <div className=\"col-sm-3\">\n                                                                            <h6 className=\"mb-0\">Full Name</h6>\n                                                                        </div>\n                                                                        <div className=\"col-sm-9 text-dark\">\n                                                                            {user.name}\n                                                                        </div>\n                                                                    </div>\n                                                                    <hr/>\n                                                                    <div className=\"row\">\n                                                                        <div className=\"col-sm-3\">\n                                                                            <h6 className=\"mb-0\">Email</h6>\n                                                                        </div>\n                                                                        <div className=\"col-sm-9 text-dark\">\n                                                                            {user.email}\n                                                                        </div>\n                                                                    </div>\n                                                                    <hr/>\n                                                                    <div className=\"row\">\n                                                                        <div className=\"col-sm-3\">\n                                                                            <h6 className=\"mb-0\">Phone</h6>\n                                                                        </div>\n                                                                        <div className=\"col-sm-9 text-dark\">\n                                                                            {user.contactNumber}\n                                                                        </div>\n                                                                    </div>\n                                                                    <hr/>\n                                                                    <div className=\"row\">\n                                                                        <div className=\"col-sm-3\">\n                                                                            <h6 className=\"mb-0\">Address</h6>\n                                                                        </div>\n                                                                        <div className=\"col-sm-9 text-dark\">\n                                                                            {user.address}\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </Fragment>\n                                            )}\n                                        </div>\n                                    </div>    \n                                </div>\n                            </div>\n                        </div>\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nexport default Profile\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/UpdatePassword.js",["291","292","293","294"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/Dashboard.js",["295","296"],"import React, { Fragment, useEffect, useState} from 'react'\nimport { Link } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { listInquiry } from '../../actions/inquiryActions'\nimport { getUsers, logout } from '../../actions/userActions'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/dashboard.css'\nimport '../../css/sidebar.css'\nimport '../../css/sidebar-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst Dashboard = () => {\n    const dispatch = useDispatch()\n    const alert = useAlert()\n\n    const { loading, adminCount, superadminCount } = useSelector(state => state.users)\n    const { inquiryCount, appointmentCount, otherCount } = useSelector(state => state.listInquiry)\n    const { user } = useSelector(state => state.auth)\n\n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => setToggled(!isToggled)\n    \n    const logoutHandler = () => {\n        dispatch(logout())\n        alert.success('Logged out successfully')\n    }\n\n    useEffect(() => {\n        if(user.role === 'admin'){\n            dispatch(listInquiry())\n        } else {\n            dispatch(getUsers())\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch])\n    \n    return (\n        <Fragment>\n            <MetaData title={'Dashboard'}/>\n            <Fragment>\n                {loading ? <Loader/> : (\n                    <Fragment>\n                        <MetaData title={'Admin Dashboard'}/>\n                        <div id=\"wrapper\" className={isToggled ? null : \"toggled\"}>\n                            <div id=\"sidebar-wrapper\" >\n                                <ul className=\"sidebar-nav\">\n                                    <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                                    <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                                    <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                                    <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                                    {user && user.role !== 'admin' ? (\n                                            <Fragment>\n                                                <hr/>\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                            </Fragment>\n                                        ) : (\n                                            <Fragment>\n                                                <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                                <hr/>\n                                                <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                                <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                                <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                                <hr/>\n                                                <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                                <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                            </Fragment>\n                                        )}\n\n                                    <hr/>\n                                    <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                                </ul>\n                            </div>\n                            <div className=\"page-content-wrapper\">\n                                <div className=\"container-fluid\">\n                                    <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\n                                        <i className=\"fa fa-bars\"   ></i>\n                                    </a>\n                                    {user && user.role !== 'admin' ? (\n                                        <Fragment>\n                                            <div className=\"main-section\" style={{paddingTop: '65px'}}>\n                                                <h3><strong>Overview</strong></h3>\n                                                <div className=\"dashbord\">\n                                                    <div className=\"icon-section\">\n                                                        <i className=\"fa fa-users\" aria-hidden=\"true\"></i><br/>\n                                                        <small>Admins</small>\n                                                        <p>{adminCount} admins</p>\n                                                    </div>\n                                                    <Link to=\"/admin/users/admin\" className=\"text-decoration-none text-white\">\n                                                        <div className=\"detail-section\">\n                                                            View <i className=\"fa fa-angle-right\"></i>\n                                                        </div>\n                                                    </Link>\n                                                </div>\n                                                <div className=\"dashbord\">\n                                                    <div className=\"icon-section\">\n                                                        <i className=\"fa fa-user-circle\" aria-hidden=\"true\"></i><br/>\n                                                        <small>Super Admins</small>\n                                                        <p>{superadminCount}  superadmins</p>\n                                                    </div>\n                                                    <Link to=\"/admin/users/superadmin\" className=\"text-decoration-none text-white\">\n                                                        <div className=\"detail-section\">\n                                                            View <i className=\"fa fa-angle-right\"></i>\n                                                        </div>\n                                                    </Link>\n                                                </div>\n                                            </div>\n                                        </Fragment>\n                                    ) : (\n                                        <Fragment>\n                                            <div className=\"main-section\" style={{paddingTop: '65px'}}>\n                                                <h3><strong>Inbox</strong></h3>\n                                                <div className=\"dashbord\">\n                                                    <div className=\"icon-section\">\n                                                        <i className=\"fa fa-envelope\" aria-hidden=\"true\"></i><br/>\n                                                        <small>Inquiries</small>\n                                                        <p>{inquiryCount} messages</p>\n                                                    </div>\n                                                    <Link to=\"/admin/inquiries\" className=\"text-decoration-none text-white\">\n                                                        <div className=\"detail-section\">\n                                                            View <i className=\"fa fa-angle-right\"></i>\n                                                        </div>\n                                                    </Link>\n                                                </div>\n                                                <div className=\"dashbord\">\n                                                    <div className=\"icon-section\">\n                                                        <i className=\"fa fa-archive\" aria-hidden=\"true\"></i><br/>\n                                                        <small>Appointments</small>\n                                                        <p>{appointmentCount} messages</p>\n                                                    </div>\n                                                    <Link to=\"/admin/appointments\" className=\"text-decoration-none text-white\">\n                                                        <div className=\"detail-section\">\n                                                            View <i className=\"fa fa-angle-right\"></i>\n                                                        </div>\n                                                    </Link>\n                                                </div>\n                                                <div className=\"dashbord\">\n                                                    <div className=\"icon-section\">\n                                                        <i className=\"fa fa-inbox\" aria-hidden=\"true\"></i><br/>\n                                                        <small>Other Concerns</small>\n                                                        <p>{otherCount} messages</p>\n                                                    </div>\n                                                    <Link to=\"/admin/others\" className=\"text-decoration-none text-white\">\n                                                        <div className=\"detail-section\">\n                                                            View <i className=\"fa fa-angle-right\"></i>\n                                                        </div>\n                                                    </Link>\n                                                </div>\n                                            </div>\n                                        </Fragment>\n                                    )}\n                                    <div className=\"main-section\" style={{paddingTop: '65px', paddingBottom: '65px'}}>\n                                        <h3><strong>Settings</strong></h3>\n                                        <div className=\"dashbord dashbord-25\">\n                                            <div className=\"icon-section\">\n                                                <i className=\"fa fa-home\" aria-hidden=\"true\"></i><br/>\n                                                <p>Update Home</p>\n                                            </div>\n                                            <Link to=\"/admin/home\" className=\"text-decoration-none text-white\">\n                                                <div className=\"detail-section\">\n                                                    Update <i className=\"fa fa-angle-right\"></i>\n                                                </div>\n                                            </Link>\n                                        </div>\n                                        <div className=\"dashbord dashbord-25\">\n                                            <div className=\"icon-section\">\n                                                <i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i><br/>\n                                                <p>Update About</p>\n                                            </div>\n                                            <Link to=\"/admin/about\" className=\"text-decoration-none text-white\">\n                                                <div className=\"detail-section\">\n                                                    Update <i className=\"fa fa-angle-right\"></i>\n                                                </div>\n                                            </Link>\n                                        </div>\n                                        <div className=\"dashbord dashbord-25\">\n                                            <div className=\"icon-section\">\n                                                <i className=\"fa fa-quote-left\" aria-hidden=\"true\"></i><br/>\n                                                <p>Update Footer</p>\n                                            </div>\n                                            <Link to=\"/admin/footer\" className=\"text-decoration-none text-white\">\n                                                <div className=\"detail-section\">\n                                                    Update <i className=\"fa fa-angle-right\"></i>\n                                                </div>\n                                            </Link>\n                                        </div>\n                                        <div className=\"dashbord dashbord-25\">\n                                            <div className=\"icon-section\">\n                                                <i className=\"fa fa-check\" aria-hidden=\"true\"></i><br/>\n                                                <p>Update Services</p>\n                                            </div>\n                                            <Link to=\"/admin/service\" className=\"text-decoration-none text-white\">\n                                                <div className=\"detail-section\">\n                                                    Update <i className=\"fa fa-angle-right\"></i>\n                                                </div>\n                                            </Link>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </Fragment>\n                )}\n            </Fragment>\n        </Fragment>\n    )\n}\n\nexport default Dashboard\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/ListServices.js",["297"],"import React, { Fragment, useEffect , useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTableV5 } from 'mdbreact'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getServices, clearErrors } from '../../actions/websiteActions'\nimport { logout } from './../../actions/userActions'\nimport { UPDATE_SERVICES_RESET } from '../../constants/websiteConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/sidebar.css'\nimport '../../css/sidebar-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst ListServices = ({history}) => {\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { loading, error, services } = useSelector(state => state.services)\n    const { isUpdated } = useSelector(state => state.website)\n    const { user } = useSelector(state => state.auth)\n\n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => setToggled(!isToggled)\n\n    const logoutHandler = () => {\n        dispatch(logout())\n        alert.success('Logged out successfully')\n    }\n\n    useEffect(() => {\n        dispatch(getServices())\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n        \n        if(isUpdated){\n            alert.success('Services has been updated successfully.')\n            history.push('/admin/service')\n\n            dispatch({\n                type: UPDATE_SERVICES_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, isUpdated, history])\n\n    const setServiceData = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Title',\n                    field: 'title',\n                    width: 200\n                },\n                {\n                    label: 'Subtitle',\n                    field: 'subtitle',\n                    width: 150\n                },\n                {\n                    label: 'Description',\n                    field: 'description',\n                    width: 350\n                },\n                {\n                    label: 'Icon Preview',\n                    field: 'icon',\n                    width: 130\n                },\n                {\n                    label: 'Edit',\n                    field: 'actions',\n                    width: 100\n                }\n            ],\n            rows: []\n         }\n\n         services.forEach(service => {\n            data.rows.push({\n                title: service.title,\n                subtitle: service.subtitle,\n                description: service.description,\n                icon: <Fragment>\n                    <span className=\"fa-stack fa-2x\">\n                        <i className={`fa fa-circle fa-stack-2x text-${service.iconBackground}`}></i>\n                        <i className={`fa fa-${service.icon} fa-stack-1x fa-inverse`}></i>\n                    </span>\n                </Fragment>,\n                actions:\n                <Fragment>\n                    <div style={{display: 'flex'}}>\n                        <Link to={`/admin/service/${service._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                            <i className='fa fa-pencil'></i>\n                        </Link>\n                    </div>\n                </Fragment>\n             })\n         })\n\n         return data\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Services Details'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\n                <div id=\"sidebar-wrapper\" >\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )\n                        }\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\n                            <i className=\"fa fa-bars\"   ></i>\n                        </a>\n                        <Fragment>\n                        <div style={{padding: '30px'}}>\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Services Details</h1>\n                            {loading ? <Loader/> : (\n                                <MDBDataTableV5\n                                    data={setServiceData()}\n                                    searchTop\n                                    searchBottom={false}\n                                    scrollX\n                                    sortable={false}\n                                    searching={false}\n                                    paging={false}\n                                    hover\n                                />\n                            )}\n                        </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListServices\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/UpdateHome.js",["298","299","300"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/UpdateAbout.js",["301","302"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/UpdateServices.js",["303","304","305","306","307"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/UpdateFooter.js",["308","309"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListInquiries.js",["310"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTableV5 } from 'mdbreact'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Modal, Button } from 'react-bootstrap'\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\nimport { logout } from './../../actions/userActions'\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/sidebar.css'\nimport '../../css/sidebar-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst ListInquiries = ({history}) => {\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\n    const { isUpdated } = useSelector(state => state.inquiry)\n    const { user } = useSelector(state => state.auth)\n\n    const [isToggled, setToggled] = useState('false')\n    const [show, setShow] = useState(false)\n    const [id, setId] = useState('')\n\n    const handleToggle = () => setToggled(!isToggled)\n    const handleClose = () => setShow(false)\n    const handleShow = () => setShow(true)\n\n    const logoutHandler = () => {\n        dispatch(logout())\n        alert.success('Logged out successfully')\n    }\n\n    const updateInquiryHandler = (id, inquiryStatus) => { \n        const formData = new FormData()\n        formData.set('inquiryStatus', inquiryStatus)\n\n        alert.success('Message has been moved to Trash.')\n        dispatch(updateInquiry(id, formData))\n        handleClose()\n    }\n    \n    useEffect(() => {\n        dispatch(listInquiry())\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n        if(isUpdated){\n            history.push('/admin/inquiries')\n\n            dispatch({\n                type: UPDATE_INQUIRY_RESET\n            })\n        }\n        \n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, isUpdated, history])\n\n    const setInquiries = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Status',\n                    field: 'inquiryStatus',\n                    width: 100,\n                    sort: 'disabled'\n                },\n                {\n                    label: 'Date / Time',\n                    field: 'createdAt',\n                    width: 150\n                },\n                {\n                    label: 'Last Name',\n                    field: 'lastName',\n                    width: 150\n                },\n                {\n                    label: 'First Name',\n                    field: 'firstName',\n                    width: 200\n                },\n                {\n                    label: 'Company Name',\n                    field: 'companyName',\n                    width: 200\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                    width: 100,\n                    sort: 'disabled'\n                }\n            ],\n            rows: []\n         }\n\n         inquiries.forEach(inquiry => {\n             if(inquiry.concernType==='Inquiry' && (inquiry.inquiryStatus !== \"Deleted\" && inquiry.inquiryStatus !== \"Resolved\")){\n                data.rows.push({\n                    createdAt: inquiry.createdAt,\n                    firstName: inquiry.firstName,\n                    lastName: inquiry.lastName,\n                    companyName: inquiry.companyName,\n                    inquiryStatus: <p style={{ color: 'red' }}>{inquiry.inquiryStatus}</p>,\n                    actions:\n                    <Fragment>\n                        <div style={{display: 'flex'}}>\n                            <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                                <i className='fa fa-eye'></i>\n                            </Link>\n                            <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => {\n                                handleShow()\n                                setId(inquiry._id)\n                            }}>\n                                <i className='fa fa-trash'></i>\n                            </button>\n                        </div>\n                    </Fragment>\n                 })\n             }\n         })\n\n         return data\n    }\n    \n    return (\n        <Fragment>\n            <MetaData title={'Inquiries'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\n                <div id=\"sidebar-wrapper\" >\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )\n                        }\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\n                            <i className=\"fa fa-bars\"   ></i>\n                        </a>\n                        <Modal show={show} onHide={handleClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Move to Trash?</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>Are you sure you want to move this message to Trash?</Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={handleClose}>\n                                    Close\n                                </Button>\n                                <Button variant=\"primary\" onClick={() => updateInquiryHandler(id, \"Deleted\")}>\n                                    Yes, I'm sure\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                        <Fragment>\n                            <div style={{padding: '30px'}}>\n                                <h1 className='mt-3 mb-3 ml-10 mr-10'>Inbox - Inquiries</h1>\n                                {loading? <Loader/> : (\n                                    <MDBDataTableV5\n                                        data={setInquiries()}\n                                        entries={5}\n                                        entriesOptions={[5, 10, 15, 20]}\n                                        searchTop\n                                        searchBottom={false}\n                                        scrollX\n                                        sortable={true}\n                                        hover\n                                    />\n                                )}\n                            </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListInquiries","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListAppointments.js",["311"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTableV5 } from 'mdbreact'\nimport { useAlert } from 'react-alert'\nimport { Modal, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\nimport { logout } from '../../actions/userActions'\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/sidebar.css'\nimport '../../css/sidebar-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst ListAppointments = ({history}) => {\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\n    const { isUpdated } = useSelector(state => state.inquiry)\n    const { user } = useSelector(state => state.auth)\n\n    const [isToggled, setToggled] = useState('false')\n    const [id, setId] = useState('')\n    const [show, setShow] = useState(false)\n\n    const handleClose = () => setShow(false)\n    const handleShow = () => setShow(true)\n    const handleToggle = () => setToggled(!isToggled)\n\n    const logoutHandler = () => {\n        dispatch(logout())\n        alert.success('Logged out successfully')\n    }\n\n    const updateInquiryHandler = (id, inquiryStatus) => { \n        const formData = new FormData()\n        formData.set('inquiryStatus', inquiryStatus)\n\n        alert.success('Message has been moved to Trash.')\n        dispatch(updateInquiry(id, formData))\n        handleClose()\n    }\n    \n    useEffect(() => {\n        dispatch(listInquiry())\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n        if(isUpdated){\n            history.push('/admin/appointments')\n\n            dispatch({\n                type: UPDATE_INQUIRY_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, history, isUpdated])\n    \n    const setInquiries = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Status',\n                    field: 'inquiryStatus',\n                    width: 100,\n                    sort: 'disabled'\n                },\n                {\n                    label: 'Date / Time',\n                    field: 'createdAt',\n                    width: 150\n                },\n                {\n                    label: 'Last Name',\n                    field: 'lastName',\n                    width: 150\n                },\n                {\n                    label: 'First Name',\n                    field: 'firstName',\n                    width: 200\n                },\n                {\n                    label: 'Company Name',\n                    field: 'companyName',\n                    width: 200\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                    width: 100,\n                    sort: 'disabled'\n                }\n            ],\n            rows: []\n         }\n\n         inquiries.forEach(inquiry => {\n             if(inquiry.concernType==='Appointment' && (inquiry.inquiryStatus !== \"Deleted\" && inquiry.inquiryStatus !== \"Resolved\")){\n                \n                data.rows.push({\n                    createdAt: inquiry.createdAt,\n                    firstName: inquiry.firstName,\n                    lastName: inquiry.lastName,\n                    companyName: inquiry.companyName,\n                    inquiryStatus: <p style={{ color: 'red' }}>{inquiry.inquiryStatus}</p>,\n                    actions:\n                    <Fragment>\n                        <div style={{display: 'flex'}}>\n                            <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                                <i className='fa fa-eye'></i>\n                            </Link>\n                            <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => {\n                                handleShow()\n                                setId(inquiry._id)\n                            }}>\n                                <i className='fa fa-trash'></i>\n                            </button>\n                        </div>     \n                    </Fragment>\n                 })\n             }\n         })\n\n         return data\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Appointments'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\n                <div id=\"sidebar-wrapper\" >\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )\n                        }\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\n                            <i className=\"fa fa-bars\"   ></i>\n                        </a>\n                        <Modal show={show} onHide={handleClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Move to Trash?</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>Are you sure you want to move this message to Trash?</Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={handleClose}>\n                                    Close\n                                </Button>\n                                <Button variant=\"primary\" onClick={() => updateInquiryHandler(id, \"Deleted\")}>\n                                    Yes, I'm sure\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                        <Fragment>\n                        <div style={{padding: '30px'}}>\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Inbox - Appointments</h1>\n                            {loading? <Loader/> : (\n                                <MDBDataTableV5\n                                    data={setInquiries()}\n                                    entries={5}\n                                    entriesOptions={[5, 10, 15, 20]}\n                                    searchTop\n                                    searchBottom={false}\n                                    scrollX\n                                    sortable={true}\n                                    hover\n                                />\n                            )}\n                        </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListAppointments","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListOthers.js",["312"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTableV5 } from 'mdbreact'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Modal, Button } from 'react-bootstrap'\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\nimport { logout } from './../../actions/userActions'\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/sidebar.css'\nimport '../../css/sidebar-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst ListOthers = ({history}) => {\n\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\n    const { isUpdated } = useSelector(state => state.inquiry)\n    const { user } = useSelector(state => state.auth)\n\n    const [isToggled, setToggled] = useState('false')\n    const [id, setId] = useState('')\n    const [show, setShow] = useState(false)\n\n    const handleToggle = () => setToggled(!isToggled)\n    const handleClose = () => setShow(false)\n    const handleShow = () => setShow(true)\n\n    const logoutHandler = () => {\n        dispatch(logout())\n        alert.success('Logged out successfully')\n    }\n\n    const updateInquiryHandler = (id, inquiryStatus) => { \n        const formData = new FormData()\n        formData.set('inquiryStatus', inquiryStatus)\n\n        alert.success('Message has been moved to Trash.')\n        dispatch(updateInquiry(id, formData))\n        handleClose()\n    }\n\n    useEffect(() => {\n        dispatch(listInquiry())\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n        if(isUpdated){\n            history.push('/admin/others')\n\n            dispatch({\n                type: UPDATE_INQUIRY_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, isUpdated, history])\n\n    const setInquiries = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Status',\n                    field: 'inquiryStatus',\n                    width: 100,\n                    sort: 'disabled'\n                },\n                {\n                    label: 'Date / Time',\n                    field: 'createdAt',\n                    width: 150\n                },\n                {\n                    label: 'Last Name',\n                    field: 'lastName',\n                    width: 150\n                },\n                {\n                    label: 'First Name',\n                    field: 'firstName',\n                    width: 200\n                },\n                {\n                    label: 'Company Name',\n                    field: 'companyName',\n                    width: 200\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                    width: 100,\n                    sort: 'disabled'\n                }\n            ],\n            rows: []\n         }\n\n         inquiries.forEach(inquiry => {\n             if(inquiry.concernType==='Others'  && (inquiry.inquiryStatus !== \"Deleted\" && inquiry.inquiryStatus !== \"Resolved\")){\n                data.rows.push({\n                    createdAt: inquiry.createdAt,\n                    firstName: inquiry.firstName,\n                    lastName: inquiry.lastName,\n                    companyName: inquiry.companyName,\n                    inquiryStatus: <p style={{ color: 'red' }}>{inquiry.inquiryStatus}</p>,\n                    actions:\n                    <Fragment>\n                        <div style={{display: 'flex'}}>\n                            <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                                <i className='fa fa-eye'></i>\n                            </Link>\n                            <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => {\n                                handleShow()\n                                setId(inquiry._id)\n                            }}>\n                                <i className='fa fa-trash'></i>\n                            </button>\n                        </div>\n                    </Fragment>\n                 })\n             }\n         }) \n         return data\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Others'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\n                <div id=\"sidebar-wrapper\" >\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )\n                        }\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\n                            <i className=\"fa fa-bars\"   ></i>\n                        </a>\n                        <Modal show={show} onHide={handleClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Move to Trash?</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>Are you sure you want to move this message to Trash?</Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={handleClose}>\n                                Close\n                                </Button>\n                                <Button variant=\"primary\" onClick={() => updateInquiryHandler(id, \"Deleted\")}>\n                                Yes, I'm sure\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                        <Fragment>\n                            <div style={{padding: '30px'}}>\n                                <h1 className='mt-3 mb-3 ml-10 mr-10'>Inbox - Others</h1>\n                                {loading? <Loader/> : (\n                                    <MDBDataTableV5\n                                        data={setInquiries()}\n                                        entries={5}\n                                        entriesOptions={[5, 10, 15, 20]}\n                                        searchTop\n                                        searchBottom={false}\n                                        scrollX\n                                        sortable={true}\n                                        hover\n                                    />\n                                )}\n                            </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListOthers","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListArchives.js",["313"],"import React, { Fragment, useEffect , useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTableV5 } from 'mdbreact'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Modal, Button } from 'react-bootstrap'\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\nimport { logout } from './../../actions/userActions'\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/sidebar.css'\nimport '../../css/sidebar-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst ListArchives = ({history}) => {\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\n    const { isUpdated } = useSelector(state => state.inquiry)\n    const { user } = useSelector(state => state.auth)\n\n    const [isToggled, setToggled] = useState('false')\n    const [show, setShow] = useState(false)\n    const [id, setId] = useState('')\n\n    const handleToggle = () => setToggled(!isToggled)\n    const handleClose = () => setShow(false)\n    const handleShow = () => setShow(true)\n\n    const logoutHandler = () => {\n        dispatch(logout())\n\n        alert.success('Logged out successfully')\n    }\n\n    useEffect(() => {\n        dispatch(listInquiry())\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n        \n        if(isUpdated){\n            dispatch({\n                type: UPDATE_INQUIRY_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, isUpdated, history])\n\n    const updateInquiryHandler = (id, inquiryStatus) => { \n        const formData = new FormData()\n        formData.set('inquiryStatus', inquiryStatus)\n\n        if(inquiryStatus === 'Deleted') {\n            alert.success('Message has been moved to Trash.')\n            history.push('/admin/archives')\n            dispatch(updateInquiry(id, formData))\n            handleClose()\n        } else {\n            alert.success('Message has been restored.')\n            history.push('/admin/archives')\n            dispatch(updateInquiry(id, formData))\n        }\n    }\n\n    const setInquiries = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Concern',\n                    field: 'concernType',\n                    width: 110\n                },\n                {\n                    label: 'Date / Time',\n                    field: 'createdAt',\n                    width: 130\n                },\n                {\n                    label: 'Last Name',\n                    field: 'lastName',\n                    width: 130\n                },\n                {\n                    label: 'First Name',\n                    field: 'firstName',\n                    width: 200\n                },\n                {\n                    label: 'Company Name',\n                    field: 'companyName',\n                    width: 190\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                    width: 150,\n                    sort: 'disabled'\n                }\n            ],\n            rows: []\n         }\n\n         inquiries.forEach(inquiry => {\n             if(inquiry.inquiryStatus==='Resolved'){\n                data.rows.push({\n                    createdAt: inquiry.createdAt,\n                    firstName: inquiry.firstName,\n                    lastName: inquiry.lastName,\n                    companyName: inquiry.companyName,\n                    concernType: String(inquiry.concernType),\n                    actions:\n                    <Fragment>\n                        <div style={{display: 'flex'}}>\n                            <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                                <i className='fa fa-eye'></i>\n                            </Link>\n                            <button className=\"btn btn-warning py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Unresolved\")}>\n                                <i className='fa fa-undo'></i>\n                            </button>\n                            <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => {\n                                handleShow()\n                                setId(inquiry._id)\n                            }}>\n                                <i className='fa fa-trash'></i>\n                            </button>\n                        </div>\n                    </Fragment>\n                 })\n             }\n         })\n\n         return data\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Archives'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}>\n                <div id=\"sidebar-wrapper\" >\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )\n                        }\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\n                            <i className=\"fa fa-bars\"   ></i>\n                        </a>\n                        <Modal show={show} onHide={handleClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Move to Trash?</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>Are you sure you want to move this message to Trash?</Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={handleClose}>\n                                    Close\n                                </Button>\n                                <Button variant=\"primary\" onClick={() => updateInquiryHandler(id, \"Deleted\")}>\n                                    Yes, I'm sure\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                        <Fragment>\n                            <div style={{padding: '30px'}}>\n                                <h1 className='mt-3 mb-3 ml-10 mr-10'>Archives</h1>\n                                {loading? <Loader/> : (\n                                    <MDBDataTableV5\n                                        data={setInquiries()}\n                                        entries={5}\n                                        entriesOptions={[5, 10, 15, 20]}\n                                        searchTop\n                                        searchBottom={false}\n                                        scrollX\n                                        sortable={true}\n                                        hover\n                                    />\n                                )}\n                            </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListArchives","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListTrash.js",["314"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/NewProduct.js",["315","316"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateProduct.js",["317","318"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateInquiry.js",["319","320","321"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/superadmin/ListSuperAdmins.js",["322","323","324"],"import React, { Fragment, useEffect , useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTableV5 } from 'mdbreact'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { OverlayTrigger, Tooltip, Modal, Button } from 'react-bootstrap'\nimport { getUsers, clearErrors } from '../../actions/userActions'\nimport { logout } from '../../actions/userActions'\nimport { UPDATE_USER_RESET } from '../../constants/userConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport MetaData from '../layout/MetaData'       \nimport Loader from '../layout/Loader'\nimport '../../css/sidebar.css'\nimport '../../css/sidebar-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst ListSuperAdmins = ({history}) => {\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { loading, error, users } = useSelector(state => state.users)\n    const { user } = useSelector(state => state.auth)\n    const { isUpdated } = useSelector(state => state.updateUser)\n\n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => setToggled(!isToggled)\n\n    const logoutHandler = () => {\n        dispatch(logout())\n\n        alert.success('Logged out successfully')\n    }\n    \n    const updateUser = (id) => {\n        history.replace(`/superadmin/user/${id}`)\n    }\n\n    useEffect(() => {\n        dispatch(getUsers())\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n        if(isUpdated){\n            alert.success('User has been updated successfully.')\n            history.push('/admin/users/superadmin')\n\n            dispatch({\n                type: UPDATE_USER_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, isUpdated, history])\n\n    const setSuperAdminData = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Name',\n                    field: 'name',\n                    width: 250\n                },\n                {\n                    label: 'Contact Number',\n                    field: 'contactNumber',\n                    width: 190\n                },\n                {\n                    label: 'Email',\n                    field: 'email',\n                    width: 350\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                    sort: 'disabled',\n                    width: 150\n                }\n            ],\n            rows: []\n         }\n\n         users.forEach(superadmin => {\n            if(superadmin.role === 'superadmin') {\n                data.rows.push({\n                    name: superadmin.name,\n                    contactNumber: superadmin.contactNumber,\n                    email: superadmin.email,\n                    actions:   \n                    <Fragment>\n                        <div style={{display: 'flex'}}>\n                            <button\n                                className='btn btn-primary py-1 px-2 ml-2'\n                                onClick={\n                                    () => updateUser(superadmin._id)\n                                }\n                            >\n                                <i className='fa fa-pencil'></i>\n                            </button>\n                            <OverlayTrigger overlay={<Tooltip id=\"tooltip-disabled\">Cannot delete superadmin account. Demote to admin first.</Tooltip>}>\n                                <span className=\"d-inline-block\">\n                                    <button\n                                        className=\"btn btn-danger py-1 px-2 ml-2\"\n                                        disabled={true}\n                                        style={{ pointerEvents: 'none' }}\n                                    >\n                                        <i className='fa fa-trash'></i>\n                                    </button>\n                                </span>\n                            </OverlayTrigger>\n                        </div>\n                    </Fragment>\n                })\n            }\n        })\n\n        return data\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Superadmins'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\n            <div id=\"sidebar-wrapper\" >\n                <ul className=\"sidebar-nav\">\n                    <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                    <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                    <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                    <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                    {user && user.role !== 'admin' ? (\n                            <Fragment>\n                                <hr/>\n                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                            </Fragment>\n                        ) : (\n                            <Fragment>\n                                <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                <hr/>\n                                <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                <hr/>\n                                <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                            </Fragment>\n                        )}\n\n                    <hr/>\n                    <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                </ul>\n            </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\n                            <i className=\"fa fa-bars\"   ></i>\n                        </a>\n                        <Fragment>\n                        <div style={{padding: '30px 15px'}}>\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Superadmins</h1>\n                            {loading? <Loader/> : (\n                                <MDBDataTableV5\n                                    data={setSuperAdminData()}\n                                    entries={5}\n                                    entriesOptions={[5, 10, 15, 20]}\n                                    searchTop\n                                    searchBottom={false}\n                                    scrollX\n                                    sortable={true}\n                                    hover\n                                />\n                            )}\n                        </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListSuperAdmins\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/superadmin/ListAdmins.js",["325"],"import React, { Fragment, useEffect , useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTableV5 } from 'mdbreact'\nimport { useAlert } from 'react-alert'\nimport { Modal, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getUsers, deleteUser, clearErrors } from '../../actions/userActions'\nimport { logout } from '../../actions/userActions'\nimport { DELETE_USER_RESET, UPDATE_USER_RESET } from '../../constants/userConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/sidebar.css'\nimport '../../css/sidebar-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst ListAdmins = ({history}) => {\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { loading, error, users } = useSelector(state => state.users)\n    const { user } = useSelector(state => state.auth)\n    const { deleteError, isUpdated, isDeleted } = useSelector(state => state.updateUser)\n\n    const [isToggled, setToggled] = useState('false')\n    const [id, setId] = useState('')\n    const [show, setShow] = useState(false)\n\n    const handleClose = () => setShow(false)\n    const handleShow = () => setShow(true)\n    const handleToggle = () => setToggled(!isToggled)\n\n    const logoutHandler = () => {\n        dispatch(logout())\n        alert.success('Logged out successfully')\n    }\n\n    const deleteUserHandler = (id) => {\n        dispatch(deleteUser(id))\n        handleClose()\n    }\n\n    useEffect(() => {\n        dispatch(getUsers())\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n        \n        if(deleteError){\n            alert.error(deleteError)\n            dispatch(clearErrors())\n        }\n\n        if(isUpdated){\n            alert.success('User has been updated.')\n            history.push('/admin/users/admin')\n\n            dispatch({\n                type: UPDATE_USER_RESET\n            })\n        }\n\n        if(isDeleted){\n            alert.success('User has been deleted.')\n            history.push('/admin/users/admin')\n\n            dispatch({\n                type: DELETE_USER_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, isDeleted, isUpdated, deleteError, history])\n\n    const setAdminData = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Name',\n                    field: 'name',\n                    width: 250\n                },\n                {\n                    label: 'Contact Number',\n                    field: 'contactNumber',\n                    width: 190\n                },\n                {\n                    label: 'Email',\n                    field: 'email',\n                    width: 350\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                    sort: 'disabled',\n                    width: 150\n                }\n            ],\n            rows: []\n         }\n\n         users.forEach(user => {\n            if(user.role === 'admin'){\n                data.rows.push({\n                    name: user.name,\n                    contactNumber: user.contactNumber,\n                    email: user.email,\n                    actions:\n                    <Fragment>\n                        <div style={{display: 'flex'}}>\n                            <Link to={`/superadmin/user/${user._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                                <i className='fa fa-pencil'></i>\n                            </Link>\n                            <button className=\"btn btn-danger py-1 px-2 ml-2\"\n                                onClick={() => {\n                                    setId(user._id)\n                                    handleShow()\n                                }}\n                            >\n                                <i className='fa fa-trash'></i>\n                            </button>\n                        </div>\n                    </Fragment>\n                })\n            }\n         })\n\n         return data\n    }\n    \n    return (\n        <Fragment>\n            <MetaData title={'Admins'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\n                <div id=\"sidebar-wrapper\" >\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                    <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )}\n\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\n                            <i className=\"fa fa-bars\"   ></i>\n                        </a>\n                        <Modal show={show} onHide={handleClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Delete user account?</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>Are you sure you want to delete this user? This cannot be undone.</Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={handleClose}>\n                                Close\n                                </Button>\n                                <Button variant=\"primary\" onClick={() => deleteUserHandler(id)}>\n                                Yes, I'm sure\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                        <Fragment>\n                        <div style={{padding: '30px 15px'}}>\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Admins</h1>\n                            {loading? <Loader/> : (\n                                <MDBDataTableV5\n                                    data={setAdminData()}\n                                    entries={5}\n                                    entriesOptions={[5, 10, 15, 20]}\n                                    searchTop\n                                    searchBottom={false}\n                                    scrollX\n                                    sortable={true}\n                                    hover\n                                />\n                            )}\n                        </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListAdmins\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListProducts.js",["326"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/superadmin/UpdateUser.js",["327","328","329"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/superadmin/Register.js",["330","331","332","333"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/productConstants.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/dashboardConstants.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/websiteConstants.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/userConstants.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/inquiryConstants.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/websiteActions.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/MetaData.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/Loader.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/productActions.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/inquiryActions.js",[],{"ruleId":"334","replacedBy":"335"},{"ruleId":"336","replacedBy":"337"},{"ruleId":"338","severity":1,"message":"339","line":48,"column":140,"nodeType":"340","messageId":"341","endLine":48,"endColumn":141},{"ruleId":"338","severity":1,"message":"339","line":48,"column":161,"nodeType":"340","messageId":"341","endLine":48,"endColumn":162},{"ruleId":"338","severity":1,"message":"339","line":69,"column":102,"nodeType":"340","messageId":"341","endLine":69,"endColumn":103},{"ruleId":"338","severity":1,"message":"339","line":69,"column":124,"nodeType":"340","messageId":"341","endLine":69,"endColumn":125},{"ruleId":"338","severity":1,"message":"339","line":72,"column":102,"nodeType":"340","messageId":"341","endLine":72,"endColumn":103},{"ruleId":"338","severity":1,"message":"339","line":72,"column":125,"nodeType":"340","messageId":"341","endLine":72,"endColumn":126},{"ruleId":"338","severity":1,"message":"339","line":78,"column":125,"nodeType":"340","messageId":"341","endLine":78,"endColumn":126},{"ruleId":"338","severity":1,"message":"339","line":78,"column":149,"nodeType":"340","messageId":"341","endLine":78,"endColumn":150},{"ruleId":"342","severity":1,"message":"343","line":89,"column":25,"nodeType":"344","endLine":93,"endColumn":26},{"ruleId":"342","severity":1,"message":"343","line":127,"column":37,"nodeType":"344","endLine":130,"endColumn":38},{"ruleId":"345","severity":1,"message":"346","line":2,"column":10,"nodeType":"347","messageId":"348","endLine":2,"endColumn":14},{"ruleId":"342","severity":1,"message":"343","line":101,"column":37,"nodeType":"344","endLine":104,"endColumn":38},{"ruleId":"342","severity":1,"message":"343","line":129,"column":37,"nodeType":"344","endLine":132,"endColumn":38},{"ruleId":"349","severity":1,"message":"350","line":12,"column":6,"nodeType":"351","endLine":12,"endColumn":8,"suggestions":"352"},{"ruleId":"342","severity":1,"message":"343","line":78,"column":37,"nodeType":"344","endLine":84,"endColumn":38},{"ruleId":"353","severity":1,"message":"354","line":241,"column":41,"nodeType":"344","endLine":241,"endColumn":122},{"ruleId":"345","severity":1,"message":"355","line":1,"column":27,"nodeType":"347","messageId":"348","endLine":1,"endColumn":35},{"ruleId":"356","severity":1,"message":"357","line":42,"column":18,"nodeType":"340","messageId":"358","endLine":42,"endColumn":20},{"ruleId":"342","severity":1,"message":"343","line":177,"column":29,"nodeType":"344","endLine":177,"endColumn":111},{"ruleId":"342","severity":1,"message":"343","line":131,"column":25,"nodeType":"344","endLine":131,"endColumn":109},{"ruleId":"353","severity":1,"message":"354","line":88,"column":25,"nodeType":"344","endLine":93,"endColumn":27},{"ruleId":"342","severity":1,"message":"343","line":146,"column":25,"nodeType":"344","endLine":146,"endColumn":109},{"ruleId":"342","severity":1,"message":"343","line":123,"column":25,"nodeType":"344","endLine":123,"endColumn":107},{"ruleId":"342","severity":1,"message":"343","line":73,"column":37,"nodeType":"344","endLine":73,"endColumn":119},{"ruleId":"342","severity":1,"message":"343","line":127,"column":29,"nodeType":"344","endLine":127,"endColumn":111},{"ruleId":"342","severity":1,"message":"343","line":175,"column":49,"nodeType":"344","endLine":178,"endColumn":50},{"ruleId":"342","severity":1,"message":"343","line":202,"column":49,"nodeType":"344","endLine":205,"endColumn":50},{"ruleId":"342","severity":1,"message":"343","line":223,"column":37,"nodeType":"344","endLine":227,"endColumn":38},{"ruleId":"349","severity":1,"message":"359","line":42,"column":8,"nodeType":"351","endLine":42,"endColumn":18,"suggestions":"360"},{"ruleId":"342","severity":1,"message":"343","line":84,"column":37,"nodeType":"344","endLine":84,"endColumn":119},{"ruleId":"342","severity":1,"message":"343","line":148,"column":25,"nodeType":"344","endLine":148,"endColumn":109},{"ruleId":"342","severity":1,"message":"343","line":187,"column":33,"nodeType":"344","endLine":187,"endColumn":115},{"ruleId":"353","severity":1,"message":"354","line":248,"column":53,"nodeType":"344","endLine":253,"endColumn":55},{"ruleId":"342","severity":1,"message":"343","line":290,"column":49,"nodeType":"344","endLine":294,"endColumn":50},{"ruleId":"342","severity":1,"message":"343","line":131,"column":33,"nodeType":"344","endLine":131,"endColumn":115},{"ruleId":"342","severity":1,"message":"343","line":198,"column":49,"nodeType":"344","endLine":202,"endColumn":50},{"ruleId":"345","severity":1,"message":"361","line":2,"column":16,"nodeType":"347","messageId":"348","endLine":2,"endColumn":24},{"ruleId":"362","severity":1,"message":"363","line":20,"column":35,"nodeType":"344","endLine":20,"endColumn":99},{"ruleId":"342","severity":1,"message":"343","line":149,"column":25,"nodeType":"344","endLine":149,"endColumn":107},{"ruleId":"362","severity":1,"message":"363","line":252,"column":49,"nodeType":"344","endLine":252,"endColumn":135},{"ruleId":"342","severity":1,"message":"343","line":297,"column":45,"nodeType":"344","endLine":301,"endColumn":46},{"ruleId":"342","severity":1,"message":"343","line":139,"column":33,"nodeType":"344","endLine":139,"endColumn":115},{"ruleId":"342","severity":1,"message":"343","line":258,"column":49,"nodeType":"344","endLine":262,"endColumn":50},{"ruleId":"342","severity":1,"message":"343","line":172,"column":25,"nodeType":"344","endLine":172,"endColumn":109},{"ruleId":"342","severity":1,"message":"343","line":173,"column":25,"nodeType":"344","endLine":173,"endColumn":109},{"ruleId":"342","severity":1,"message":"343","line":172,"column":25,"nodeType":"344","endLine":172,"endColumn":109},{"ruleId":"342","severity":1,"message":"343","line":180,"column":25,"nodeType":"344","endLine":180,"endColumn":109},{"ruleId":"342","severity":1,"message":"343","line":224,"column":25,"nodeType":"344","endLine":224,"endColumn":109},{"ruleId":"342","severity":1,"message":"343","line":193,"column":29,"nodeType":"344","endLine":193,"endColumn":111},{"ruleId":"342","severity":1,"message":"343","line":363,"column":41,"nodeType":"344","endLine":367,"endColumn":42},{"ruleId":"342","severity":1,"message":"343","line":200,"column":29,"nodeType":"344","endLine":200,"endColumn":111},{"ruleId":"342","severity":1,"message":"343","line":349,"column":45,"nodeType":"344","endLine":353,"endColumn":46},{"ruleId":"345","severity":1,"message":"364","line":26,"column":12,"nodeType":"347","messageId":"348","endLine":26,"endColumn":23},{"ruleId":"345","severity":1,"message":"365","line":26,"column":25,"nodeType":"347","messageId":"348","endLine":26,"endColumn":39},{"ruleId":"342","severity":1,"message":"343","line":143,"column":29,"nodeType":"344","endLine":143,"endColumn":111},{"ruleId":"345","severity":1,"message":"366","line":6,"column":35,"nodeType":"347","messageId":"348","endLine":6,"endColumn":40},{"ruleId":"345","severity":1,"message":"367","line":6,"column":42,"nodeType":"347","messageId":"348","endLine":6,"endColumn":48},{"ruleId":"342","severity":1,"message":"343","line":162,"column":25,"nodeType":"344","endLine":162,"endColumn":109},{"ruleId":"342","severity":1,"message":"343","line":172,"column":25,"nodeType":"344","endLine":172,"endColumn":109},{"ruleId":"342","severity":1,"message":"343","line":168,"column":25,"nodeType":"344","endLine":168,"endColumn":109},{"ruleId":"349","severity":1,"message":"368","line":119,"column":8,"nodeType":"351","endLine":119,"endColumn":79,"suggestions":"369"},{"ruleId":"342","severity":1,"message":"343","line":142,"column":29,"nodeType":"344","endLine":142,"endColumn":111},{"ruleId":"342","severity":1,"message":"343","line":240,"column":37,"nodeType":"344","endLine":244,"endColumn":38},{"ruleId":"342","severity":1,"message":"343","line":219,"column":29,"nodeType":"344","endLine":219,"endColumn":111},{"ruleId":"370","severity":1,"message":"371","line":222,"column":245,"nodeType":"372","messageId":"358","endLine":222,"endColumn":251},{"ruleId":"342","severity":1,"message":"343","line":390,"column":73,"nodeType":"344","endLine":393,"endColumn":74},{"ruleId":"342","severity":1,"message":"343","line":423,"column":73,"nodeType":"344","endLine":426,"endColumn":74},"no-native-reassign",["373"],"no-negated-in-lhs",["374"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["375"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","React Hook useEffect has a missing dependency: 'user.role'. Either include it or remove the dependency array.",["376"],"'Redirect' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'concernType' is assigned a value but never used.","'setConcernType' is assigned a value but never used.","'Modal' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'initialRole' and 'role'. Either include them or remove the dependency array.",["377"],"no-dupe-keys","Duplicate key 'zIndex'.","ObjectExpression","no-global-assign","no-unsafe-negation",{"desc":"378","fix":"379"},{"desc":"380","fix":"381"},{"desc":"382","fix":"383"},"Update the dependencies array to be: [history]",{"range":"384","text":"385"},"Update the dependencies array to be: [dispatch, user.role]",{"range":"386","text":"387"},"Update the dependencies array to be: [dispatch, error, alert, isUpdated, updateError, user, userId, history, initialRole, role]",{"range":"388","text":"389"},[295,297],"[history]",[1398,1408],"[dispatch, user.role]",[3669,3740],"[dispatch, error, alert, isUpdated, updateError, user, userId, history, initialRole, role]"]