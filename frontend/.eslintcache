[{"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\index.js":"1","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\App.js":"2","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\store.js":"3","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\Services.js":"4","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\ConfirmationPage.js":"5","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\EmailSent.js":"6","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\Contact.js":"7","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\layout\\ScrollToTop.js":"8","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\layout\\Footer.js":"9","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\route\\ProtectedRoute.js":"10","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admins\\ForgotPassword.js":"11","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admins\\Login.js":"12","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admins\\NewPassword.js":"13","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admins\\Profile.js":"14","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admins\\UpdateProfile.js":"15","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admins\\PasswordSuccess.js":"16","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admins\\UpdatePassword.js":"17","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admins\\ListAbout.js":"18","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admins\\ListHome.js":"19","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admins\\Dashboard.js":"20","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admins\\ListFooter.js":"21","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admins\\UpdateAbout.js":"22","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admins\\ListServices.js":"23","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admins\\UpdateHome.js":"24","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admins\\UpdateServices.js":"25","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admins\\UpdateFooter.js":"26","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admin\\ListInquiries.js":"27","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admin\\ListAppointments.js":"28","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admin\\ListOthers.js":"29","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admin\\ListTrash.js":"30","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admin\\ListArchives.js":"31","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admin\\NewProduct.js":"32","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateInquiry.js":"33","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateProduct.js":"34","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\superadmin\\ListSuperAdmins.js":"35","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admin\\ListProducts.js":"36","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\superadmin\\Register.js":"37","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\superadmin\\ListAdmins.js":"38","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\superadmin\\UpdateUser.js":"39","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\superadmin\\UpdateUserSuccess.js":"40","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\actions\\userActions.js":"41","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\reducers\\productReducers.js":"42","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\reducers\\dashboardReducers.js":"43","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\reducers\\inquiryReducers.js":"44","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\reducers\\userReducers.js":"45","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\reducers\\websiteReducers.js":"46","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\Home.js":"47","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\layout\\Header.js":"48","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\About.js":"49","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\actions\\websiteActions.js":"50","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\layout\\MetaData.js":"51","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\layout\\Loader.js":"52","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\actions\\productActions.js":"53","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\constants\\websiteConstants.js":"54","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\constants\\dashboardConstants.js":"55","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\constants\\userConstants.js":"56","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\constants\\productConstants.js":"57","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\constants\\inquiryConstants.js":"58","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\actions\\inquiryActions.js":"59","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\Products.js":"60","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\ProductDetails.js":"61"},{"size":605,"mtime":1616590900486,"results":"62","hashOfConfig":"63"},{"size":7157,"mtime":1616647674094,"results":"64","hashOfConfig":"63"},{"size":2179,"mtime":1616590900501,"results":"65","hashOfConfig":"63"},{"size":6534,"mtime":1616647775693,"results":"66","hashOfConfig":"63"},{"size":1327,"mtime":1616590900238,"results":"67","hashOfConfig":"63"},{"size":1344,"mtime":1616590900242,"results":"68","hashOfConfig":"63"},{"size":9725,"mtime":1616590900240,"results":"69","hashOfConfig":"63"},{"size":401,"mtime":1616590900308,"results":"70","hashOfConfig":"63"},{"size":3931,"mtime":1616590900300,"results":"71","hashOfConfig":"63"},{"size":1389,"mtime":1616590900324,"results":"72","hashOfConfig":"63"},{"size":3244,"mtime":1616590900270,"results":"73","hashOfConfig":"63"},{"size":6289,"mtime":1616590900281,"results":"74","hashOfConfig":"63"},{"size":6695,"mtime":1616590900283,"results":"75","hashOfConfig":"63"},{"size":10515,"mtime":1616647856047,"results":"76","hashOfConfig":"63"},{"size":18335,"mtime":1616648910842,"results":"77","hashOfConfig":"63"},{"size":1392,"mtime":1616590900285,"results":"78","hashOfConfig":"63"},{"size":12214,"mtime":1616647856050,"results":"79","hashOfConfig":"63"},{"size":6701,"mtime":1616647856058,"results":"80","hashOfConfig":"63"},{"size":7303,"mtime":1616647856053,"results":"81","hashOfConfig":"63"},{"size":14537,"mtime":1616647856059,"results":"82","hashOfConfig":"63"},{"size":7091,"mtime":1616647856054,"results":"83","hashOfConfig":"63"},{"size":10775,"mtime":1616648861027,"results":"84","hashOfConfig":"63"},{"size":7387,"mtime":1616647856059,"results":"85","hashOfConfig":"63"},{"size":14471,"mtime":1616648783702,"results":"86","hashOfConfig":"63"},{"size":17066,"mtime":1616648887286,"results":"87","hashOfConfig":"63"},{"size":15003,"mtime":1616648831375,"results":"88","hashOfConfig":"63"},{"size":9132,"mtime":1616647856060,"results":"89","hashOfConfig":"63"},{"size":9113,"mtime":1616647856049,"results":"90","hashOfConfig":"63"},{"size":9048,"mtime":1616647856059,"results":"91","hashOfConfig":"63"},{"size":12633,"mtime":1616647856060,"results":"92","hashOfConfig":"63"},{"size":9495,"mtime":1616647856060,"results":"93","hashOfConfig":"63"},{"size":20107,"mtime":1616647856060,"results":"94","hashOfConfig":"63"},{"size":18998,"mtime":1616647856060,"results":"95","hashOfConfig":"63"},{"size":18807,"mtime":1616647856060,"results":"96","hashOfConfig":"63"},{"size":7953,"mtime":1616647856053,"results":"97","hashOfConfig":"63"},{"size":9669,"mtime":1616647856059,"results":"98","hashOfConfig":"63"},{"size":27567,"mtime":1616648943784,"results":"99","hashOfConfig":"63"},{"size":8899,"mtime":1616647856052,"results":"100","hashOfConfig":"63"},{"size":11506,"mtime":1616648954293,"results":"101","hashOfConfig":"63"},{"size":1210,"mtime":1616590900337,"results":"102","hashOfConfig":"63"},{"size":8071,"mtime":1616590900229,"results":"103","hashOfConfig":"63"},{"size":4963,"mtime":1616590900492,"results":"104","hashOfConfig":"63"},{"size":518,"mtime":1616590900489,"results":"105","hashOfConfig":"63"},{"size":4460,"mtime":1616590900490,"results":"106","hashOfConfig":"63"},{"size":8973,"mtime":1616590900498,"results":"107","hashOfConfig":"63"},{"size":10118,"mtime":1616590900499,"results":"108","hashOfConfig":"63"},{"size":5081,"mtime":1616615067289,"results":"109","hashOfConfig":"63"},{"size":4253,"mtime":1616647458105,"results":"110","hashOfConfig":"63"},{"size":5565,"mtime":1616615067286,"results":"111","hashOfConfig":"63"},{"size":7595,"mtime":1616590900232,"results":"112","hashOfConfig":"63"},{"size":283,"mtime":1616590900305,"results":"113","hashOfConfig":"63"},{"size":425,"mtime":1616590900304,"results":"114","hashOfConfig":"63"},{"size":4628,"mtime":1616590900227,"results":"115","hashOfConfig":"63"},{"size":2274,"mtime":1616590900347,"results":"116","hashOfConfig":"63"},{"size":124,"mtime":1616590900340,"results":"117","hashOfConfig":"63"},{"size":2431,"mtime":1616590900346,"results":"118","hashOfConfig":"63"},{"size":1320,"mtime":1616590900343,"results":"119","hashOfConfig":"63"},{"size":1100,"mtime":1616590900341,"results":"120","hashOfConfig":"63"},{"size":3510,"mtime":1616590900226,"results":"121","hashOfConfig":"63"},{"size":14061,"mtime":1616648501000,"results":"122","hashOfConfig":"63"},{"size":3362,"mtime":1616647656803,"results":"123","hashOfConfig":"63"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1oreuu8",{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"153"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"153"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"153"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"153"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"153"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"153"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"153"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"153"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"153"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"153"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"153"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"153"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"153"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"153"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"153"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"153"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"153"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"153"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\index.js",[],"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\App.js",[],"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\store.js",[],"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\Services.js",[],"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\ConfirmationPage.js",[],"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\EmailSent.js",[],"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\Contact.js",[],"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\layout\\ScrollToTop.js",["266"],"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\layout\\Footer.js",[],"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\route\\ProtectedRoute.js",[],"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admins\\ForgotPassword.js",["267"],"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admins\\Login.js",["268","269"],"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admins\\NewPassword.js",["270","271"],"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admins\\Profile.js",["272"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useAlert } from 'react-alert'\r\nimport { logout } from './../../actions/userActions'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport MetaData from './../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport '../../css/profile.css'\r\nimport '../../css/sidebar.css'\r\nimport '../../css/sidebar-1.css'\r\nimport '../../css/bootstrap.min.css'\r\n\r\nconst Profile = () => {\r\n    const dispatch = useDispatch()\r\n    const alert = useAlert()\r\n\r\n    const { user, loading } = useSelector(state => state.auth)\r\n    \r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => setToggled(!isToggled)\r\n    \r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading ? <Loader /> : (\r\n                <Fragment>\r\n                    <MetaData title={'My Profile'} />\r\n                    <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}>\r\n                        <div id=\"sidebar-wrapper\" >\r\n                            <ul className=\"sidebar-nav\">\r\n                                <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                                <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                                <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                                <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                                {user && user.role !== 'admin' ? (\r\n                                        <Fragment>\r\n                                            <hr/>\r\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\r\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\r\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\r\n                                        </Fragment>\r\n                                    ) : (\r\n                                        <Fragment>\r\n                                            <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                            <hr/>\r\n                                            <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                            <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\r\n                                            <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                            <hr/>\r\n                                            <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                            <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                        </Fragment>\r\n                                    )\r\n                                }\r\n                                <hr/>\r\n                                <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                            </ul>\r\n                        </div>\r\n                            <div className=\"page-content-wrapper\">\r\n                                <div className=\"container-fluid\">\r\n                                    <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\r\n                                        <i className=\"fa fa-bars\"   ></i>\r\n                                    </a>\r\n                                    <div className=\"container\">\r\n                                        <div className=\"main-body\">\r\n                                            <h1 style={{textAlign: 'center', padding:'0 0 15px 0'}}>My Profile</h1>\r\n                                            {loading ? <Loader/> : (\r\n                                                <Fragment>\r\n                                                    <div className=\"row gutters-sm\">\r\n                                                        <div className=\"col-md-4 mb-3\">\r\n                                                            <div className=\"card\">\r\n                                                                <div className=\"card-body\">\r\n                                                                    <div className=\"d-flex flex-column align-items-center text-center\">\r\n                                                                        <img src={user.avatar.url} alt=\"Avatar\" className=\"rounded-circle\" width=\"150px\" height=\"150px\"/>\r\n                                                                        <div className=\"mt-3\">\r\n                                                                            <h4>{user.name}</h4>\r\n                                                                            <p className=\"text-dark mb-1\" style={{textTransform: 'uppercase'}}>{user.role}</p>\r\n                                                                            <Link className=\"btn btn-dark btn-sm ml-3 mt-3\" type=\"button\" to=\"/admin/edit-profile\">Edit Profile</Link>\r\n                                                                            <Link className=\"btn btn-dark btn-sm ml-3 mt-3\" type=\"button\" to=\"/password/update\">Change Password</Link>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"col-md-8\">\r\n                                                            <div className=\"card mb-3\">\r\n                                                                <div className=\"card-body\">\r\n                                                                    <div className=\"row\">\r\n                                                                        <div className=\"col-sm-3\">\r\n                                                                            <h6 className=\"mb-0\">Full Name</h6>\r\n                                                                        </div>\r\n                                                                        <div className=\"col-sm-9 text-dark\">\r\n                                                                            {user.name}\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <hr/>\r\n                                                                    <div className=\"row\">\r\n                                                                        <div className=\"col-sm-3\">\r\n                                                                            <h6 className=\"mb-0\">Email</h6>\r\n                                                                        </div>\r\n                                                                        <div className=\"col-sm-9 text-dark\">\r\n                                                                            {user.email}\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <hr/>\r\n                                                                    <div className=\"row\">\r\n                                                                        <div className=\"col-sm-3\">\r\n                                                                            <h6 className=\"mb-0\">Phone</h6>\r\n                                                                        </div>\r\n                                                                        <div className=\"col-sm-9 text-dark\">\r\n                                                                            {user.contactNumber}\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <hr/>\r\n                                                                    <div className=\"row\">\r\n                                                                        <div className=\"col-sm-3\">\r\n                                                                            <h6 className=\"mb-0\">Address</h6>\r\n                                                                        </div>\r\n                                                                        <div className=\"col-sm-9 text-dark\">\r\n                                                                            {user.address}\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Fragment>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>    \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n",["273","274"],"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admins\\UpdateProfile.js",["275"],"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admins\\PasswordSuccess.js",[],"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admins\\UpdatePassword.js",["276","277","278","279"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from  'react-redux'\r\nimport { Popover, OverlayTrigger, Modal, Button } from 'react-bootstrap'\r\nimport { updatePassword, clearErrors, logout } from './../../actions/userActions'\r\nimport { UPDATE_PASSWORD_RESET } from '../../constants/userConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport MetaData from '../layout/MetaData'\r\nimport '../../css/sidebar.css'\r\nimport '../../css/sidebar-1.css'\r\nimport '../../css/bootstrap.min.css'\r\n\r\nconst popover = (\r\n    <Popover id=\"popover-basic\">\r\n      <Popover.Title as=\"h3\">Password Requirements</Popover.Title>\r\n      <Popover.Content>\r\n          &bull; Minimum of <strong>6 characters</strong>. <br/>\r\n          &bull; Must have at least 1 <strong>Uppercase and Lowercase</strong> letter.<br/>\r\n          &bull; Must have at least 2 <strong>numeric digits</strong>.<br/>\r\n          &bull; Must have <strong>no spaces</strong>.\r\n      </Popover.Content>\r\n    </Popover>\r\n)\r\n\r\nconst UpdatePassword = ({history}) => {\r\n    const alert = useAlert()\r\n    const dispatch = useDispatch()\r\n\r\n    const { error, isUpdated, loading } = useSelector(state => state.user)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [oldPassword, setOldPassword] = useState('')\r\n    const [newPassword, setNewPassword] = useState('')\r\n    const [isToggled, setToggled] = useState('false')\r\n    const [showOld, setOld] = useState('false')\r\n    const [showNew, setNew] = useState('false')\r\n    const [show, setShow] = useState(false)\r\n\r\n    const showOldToggle = () => setOld(!showOld)\r\n    const showNewToggle = () => setNew(!showNew)\r\n    const handleToggle = () => setToggled(!isToggled)\r\n    const handleClose = () => setShow(false)\r\n    const handleShow = () => setShow(true)\r\n    \r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n        alert.success('Logged out successfully')\r\n    }\r\n    \r\n    const submitHandler = e => {\r\n        e.preventDefault()\r\n\r\n        const formData = new FormData()\r\n        formData.set('oldPassword', oldPassword)\r\n        formData.set('newPassword', newPassword)\r\n\r\n        dispatch(updatePassword(formData))\r\n    }\r\n    \r\n    const discardChanges = () => {\r\n        handleClose()\r\n        history.push('/admin/me')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n            dispatch({\r\n                type: UPDATE_PASSWORD_RESET\r\n            })\r\n        }\r\n\r\n        if(isUpdated){\r\n            history.push('/admin/me')\r\n            alert.success('Password updated successfully.')\r\n\r\n            dispatch({\r\n                type: UPDATE_PASSWORD_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n\r\n    }, [dispatch, alert, error, history, isUpdated])\r\n    \r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Change Password'}/>\r\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}>\r\n                <div id=\"sidebar-wrapper\" >\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <hr/>\r\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\r\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\r\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )\r\n                        }\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\r\n                            <i className=\"fa fa-bars\"></i>\r\n                        </a>\r\n                        <Modal show={show} onHide={handleClose}>\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title>Discard Changes?</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>Are you sure you want to discard your changes?</Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button variant=\"secondary\" onClick={handleClose}>\r\n                                    Close\r\n                                </Button>\r\n                                <Button variant=\"primary\" onClick={discardChanges}>\r\n                                    Yes, I'm sure\r\n                                </Button>\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n                        <div className=\"login-clean\" style={{paddingTop: '65px'}}>\r\n                            <form method=\"post\" onSubmit={submitHandler}>\r\n                                <h2 className=\"sr-only\">Change Password</h2>\r\n                                <div className=\"div-forgot-password\">\r\n                                    <h3 className=\"forgot-password-heading\">Change Password \r\n                                        <span className='fa-xs' style={{margin: 'auto', paddingLeft: '15px'}}>\r\n                                            <OverlayTrigger trigger=\"hover\" placement=\"right\" overlay={popover}>\r\n                                                <i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i>\r\n                                            </OverlayTrigger>\r\n                                        </span>\r\n                                    </h3>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Old Password</h6>\r\n                                    <div class=\"input-group mb-3\">\r\n                                        <input \r\n                                            type={showOld ? \"password\" : \"text\"} \r\n                                            className=\"form-control\" \r\n                                            name=\"oldPassword\"\r\n                                            value={oldPassword}\r\n                                            placeholder=\"Old Password\"\r\n                                            onChange={e => setOldPassword(e.target.value)}\r\n                                            aria-label=\"oldpassword\" aria-describedby=\"basic-addon1\"\r\n                                            required\r\n                                        />\r\n                                        <div class=\"input-group-prepend\">\r\n                                            <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                                <a\r\n                                                    onClick={showOldToggle}\r\n                                                    style={{cursor: 'pointer'}}\r\n                                                >\r\n                                                    <span className=\"fa-lg\">\r\n                                                        <i className={showOld ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\r\n                                                    </span>\r\n                                                </a>\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>New Password</h6>\r\n                                    <div class=\"input-group mb-3\">\r\n                                        <input\r\n                                            type={showNew ? \"password\" : \"text\"} \r\n                                            className=\"form-control\"\r\n                                            name=\"newPassword\"\r\n                                            value={newPassword}\r\n                                            placeholder=\"New Password\"\r\n                                            onChange={e => setNewPassword(e.target.value)}\r\n                                            aria-label=\"newpassword\" aria-describedby=\"basic-addon1\"\r\n                                            required\r\n                                        />\r\n                                        <div class=\"input-group-prepend\">\r\n                                            <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                                <a\r\n                                                    onClick={showNewToggle}\r\n                                                    style={{cursor: 'pointer'}}\r\n                                                >\r\n                                                    <span className=\"fa-lg\">\r\n                                                        <i className={showNew ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\r\n                                                    </span>\r\n                                                </a>\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <button\r\n                                        className=\"btn btn-primary btn-block\"\r\n                                        type=\"submit\"\r\n                                        disabled={loading ? true : false}\r\n                                    >Update Password</button>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <a\r\n                                        className=\"btn btn-secondary btn-block mt-2\"\r\n                                        onClick={handleShow}\r\n                                        style={{color: 'white'}}\r\n                                    >Discard</a>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdatePassword\r\n","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admins\\ListAbout.js",["280"],"import React, { Fragment, useEffect , useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTableV5 } from 'mdbreact'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getAboutDetails, clearErrors } from '../../actions/websiteActions'\r\nimport { logout } from './../../actions/userActions'\r\nimport { UPDATE_ABOUT_RESET } from '../../constants/websiteConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport '../../css/sidebar.css'\r\nimport '../../css/sidebar-1.css'\r\nimport '../../css/bootstrap.min.css'\r\n\r\nconst ListAbout = ({history}) => {\r\n    const alert = useAlert()\r\n    const dispatch = useDispatch()\r\n\r\n    const { loading, error, abouts } = useSelector(state => state.abouts)\r\n    const { isUpdated } = useSelector(state => state.website)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => setToggled(!isToggled)\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getAboutDetails())\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n        \r\n        if(isUpdated){\r\n            alert.success('About Us information has been updated successfully.')\r\n            history.push('/admin/about')\r\n\r\n            dispatch({\r\n                type: UPDATE_ABOUT_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, isUpdated, history])\r\n\r\n    const setAboutData = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Title',\r\n                    field: 'title',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Description',\r\n                    field: 'description',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                    sort: 'asc'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         abouts.forEach(about => {\r\n            data.rows.push({\r\n                title: about.title,\r\n                description: about.description,\r\n                actions:\r\n                <Fragment>\r\n                    <div style={{display: 'flex'}}>\r\n                        <Link to={`/admin/about/${about._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                            <i className='fa fa-pencil'></i>\r\n                        </Link>\r\n                    </div>\r\n                </Fragment>\r\n             })\r\n         })\r\n\r\n         return data\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'About Us Details'}/>\r\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\r\n                <div id=\"sidebar-wrapper\" >\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <hr/>\r\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\r\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\r\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )\r\n                        }\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\r\n                            <i className=\"fa fa-bars\"   ></i>\r\n                        </a>\r\n                        <Fragment>\r\n                        <div style={{padding: '30px'}}>\r\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>About Us Details</h1>\r\n                            {loading ? <Loader/> : (\r\n                                <MDBDataTableV5\r\n                                    data={setAboutData()}\r\n                                    paging={false}\r\n                                    searching={false}\r\n                                    searchTop\r\n                                    searchBottom={false}\r\n                                    scrollX\r\n                                    sortable={false}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListAbout\r\n","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admins\\ListHome.js",["281","282"],"import React, { Fragment, useEffect , useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTableV5 } from 'mdbreact'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getHomes, clearErrors } from '../../actions/websiteActions'\r\nimport { logout } from './../../actions/userActions'\r\nimport { UPDATE_HOME_RESET } from '../../constants/websiteConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport '../../css/sidebar.css'\r\nimport '../../css/sidebar-1.css'\r\nimport '../../css/bootstrap.min.css'\r\n\r\nconst ListHome = ({history}) => {\r\n    const alert = useAlert()\r\n    const dispatch = useDispatch()\r\n\r\n    const { loading, error, homes } = useSelector(state => state.homes)\r\n    const { isUpdated } = useSelector(state => state.website)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => setToggled(!isToggled)\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getHomes())\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n        \r\n        if(isUpdated){\r\n            alert.success('Home information has been updated successfully.')\r\n            history.push('/admin/homes')\r\n\r\n            dispatch({\r\n                type: UPDATE_HOME_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, isUpdated, history])\r\n\r\n    const setHomeData = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Title',\r\n                    field: 'name',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Description',\r\n                    field: 'description',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Image Preview',\r\n                    field: 'image',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                    sort: 'asc'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         homes.forEach(home => {\r\n            data.rows.push({\r\n                name: home.name,\r\n                description: home.description,\r\n                image: <Fragment>\r\n                    <figure>\r\n                        <img \r\n                            src={home.image.url} \r\n                            className='mt-3 mr-2' \r\n                            width='110' \r\n                            height='104'\r\n                        />\r\n                    </figure>\r\n                </Fragment>,\r\n                actions:\r\n                <Fragment>\r\n                    <div style={{display: 'flex'}}>\r\n                        <Link to={`/admin/home/${home._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                            <i className='fa fa-pencil'></i>\r\n                        </Link>\r\n                    </div>\r\n                </Fragment>\r\n             })\r\n         })\r\n\r\n         return data\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Home Details'}/>\r\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\r\n                <div id=\"sidebar-wrapper\" >\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <hr/>\r\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\r\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\r\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )\r\n                        }\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\r\n                            <i className=\"fa fa-bars\"   ></i>\r\n                        </a>\r\n                        <Fragment>\r\n                        <div style={{padding: '30px'}}>\r\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Home Details</h1>\r\n                            {loading ? <Loader/> : (\r\n                                <MDBDataTableV5\r\n                                    data={setHomeData()}\r\n                                    entries={5}\r\n                                    entriesOptions={[5, 10, 15, 20]}\r\n                                    paging={false}\r\n                                    searching={false}\r\n                                    searchTop\r\n                                    searchBottom={false}\r\n                                    scrollX\r\n                                    sortable={false}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListHome\r\n","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admins\\Dashboard.js",["283","284"],"import React, { Fragment, useEffect, useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listInquiry } from '../../actions/inquiryActions'\r\nimport { getUsers, logout } from '../../actions/userActions'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport '../../css/dashboard.css'\r\nimport '../../css/sidebar.css'\r\nimport '../../css/sidebar-1.css'\r\nimport '../../css/bootstrap.min.css'\r\n\r\nconst Dashboard = () => {\r\n    const dispatch = useDispatch()\r\n    const alert = useAlert()\r\n\r\n    const { loading, adminCount, superadminCount } = useSelector(state => state.users)\r\n    const { inquiryCount, appointmentCount, otherCount } = useSelector(state => state.listInquiry)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => setToggled(!isToggled)\r\n    \r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(user.role === 'admin'){\r\n            dispatch(listInquiry())\r\n        } else {\r\n            dispatch(getUsers())\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch])\r\n    \r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Dashboard'}/>\r\n            <Fragment>\r\n                {loading ? <Loader/> : (\r\n                    <Fragment>\r\n                        <MetaData title={'Admin Dashboard'}/>\r\n                        <div id=\"wrapper\" className={isToggled ? null : \"toggled\"}>\r\n                            <div id=\"sidebar-wrapper\" >\r\n                                <ul className=\"sidebar-nav\">\r\n                                    <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                                    <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                                    <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                                    <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                                    {user && user.role !== 'admin' ? (\r\n                                            <Fragment>\r\n                                                <hr/>\r\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\r\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\r\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\r\n                                            </Fragment>\r\n                                        ) : (\r\n                                            <Fragment>\r\n                                                <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                                <hr/>\r\n                                                <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                                <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\r\n                                                <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                                <hr/>\r\n                                                <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                                <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                            </Fragment>\r\n                                        )}\r\n\r\n                                    <hr/>\r\n                                    <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                                </ul>\r\n                            </div>\r\n                            <div className=\"page-content-wrapper\">\r\n                                <div className=\"container-fluid\">\r\n                                    <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\r\n                                        <i className=\"fa fa-bars\"   ></i>\r\n                                    </a>\r\n                                    {user && user.role !== 'admin' ? (\r\n                                        <Fragment>\r\n                                            <div className=\"main-section\" style={{paddingTop: '65px'}}>\r\n                                                <h3><strong>Overview</strong></h3>\r\n                                                <div className=\"dashbord\">\r\n                                                    <div className=\"icon-section\">\r\n                                                        <i className=\"fa fa-users\" aria-hidden=\"true\"></i><br/>\r\n                                                        <small>Admins</small>\r\n                                                        <p>{adminCount} admins</p>\r\n                                                    </div>\r\n                                                    <Link to=\"/admin/users/admin\" className=\"text-decoration-none text-white\">\r\n                                                        <div className=\"detail-section\">\r\n                                                            View <i className=\"fa fa-angle-right\"></i>\r\n                                                        </div>\r\n                                                    </Link>\r\n                                                </div>\r\n                                                <div className=\"dashbord\">\r\n                                                    <div className=\"icon-section\">\r\n                                                        <i className=\"fa fa-user-circle\" aria-hidden=\"true\"></i><br/>\r\n                                                        <small>Super Admins</small>\r\n                                                        <p>{superadminCount}  superadmins</p>\r\n                                                    </div>\r\n                                                    <Link to=\"/admin/users/superadmin\" className=\"text-decoration-none text-white\">\r\n                                                        <div className=\"detail-section\">\r\n                                                            View <i className=\"fa fa-angle-right\"></i>\r\n                                                        </div>\r\n                                                    </Link>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Fragment>\r\n                                    ) : (\r\n                                        <Fragment>\r\n                                            <div className=\"main-section\" style={{paddingTop: '65px'}}>\r\n                                                <h3><strong>Inbox</strong></h3>\r\n                                                <div className=\"dashbord\">\r\n                                                    <div className=\"icon-section\">\r\n                                                        <i className=\"fa fa-envelope\" aria-hidden=\"true\"></i><br/>\r\n                                                        <small>Inquiries</small>\r\n                                                        <p>{inquiryCount} messages</p>\r\n                                                    </div>\r\n                                                    <Link to=\"/admin/inquiries\" className=\"text-decoration-none text-white\">\r\n                                                        <div className=\"detail-section\">\r\n                                                            View <i className=\"fa fa-angle-right\"></i>\r\n                                                        </div>\r\n                                                    </Link>\r\n                                                </div>\r\n                                                <div className=\"dashbord\">\r\n                                                    <div className=\"icon-section\">\r\n                                                        <i className=\"fa fa-archive\" aria-hidden=\"true\"></i><br/>\r\n                                                        <small>Appointments</small>\r\n                                                        <p>{appointmentCount} messages</p>\r\n                                                    </div>\r\n                                                    <Link to=\"/admin/appointments\" className=\"text-decoration-none text-white\">\r\n                                                        <div className=\"detail-section\">\r\n                                                            View <i className=\"fa fa-angle-right\"></i>\r\n                                                        </div>\r\n                                                    </Link>\r\n                                                </div>\r\n                                                <div className=\"dashbord\">\r\n                                                    <div className=\"icon-section\">\r\n                                                        <i className=\"fa fa-inbox\" aria-hidden=\"true\"></i><br/>\r\n                                                        <small>Other Concerns</small>\r\n                                                        <p>{otherCount} messages</p>\r\n                                                    </div>\r\n                                                    <Link to=\"/admin/others\" className=\"text-decoration-none text-white\">\r\n                                                        <div className=\"detail-section\">\r\n                                                            View <i className=\"fa fa-angle-right\"></i>\r\n                                                        </div>\r\n                                                    </Link>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Fragment>\r\n                                    )}\r\n                                    <div className=\"main-section\" style={{paddingTop: '65px', paddingBottom: '65px'}}>\r\n                                        <h3><strong>Settings</strong></h3>\r\n                                        <div className=\"dashbord dashbord-25\">\r\n                                            <div className=\"icon-section\">\r\n                                                <i className=\"fa fa-home\" aria-hidden=\"true\"></i><br/>\r\n                                                <p>Update Home</p>\r\n                                            </div>\r\n                                            <Link to=\"/admin/home\" className=\"text-decoration-none text-white\">\r\n                                                <div className=\"detail-section\">\r\n                                                    Update <i className=\"fa fa-angle-right\"></i>\r\n                                                </div>\r\n                                            </Link>\r\n                                        </div>\r\n                                        <div className=\"dashbord dashbord-25\">\r\n                                            <div className=\"icon-section\">\r\n                                                <i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i><br/>\r\n                                                <p>Update About</p>\r\n                                            </div>\r\n                                            <Link to=\"/admin/about\" className=\"text-decoration-none text-white\">\r\n                                                <div className=\"detail-section\">\r\n                                                    Update <i className=\"fa fa-angle-right\"></i>\r\n                                                </div>\r\n                                            </Link>\r\n                                        </div>\r\n                                        <div className=\"dashbord dashbord-25\">\r\n                                            <div className=\"icon-section\">\r\n                                                <i className=\"fa fa-quote-left\" aria-hidden=\"true\"></i><br/>\r\n                                                <p>Update Footer</p>\r\n                                            </div>\r\n                                            <Link to=\"/admin/footer\" className=\"text-decoration-none text-white\">\r\n                                                <div className=\"detail-section\">\r\n                                                    Update <i className=\"fa fa-angle-right\"></i>\r\n                                                </div>\r\n                                            </Link>\r\n                                        </div>\r\n                                        <div className=\"dashbord dashbord-25\">\r\n                                            <div className=\"icon-section\">\r\n                                                <i className=\"fa fa-check\" aria-hidden=\"true\"></i><br/>\r\n                                                <p>Update Services</p>\r\n                                            </div>\r\n                                            <Link to=\"/admin/service\" className=\"text-decoration-none text-white\">\r\n                                                <div className=\"detail-section\">\r\n                                                    Update <i className=\"fa fa-angle-right\"></i>\r\n                                                </div>\r\n                                            </Link>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Fragment>\r\n                )}\r\n            </Fragment>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admins\\ListFooter.js",["285"],"import React, { Fragment, useEffect , useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTableV5 } from 'mdbreact'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getFooterDetails, clearErrors } from '../../actions/websiteActions'\r\nimport { logout } from './../../actions/userActions'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { UPDATE_FOOTER_RESET } from '../../constants/websiteConstants'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport '../../css/sidebar.css'\r\nimport '../../css/sidebar-1.css'\r\nimport '../../css/bootstrap.min.css'\r\n\r\nconst ListFooter = ({history}) => {\r\n    const alert = useAlert()\r\n    const dispatch = useDispatch()\r\n\r\n    const { loading, error, footerInfo } = useSelector(state => state.footerDetails)\r\n    const { isUpdated } = useSelector(state => state.website)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => setToggled(!isToggled)\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getFooterDetails())\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n        \r\n        if(isUpdated){\r\n            alert.success('Footer has been updated successfully.')\r\n            history.push('/admin/footer')\r\n\r\n            dispatch({\r\n                type: UPDATE_FOOTER_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, isUpdated, history])\r\n\r\n    const setFooterData = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Details',\r\n                    field: 'text',\r\n                    sort: 'asc'\r\n                }\r\n            ],\r\n            rows: [\r\n                {\r\n                    text: footerInfo.footerTitle\r\n                },\r\n                {\r\n                    text: footerInfo.footerDescription\r\n                },\r\n                {\r\n                    text: footerInfo.addressInfo\r\n                },\r\n                {\r\n                    text: footerInfo.phoneInfo\r\n                },\r\n                {\r\n                    text: footerInfo.cellphoneInfo\r\n                },\r\n                {\r\n                    text: footerInfo.emailInfo\r\n                }\r\n            ]\r\n         }\r\n         return data\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Footer Details'}/>\r\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}>\r\n                <div id=\"sidebar-wrapper\">\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <hr/>\r\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\r\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\r\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )\r\n                        }\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\r\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                        </a>\r\n                        <Fragment>\r\n                        <div style={{padding: '30px'}}>\r\n                            <div style={{display: 'flex'}}>\r\n                                <div style={{marginRight: 'auto'}}>\r\n                                    <h1 className='mt-3 mb-3 ml-10 mr-10'>Footer Details</h1>\r\n                                </div>\r\n                                <div style={{marginLeft: 'auto', marginTop: '30px'}}>\r\n                                    <Link to='/admin/update-footer'>\r\n                                        <button className='btn btn-dark btn-sm text-capitalize mb-5'>\r\n                                            Update Footer\r\n                                        </button>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                            {loading ? <Loader/> : (\r\n                                <MDBDataTableV5\r\n                                    data={setFooterData()}\r\n                                    paging={false}\r\n                                    searcing={false}\r\n                                    searchTop\r\n                                    searchBottom={false}\r\n                                    scrollX\r\n                                    sortable={false}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListFooter\r\n","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admins\\UpdateAbout.js",["286","287"],"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admins\\ListServices.js",["288"],"import React, { Fragment, useEffect , useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTableV5 } from 'mdbreact'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getServices, clearErrors } from '../../actions/websiteActions'\r\nimport { logout } from './../../actions/userActions'\r\nimport { UPDATE_SERVICES_RESET } from '../../constants/websiteConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport '../../css/sidebar.css'\r\nimport '../../css/sidebar-1.css'\r\nimport '../../css/bootstrap.min.css'\r\n\r\nconst ListServices = ({history}) => {\r\n    const alert = useAlert()\r\n    const dispatch = useDispatch()\r\n\r\n    const { loading, error, services } = useSelector(state => state.services)\r\n    const { isUpdated } = useSelector(state => state.website)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => setToggled(!isToggled)\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getServices())\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n        \r\n        if(isUpdated){\r\n            alert.success('Services has been updated successfully.')\r\n            history.push('/admin/service')\r\n\r\n            dispatch({\r\n                type: UPDATE_SERVICES_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, isUpdated, history])\r\n\r\n    const setServiceData = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Title',\r\n                    field: 'title',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Subtitle',\r\n                    field: 'subtitle',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Description',\r\n                    field: 'description',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Icon Preview',\r\n                    field: 'icon',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                    sort: 'asc'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         services.forEach(service => {\r\n            data.rows.push({\r\n                title: service.title,\r\n                subtitle: service.subtitle,\r\n                description: service.description,\r\n                icon: <Fragment>\r\n                    <span className=\"fa-stack fa-2x\">\r\n                        <i className=\"fa fa-circle fa-stack-2x text-primary\"></i>\r\n                        <i className={`fa fa-${service.icon} fa-stack-1x fa-inverse`}></i>\r\n                    </span>\r\n                </Fragment>,\r\n                actions:\r\n                <Fragment>\r\n                    <div style={{display: 'flex'}}>\r\n                        <Link to={`/admin/service/${service._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                            <i className='fa fa-pencil'></i>\r\n                        </Link>\r\n                    </div>\r\n                </Fragment>\r\n             })\r\n         })\r\n\r\n         return data\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Services Details'}/>\r\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\r\n                <div id=\"sidebar-wrapper\" >\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <hr/>\r\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\r\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\r\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )\r\n                        }\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\r\n                            <i className=\"fa fa-bars\"   ></i>\r\n                        </a>\r\n                        <Fragment>\r\n                        <div style={{padding: '30px'}}>\r\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Services Details</h1>\r\n                            {loading ? <Loader/> : (\r\n                                <MDBDataTableV5\r\n                                    data={setServiceData()}\r\n                                    searchTop\r\n                                    searchBottom={false}\r\n                                    scrollX\r\n                                    sortable={false}\r\n                                    searching={false}\r\n                                    paging={false}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListServices\r\n","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admins\\UpdateHome.js",["289","290","291"],"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admins\\UpdateServices.js",["292","293","294","295","296"],"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admins\\UpdateFooter.js",["297","298"],"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admin\\ListInquiries.js",["299"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTableV5 } from 'mdbreact'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Modal, Button } from 'react-bootstrap'\r\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\r\nimport { logout } from './../../actions/userActions'\r\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport '../../css/sidebar.css'\r\nimport '../../css/sidebar-1.css'\r\nimport '../../css/bootstrap.min.css'\r\n\r\nconst ListInquiries = ({history}) => {\r\n    const alert = useAlert()\r\n    const dispatch = useDispatch()\r\n\r\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\r\n    const { isUpdated } = useSelector(state => state.inquiry)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n    const [show, setShow] = useState(false)\r\n    const [id, setId] = useState('')\r\n\r\n    const handleToggle = () => setToggled(!isToggled)\r\n    const handleClose = () => setShow(false)\r\n    const handleShow = () => setShow(true)\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    const updateInquiryHandler = (id, inquiryStatus) => { \r\n        const formData = new FormData()\r\n        formData.set('inquiryStatus', inquiryStatus)\r\n\r\n        alert.success('Message has been moved to Trash.')\r\n        dispatch(updateInquiry(id, formData))\r\n        handleClose()\r\n    }\r\n    \r\n    useEffect(() => {\r\n        dispatch(listInquiry())\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(isUpdated){\r\n            history.push('/admin/inquiries')\r\n\r\n            dispatch({\r\n                type: UPDATE_INQUIRY_RESET\r\n            })\r\n        }\r\n        \r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, isUpdated, history])\r\n\r\n    const setInquiries = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Date / Time',\r\n                    field: 'createdAt',\r\n                    sort: 'desc'\r\n                },\r\n                {\r\n                    label: 'Last Name',\r\n                    field: 'lastName'\r\n                },\r\n                {\r\n                    label: 'First Name',\r\n                    field: 'firstName'\r\n                },\r\n                {\r\n                    label: 'Company Name',\r\n                    field: 'companyName'\r\n                },\r\n                \r\n                {\r\n                    label: 'Status',\r\n                    field: 'inquiryStatus'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         inquiries.forEach(inquiry => {\r\n             if(inquiry.concernType==='Inquiry' && (inquiry.inquiryStatus !== \"Deleted\" && inquiry.inquiryStatus !== \"Resolved\")){\r\n                data.rows.push({\r\n                    createdAt: inquiry.createdAt,\r\n                    firstName: inquiry.firstName,\r\n                    lastName: inquiry.lastName,\r\n                    companyName: inquiry.companyName,\r\n                    inquiryStatus: <p style={{ color: 'red' }}>{inquiry.inquiryStatus}</p>,\r\n                    actions:\r\n                    <Fragment>\r\n                        <div style={{display: 'flex'}}>\r\n                            <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                                <i className='fa fa-eye'></i>\r\n                            </Link>\r\n                            <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => {\r\n                                handleShow()\r\n                                setId(inquiry._id)\r\n                            }}>\r\n                                <i className='fa fa-trash'></i>\r\n                            </button>\r\n                        </div>\r\n                    </Fragment>\r\n                 })\r\n             }\r\n         })\r\n\r\n         return data\r\n    }\r\n    \r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Inquiries'}/>\r\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\r\n                <div id=\"sidebar-wrapper\" >\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <hr/>\r\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\r\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\r\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )\r\n                        }\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\r\n                            <i className=\"fa fa-bars\"   ></i>\r\n                        </a>\r\n                        <Modal show={show} onHide={handleClose}>\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title>Move to Trash?</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>Are you sure you want to move this message to Trash?</Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button variant=\"secondary\" onClick={handleClose}>\r\n                                Close\r\n                                </Button>\r\n                                <Button variant=\"primary\" onClick={() => updateInquiryHandler(id, \"Deleted\")}>\r\n                                Yes, I'm sure\r\n                                </Button>\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n                        <Fragment>\r\n                            <div style={{padding: '30px'}}>\r\n                                <h1 className='mt-3 mb-3 ml-10 mr-10'>Inbox - Inquiry</h1>\r\n                                {loading? <Loader/> : (\r\n                                    <MDBDataTableV5\r\n                                        data={setInquiries()}\r\n                                        entries={5}\r\n                                        entriesOptions={[5, 10, 15, 20]}\r\n                                        searchTop\r\n                                        searchBottom={false}\r\n                                        scrollX\r\n                                        sortable={false}\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListInquiries","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admin\\ListAppointments.js",["300"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTableV5 } from 'mdbreact'\r\nimport { useAlert } from 'react-alert'\r\nimport { Modal, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\r\nimport { logout } from '../../actions/userActions'\r\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport '../../css/sidebar.css'\r\nimport '../../css/sidebar-1.css'\r\nimport '../../css/bootstrap.min.css'\r\n\r\nconst ListAppointments = ({history}) => {\r\n    const alert = useAlert()\r\n    const dispatch = useDispatch()\r\n\r\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\r\n    const { isUpdated } = useSelector(state => state.inquiry)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n    const [id, setId] = useState('')\r\n    const [show, setShow] = useState(false)\r\n\r\n    const handleClose = () => setShow(false)\r\n    const handleShow = () => setShow(true)\r\n    const handleToggle = () => setToggled(!isToggled)\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    const updateInquiryHandler = (id, inquiryStatus) => { \r\n        const formData = new FormData()\r\n        formData.set('inquiryStatus', inquiryStatus)\r\n\r\n        alert.success('Message has been moved to Trash.')\r\n        dispatch(updateInquiry(id, formData))\r\n        handleClose()\r\n    }\r\n    \r\n    useEffect(() => {\r\n        dispatch(listInquiry())\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(isUpdated){\r\n            history.push('/admin/appointments')\r\n\r\n            dispatch({\r\n                type: UPDATE_INQUIRY_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, history, isUpdated])\r\n    \r\n    const setInquiries = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Date / Time',\r\n                    field: 'createdAt',\r\n                    sort: 'desc'\r\n                },\r\n                {\r\n                    label: 'Last Name',\r\n                    field: 'lastName'\r\n                },\r\n                {\r\n                    label: 'First Name',\r\n                    field: 'firstName'\r\n                },\r\n                {\r\n                    label: 'Company Name',\r\n                    field: 'companyName'\r\n                },\r\n                \r\n                {\r\n                    label: 'Status',\r\n                    field: 'inquiryStatus'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         inquiries.forEach(inquiry => {\r\n             if(inquiry.concernType==='Appointment' && (inquiry.inquiryStatus !== \"Deleted\" && inquiry.inquiryStatus !== \"Resolved\")){\r\n                \r\n                data.rows.push({\r\n                    createdAt: inquiry.createdAt,\r\n                    firstName: inquiry.firstName,\r\n                    lastName: inquiry.lastName,\r\n                    companyName: inquiry.companyName,\r\n                    inquiryStatus: <p style={{ color: 'red' }}>{inquiry.inquiryStatus}</p>,\r\n                    actions:\r\n                    <Fragment>\r\n                        <div style={{display: 'flex'}}>\r\n                            <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                                <i className='fa fa-eye'></i>\r\n                            </Link>\r\n                            <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => {\r\n                                handleShow()\r\n                                setId(inquiry._id)\r\n                            }}>\r\n                                <i className='fa fa-trash'></i>\r\n                            </button>\r\n                        </div>     \r\n                    </Fragment>\r\n                 })\r\n             }\r\n         })\r\n\r\n         return data\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Appointments'}/>\r\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\r\n                <div id=\"sidebar-wrapper\" >\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <hr/>\r\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\r\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\r\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )\r\n                        }\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\r\n                            <i className=\"fa fa-bars\"   ></i>\r\n                        </a>\r\n                        <Modal show={show} onHide={handleClose}>\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title>Move to Trash?</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>Are you sure you want to move this message to Trash?</Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button variant=\"secondary\" onClick={handleClose}>\r\n                                Close\r\n                                </Button>\r\n                                <Button variant=\"primary\" onClick={() => updateInquiryHandler(id, \"Deleted\")}>\r\n                                Yes, I'm sure\r\n                                </Button>\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n                        <Fragment>\r\n                        <div style={{padding: '30px'}}>\r\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Inbox - Appointments</h1>\r\n                            {loading? <Loader/> : (\r\n                                <MDBDataTableV5\r\n                                    data={setInquiries()}\r\n                                    entries={5}\r\n                                    entriesOptions={[5, 10, 15, 20]}\r\n                                    searchTop\r\n                                    searchBottom={false}\r\n                                    scrollX\r\n                                    sortable={false}   \r\n                                />\r\n                            )}\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListAppointments","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admin\\ListOthers.js",["301"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTableV5 } from 'mdbreact'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Modal, Button } from 'react-bootstrap'\r\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\r\nimport { logout } from './../../actions/userActions'\r\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport '../../css/sidebar.css'\r\nimport '../../css/sidebar-1.css'\r\nimport '../../css/bootstrap.min.css'\r\n\r\nconst ListOthers = ({history}) => {\r\n\r\n    const alert = useAlert()\r\n    const dispatch = useDispatch()\r\n\r\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\r\n    const { isUpdated } = useSelector(state => state.inquiry)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n    const [id, setId] = useState('')\r\n    const [show, setShow] = useState(false)\r\n\r\n    const handleToggle = () => setToggled(!isToggled)\r\n    const handleClose = () => setShow(false)\r\n    const handleShow = () => setShow(true)\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    const updateInquiryHandler = (id, inquiryStatus) => { \r\n        const formData = new FormData()\r\n        formData.set('inquiryStatus', inquiryStatus)\r\n\r\n        alert.success('Message has been moved to Trash.')\r\n        dispatch(updateInquiry(id, formData))\r\n        handleClose()\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(listInquiry())\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(isUpdated){\r\n            history.push('/admin/others')\r\n\r\n            dispatch({\r\n                type: UPDATE_INQUIRY_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, isUpdated, history])\r\n\r\n    const setInquiries = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Date / Time',\r\n                    field: 'createdAt',\r\n                    sort: 'desc'\r\n                },\r\n                {\r\n                    label: 'Last Name',\r\n                    field: 'lastName'\r\n                },\r\n                {\r\n                    label: 'First Name',\r\n                    field: 'firstName'\r\n                },\r\n                {\r\n                    label: 'Company Name',\r\n                    field: 'companyName'\r\n                },\r\n                \r\n                {\r\n                    label: 'Status',\r\n                    field: 'inquiryStatus'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         inquiries.forEach(inquiry => {\r\n             if(inquiry.concernType==='Others'  && (inquiry.inquiryStatus !== \"Deleted\" && inquiry.inquiryStatus !== \"Resolved\")){\r\n                data.rows.push({\r\n                    createdAt: inquiry.createdAt,\r\n                    firstName: inquiry.firstName,\r\n                    lastName: inquiry.lastName,\r\n                    companyName: inquiry.companyName,\r\n                    inquiryStatus: <p style={{ color: 'red' }}>{inquiry.inquiryStatus}</p>,\r\n                    actions:\r\n                    <Fragment>\r\n                        <div style={{display: 'flex'}}>\r\n                            <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                                <i className='fa fa-eye'></i>\r\n                            </Link>\r\n                            <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => {\r\n                                handleShow()\r\n                                setId(inquiry._id)\r\n                            }}>\r\n                                <i className='fa fa-trash'></i>\r\n                            </button>\r\n                        </div>\r\n                    </Fragment>\r\n                 })\r\n             }\r\n         }) \r\n         return data\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Others'}/>\r\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\r\n                <div id=\"sidebar-wrapper\" >\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <hr/>\r\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\r\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\r\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )\r\n                        }\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\r\n                            <i className=\"fa fa-bars\"   ></i>\r\n                        </a>\r\n                        <Modal show={show} onHide={handleClose}>\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title>Move to Trash?</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>Are you sure you want to move this message to Trash?</Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button variant=\"secondary\" onClick={handleClose}>\r\n                                Close\r\n                                </Button>\r\n                                <Button variant=\"primary\" onClick={() => updateInquiryHandler(id, \"Deleted\")}>\r\n                                Yes, I'm sure\r\n                                </Button>\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n                        <Fragment>\r\n                        <div style={{padding: '30px'}}>\r\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Inbox - Others</h1>\r\n                            {loading? <Loader/> : (\r\n                                <MDBDataTableV5\r\n                                    data={setInquiries()}\r\n                                    entries={5}\r\n                                    entriesOptions={[5, 10, 15, 20]}\r\n                                    searchTop\r\n                                    searchBottom={false}\r\n                                    scrollX\r\n                                    sortable={false}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListOthers","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admin\\ListTrash.js",["302"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTableV5 } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\nimport { Modal, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { deleteInquiry, updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\r\nimport { logout } from './../../actions/userActions'\r\nimport { DELETE_INQUIRY_RESET, UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport '../../css/sidebar.css'\r\nimport '../../css/sidebar-1.css'\r\nimport '../../css/bootstrap.min.css'\r\n\r\nconst ListTrash = ({history}) => {\r\n    const alert = useAlert()\r\n    const dispatch = useDispatch()\r\n\r\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\r\n    const { deleteError, isUpdated, isDeleted } = useSelector(state => state.inquiry)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n    const [id, setId] = useState('')\r\n    const [show, setShow] = useState(false)\r\n    const [emptyShow, setEmptyShow] = useState(false)\r\n    const [deleteAll, setDeleteAll] = useState(false)\r\n\r\n    const handleToggle = () => setToggled(!isToggled)\r\n    const handleClose = () => setShow(false)\r\n    const handleShow = () => setShow(true)\r\n    const handleEmptyClose = () => setEmptyShow(false)\r\n    const handleEmptyShow = () => setEmptyShow(true)\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    const updateInquiryHandler = (id, inquiryStatus) => { \r\n        const formData = new FormData()\r\n        formData.set('inquiryStatus', inquiryStatus)\r\n\r\n        alert.success('Message has been restored.')\r\n        dispatch(updateInquiry(id, formData))\r\n    }\r\n\r\n    const deleteInquiryHandler = (id) => {\r\n        handleClose()\r\n        dispatch(deleteInquiry(id))\r\n    }\r\n\r\n    const emptyTrash = () => {\r\n        setDeleteAll(true)\r\n\r\n        let deletedInquiryCount = 0\r\n\r\n        inquiries.forEach(inquiry => {\r\n            if(inquiry.inquiryStatus === 'Deleted') {\r\n                deletedInquiryCount += 1\r\n                dispatch(deleteInquiry(inquiry._id))\r\n                deletedInquiryCount -= 1\r\n            }\r\n        })\r\n\r\n        if(deletedInquiryCount === 0){\r\n            alert.success('Trash has been emptied.') //this is working\r\n        } \r\n\r\n        handleEmptyClose()\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(listInquiry())\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n        \r\n        if(deleteError){\r\n            alert.error(deleteError)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(isUpdated){\r\n            history.push('/admin/trash')\r\n\r\n            dispatch({\r\n                type: UPDATE_INQUIRY_RESET\r\n            })\r\n        }\r\n\r\n        if(isDeleted && deleteAll){\r\n            dispatch({\r\n                type: DELETE_INQUIRY_RESET\r\n            })\r\n        }\r\n\r\n        if(isDeleted && deleteAll === false){\r\n            alert.success('Message has been deleted.')\r\n            history.push('/admin/trash')\r\n\r\n            dispatch({\r\n                type: DELETE_INQUIRY_RESET\r\n            })\r\n        }\r\n        \r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, history, isDeleted, isUpdated, deleteError, deleteAll])\r\n\r\n    const setInquiries = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Date / Time',\r\n                    field: 'createdAt',\r\n                    sort: 'desc'\r\n                },\r\n                {\r\n                    label: 'Last Name',\r\n                    field: 'lastName'\r\n                },\r\n                {\r\n                    label: 'First Name',\r\n                    field: 'firstName'\r\n                },\r\n                {\r\n                    label: 'Company Name',\r\n                    field: 'companyName'\r\n                },\r\n                \r\n                {\r\n                    label: 'Concern Type',\r\n                    field: 'concernType'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         inquiries.forEach(inquiry => {\r\n             if(inquiry.inquiryStatus==='Deleted'){\r\n                \r\n                data.rows.push({\r\n                    createdAt: inquiry.createdAt,\r\n                    firstName: inquiry.firstName,\r\n                    lastName: inquiry.lastName,\r\n                    companyName: inquiry.companyName,\r\n                    concernType: String(inquiry.concernType),\r\n                    actions:\r\n                    <Fragment>\r\n                        <div style={{display: 'flex'}}>\r\n                            <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                                <i className='fa fa-eye'></i>\r\n                            </Link>\r\n                            <button className=\"btn btn-secondary py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Resolved\")}>\r\n                                <i className='fa fa-undo'></i>\r\n                            </button>\r\n                            <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => {\r\n                                handleShow()\r\n                                setId(inquiry._id)\r\n                            }}>\r\n                                <i className='fa fa-trash'></i>\r\n                            </button>\r\n                        </div>\r\n                    </Fragment>\r\n                 })\r\n             }\r\n         })\r\n\r\n         return data\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Trash'}/>\r\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\r\n                <div id=\"sidebar-wrapper\" >\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <hr/>\r\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\r\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\r\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )\r\n                        }\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\r\n                            <i className=\"fa fa-bars\"   ></i>\r\n                        </a>\r\n                        <Modal show={show} onHide={handleClose}>\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title>Delete Message?</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>Are you sure you want to delete this? This cannot be undone.</Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button variant=\"secondary\" onClick={handleClose}>\r\n                                Close\r\n                                </Button>\r\n                                <Button variant=\"primary\" onClick={() => deleteInquiryHandler(id)}>\r\n                                Yes, I'm sure\r\n                                </Button>\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n                        <Modal show={emptyShow} onHide={handleEmptyClose}>\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title>Empty Trash?</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>Are you sure you want to delete ALL messages? This cannot be undone.</Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button variant=\"secondary\" onClick={handleEmptyClose}>\r\n                                Close\r\n                                </Button>\r\n                                <Button variant=\"primary\" onClick={() => emptyTrash()}>\r\n                                Yes, I'm sure\r\n                                </Button>\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n                        <Fragment>\r\n                        <div style={{padding: '30px'}}>\r\n                            {loading? <Loader/> : (\r\n                                <Fragment>\r\n                                    <div style={{display: 'flex'}}>\r\n                                        <div style={{marginRight: 'auto'}}>\r\n                                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Trash</h1>\r\n                                        </div>\r\n                                        <div style={{marginLeft: 'auto', marginTop: '30px'}}>\r\n                                            <Link>\r\n                                                <button \r\n                                                    className='btn btn-dark btn-sm text-capitalize mb-5' \r\n                                                    onClick={handleEmptyShow}\r\n                                                    disabled={setInquiries().rows.length === 0 ? true : false}\r\n                                                >\r\n                                                    Empty Trash\r\n                                                </button>\r\n                                            </Link>\r\n                                        </div>\r\n                                    </div>\r\n                                    <MDBDataTableV5\r\n                                        data={setInquiries()}\r\n                                        entries={5}\r\n                                        entriesOptions={[5, 10, 15, 20]}\r\n                                        searchTop\r\n                                        searchBottom={false}\r\n                                        scrollX\r\n                                        sortable={false}\r\n                                    />\r\n                                </Fragment>\r\n                            )}\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListTrash","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admin\\ListArchives.js",["303"],"import React, { Fragment, useEffect , useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTableV5 } from 'mdbreact'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Modal, Button } from 'react-bootstrap'\r\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\r\nimport { logout } from './../../actions/userActions'\r\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport '../../css/sidebar.css'\r\nimport '../../css/sidebar-1.css'\r\nimport '../../css/bootstrap.min.css'\r\n\r\nconst ListArchives = ({history}) => {\r\n    const alert = useAlert()\r\n    const dispatch = useDispatch()\r\n\r\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\r\n    const { isUpdated } = useSelector(state => state.inquiry)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n    const [show, setShow] = useState(false)\r\n    const [id, setId] = useState('')\r\n\r\n    const handleToggle = () => setToggled(!isToggled)\r\n    const handleClose = () => setShow(false)\r\n    const handleShow = () => setShow(true)\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(listInquiry())\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n        \r\n        if(isUpdated){\r\n            dispatch({\r\n                type: UPDATE_INQUIRY_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, isUpdated, history])\r\n\r\n    const updateInquiryHandler = (id, inquiryStatus) => { \r\n        const formData = new FormData()\r\n        formData.set('inquiryStatus', inquiryStatus)\r\n\r\n        if(inquiryStatus === 'Deleted') {\r\n            alert.success('Message has been moved to Trash.')\r\n            history.push('/admin/archives')\r\n            dispatch(updateInquiry(id, formData))\r\n            handleClose()\r\n        } else {\r\n            alert.success('Message has been restored.')\r\n            history.push('/admin/archives')\r\n            dispatch(updateInquiry(id, formData))\r\n        }\r\n    }\r\n\r\n    const setInquiries = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Date / Time',\r\n                    field: 'createdAt',\r\n                    sort: 'desc'\r\n                },\r\n                {\r\n                    label: 'Last Name',\r\n                    field: 'lastName'\r\n                },\r\n                {\r\n                    label: 'First Name',\r\n                    field: 'firstName'\r\n                },\r\n                {\r\n                    label: 'Company Name',\r\n                    field: 'companyName'\r\n                },\r\n                \r\n                {\r\n                    label: 'Concern Type',\r\n                    field: 'concernType'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         inquiries.forEach(inquiry => {\r\n             if(inquiry.inquiryStatus==='Resolved'){\r\n                data.rows.push({\r\n                    createdAt: inquiry.createdAt,\r\n                    firstName: inquiry.firstName,\r\n                    lastName: inquiry.lastName,\r\n                    companyName: inquiry.companyName,\r\n                    concernType: String(inquiry.concernType),\r\n                    actions:\r\n                    <Fragment>\r\n                        <div style={{display: 'flex'}}>\r\n                            <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                                <i className='fa fa-eye'></i>\r\n                            </Link>\r\n                            <button className=\"btn btn-secondary py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Unresolved\")}>\r\n                                <i className='fa fa-undo'></i>\r\n                            </button>\r\n                            <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => {\r\n                                handleShow()\r\n                                setId(inquiry._id)\r\n                            }}>\r\n                                <i className='fa fa-trash'></i>\r\n                            </button>\r\n                        </div>\r\n                    </Fragment>\r\n                 })\r\n             }\r\n         })\r\n\r\n         return data\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Archives'}/>\r\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}>\r\n                <div id=\"sidebar-wrapper\" >\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <hr/>\r\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\r\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\r\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )\r\n                        }\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\r\n                            <i className=\"fa fa-bars\"   ></i>\r\n                        </a>\r\n                        <Modal show={show} onHide={handleClose}>\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title>Move to Trash?</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>Are you sure you want to move this message to Trash?</Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button variant=\"secondary\" onClick={handleClose}>\r\n                                Close\r\n                                </Button>\r\n                                <Button variant=\"primary\" onClick={() => updateInquiryHandler(id, \"Deleted\")}>\r\n                                Yes, I'm sure\r\n                                </Button>\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n                        <Fragment>\r\n                            <div style={{padding: '30px'}}>\r\n                                <h1 className='mt-3 mb-3 ml-10 mr-10'>Archives</h1>\r\n                                {loading ? <Loader/> : (\r\n                                    <MDBDataTableV5\r\n                                        data={setInquiries()}\r\n                                        entries={5}\r\n                                        entriesOptions={[5, 10, 15, 20]}\r\n                                        searchTop\r\n                                        searchBottom={false}\r\n                                        scrollX\r\n                                        sortable={false}\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListArchives","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admin\\NewProduct.js",["304","305"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Modal, Button, OverlayTrigger, Tooltip} from 'react-bootstrap'\r\nimport imageCompression from 'browser-image-compression'\r\nimport { logout } from './../../actions/userActions'\r\nimport { newProduct, clearErrors } from '../../actions/productActions'\r\nimport { NEW_PRODUCT_RESET, NEW_PRODUCT_REQUEST } from '../../constants/productConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport MetaData from '../layout/MetaData'\r\nimport '../../css/sidebar.css'\r\nimport '../../css/sidebar-1.css'\r\nimport '../../css/bootstrap.min.css'\r\n\r\nconst NewProduct = ({history}) => {\r\n    const dispatch = useDispatch()\r\n    const alert = useAlert()\r\n\r\n    const { loading, error, success } = useSelector(state => state.newProduct)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [name, setName] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [image, setImage] = useState('')\r\n    const [category, setMainCategory] = useState('')\r\n    const [subcategory, setSubCategory] = useState('')\r\n    const [imagePreview, setImagePreview] = useState('https://res.cloudinary.com/agiletechnodynamicsinc/image/upload/v1615204932/products/default-image-620x600_sdhmvy.jpg')\r\n    const [useDefaultImage, setUseDefaultImage] = useState('')\r\n    const [isChecked, setChecked] = useState('false')\r\n    const [isToggled, setToggled] = useState('false')\r\n    const [show, setShow] = useState(false)\r\n\r\n    const categories = ['', 'Mechanical Engineering', 'DC Power Systems', 'Electrical Engineering Equipment', 'Test Equipment', 'Others']\r\n    const me_subCategory = ['', 'Pumps and System', 'Fire Protection Systems', 'Others']\r\n    const dc_subCategory = ['', 'Uninterrupted Power System', 'Battery Monitoring System', 'Batteries', 'Others']\r\n    const eee_subCategory = ['', 'Transformers', 'Others']\r\n    const te_subCategory = ['', 'Partial Discharge Detection', 'Battery Discharge Capacity Tester', 'Battery Impedance or Internal Resistance', 'Load Banks', 'Battery Test Monitor', 'Portable Direct Ground Fault Finder', 'Earth Tester or Clamp Type', 'Others']\r\n\r\n    const checkboxCheck = () => setChecked(!isChecked)\r\n    const handleClose = () => setShow(false)\r\n    const handleShow = () => setShow(true)\r\n    const handleToggle = () => setToggled(!isToggled)\r\n    \r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault()\r\n\r\n        const formData = new FormData()\r\n        formData.set('name', name)\r\n        formData.set('description', description)\r\n        formData.set('category', category)\r\n\r\n        if(String(category).includes(\"Others\")) {\r\n            formData.set('subcategory', \"Others\")\r\n        } else {\r\n            formData.set('subcategory', subcategory)\r\n        }\r\n\r\n        formData.set('useDefaultImage', useDefaultImage)\r\n        formData.set('image', image)\r\n\r\n        dispatch(newProduct(formData))\r\n    }\r\n\r\n    const onChange = e => {\r\n        if(e.target.name === 'useDefaultImage') {\r\n            let chkbox = document.getElementById('useDefaultImage')\r\n\r\n            if(chkbox.checked === true) { //if changed to ===, register would not work\r\n                setUseDefaultImage(\"True\")\r\n                setImagePreview('https://res.cloudinary.com/agiletechnodynamicsinc/image/upload/v1615204932/products/default-image-620x600_sdhmvy.jpg')\r\n            }\r\n            else{\r\n                setUseDefaultImage(\"False\")\r\n            }\r\n        } \r\n    }\r\n\r\n    const handleImageUpload = e => {\r\n        var imageFile = e.target.files[0]\r\n        \r\n        if(!imageFile.type.match(/image.*/)){\r\n            dispatch({\r\n                type: NEW_PRODUCT_REQUEST\r\n            })\r\n\r\n            setImagePreview('https://res.cloudinary.com/agiletechnodynamicsinc/image/upload/v1615204932/products/default-image-620x600_sdhmvy.jpg')\r\n            return alert.error('Please upload an image file')\r\n        }\r\n\r\n        var options = {\r\n          maxSizeMB: 0.6,\r\n          maxWidthOrHeight: 1920,\r\n          useWebWorker: true\r\n        }\r\n        \r\n        imageCompression(imageFile, options)\r\n          .then(function (compressedFile) {\r\n                addImage(compressedFile) // write your own logic\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error.message)\r\n          })\r\n\r\n          dispatch({\r\n              type: NEW_PRODUCT_REQUEST\r\n          })\r\n      }\r\n\r\n    const addImage = file => {\r\n        const reader = new FileReader()\r\n\r\n        reader.onload = () => {\r\n            if(reader.readyState === 2){\r\n                setImagePreview(reader.result)\r\n                setImage(reader.result)\r\n            }\r\n        }\r\n        reader.readAsDataURL(file)\r\n\r\n        dispatch({\r\n            type: NEW_PRODUCT_RESET\r\n        })\r\n    }\r\n\r\n    const discardChanges = () => {\r\n        handleClose()\r\n        history.push('/admin/products')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(success) {\r\n            history.push('/admin/products')\r\n            alert.success('Product created successfully.')\r\n        \r\n            dispatch({\r\n                type: NEW_PRODUCT_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, error, alert, success, history])\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'New Product'}/>\r\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}>\r\n                <div id=\"sidebar-wrapper\">\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <hr/>\r\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\r\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\r\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )\r\n                        }\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <div>\r\n                            <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\r\n                                <i className=\"fa fa-bars\"   ></i>\r\n                            </a>\r\n                        </div>\r\n                        <Modal show={show} onHide={handleClose}>\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title>Discard Changes?</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>Are you sure you want to discard your changes?</Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button variant=\"secondary\" onClick={handleClose}>\r\n                                    Close\r\n                                </Button>\r\n                                <Button variant=\"primary\" onClick={discardChanges}>\r\n                                    Yes, I'm sure\r\n                                </Button>\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n                        <Fragment>\r\n                            <div className=\"login-clean\">\r\n                                <form method=\"post\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                                    <h2 className=\"sr-only\">New Product</h2>\r\n                                    <div className=\"div-forgot-password\">\r\n                                        <h3 className=\"forgot-password-heading\">New Product</h3>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <h6>Name</h6>\r\n                                        <input \r\n                                            type=\"text\" \r\n                                            className=\"form-control\" \r\n                                            name=\"name\"\r\n                                            value={name}\r\n                                            placeholder=\"Product Name\"\r\n                                            onChange={e => setName(e.target.value)}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <h6>Description</h6>\r\n                                        <textarea\r\n                                            type=\"text\" \r\n                                            className=\"form-control\" \r\n                                            name=\"description\"\r\n                                            style={{width: '100%', height: '150px'}}\r\n                                            value={description}\r\n                                            placeholder=\"Product Description\"\r\n                                            onChange={e => setDescription(e.target.value)}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <h6>Main Category</h6>\r\n                                        <div className=\"dropdown show\">\r\n                                            <select \r\n                                                name=\"mainCategory\" \r\n                                                className=\"product-dropdown\" \r\n                                                id=\"mainCategory\"\r\n                                                value={category}\r\n                                                onChange={e => setMainCategory(e.target.value)}\r\n                                                required\r\n                                            >\r\n                                                {categories.map(category => (\r\n                                                    <option key={category} value={category}>{category}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <h6>Sub Category</h6>\r\n                                        <div className=\"dropdown show\">\r\n                                            <select \r\n                                                name=\"subCategory\" \r\n                                                className=\"product-dropdown\" \r\n                                                id=\"subCategory\"\r\n                                                value={subcategory}\r\n                                                disabled={(category === \"\" || String(category).includes(\"Others\") ) ? true : false}\r\n                                                onChange={e => setSubCategory(e.target.value)}\r\n                                                required\r\n                                            >\r\n                                            {String(category).includes(\"Mechanical Engineering\") ? (\r\n                                                <Fragment>\r\n                                                    {me_subCategory.map(category => (\r\n                                                        <option key={category} value={category}>{category}</option>\r\n                                                    ))}\r\n                                                </Fragment>\r\n                                            ) : ((String(category).includes(\"DC Power Systems\") ? (\r\n                                                <Fragment>\r\n                                                    {dc_subCategory.map(category => (\r\n                                                        <option key={category} value={category}>{category}</option>\r\n                                                    ))}\r\n                                                </Fragment>) : (\r\n                                                    (String(category).includes(\"Electrical Engineering Equipment\")) ? (\r\n                                                        <Fragment>\r\n                                                            {eee_subCategory.map(category => (\r\n                                                                <option key={category} value={category}>{category}</option>\r\n                                                            ))}\r\n                                                        </Fragment>\r\n                                                    ) : (\r\n                                                        (String(category).includes(\"Test Equipment\")) ? (\r\n                                                            <Fragment>\r\n                                                                {te_subCategory.map(category => (\r\n                                                                    <option key={category} value={category}>{category}</option>\r\n                                                                ))}\r\n                                                            </Fragment>) : (\r\n                                                                <Fragment>\r\n                                                                    <option key=\"Others\" value=\"Others\">Others</option>\r\n                                                                </Fragment>)\r\n                                                    )\r\n                                                )))\r\n                                            }\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <h6>Product Image</h6>\r\n                                        {isChecked ? (\r\n                                            <input \r\n                                                type=\"file\" \r\n                                                name=\"image\" \r\n                                                onChange={handleImageUpload}\r\n                                                required\r\n                                            />\r\n                                        ) : (\r\n                                            <OverlayTrigger overlay={<Tooltip id=\"tooltip-disabled\">Image upload disabled</Tooltip>}>\r\n                                                <span className=\"d-inline-block\">\r\n                                                    <input \r\n                                                        type=\"file\" \r\n                                                        name=\"image\" \r\n                                                        onChange={handleImageUpload}\r\n                                                        disabled = {true}\r\n                                                        style={{pointerEvents: 'none' }}\r\n                                                    />\r\n                                                </span>\r\n                                            </OverlayTrigger>\r\n                                        )}\r\n                                        <br/>\r\n                                        <input \r\n                                            type='checkbox'\r\n                                            id='useDefaultImage'\r\n                                            name='useDefaultImage'\r\n                                            value={useDefaultImage}\r\n                                            onChange={onChange}\r\n                                            onClick={checkboxCheck}\r\n                                        />\r\n                                            &nbsp;or Use default image\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <img \r\n                                            src={imagePreview} \r\n                                            alt={`Preview of ${name}`}\r\n                                            className='mt-3 mr-2' \r\n                                            width='55' \r\n                                            height='52'\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <button \r\n                                            className=\"btn btn-primary btn-block\" \r\n                                            type=\"submit\"\r\n                                            disabled={loading ? true : false}\r\n                                        >\r\n                                            Create\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <a\r\n                                            className=\"btn btn-secondary btn-block mt-2\"\r\n                                            onClick={handleShow}\r\n                                            style={{color: 'white'}}\r\n                                        >\r\n                                            Discard\r\n                                        </a>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NewProduct\r\n","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateInquiry.js",["306"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Modal, Button } from 'react-bootstrap'\r\nimport { updateInquiry, deleteInquiry, getInquiryDetails, clearErrors } from '../../actions/inquiryActions'\r\nimport { logout } from './../../actions/userActions'\r\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport '../../css/sidebar.css'\r\nimport '../../css/sidebar-1.css'\r\nimport '../../css/bootstrap.min.css'\r\n\r\nconst UpdateInquiry = ({match, history}) => {\r\n    const dispatch = useDispatch()\r\n    const alert = useAlert()\r\n\r\n    const { loading, error, inquiry } = useSelector(state => state.inquiryDetails)\r\n    const {error: updateError, isUpdated } = useSelector(state => state.inquiry)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n    const [id, setId] = useState('')\r\n    const [inTrash, setInTrash] = useState('')\r\n    const [inArchives, setInArchives] = useState('')\r\n    const [concernType, setConcernType] = useState('')\r\n    const [show, setShow] = useState(false)\r\n    const [emptyShow, setEmptyShow] = useState(false)\r\n\r\n    const inquiryId = match.params.id\r\n\r\n    const handleToggle = () => setToggled(!isToggled)\r\n    const handleClose = () => setShow(false)\r\n    const handleShow = () => setShow(true)\r\n    const handleEmptyClose = () => setEmptyShow(false)\r\n    const handleEmptyShow = () => setEmptyShow(true)\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    const updateInquiryHandler = (id, inquiryStatus, concernType, inTrash, inArchives) => { \r\n        const formData = new FormData()\r\n        formData.set('inquiryStatus', inquiryStatus)\r\n\r\n        if(inquiryStatus === 'Unresolved') {\r\n            dispatch(updateInquiry(id, formData))\r\n            alert.success('Message has been restored.')\r\n            history.push('/admin/archives')\r\n        } else if (inquiryStatus === 'Resolved'){\r\n            dispatch(updateInquiry(id, formData))\r\n\r\n            if(inTrash) {\r\n                alert.success('Message has been restored.')\r\n                history.push('/admin/trash')\r\n\r\n            } else if(inArchives) {\r\n                alert.success('Message has been restored.')\r\n                history.push('/admin/archives')\r\n\r\n            } else {\r\n                alert.success('Message has been moved to archives.')\r\n\r\n                if(concernType === 'Inquiry'){\r\n                    history.push('/admin/inquiries')\r\n                } else if(concernType === 'Appointment'){\r\n                    history.push('/admin/appointments')\r\n                } else {\r\n                    history.push('/admin/others')\r\n                }\r\n            }\r\n        } else {\r\n            dispatch(updateInquiry(id, formData))\r\n            alert.success('Message has been moved to Trash.')\r\n\r\n            if(concernType === 'Inquiry'){\r\n                history.push('/admin/inquiries')\r\n            } else if(concernType === 'Appointment'){\r\n                history.push('/admin/appointments')\r\n            } else {\r\n                history.push('/admin/others')\r\n            }\r\n            handleEmptyClose()\r\n        }\r\n    }\r\n\r\n    const deleteInquiryHandler = (id) => {\r\n        handleEmptyShow()\r\n        dispatch(deleteInquiry(id))\r\n    }\r\n    \r\n    useEffect(() => { \r\n        if(inquiry && inquiry._id !== inquiryId) {\r\n            dispatch(getInquiryDetails(inquiryId))\r\n        }\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(updateError){\r\n            alert.error(updateError)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(isUpdated) {\r\n            dispatch({\r\n                type: UPDATE_INQUIRY_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, error, alert, isUpdated, updateError, inquiry, inquiryId, history])\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'View Message'}/>\r\n            <div id=\"wrapper\" className={isToggled ? null : \"toggled\"}>\r\n                <div id=\"sidebar-wrapper\" >\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <hr/>\r\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\r\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\r\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )\r\n                        }\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                    <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\r\n                        <i className=\"fa fa-bars\"   ></i>\r\n                    </a>\r\n                    <Modal show={show} onHide={handleClose}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Move to Trash?</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>Are you sure you want to move this message to Trash?</Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                            </Button>\r\n                            <Button variant=\"primary\" onClick={() => updateInquiryHandler(id, \"Deleted\", concernType, inTrash, inArchives)}>\r\n                            Yes, I'm sure\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                    <Modal show={emptyShow} onHide={handleEmptyClose}>\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title>Delete Message?</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>Are you sure you want to delete this? This cannot be undone.</Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button variant=\"secondary\" onClick={handleEmptyClose}>\r\n                                    Close\r\n                                </Button>\r\n                                <Button variant=\"primary\" onClick={() => deleteInquiryHandler(id)}>\r\n                                    Yes, I'm sure\r\n                                </Button>\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n                    <Fragment>\r\n                        {loading ? <Loader/> : (\r\n                            <section className=\"process-section\" style={{fontSize: '100%', fontWeight: '400', lineHeight: '1.3', color: '#000', width: '100%', paddingTop: '11px'}}>\r\n                                <table style={{width: '85%', minWidth: '150px', margin: '20px auto', backgroundColor: '#fff', padding: '30px', WebkitBorderRadius: '3px', MozBorderRadius: '3px', borderRadius: '3px', WebkitBoxShadow: '0 1px 3px rgba(0,0,0.12), 0 1px 2px rgba(0,0,0,.24)', MozBoxShadow: '0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24)', boxShadow: '0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24)', borderTop: 'solid 10px #1b1449'}}>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td style={{height: '20px'}}></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td style={{width: '100%', padding: '15px', verticalAlign: 'top'}}>\r\n                                                <p style={{margin: '0 0 10[x 0', padding: '0', fontSize: '14px'}}><span style={{display: 'block', fontWeight: 'bold', fontSize: '13px'}}>Concern Type</span> {inquiry.concernType}</p>\r\n                                                <p style={{margin: '0 0 10[x 0', padding: '0', fontSize: '14px'}}><span style={{display: 'block', fontWeight: 'bold', fontSize: '13px'}}>Status</span> {inquiry.inquiryStatus}</p>\r\n                                                <br/>\r\n                                                <p style={{margin: '0 0 10[x 0', padding: '0', fontSize: '14px'}}><span style={{display: 'block', fontWeight: 'bold', fontSize: '13px'}}>Name</span> {inquiry.firstName} {inquiry.lastName}</p>\r\n                                                <p style={{margin: '0 0 10[x 0', padding: '0', fontSize: '14px'}}><span style={{display: 'block', fontWeight: 'bold', fontSize: '13px'}}>Company and Position</span> {inquiry.companyName}, {inquiry.position}</p>\r\n                                                <p style={{margin: '0 0 10[x 0', padding: '0', fontSize: '14px'}}><span style={{display: 'block', fontWeight: 'bold', fontSize: '13px'}}>Email</span> {inquiry.customerEmail}</p>\r\n                                                <p style={{margin: '0 0 10[x 0', padding: '0', fontSize: '14px'}}><span style={{display: 'block', fontWeight: 'bold', fontSize: '13px'}}>Phone</span> {inquiry.contactNumber}</p>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td colspan=\"2\" style={{padding: '0 15px'}}>\r\n                                                <h3 style={{margin: '0 0 10px 0', padding: '0'}}>Message Content</h3>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td colspan=\"2\" style={{padding:'15px'}}>\r\n                                                <p style={{fontSize: '15px', margin: '0', padding: '10px 40px', textAlign: 'justify'}}>\r\n                                                {inquiry.customerMessage}\r\n                                                </p>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr style={{ width: '100%'}}>\r\n                                            {(inquiry.inquiryStatus === 'Resolved' ) ? (\r\n                                                <Fragment>\r\n                                                    <div style={{margin: '20px auto', display: 'flex', alignContent: 'center', justifyContent: 'center'}}>\r\n                                                        <button \r\n                                                            className=\"btn btn-primary update-status-button align-center ml-2 mr-2\" \r\n                                                            type=\"button\"\r\n                                                            onClick={() => updateInquiryHandler(inquiry._id, 'Unresolved', inquiry.concernType, false, true)}\r\n                                                        >\r\n                                                            Restore message back to {inquiry.concernType}\r\n                                                        </button>\r\n                                                        <button \r\n                                                            className=\"btn btn-secondary update-status-button align-center ml-2 mr-2\" \r\n                                                            type=\"button\"\r\n                                                            onClick={() => \r\n                                                            {\r\n                                                                handleShow()\r\n                                                                setId(inquiry._id)\r\n                                                                setInTrash(false)\r\n                                                                setInArchives(true)\r\n                                                                setConcernType(inquiry.concernType)\r\n                                                            }}\r\n                                                        >\r\n                                                            Delete message\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </Fragment>\r\n                                            ) : ((inquiry.inquiryStatus === 'Deleted') ? (\r\n                                                <Fragment>\r\n                                                    <div style={{margin: '20px auto', display: 'flex', alignContent: 'center', justifyContent: 'center'}}>\r\n                                                        <button \r\n                                                            className=\"btn btn-primary update-status-button align-center ml-2 mr-2\" \r\n                                                            type=\"button\"\r\n                                                            onClick={() => updateInquiryHandler(inquiry._id, 'Resolved', inquiry.concernType, true, false)}\r\n                                                        >\r\n                                                            Restore message back to Archives\r\n                                                        </button>\r\n                                                        <button \r\n                                                            className=\"btn btn-secondary update-status-button align-center ml-2 mr-2\" \r\n                                                            type=\"button\"\r\n                                                            onClick={() => {\r\n                                                                handleEmptyShow()\r\n                                                                setId(inquiry._id)\r\n                                                            }}>\r\n                                                            Delete message permanently\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </Fragment>\r\n                                            ) : (\r\n                                                <Fragment>\r\n                                                    <div style={{margin: '20px auto', display: 'flex', alignContent: 'center', justifyContent: 'center'}}>\r\n                                                        <button \r\n                                                            className=\"btn btn-primary update-status-button align-center ml-2 mr-2\" \r\n                                                            type=\"button\"\r\n                                                            onClick={() => updateInquiryHandler(inquiry._id, 'Resolved', inquiry.concernType, false, false)}\r\n                                                        >\r\n                                                            Resolve message\r\n                                                        </button>\r\n                                                        <button \r\n                                                            className=\"btn btn-secondary update-status-button align-center ml-2 mr-2\" \r\n                                                            type=\"button\"\r\n                                                            onClick={() => \r\n                                                            {\r\n                                                                handleShow()\r\n                                                                setId(inquiry._id)\r\n                                                                setInTrash(false)\r\n                                                                setInArchives(false)\r\n                                                                setConcernType(inquiry.concernType)\r\n                                                            }}\r\n                                                        >\r\n                                                            Delete message\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </Fragment>\r\n                                                )\r\n                                            )}\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </section>\r\n                        )}\r\n                    </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateInquiry\r\n","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateProduct.js",["307","308"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Modal, Button } from 'react-bootstrap'\r\nimport { updateProduct, getProductDetails, clearErrors } from '../../actions/productActions'\r\nimport { logout } from './../../actions/userActions'\r\nimport { UPDATE_PRODUCT_RESET, UPDATE_PRODUCT_REQUEST } from '../../constants/productConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport imageCompression from 'browser-image-compression'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport '../../css/sidebar.css'\r\nimport '../../css/sidebar-1.css'\r\nimport '../../css/bootstrap.min.css'\r\n\r\nconst UpdateProduct = ({match, history}) => {\r\n    const dispatch = useDispatch()\r\n    const alert = useAlert()\r\n\r\n    const { loading: productLoading, error, product } = useSelector(state => state.productDetails)\r\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.product)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n    const [show, setShow] = useState(false)\r\n    const [name, setName] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [image, setImage] = useState('')\r\n    const [category, setMainCategory] = useState('')\r\n    const [subcategory, setSubCategory] = useState('')\r\n    const [imagePreview, setImagePreview] = useState('')\r\n\r\n    const categories = ['', 'Mechanical Engineering', 'DC Power Systems', 'Electrical Engineering Equipment', 'Test Equipment', 'Others']\r\n    const me_subCategory = ['', 'Pumps and System', 'Fire Protection Systems', 'Others']\r\n    const dc_subCategory = ['', 'Uninterrupted Power System', 'Battery Monitoring System', 'Batteries', 'Others']\r\n    const eee_subCategory = ['', 'Transformers', 'Others']\r\n    const te_subCategory = ['', 'Partial Discharge Detection', 'Battery Discharge Capacity Tester', 'Battery Impedance or Internal Resistance', 'Load Banks', 'Battery Test Monitor', 'Portable Direct Ground Fault Finder', 'Earth Tester or Clamp Type', 'Others']\r\n\r\n    const productId = match.params.id\r\n\r\n    const handleToggle = () => setToggled(!isToggled)\r\n    const handleClose = () => setShow(false)\r\n    const handleShow = () => setShow(true)\r\n    \r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault()\r\n\r\n        const formData = new FormData()\r\n        formData.set('name', name)\r\n        formData.set('description', description)\r\n        formData.set('category', category)\r\n        if(String(category).includes(\"Others\")) {\r\n            formData.set('subcategory', \"Others\")\r\n        } else {\r\n            formData.set('subcategory', subcategory)\r\n        }\r\n        formData.set('image', image)\r\n\r\n        dispatch(updateProduct(product._id, formData))\r\n    }\r\n\r\n    const handleImageUpload = e => {\r\n        var imageFile = e.target.files[0]\r\n        \r\n        if(!imageFile.type.match(/image.*/)){\r\n            dispatch({\r\n                type: UPDATE_PRODUCT_REQUEST\r\n            })\r\n\r\n            setImagePreview(product.image.url)\r\n            return alert.error('Please upload an image file')\r\n        }\r\n\r\n        var options = {\r\n          maxSizeMB: 0.6,\r\n          maxWidthOrHeight: 1920,\r\n          useWebWorker: true\r\n        }\r\n\r\n        imageCompression(imageFile, options)\r\n            .then(function (compressedFile) {\r\n                addImage(compressedFile) // write your own logic\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error.message)\r\n            })\r\n\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_REQUEST\r\n        })\r\n    }\r\n\r\n    const addImage = file => {\r\n        const reader = new FileReader()\r\n\r\n        reader.onload = () => {\r\n            if(reader.readyState === 2){\r\n                setImagePreview(reader.result)\r\n                setImage(reader.result)\r\n            }\r\n        }\r\n\r\n        reader.readAsDataURL(file)\r\n        \r\n        dispatch({\r\n            type: UPDATE_PRODUCT_RESET\r\n        })\r\n    }\r\n\r\n    const discardChanges = () => {\r\n        handleClose()\r\n        history.push('/admin/products')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(product && product._id !== productId) {\r\n            dispatch(getProductDetails(productId))\r\n        }\r\n        else { \r\n            setName(product.name)\r\n            setDescription(product.description)\r\n            setMainCategory(product.category)\r\n            setSubCategory(product.subcategory)\r\n            setImagePreview(product.image.url)\r\n        }\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n            dispatch({\r\n                type: UPDATE_PRODUCT_RESET\r\n            })\r\n        }\r\n\r\n        if(updateError){\r\n            alert.error(updateError)\r\n            dispatch(clearErrors())\r\n            dispatch({\r\n                type: UPDATE_PRODUCT_RESET\r\n            })\r\n        }\r\n\r\n        if(isUpdated) {\r\n            history.push('/admin/products')\r\n            alert.success('Product updated successfully.')\r\n\r\n            dispatch({\r\n                type: UPDATE_PRODUCT_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, error, alert, isUpdated, updateError, product, productId, history])\r\n    \r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Update Product'}/>\r\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\r\n            <div id=\"sidebar-wrapper\" >\r\n                <ul className=\"sidebar-nav\">\r\n                    <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                    <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                    <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                    <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                    {user && user.role !== 'admin' ? (\r\n                            <Fragment>\r\n                                <hr/>\r\n                                    <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\r\n                                    <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\r\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\r\n                            </Fragment>\r\n                        ) : (\r\n                            <Fragment>\r\n                                <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                <hr/>\r\n                                <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\r\n                                <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                <hr/>\r\n                                <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\r\n                            <i className=\"fa fa-bars\"   ></i>\r\n                        </a>\r\n                        <Modal show={show} onHide={handleClose}>\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title>Discard Changes?</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>Are you sure you want to discard your changes?</Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button variant=\"secondary\" onClick={handleClose}>\r\n                                    Close\r\n                                </Button>\r\n                                <Button variant=\"primary\" onClick={discardChanges}>\r\n                                    Yes, I'm sure\r\n                                </Button>\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n                        {productLoading ? <Loader/> : (\r\n                            <Fragment>\r\n                                <div className=\"login-clean\">\r\n                                    <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                                        <h2 className=\"sr-only\">Update Product</h2>\r\n                                        <div className=\"div-forgot-password\">\r\n                                            <h3 className=\"forgot-password-heading\">Update Product</h3>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <h6>Name</h6>\r\n                                            <input \r\n                                                type=\"text\" \r\n                                                className=\"form-control\" \r\n                                                name=\"product_name\"\r\n                                                value={name}\r\n                                                placeholder=\"Product Name\"\r\n                                                style={{width: '100%'}}\r\n                                                onChange={e => setName(e.target.value)}\r\n                                                required\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <h6>Description</h6>\r\n                                            <textarea\r\n                                                type=\"text\" \r\n                                                className=\"form-control\" \r\n                                                name=\"product_name\"\r\n                                                value={description}\r\n                                                placeholder=\"Product Description\"\r\n                                                style={{width: '100%', height: '150px'}}\r\n                                                onChange={e => setDescription(e.target.value)}\r\n                                                height='55px'\r\n                                                required\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                        <h6>Main Category</h6>\r\n                                        <div className=\"dropdown show\">\r\n                                            <select \r\n                                                name=\"mainCategory\" \r\n                                                className=\"product-dropdown\" \r\n                                                id=\"mainCategory\"\r\n                                                value={category}\r\n                                                onChange={e => setMainCategory(e.target.value)}\r\n                                                required\r\n                                            >\r\n                                                {categories.map(category => (\r\n                                                    <option key={category} value={category}>{category}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <h6>Sub Category</h6>\r\n                                        <div className=\"dropdown show\">\r\n                                            <select \r\n                                                name=\"subCategory\" \r\n                                                className=\"product-dropdown\" \r\n                                                id=\"subCategory\"\r\n                                                value={subcategory}\r\n                                                disabled={(category === \"\" || String(category).includes(\"Others\") ) ? true : false}\r\n                                                onChange={e => setSubCategory(e.target.value)}\r\n                                                required\r\n                                            >\r\n                                            \r\n                                            {String(category).includes(\"Mechanical Engineering\") ? (\r\n                                                <Fragment>\r\n                                                    {me_subCategory.map(category => (\r\n                                                        <option key={category} value={category}>{category}</option>\r\n                                                    ))}\r\n                                                </Fragment>\r\n                                            ) : ((String(category).includes(\"DC Power Systems\") ? (\r\n                                                <Fragment>\r\n                                                    {dc_subCategory.map(category => (\r\n                                                        <option key={category} value={category}>{category}</option>\r\n                                                    ))}\r\n                                                </Fragment>) : (\r\n                                                    (String(category).includes(\"Electrical Engineering Equipment\")) ? (\r\n                                                        <Fragment>\r\n                                                            {eee_subCategory.map(category => (\r\n                                                                <option key={category} value={category}>{category}</option>\r\n                                                            ))}\r\n                                                        </Fragment>\r\n                                                    ) : (\r\n                                                        (String(category).includes(\"Test Equipment\")) ? (\r\n                                                            <Fragment>\r\n                                                                {te_subCategory.map(category => (\r\n                                                                    <option key={category} value={category}>{category}</option>\r\n                                                                ))}\r\n                                                            </Fragment>) : (\r\n                                                                <Fragment>\r\n                                                                    <option key=\"Others\" value=\"Others\">Others</option>\r\n                                                                </Fragment>)\r\n                                                        )\r\n                                                    )))\r\n                                                }\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-group\"> \r\n                                            <h6>Product Image</h6>\r\n                                            <input \r\n                                                type=\"file\" \r\n                                                name=\"product_images\" \r\n                                                onChange={handleImageUpload}\r\n                                                required\r\n                                            />\r\n                                            <br/>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <img \r\n                                                src={imagePreview} \r\n                                                alt={`Preview of ${name}`}\r\n                                                className='mt-3 mr-2' \r\n                                                width='110' \r\n                                                height='104'\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                                <button \r\n                                                className=\"btn btn-primary btn-block\" \r\n                                                type=\"submit\"\r\n                                                disabled={loading ? true : false}\r\n                                            >\r\n                                                Update Product\r\n                                            </button>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <a\r\n                                                className=\"btn btn-secondary btn-block mt-2\"\r\n                                                onClick={handleShow}\r\n                                                style={{color: 'white'}}\r\n                                            >Discard</a>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </Fragment>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateProduct\r\n","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\superadmin\\ListSuperAdmins.js",["309","310","311"],"import React, { Fragment, useEffect , useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTableV5 } from 'mdbreact'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { OverlayTrigger, Tooltip, Modal, Button } from 'react-bootstrap'\r\nimport { getUsers, clearErrors } from '../../actions/userActions'\r\nimport { logout } from '../../actions/userActions'\r\nimport { UPDATE_USER_RESET } from '../../constants/userConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport MetaData from '../layout/MetaData'       \r\nimport Loader from '../layout/Loader'\r\nimport '../../css/sidebar.css'\r\nimport '../../css/sidebar-1.css'\r\nimport '../../css/bootstrap.min.css'\r\n\r\nconst ListSuperAdmins = ({history}) => {\r\n    const alert = useAlert()\r\n    const dispatch = useDispatch()\r\n\r\n    const { loading, error, users } = useSelector(state => state.users)\r\n    const { user } = useSelector(state => state.auth)\r\n    const { isUpdated } = useSelector(state => state.updateUser)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => setToggled(!isToggled)\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n    \r\n    const updateUser = (id) => {\r\n        history.replace(`/superadmin/user/${id}`)\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getUsers())\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(isUpdated){\r\n            alert.success('User has been updated successfully.')\r\n            history.push('/admin/users/superadmin')\r\n\r\n            dispatch({\r\n                type: UPDATE_USER_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, isUpdated, history])\r\n\r\n    const setSuperAdminData = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Name',\r\n                    field: 'name',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Contact Number',\r\n                    field: 'contactNumber',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Email',\r\n                    field: 'email',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                    sort: 'asc'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         users.forEach(superadmin => {\r\n            if(superadmin.role === 'superadmin') {\r\n                data.rows.push({\r\n                    name: superadmin.name,\r\n                    contactNumber: superadmin.contactNumber,\r\n                    email: superadmin.email,\r\n                    actions:   \r\n                    <Fragment>\r\n                        <div style={{display: 'flex'}}>\r\n                            <button\r\n                                className='btn btn-primary py-1 px-2 ml-2'\r\n                                onClick={\r\n                                    () => updateUser(superadmin._id)\r\n                                }\r\n                            >\r\n                                <i className='fa fa-pencil'></i>\r\n                            </button>\r\n                            <OverlayTrigger overlay={<Tooltip id=\"tooltip-disabled\">Cannot delete superadmin account. Demote to admin first.</Tooltip>}>\r\n                                <span className=\"d-inline-block\">\r\n                                    <button\r\n                                        className=\"btn btn-danger py-1 px-2 ml-2\"\r\n                                        disabled={true}\r\n                                        style={{ pointerEvents: 'none' }}\r\n                                    >\r\n                                        <i className='fa fa-trash'></i>\r\n                                    </button>\r\n                                </span>\r\n                            </OverlayTrigger>\r\n                        </div>\r\n                    </Fragment>\r\n                })\r\n            }\r\n        })\r\n\r\n        return data\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Superadmins'}/>\r\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\r\n            <div id=\"sidebar-wrapper\" >\r\n                <ul className=\"sidebar-nav\">\r\n                    <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                    <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                    <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                    <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                    {user && user.role !== 'admin' ? (\r\n                            <Fragment>\r\n                                <hr/>\r\n                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\r\n                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\r\n                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\r\n                            </Fragment>\r\n                        ) : (\r\n                            <Fragment>\r\n                                <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                <hr/>\r\n                                <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\r\n                                <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                <hr/>\r\n                                <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                            </Fragment>\r\n                        )}\r\n\r\n                    <hr/>\r\n                    <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                </ul>\r\n            </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\r\n                            <i className=\"fa fa-bars\"   ></i>\r\n                        </a>\r\n                        <Fragment>\r\n                        <div style={{padding: '30px'}}>\r\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Superadmins</h1>\r\n                            {loading? <Loader/> : (\r\n                                <MDBDataTableV5\r\n                                    data={setSuperAdminData()}\r\n                                    entries={5}\r\n                                    entriesOptions={[5, 10, 15, 20]}\r\n                                    searchTop\r\n                                    searchBottom={false}\r\n                                    scrollX\r\n                                    sortable={false}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListSuperAdmins\r\n","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\admin\\ListProducts.js",["312"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTableV5 } from 'mdbreact'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Modal, Button } from 'react-bootstrap'\r\nimport { getAdminProducts, deleteProduct, clearErrors } from '../../actions/productActions'\r\nimport { logout } from '../../actions/userActions'\r\nimport { DELETE_PRODUCT_RESET } from '../../constants/productConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport '../../css/sidebar.css'\r\nimport '../../css/sidebar-1.css'\r\nimport '../../css/bootstrap.min.css'\r\n\r\nconst ListProducts = ({history}) => {\r\n    const alert = useAlert()\r\n    const dispatch = useDispatch()\r\n\r\n    const { loading, error, products } = useSelector(state => state.products)\r\n    const { deleteError, isDeleted } = useSelector(state => state.product)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n    const [id, setId] = useState('')\r\n    const [show, setShow] = useState(false)\r\n\r\n    const handleToggle = () => setToggled(!isToggled)\r\n    const handleClose = () => setShow(false)\r\n    const handleShow = () => setShow(true)\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    const deleteProductHandler = (id) => {\r\n        dispatch(deleteProduct(id))\r\n        handleClose()\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getAdminProducts())\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(deleteError){\r\n            alert.error(deleteError)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(isDeleted){\r\n            alert.success('Product has been deleted successfully.')\r\n            history.push('/admin/products')\r\n\r\n            dispatch({\r\n                type: DELETE_PRODUCT_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, history, isDeleted, deleteError])\r\n\r\n    const setProducts = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Product Name',\r\n                    field: 'name',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Description',\r\n                    field: 'description',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Main Category',\r\n                    field: 'category',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Sub Category',\r\n                    field: 'subcategory',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         products.forEach(product => {\r\n             data.rows.push({\r\n                name: product.name,\r\n                description: product.description,\r\n                category: product.category,\r\n                subcategory: product.subcategory,\r\n                actions:\r\n                <Fragment>\r\n                    <div style={{display: 'flex'}}>\r\n                        <Link to={`/admin/product/${product._id}`} className='btn btn-primary py-1 px-2'>\r\n                            <i className='fa fa-pencil'></i>\r\n                        </Link>\r\n                        <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => {\r\n                            handleShow()\r\n                            setId(product._id)\r\n                        }}>\r\n                            <i className='fa fa-trash'></i>\r\n                        </button>\r\n                    </div>\r\n                </Fragment>\r\n             })\r\n         })\r\n         return data\r\n    }\r\n    \r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'All Products'}/>\r\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}>\r\n                <div id=\"sidebar-wrapper\" >\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <hr/>\r\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\r\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\r\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )\r\n                        }\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\r\n                            <i className=\"fa fa-bars\"></i>\r\n                        </a>\r\n                        <Fragment>\r\n                            <div style={{padding: '30px'}}>\r\n                                <div style={{display: 'flex'}}>\r\n                                    <div style={{marginRight: 'auto'}}>\r\n                                        <h1 className='mt-3 mb-3 ml-10 mr-10'>All Products</h1>\r\n                                    </div>\r\n                                    <div style={{marginLeft: 'auto', marginTop: '30px'}}>\r\n                                        <Link to='/admin/newProduct'>\r\n                                            <button className='btn btn-dark btn-sm text-capitalize mb-5'>\r\n                                                Add New Product\r\n                                            </button>\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n                                <Modal show={show} onHide={handleClose}>\r\n                                    <Modal.Header closeButton>\r\n                                        <Modal.Title>Delete Product?</Modal.Title>\r\n                                    </Modal.Header>\r\n                                    <Modal.Body>Are you sure you want to delete this product? This cannot be undone.</Modal.Body>\r\n                                    <Modal.Footer>\r\n                                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                                            Close\r\n                                        </Button>\r\n                                        <Button variant=\"primary\" onClick={() => deleteProductHandler(id)}>\r\n                                            Yes, I'm sure\r\n                                        </Button>\r\n                                    </Modal.Footer>\r\n                                </Modal>\r\n                                {loading ? <Loader/> : (\r\n                                    <MDBDataTableV5\r\n                                        data={setProducts()}\r\n                                        entries={5}\r\n                                        entriesOptions={[5, 10, 15, 20]}\r\n                                        searchTop\r\n                                        searchBottom={false}\r\n                                        scrollX\r\n                                        hover={true}\r\n                                        sortable={false}\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListProducts\r\n","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\superadmin\\Register.js",["313","314","315"],"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\superadmin\\ListAdmins.js",["316"],"import React, { Fragment, useEffect , useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTableV5 } from 'mdbreact'\r\nimport { useAlert } from 'react-alert'\r\nimport { Modal, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getUsers, deleteUser, clearErrors } from '../../actions/userActions'\r\nimport { logout } from '../../actions/userActions'\r\nimport { DELETE_USER_RESET, UPDATE_USER_RESET } from '../../constants/userConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport '../../css/sidebar.css'\r\nimport '../../css/sidebar-1.css'\r\nimport '../../css/bootstrap.min.css'\r\n\r\nconst ListAdmins = ({history}) => {\r\n    const alert = useAlert()\r\n    const dispatch = useDispatch()\r\n\r\n    const { loading, error, users } = useSelector(state => state.users)\r\n    const { user } = useSelector(state => state.auth)\r\n    const { deleteError, isUpdated, isDeleted } = useSelector(state => state.updateUser)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n    const [id, setId] = useState('')\r\n    const [show, setShow] = useState(false)\r\n\r\n    const handleClose = () => setShow(false)\r\n    const handleShow = () => setShow(true)\r\n    const handleToggle = () => setToggled(!isToggled)\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    const deleteUserHandler = (id) => {\r\n        dispatch(deleteUser(id))\r\n        handleClose()\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getUsers())\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n        \r\n        if(deleteError){\r\n            alert.error(deleteError)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(isUpdated){\r\n            alert.success('User has been updated.')\r\n            history.push('/admin/users/admin')\r\n\r\n            dispatch({\r\n                type: UPDATE_USER_RESET\r\n            })\r\n        }\r\n\r\n        if(isDeleted){\r\n            alert.success('User has been deleted.')\r\n            history.push('/admin/users/admin')\r\n\r\n            dispatch({\r\n                type: DELETE_USER_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, isDeleted, isUpdated, deleteError, history])\r\n\r\n    const setAdminData = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Name',\r\n                    field: 'name',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Contact Number',\r\n                    field: 'contactNumber',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Email',\r\n                    field: 'email',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                    sort: 'asc'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         users.forEach(user => {\r\n            if(user.role === 'admin'){\r\n                data.rows.push({\r\n                    name: user.name,\r\n                    contactNumber: user.contactNumber,\r\n                    email: user.email,\r\n                    actions:\r\n                    <Fragment>\r\n                        <div style={{display: 'flex'}}>\r\n                            <Link to={`/superadmin/user/${user._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                                <i className='fa fa-pencil'></i>\r\n                            </Link>\r\n                            <button className=\"btn btn-danger py-1 px-2 ml-2\"\r\n                                onClick={() => {\r\n                                    setId(user._id)\r\n                                    handleShow()\r\n                                }}\r\n                            >\r\n                                <i className='fa fa-trash'></i>\r\n                            </button>\r\n                        </div>\r\n                    </Fragment>\r\n                })\r\n            }\r\n         })\r\n\r\n         return data\r\n    }\r\n    \r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Admins'}/>\r\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\r\n                <div id=\"sidebar-wrapper\" >\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\r\n                                    <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\r\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )}\r\n\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\r\n                            <i className=\"fa fa-bars\"   ></i>\r\n                        </a>\r\n                        <Modal show={show} onHide={handleClose}>\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title>Delete user account?</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>Are you sure you want to delete this user? This cannot be undone.</Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button variant=\"secondary\" onClick={handleClose}>\r\n                                Close\r\n                                </Button>\r\n                                <Button variant=\"primary\" onClick={() => deleteUserHandler(id)}>\r\n                                Yes, I'm sure\r\n                                </Button>\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n                        <Fragment>\r\n                        <div style={{padding: '30px'}}>\r\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Admins</h1>\r\n                            {loading? <Loader/> : (\r\n                                <MDBDataTableV5\r\n                                    data={setAdminData()}\r\n                                    entries={5}\r\n                                    entriesOptions={[5, 10, 15, 20]}\r\n                                    searchTop\r\n                                    searchBottom={false}\r\n                                    scrollX\r\n                                    sortable={false}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListAdmins\r\n","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\superadmin\\UpdateUser.js",["317","318","319"],"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\superadmin\\UpdateUserSuccess.js",[],"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\reducers\\dashboardReducers.js",[],"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\reducers\\inquiryReducers.js",[],"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\reducers\\websiteReducers.js",[],"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\Home.js",["320","321","322","323","324","325","326","327"],"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\layout\\Header.js",["328"],"import React, { Fragment, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useAlert } from 'react-alert'\r\nimport { logout } from './../../actions/userActions'\r\nimport {Navbar, Nav, Dropdown } from 'react-bootstrap'\r\nimport '../../css/bootstrap.min.css'\r\nimport '../../css/styles.css'\r\n\r\nconst Header = () => {\r\n    const alert = useAlert()\r\n    const dispatch = useDispatch()\r\n\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n        alert.success('Logged out successfully')\r\n    }\r\n    \r\n    let userAvatar = \"\"\r\n    let userName = \"\"\r\n\r\n    if(user && user.avatar) {\r\n        userAvatar = user.avatar.url\r\n    } else {\r\n        userAvatar = \"\"\r\n    }\r\n\r\n    if (user && user.name) {\r\n        userName = user.name\r\n    } else {\r\n        userName = ''\r\n    }\r\n    \r\n    function getFirstName() {\r\n        let x = userName.split(' ')\r\n        let firstName = x[0]\r\n        \r\n        return firstName\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\" fixed=\"top\">\r\n                <Navbar.Brand>\r\n                    <Link to='/'>\r\n                        <img className=\"nav-link nav-logo\" alt=\"Agile Technodynamics, Inc.\" src=\"https://res.cloudinary.com/agiletechnodynamicsinc/image/upload/v1615205387/websiteImages/agile-header-logo_tan5lw.png\"/>\r\n                    </Link>\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"mr-auto justify-space-between flex-grow-1\">\r\n                        <Nav.Link  className=\"header-link\" style={{fontWeight: 'bold'}}>\r\n                            <Link to='/'>Home</Link>\r\n                        </Nav.Link>\r\n                        <Nav.Link  className=\"header-link\" style={{fontWeight: 'bold'}}>\r\n                            <Link to='/about-us'>About Us</Link>\r\n                        </Nav.Link>\r\n                        <Nav.Link  className=\"header-link\" style={{fontWeight: 'bold'}}>\r\n                            <Link to=\"/products\">Products</Link>\r\n                        </Nav.Link>\r\n                        <Nav.Link  className=\"header-link\" style={{fontWeight: 'bold'}}>\r\n                            <Link to=\"/our-services\">Services</Link>\r\n                        </Nav.Link>\r\n                        <Nav.Link  className=\"header-link\" style={{fontWeight: 'bold'}}>\r\n                            <Link to=\"/contact-us\">Contact Us</Link>\r\n                        </Nav.Link>\r\n                    </Nav>\r\n                    {user ? (\r\n                        <Nav inline>\r\n                            <Dropdown className=\"user-dropdown\">\r\n                                <Dropdown.Toggle\r\n                                    variant=\"transparent\"\r\n                                    id=\"dropdown-basic\"\r\n                                >\r\n                                    <img \r\n                                        class='mr-2 rounded-circle'\r\n                                        src={userAvatar}\r\n                                        alt=\"Avatar\"\r\n                                        width='30' \r\n                                        height='32'\r\n                                    /> {user && getFirstName()}\r\n                                </Dropdown.Toggle>\r\n\r\n                                <Dropdown.Menu>\r\n                                    <Dropdown.Item>\r\n                                        <Link to='/admin/dashboard'>Dashboard</Link>\r\n                                    </Dropdown.Item>\r\n                                    <Dropdown.Item className=\"text-danger\"\r\n                                        onClick={() => logoutHandler()}\r\n                                    >Log Out</Dropdown.Item>\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        </Nav>\r\n                    ) : <Nav></Nav>}\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Header","C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\About.js",[],"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\actions\\websiteActions.js",[],"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\layout\\MetaData.js",[],"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\layout\\Loader.js",[],"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\constants\\websiteConstants.js",[],"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\constants\\dashboardConstants.js",[],"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\constants\\inquiryConstants.js",[],"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\actions\\inquiryActions.js",[],"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\Products.js",["329","330"],"C:\\Users\\bonua\\Desktop\\agile-technodynamics\\frontend\\src\\components\\ProductDetails.js",[],{"ruleId":"331","severity":1,"message":"332","line":12,"column":6,"nodeType":"333","endLine":12,"endColumn":8,"suggestions":"334"},{"ruleId":"335","severity":1,"message":"336","line":79,"column":29,"nodeType":"337","endLine":82,"endColumn":30},{"ruleId":"335","severity":1,"message":"336","line":87,"column":25,"nodeType":"337","endLine":91,"endColumn":26},{"ruleId":"335","severity":1,"message":"336","line":125,"column":37,"nodeType":"337","endLine":128,"endColumn":38},{"ruleId":"335","severity":1,"message":"336","line":101,"column":37,"nodeType":"337","endLine":104,"endColumn":38},{"ruleId":"335","severity":1,"message":"336","line":129,"column":37,"nodeType":"337","endLine":132,"endColumn":38},{"ruleId":"335","severity":1,"message":"336","line":73,"column":37,"nodeType":"337","endLine":73,"endColumn":119},{"ruleId":"338","replacedBy":"339"},{"ruleId":"340","replacedBy":"341"},{"ruleId":"335","severity":1,"message":"336","line":176,"column":25,"nodeType":"337","endLine":176,"endColumn":107},{"ruleId":"335","severity":1,"message":"336","line":126,"column":25,"nodeType":"337","endLine":126,"endColumn":107},{"ruleId":"335","severity":1,"message":"336","line":170,"column":49,"nodeType":"337","endLine":173,"endColumn":50},{"ruleId":"335","severity":1,"message":"336","line":197,"column":49,"nodeType":"337","endLine":200,"endColumn":50},{"ruleId":"335","severity":1,"message":"336","line":217,"column":37,"nodeType":"337","endLine":221,"endColumn":38},{"ruleId":"335","severity":1,"message":"336","line":131,"column":25,"nodeType":"337","endLine":131,"endColumn":109},{"ruleId":"342","severity":1,"message":"343","line":88,"column":25,"nodeType":"337","endLine":93,"endColumn":27},{"ruleId":"335","severity":1,"message":"336","line":146,"column":25,"nodeType":"337","endLine":146,"endColumn":109},{"ruleId":"331","severity":1,"message":"344","line":42,"column":8,"nodeType":"333","endLine":42,"endColumn":18,"suggestions":"345"},{"ruleId":"335","severity":1,"message":"336","line":84,"column":37,"nodeType":"337","endLine":84,"endColumn":119},{"ruleId":"335","severity":1,"message":"336","line":124,"column":25,"nodeType":"337","endLine":124,"endColumn":107},{"ruleId":"335","severity":1,"message":"336","line":130,"column":29,"nodeType":"337","endLine":130,"endColumn":112},{"ruleId":"335","severity":1,"message":"336","line":192,"column":49,"nodeType":"337","endLine":196,"endColumn":50},{"ruleId":"335","severity":1,"message":"336","line":148,"column":25,"nodeType":"337","endLine":148,"endColumn":109},{"ruleId":"335","severity":1,"message":"336","line":186,"column":25,"nodeType":"337","endLine":186,"endColumn":108},{"ruleId":"342","severity":1,"message":"343","line":243,"column":49,"nodeType":"337","endLine":248,"endColumn":51},{"ruleId":"335","severity":1,"message":"336","line":284,"column":45,"nodeType":"337","endLine":288,"endColumn":46},{"ruleId":"346","severity":1,"message":"347","line":2,"column":16,"nodeType":"348","messageId":"349","endLine":2,"endColumn":24},{"ruleId":"350","severity":1,"message":"351","line":20,"column":35,"nodeType":"337","endLine":20,"endColumn":99},{"ruleId":"335","severity":1,"message":"336","line":148,"column":21,"nodeType":"337","endLine":148,"endColumn":104},{"ruleId":"350","severity":1,"message":"351","line":247,"column":49,"nodeType":"337","endLine":247,"endColumn":135},{"ruleId":"335","severity":1,"message":"336","line":291,"column":45,"nodeType":"337","endLine":295,"endColumn":46},{"ruleId":"335","severity":1,"message":"336","line":138,"column":29,"nodeType":"337","endLine":138,"endColumn":111},{"ruleId":"335","severity":1,"message":"336","line":252,"column":49,"nodeType":"337","endLine":256,"endColumn":50},{"ruleId":"335","severity":1,"message":"336","line":166,"column":25,"nodeType":"337","endLine":166,"endColumn":109},{"ruleId":"335","severity":1,"message":"336","line":167,"column":25,"nodeType":"337","endLine":167,"endColumn":109},{"ruleId":"335","severity":1,"message":"336","line":166,"column":25,"nodeType":"337","endLine":166,"endColumn":109},{"ruleId":"335","severity":1,"message":"336","line":219,"column":25,"nodeType":"337","endLine":219,"endColumn":109},{"ruleId":"335","severity":1,"message":"336","line":175,"column":25,"nodeType":"337","endLine":175,"endColumn":109},{"ruleId":"335","severity":1,"message":"336","line":193,"column":29,"nodeType":"337","endLine":193,"endColumn":111},{"ruleId":"335","severity":1,"message":"336","line":358,"column":41,"nodeType":"337","endLine":362,"endColumn":42},{"ruleId":"335","severity":1,"message":"336","line":157,"column":21,"nodeType":"337","endLine":157,"endColumn":105},{"ruleId":"335","severity":1,"message":"336","line":199,"column":25,"nodeType":"337","endLine":199,"endColumn":107},{"ruleId":"335","severity":1,"message":"336","line":344,"column":45,"nodeType":"337","endLine":348,"endColumn":46},{"ruleId":"346","severity":1,"message":"352","line":6,"column":35,"nodeType":"348","messageId":"349","endLine":6,"endColumn":40},{"ruleId":"346","severity":1,"message":"353","line":6,"column":42,"nodeType":"348","messageId":"349","endLine":6,"endColumn":48},{"ruleId":"335","severity":1,"message":"336","line":161,"column":25,"nodeType":"337","endLine":161,"endColumn":109},{"ruleId":"335","severity":1,"message":"336","line":162,"column":25,"nodeType":"337","endLine":162,"endColumn":109},{"ruleId":"335","severity":1,"message":"336","line":218,"column":25,"nodeType":"337","endLine":218,"endColumn":107},{"ruleId":"335","severity":1,"message":"336","line":385,"column":73,"nodeType":"337","endLine":388,"endColumn":74},{"ruleId":"335","severity":1,"message":"336","line":418,"column":73,"nodeType":"337","endLine":421,"endColumn":74},{"ruleId":"335","severity":1,"message":"336","line":171,"column":25,"nodeType":"337","endLine":171,"endColumn":109},{"ruleId":"331","severity":1,"message":"354","line":124,"column":8,"nodeType":"333","endLine":124,"endColumn":79,"suggestions":"355"},{"ruleId":"335","severity":1,"message":"336","line":146,"column":25,"nodeType":"337","endLine":146,"endColumn":108},{"ruleId":"335","severity":1,"message":"336","line":238,"column":37,"nodeType":"337","endLine":242,"endColumn":38},{"ruleId":"356","severity":1,"message":"357","line":48,"column":140,"nodeType":"358","messageId":"359","endLine":48,"endColumn":141},{"ruleId":"356","severity":1,"message":"357","line":48,"column":161,"nodeType":"358","messageId":"359","endLine":48,"endColumn":162},{"ruleId":"356","severity":1,"message":"357","line":69,"column":102,"nodeType":"358","messageId":"359","endLine":69,"endColumn":103},{"ruleId":"356","severity":1,"message":"357","line":69,"column":124,"nodeType":"358","messageId":"359","endLine":69,"endColumn":125},{"ruleId":"356","severity":1,"message":"357","line":72,"column":102,"nodeType":"358","messageId":"359","endLine":72,"endColumn":103},{"ruleId":"356","severity":1,"message":"357","line":72,"column":125,"nodeType":"358","messageId":"359","endLine":72,"endColumn":126},{"ruleId":"356","severity":1,"message":"357","line":78,"column":125,"nodeType":"358","messageId":"359","endLine":78,"endColumn":126},{"ruleId":"356","severity":1,"message":"357","line":78,"column":149,"nodeType":"358","messageId":"359","endLine":78,"endColumn":150},{"ruleId":"346","severity":1,"message":"360","line":1,"column":27,"nodeType":"348","messageId":"349","endLine":1,"endColumn":35},{"ruleId":"335","severity":1,"message":"336","line":78,"column":37,"nodeType":"337","endLine":84,"endColumn":38},{"ruleId":"342","severity":1,"message":"343","line":241,"column":41,"nodeType":"337","endLine":241,"endColumn":122},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["361"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["362"],"no-negated-in-lhs",["363"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'user.role'. Either include it or remove the dependency array.",["364"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'Modal' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'initialRole' and 'role'. Either include them or remove the dependency array.",["365"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'useState' is defined but never used.",{"desc":"366","fix":"367"},"no-global-assign","no-unsafe-negation",{"desc":"368","fix":"369"},{"desc":"370","fix":"371"},"Update the dependencies array to be: [history]",{"range":"372","text":"373"},"Update the dependencies array to be: [dispatch, user.role]",{"range":"374","text":"375"},"Update the dependencies array to be: [dispatch, error, alert, isUpdated, updateError, user, userId, history, initialRole, role]",{"range":"376","text":"377"},[306,308],"[history]",[1449,1459],"[dispatch, user.role]",[3984,4055],"[dispatch, error, alert, isUpdated, updateError, user, userId, history, initialRole, role]"]