[{"/Users/abby/Desktop/agile-technodynamics/frontend/src/index.js":"1","/Users/abby/Desktop/agile-technodynamics/frontend/src/store.js":"2","/Users/abby/Desktop/agile-technodynamics/frontend/src/App.js":"3","/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/productReducers.js":"4","/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/userReducers.js":"5","/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/inquiryReducers.js":"6","/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/websiteReducers.js":"7","/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/dashboardReducers.js":"8","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Products.js":"9","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductsOthers.js":"10","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductsDC.js":"11","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductsEEE.js":"12","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductsME.js":"13","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductsTE.js":"14","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/About.js":"15","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Services.js":"16","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Contact.js":"17","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ConfirmationPage.js":"18","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/EmailSent.js":"19","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/Footer.js":"20","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/Loader.js":"21","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateHome.js":"22","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateAbout.js":"23","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateFooter.js":"24","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/Profile.js":"25","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateProfile.js":"26","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdatePassword.js":"27","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListAppointments.js":"28","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListInquiries.js":"29","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListOthers.js":"30","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListArchives.js":"31","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListTrash.js":"32","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListAbout.js":"33","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListHome.js":"34","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListFooter.js":"35","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListServices.js":"36","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ProductsList.js":"37","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateInquiry.js":"38","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateProduct.js":"39","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListSuperAdmins.js":"40","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateServices.js":"41","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListAdmins.js":"42","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/product/ProductDetails.js":"43","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateUser.js":"44","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/user/Register.js":"45","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/user/PasswordSuccess.js":"46","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/user/ForgotPassword.js":"47","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/user/NewPassword.js":"48","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/route/ProtectedRoute.js":"49","/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/userActions.js":"50","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/NewProduct.js":"51","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Home.js":"52","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/Dashboard.js":"53","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/Header.js":"54","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/user/Login.js":"55","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/MetaData.js":"56","/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/productActions.js":"57","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/product/ProductDisplay.js":"58","/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/productConstants.js":"59","/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/userConstants.js":"60","/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/inquiryConstants.js":"61","/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/websiteConstants.js":"62","/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/dashboardConstants.js":"63","/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/websiteActions.js":"64","/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/inquiryActions.js":"65"},{"size":586,"mtime":1615182325413,"results":"66","hashOfConfig":"67"},{"size":2009,"mtime":1615182325416,"results":"68","hashOfConfig":"67"},{"size":7380,"mtime":1615557412562,"results":"69","hashOfConfig":"67"},{"size":4602,"mtime":1615554308136,"results":"70","hashOfConfig":"67"},{"size":8129,"mtime":1615557222292,"results":"71","hashOfConfig":"67"},{"size":4183,"mtime":1615182325414,"results":"72","hashOfConfig":"67"},{"size":9678,"mtime":1615182325415,"results":"73","hashOfConfig":"67"},{"size":468,"mtime":1615182325413,"results":"74","hashOfConfig":"67"},{"size":4211,"mtime":1615552620672,"results":"75","hashOfConfig":"67"},{"size":3864,"mtime":1615552620672,"results":"76","hashOfConfig":"67"},{"size":4336,"mtime":1615552620672,"results":"77","hashOfConfig":"67"},{"size":4301,"mtime":1615552641370,"results":"78","hashOfConfig":"67"},{"size":4358,"mtime":1615552620672,"results":"79","hashOfConfig":"67"},{"size":4745,"mtime":1615552620672,"results":"80","hashOfConfig":"67"},{"size":4211,"mtime":1615551417081,"results":"81","hashOfConfig":"67"},{"size":6245,"mtime":1615549877930,"results":"82","hashOfConfig":"67"},{"size":9420,"mtime":1615552151634,"results":"83","hashOfConfig":"67"},{"size":1317,"mtime":1615182325181,"results":"84","hashOfConfig":"67"},{"size":1303,"mtime":1615356584111,"results":"85","hashOfConfig":"67"},{"size":3863,"mtime":1615292396180,"results":"86","hashOfConfig":"67"},{"size":411,"mtime":1615359817965,"results":"87","hashOfConfig":"67"},{"size":12871,"mtime":1615548694159,"results":"88","hashOfConfig":"67"},{"size":9367,"mtime":1615548550055,"results":"89","hashOfConfig":"67"},{"size":12660,"mtime":1615548622251,"results":"90","hashOfConfig":"67"},{"size":9628,"mtime":1615440734013,"results":"91","hashOfConfig":"67"},{"size":16512,"mtime":1615553036573,"results":"92","hashOfConfig":"67"},{"size":11890,"mtime":1615555142475,"results":"93","hashOfConfig":"67"},{"size":8839,"mtime":1615445696616,"results":"94","hashOfConfig":"67"},{"size":8847,"mtime":1615445860317,"results":"95","hashOfConfig":"67"},{"size":8815,"mtime":1615444736714,"results":"96","hashOfConfig":"67"},{"size":9491,"mtime":1615446381381,"results":"97","hashOfConfig":"67"},{"size":12266,"mtime":1615445883506,"results":"98","hashOfConfig":"67"},{"size":6711,"mtime":1615349521799,"results":"99","hashOfConfig":"67"},{"size":7296,"mtime":1615349521799,"results":"100","hashOfConfig":"67"},{"size":7100,"mtime":1615349521800,"results":"101","hashOfConfig":"67"},{"size":7388,"mtime":1615349521800,"results":"102","hashOfConfig":"67"},{"size":9390,"mtime":1615446573711,"results":"103","hashOfConfig":"67"},{"size":18832,"mtime":1615555142472,"results":"104","hashOfConfig":"67"},{"size":17022,"mtime":1615549116152,"results":"105","hashOfConfig":"67"},{"size":7520,"mtime":1615448071034,"results":"106","hashOfConfig":"67"},{"size":13505,"mtime":1615548813929,"results":"107","hashOfConfig":"67"},{"size":8832,"mtime":1615447334773,"results":"108","hashOfConfig":"67"},{"size":3270,"mtime":1615546830778,"results":"109","hashOfConfig":"67"},{"size":10234,"mtime":1615548860565,"results":"110","hashOfConfig":"67"},{"size":25539,"mtime":1615557271859,"results":"111","hashOfConfig":"67"},{"size":1351,"mtime":1615556169059,"results":"112","hashOfConfig":"67"},{"size":2430,"mtime":1615356572700,"results":"113","hashOfConfig":"67"},{"size":6129,"mtime":1615555142477,"results":"114","hashOfConfig":"67"},{"size":1769,"mtime":1615182325203,"results":"115","hashOfConfig":"67"},{"size":7712,"mtime":1615182325179,"results":"116","hashOfConfig":"67"},{"size":18131,"mtime":1615554431341,"results":"117","hashOfConfig":"67"},{"size":4969,"mtime":1615344911811,"results":"118","hashOfConfig":"67"},{"size":12929,"mtime":1615532127157,"results":"119","hashOfConfig":"67"},{"size":7034,"mtime":1615281028125,"results":"120","hashOfConfig":"67"},{"size":6451,"mtime":1615297397601,"results":"121","hashOfConfig":"67"},{"size":270,"mtime":1615182325200,"results":"122","hashOfConfig":"67"},{"size":4323,"mtime":1615546102087,"results":"123","hashOfConfig":"67"},{"size":751,"mtime":1615542697650,"results":"124","hashOfConfig":"67"},{"size":1292,"mtime":1615182325212,"results":"125","hashOfConfig":"67"},{"size":2260,"mtime":1615557161410,"results":"126","hashOfConfig":"67"},{"size":1077,"mtime":1615182325212,"results":"127","hashOfConfig":"67"},{"size":2226,"mtime":1615182325214,"results":"128","hashOfConfig":"67"},{"size":123,"mtime":1615182325211,"results":"129","hashOfConfig":"67"},{"size":7286,"mtime":1615359347566,"results":"130","hashOfConfig":"67"},{"size":3325,"mtime":1615182325179,"results":"131","hashOfConfig":"67"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},"15m85vh",{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"134"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"134"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"134"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"134"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"134"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"134"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"134"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"134"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"134"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"134"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"134"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"134"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"134"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"134"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"134"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"134"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"134"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"134"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"134"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"134"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"134"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"134"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"134"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"134"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"134"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"134"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"134"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"134"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"134"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"134"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"134"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"134"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"134"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"134"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"134"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"134"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},"/Users/abby/Desktop/agile-technodynamics/frontend/src/index.js",[],["299","300"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/store.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/App.js",["301","302","303"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/productReducers.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/userReducers.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/inquiryReducers.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/websiteReducers.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/dashboardReducers.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Products.js",["304","305"],"import React, { Fragment, useState, useEffect } from 'react'\nimport '../css/products.css'\nimport '../css/bootstrap.min.css'\nimport '../fonts/font-awesome.min.css'\nimport { Link } from 'react-router-dom'\nimport MetaData from './layout/MetaData'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProducts, clearErrors } from '../actions/productActions'\nimport ProductDisplay from './product/ProductDisplay'\nimport Loader from './layout/Loader'\nimport { useAlert } from 'react-alert'\nimport Pagination from 'react-js-pagination'\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\n\nconst Products = () => { \n    const [currentPage, setCurrentPage] = useState(1);\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products);\n    const [category, setMainCategory] = useState('');\n    const [subcategory, setSubCategory] = useState('');\n\n    const categories = [\n        'Mechanical Engineering',\n        'DC Power Systems',\n        'Electrical Engineering Equipment',\n        'Test Equipment',\n        'Others'\n    ]\n    \n    useEffect(() => {\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n        dispatch(getProducts(currentPage, category, subcategory));\n\n        dispatch({\n            type: INSIDE_DASHBOARD_FALSE\n        })\n    }, [dispatch, alert, error, currentPage, category, subcategory]);\n\n    function setCurrentPageNo(pageNumber) {\n        setCurrentPage(pageNumber);\n    }\n\n    let count = productsCount;\n    \n    if(category) {\n        count = filteredProductsCount\n    }\n\n    return (\n            <Fragment>\n                <MetaData title={'Our Products'}/>\n                <div class=\"container-fluid\">\n                    <div class=\"product-header-container\">\n                        <h1 class=\"text-center product-text\">OUR PRODUCTS</h1>\n                        <ul class=\"product-categories\">\n                            {categories.map( category => (\n                                <li\n                                    key={category}\n                                    onClick={() => {setCurrentPageNo(1); setSubCategory(category)}}>\n                                        <Link to={`/products/${category}`}>{category}</Link>\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                    <div class=\"container product-list-container\">\n                        <div class=\"list-products\">\n                            <div class=\"row product-container-row\">\n                                {loading ? <Loader/> : (\n                                    <Fragment>\n                                        {products && (products.length != 0) ? products.map( product => (\n                                            <ProductDisplay key={product._id} product={product}/>\n                                        )) : (\n                                            <h3 style={{margin: '10px 0'}}>No products found.</h3>\n                                        )}\n                                    </Fragment>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {resPerPage < count && (\n                    <div className=\"d-flex justify-content-center mt-5\">\n                        <Pagination \n                            activePage={currentPage}\n                            itemsCountPerPage={resPerPage}\n                            totalItemsCount={productsCount}\n                            onChange={setCurrentPageNo}\n                            nextPageText={'Next'}\n                            prevPageText={'Prev'}\n                            firstPageText={'First'}\n                            lastPageText={'Last'}\n                            itemClass='page-item'\n                            linkClass='page-link'\n                        />\n                    </div>\n                )} \n                \n            </Fragment>\n    )\n}\n\nexport default Products;\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductsOthers.js",["306","307","308","309"],"import React, { Fragment, useState, useEffect } from 'react'\nimport '../css/products.css'\nimport '../css/bootstrap.min.css'\nimport '../fonts/font-awesome.min.css'\nimport MetaData from './layout/MetaData'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProducts, clearErrors } from '../actions/productActions'\nimport ProductDisplay from './product/ProductDisplay'\nimport Loader from './layout/Loader'\nimport { useAlert } from 'react-alert'\nimport Pagination from 'react-js-pagination'\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\n\nconst ProductsOthers = () => { \n    const [currentPage, setCurrentPage] = useState(1);\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products);\n    const [category, setMainCategory] = useState('Others');\n    const [subcategory, setSubCategory] = useState('Others');\n\n    \n    useEffect(() => {\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n        dispatch(getProducts(currentPage, category, subcategory));\n\n        dispatch({\n            type: INSIDE_DASHBOARD_FALSE\n        })\n    }, [dispatch, alert, error, currentPage, category, subcategory]);\n\n    function setCurrentPageNo(pageNumber) {\n        setCurrentPage(pageNumber);\n    }\n\n    let count = productsCount;\n    \n    if(category) {\n        count = filteredProductsCount\n    }\n\n    return (\n            <Fragment>\n                <MetaData title={`${category}`}/>\n                <div class=\"container-fluid\">\n                    <div class=\"product-header-container\">\n                        <h1 class=\"text-center product-text\">OUR PRODUCTS</h1>\n                        <h3 class=\"text-center product-category\">{category}</h3>\n                    </div>\n                    <div class=\"container product-list-container\">\n                        <div class=\"list-products\">\n                            <div class=\"row product-container-row\">\n                                {loading ? <Loader/> : (\n                                    <Fragment>\n                                        {loading ? <Loader/> : (\n                                        <Fragment>\n                                            {products && (products.length != 0) ? products.map( product => (\n                                                <ProductDisplay key={product._id} product={product}/>\n                                            )) : (\n                                                <h3 style={{margin: '10px 0'}}>No products found.</h3>\n                                            )}\n                                        </Fragment>\n                                    )}\n                                    </Fragment>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {resPerPage < count && (\n                    <div className=\"d-flex justify-content-center mt-5\">\n                        <Pagination \n                            activePage={currentPage}\n                            itemsCountPerPage={resPerPage}\n                            totalItemsCount={productsCount}\n                            onChange={setCurrentPageNo}\n                            nextPageText={'Next'}\n                            prevPageText={'Prev'}\n                            firstPageText={'First'}\n                            lastPageText={'Last'}\n                            itemClass='page-item'\n                            linkClass='page-link'\n                        />\n                    </div>\n                )}\n            </Fragment>\n               \n    )\n}\n\nexport default ProductsOthers;\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductsDC.js",["310","311"],"import React, { Fragment, useState, useEffect } from 'react'\nimport '../css/products.css'\nimport '../css/bootstrap.min.css'\nimport '../fonts/font-awesome.min.css'\nimport MetaData from './layout/MetaData'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProducts, clearErrors } from '../actions/productActions'\nimport ProductDisplay from './product/ProductDisplay'\nimport Loader from './layout/Loader'\nimport { useAlert } from 'react-alert'\nimport Pagination from 'react-js-pagination'\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\n\nconst ProductsDC = () => { \n    const [currentPage, setCurrentPage] = useState(1);\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products);\n    const [category, setMainCategory] = useState('DC Power Systems');\n    const [subcategory, setSubCategory] = useState('');\n\n    const dc_subCategory = [\n        'Uninterrupted Power System',\n        'Battery Monitoring System',\n        'Batteries',\n        'Others'\n    ]\n    \n    useEffect(() => {\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n        dispatch(getProducts(currentPage, category, subcategory));\n\n        dispatch({\n            type: INSIDE_DASHBOARD_FALSE\n        })\n    }, [dispatch, alert, error, currentPage, category, subcategory]);\n\n    function setCurrentPageNo(pageNumber) {\n        setCurrentPage(pageNumber);\n    }\n\n    let count = productsCount;\n    \n    if(category) {\n        count = filteredProductsCount\n    }\n\n    return (\n            <Fragment>\n                <MetaData title={`${category}`}/>\n                <div class=\"container-fluid\">\n                    <div class=\"product-header-container\">\n                        <h1 class=\"text-center product-text\">OUR PRODUCTS</h1>\n                        <h3 class=\"text-center product-category\">{category}</h3>\n                        <ul class=\"product-categories\">\n                            {dc_subCategory.map( category => (\n                                <li\n                                    key={category}\n                                    onClick={() => {setCurrentPageNo(1); setSubCategory(category)}}\n                                    className={subcategory === category ? \"current-active\" : null}\n                                >\n                                        <Link>{category}</Link>\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                    <div class=\"container product-list-container\">\n                        <div class=\"list-products\">\n                            <div class=\"row product-container-row\">\n                                {loading ? <Loader/> : (\n                                <Fragment>\n                                    {products && (products.length != 0) ? products.map( product => (\n                                        <ProductDisplay key={product._id} product={product}/>\n                                    )) : (\n                                        <h3 style={{margin: '10px 0'}}>No products found.</h3>\n                                    )}\n                                </Fragment>\n                            )}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {resPerPage < count && (\n                    <div className=\"d-flex justify-content-center mt-5\">\n                        <Pagination \n                            activePage={currentPage}\n                            itemsCountPerPage={resPerPage}\n                            totalItemsCount={productsCount}\n                            onChange={setCurrentPageNo}\n                            nextPageText={'Next'}\n                            prevPageText={'Prev'}\n                            firstPageText={'First'}\n                            lastPageText={'Last'}\n                            itemClass='page-item'\n                            linkClass='page-link'\n                        />\n                    </div>\n                )}\n            </Fragment>\n    )\n}\n\nexport default ProductsDC;\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductsEEE.js",["312","313"],"import React, { Fragment, useState, useEffect } from 'react'\nimport '../css/products.css'\nimport '../css/bootstrap.min.css'\nimport '../fonts/font-awesome.min.css'\nimport MetaData from './layout/MetaData'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProducts, clearErrors } from '../actions/productActions'\nimport ProductDisplay from './product/ProductDisplay'\nimport Loader from './layout/Loader'\nimport { useAlert } from 'react-alert'\nimport Pagination from 'react-js-pagination'\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\n\nconst ProductsEEE = () => { \n    const [currentPage, setCurrentPage] = useState(1);\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products);\n    const [category, setMainCategory] = useState('Electrical Engineering Equipment');\n    const [subcategory, setSubCategory] = useState('');\n\n    const eee_subCategory = [\n        'Transformers',\n        'Others'\n    ]\n    \n    useEffect(() => {\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n        dispatch(getProducts(currentPage, category, subcategory));\n\n        dispatch({\n            type: INSIDE_DASHBOARD_FALSE\n        })\n    }, [dispatch, alert, error, currentPage, category, subcategory]);\n\n    function setCurrentPageNo(pageNumber) {\n        setCurrentPage(pageNumber);\n    }\n\n    let count = productsCount;\n    \n    if(category) {\n        count = filteredProductsCount\n    }\n\n    return (\n            <Fragment>\n                <MetaData title={`${category}`}/>\n                <div class=\"container-fluid\">\n                    <div class=\"product-header-container\">\n                        <h1 class=\"text-center product-text\">OUR PRODUCTS</h1>\n                        <h3 class=\"text-center product-category\">{category}</h3>\n                        <ul class=\"product-categories\">\n                            {eee_subCategory.map( category => (\n                                <li\n                                    key={category}\n                                    onClick={() => {setCurrentPageNo(1); setSubCategory(category)}}\n                                    className={subcategory === category ? \"current-active\" : null}\n                                >\n                                        <Link>{category}</Link>\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                    <div class=\"container product-list-container\">\n                        <div class=\"list-products\">\n                            <div class=\"row product-container-row\">\n                                {loading ? <Loader/> : (\n                                <Fragment>\n                                    {products && (products.length != 0) ? products.map( product => (\n                                        <ProductDisplay key={product._id} product={product}/>\n                                    )) : (\n                                        <h3 style={{margin: '10px 0'}}>No products found.</h3>\n                                    )}\n                                </Fragment>\n                            )}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {resPerPage < count && (\n                    <div className=\"d-flex justify-content-center mt-5\">\n                        <Pagination \n                            activePage={currentPage}\n                            itemsCountPerPage={resPerPage}\n                            totalItemsCount={productsCount}\n                            onChange={setCurrentPageNo}\n                            nextPageText={'Next'}\n                            prevPageText={'Prev'}\n                            firstPageText={'First'}\n                            lastPageText={'Last'}\n                            itemClass='page-item'\n                            linkClass='page-link'\n                        />\n                    </div>\n                )}\n            </Fragment>\n                \n    )\n}\n\nexport default ProductsEEE;\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductsME.js",["314","315"],"import React, { Fragment, useState, useEffect } from 'react'\nimport '../css/products.css'\nimport '../css/bootstrap.min.css'\nimport '../fonts/font-awesome.min.css'\nimport MetaData from './layout/MetaData'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProducts, clearErrors } from '../actions/productActions'\nimport ProductDisplay from './product/ProductDisplay'\nimport Loader from './layout/Loader'\nimport { useAlert } from 'react-alert'\nimport Pagination from 'react-js-pagination'\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\n\nconst ProductsME = () => { \n    const [currentPage, setCurrentPage] = useState(1);\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products);\n    const [category, setMainCategory] = useState('Mechanical Engineering');\n    const [subcategory, setSubCategory] = useState('');\n\n    const me_subCategory = [\n        'Pumps and System',\n        'Fire Protection Systems',\n        'Others'\n    ]\n    \n    useEffect(() => {\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n        dispatch(getProducts(currentPage, category, subcategory));\n\n        dispatch({\n            type: INSIDE_DASHBOARD_FALSE\n        })\n    }, [dispatch, alert, error, currentPage, category, subcategory]);\n\n    function setCurrentPageNo(pageNumber) {\n        setCurrentPage(pageNumber);\n    }\n\n    let count = productsCount;\n    \n    if(category) {\n        count = filteredProductsCount\n    }\n\n    return (\n            <Fragment>\n                \n                <MetaData title={`${category}`}/>\n                <div class=\"container-fluid\">\n                    <div class=\"product-header-container\">\n                        <h1 class=\"text-center product-text\">OUR PRODUCTS</h1>\n                        <h3 class=\"text-center product-category\">{category}</h3>\n                        <ul class=\"product-categories\">\n                            {me_subCategory.map( category => (\n                                <li\n                                    key={category}\n                                    onClick={() => {setCurrentPageNo(1); setSubCategory(category)}}\n                                    className={subcategory === category ? \"current-active\" : null}\n                                >\n                                        <Link>{category}</Link>\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                    <div class=\"container product-list-container\">\n                        <div class=\"list-products\">\n                            <div class=\"row product-container-row\">\n                                {loading ? <Loader/> : (\n                                    <Fragment>\n                                        {products && (products.length != 0) ? products.map( product => (\n                                            <ProductDisplay key={product._id} product={product}/>\n                                        )) : (\n                                            <h3 style={{margin: '10px 0'}}>No products found.</h3>\n                                        )}\n                                    </Fragment>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {resPerPage < count && (\n                    <div className=\"d-flex justify-content-center mt-5\">\n                        <Pagination \n                            activePage={currentPage}\n                            itemsCountPerPage={resPerPage}\n                            totalItemsCount={productsCount}\n                            onChange={setCurrentPageNo}\n                            nextPageText={'Next'}\n                            prevPageText={'Prev'}\n                            firstPageText={'First'}\n                            lastPageText={'Last'}\n                            itemClass='page-item'\n                            linkClass='page-link'\n                        />\n                    </div>\n                )}\n            </Fragment>\n    )\n}\n\nexport default ProductsME;\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductsTE.js",["316","317"],"import React, { Fragment, useState, useEffect } from 'react'\nimport '../css/products.css'\nimport '../css/bootstrap.min.css'\nimport '../fonts/font-awesome.min.css'\nimport MetaData from './layout/MetaData'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProducts, clearErrors } from '../actions/productActions'\nimport ProductDisplay from './product/ProductDisplay'\nimport Loader from './layout/Loader'\nimport { useAlert } from 'react-alert'\nimport Pagination from 'react-js-pagination'\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\n\nconst ProductsTE = () => { \n    const [currentPage, setCurrentPage] = useState(1);\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products);\n    const [category, setMainCategory] = useState('Test Equipment');\n    const [subcategory, setSubCategory] = useState('');\n\n    const te_subCategory = [\n        'Partial Discharge Detection',\n        'Battery Discharge Capacity Tester',\n        'Battery Impedance or Internal Resistance',\n        'Load Banks',\n        'Battery Test Monitor',\n        'Portable Direct Ground Fault Finder',\n        'Earth Tester or Clamp Type',\n        'Others'\n    ]\n    \n    useEffect(() => {\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n        dispatch(getProducts(currentPage, category, subcategory));\n\n        dispatch({\n            type: INSIDE_DASHBOARD_FALSE\n        })\n    }, [dispatch, alert, error, currentPage, category, subcategory]);\n\n    function setCurrentPageNo(pageNumber) {\n        setCurrentPage(pageNumber);\n    }\n\n    let count = productsCount;\n    \n    if(category) {\n        count = filteredProductsCount\n    }\n\n    return (\n            <Fragment>\n                <MetaData title={`${category}`}/>\n                    <div class=\"container-fluid\">\n                        <div class=\"product-header-container\">\n                            <h1 class=\"text-center product-text\">OUR PRODUCTS</h1>\n                            <h3 class=\"text-center product-category\">{category}</h3>\n                            <ul class=\"product-categories\">\n                                {te_subCategory.map( category => (\n                                    <li\n                                        key={category}\n                                        onClick={() => {setCurrentPageNo(1); setSubCategory(category)}}\n                                        className={subcategory === category ? \"current-active\" : null}\n                                        >\n                                            <Link>{category}</Link>\n                                    </li>\n                                ))}\n                            </ul>\n                        </div>\n                        <div class=\"container product-list-container\">\n                            <div class=\"list-products\">\n                                <div class=\"row product-container-row\">\n                                    {loading ? <Loader/> : (\n                                        <Fragment>\n                                            {products && (products.length != 0) ? products.map( product => (\n                                                <ProductDisplay key={product._id} product={product}/>\n                                            )) : (\n                                                <h3 style={{margin: '10px 0'}}>No products found.</h3>\n                                            )}\n                                        </Fragment>\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    {resPerPage < count && (\n                        <div className=\"d-flex justify-content-center mt-5\">\n                            <Pagination \n                                activePage={currentPage}\n                                itemsCountPerPage={resPerPage}\n                                totalItemsCount={productsCount}\n                                onChange={setCurrentPageNo}\n                                nextPageText={'Next'}\n                                prevPageText={'Prev'}\n                                firstPageText={'First'}\n                                lastPageText={'Last'}\n                                itemClass='page-item'\n                                linkClass='page-link'\n                            />\n                        </div>\n                    )}\n                </Fragment>\n    )\n}\n\nexport default ProductsTE;\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/About.js",["318"],"import React, { Fragment, useEffect } from 'react'\nimport '../css/about.css'\nimport '../css/bootstrap.min.css'\nimport '../fonts/font-awesome.min.css'\nimport MetaData from './layout/MetaData'\nimport Loader from './layout/Loader'\nimport { useAlert } from 'react-alert'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getAboutDetails, clearErrors } from '../actions/websiteActions'\nimport { Markup } from 'interweave'\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\n\nconst About = () => {\n\n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const { \n        error,\n        loading, \n        abouts,\n        aboutCompany_title, \n        aboutCompany_description,\n        aboutScope_title, \n        aboutScope_description,\n        aboutObjectives_title, \n        aboutObjectives_description,\n        aboutMission_title, \n        aboutMission_description,\n        aboutVision_title, \n        aboutVision_description,\n        aboutHistory_title, \n        aboutHistory_description,\n    } = useSelector(state => state.abouts)\n\n    useEffect(() => {\n        dispatch(getAboutDetails());\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_FALSE\n        })\n\n    }, [dispatch, error, alert]);\n\n    return (\n            <Fragment>\n                <MetaData title={'About Us'}/>\n                <div className=\"container-fluid\" style={{paddingTop: '77px'}}>\n                    {loading ? <Loader/> : (\n                        <Fragment>\n                            <div className=\"header-wrapper\">    \n                                <div className=\"header-container\" style={{display: 'block'}}>\n                                    <h1 className=\"text-center about-text\">ABOUT US</h1>\n                                    <ul className=\"about-list\">\n                                        <li><a href=\"#company\">{aboutCompany_title}</a></li>\n                                        <li><a href=\"#objectives\">{aboutObjectives_title}</a></li>\n                                        <li><a href=\"#scope\">{aboutScope_title}</a></li>\n                                        <li><a href=\"#mission\">{aboutMission_title}</a></li>\n                                        <li><a href=\"#vision\">{aboutVision_title}</a></li>\n                                        <li><a href=\"#history\">{aboutHistory_title}</a></li>\n                                    </ul>\n                                </div>\n                            </div>\n                            <div id=\"company\" className=\"sections white-bg\">\n                                <h1>{aboutCompany_title}</h1>\n                                <Markup content={aboutCompany_description}/>\n                            </div>\n                            <div id=\"objectives\" className=\"sections blue-bg\">\n                                <h1>{aboutObjectives_title}</h1>\n                                <Markup content={aboutObjectives_description}/>\n                            </div>\n                            <div id=\"scope\" className=\"sections white-bg\">\n                                <h1>{aboutScope_title}</h1>\n                                <Markup content={aboutScope_description}/>\n                            </div>\n                            <div id=\"mission\" className=\"sections blue-bg\">\n                                <h1>{aboutMission_title}</h1>\n                                <Markup content={aboutMission_description}/>\n                            </div>\n                            <div id=\"vision\" className=\"sections white-bg\">\n                                <h1>{aboutVision_title}</h1>\n                                <Markup content={aboutVision_description}/>\n                            </div>\n                            <div id=\"history\" className=\"sections blue-bg\">\n                                <h1>{aboutHistory_title}</h1>\n                                <Markup content={aboutHistory_description}/>\n                            </div>\n                        </Fragment>\n                    )} \n                </div>\n            </Fragment>\n    )\n}\n\nexport default About;","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Services.js",["319"],"import React, { Fragment, useEffect, useState } from 'react'\nimport '../css/services.css'\nimport '../css/bootstrap.min.css'\nimport '../fonts/font-awesome.min.css'\nimport { useAlert } from 'react-alert'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getServices, clearErrors } from '../actions/websiteActions'\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\nimport { Link } from 'react-router-dom'\nimport MetaData from './layout/MetaData'\nimport Loader from './layout/Loader'\n\nconst Services = () => {\n\n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const { loading,\n            error,\n            it1_subtitle,\n            it2_subtitle,\n            etd1_subtitle,\n            etd2_subtitle,\n\n            it1_desc,\n            it2_desc,\n            etd1_desc,\n            etd2_desc,\n\n            it1_icon,\n            it2_icon,\n            etd1_icon,\n            etd2_icon,\n\n            it1_iconBg,\n            it2_iconBg,\n            etd1_iconBg,\n            etd2_iconBg\n        } = useSelector(state => state.services)\n\n    useEffect(() => {\n        dispatch(getServices())\n\n        dispatch({\n            type: INSIDE_DASHBOARD_FALSE\n        })\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n    }, [dispatch, alert, error]) //loop if homePage added as dependency\n\n    return (\n        <Fragment>\n            <MetaData title={'Our Services'} />\n            <div class=\"container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 contact-us-banner\">\n                        <h1 class=\"text-center\">Have some questions?</h1>\n                        <p class=\"text-center\">We are ready to help you.</p>\n                        <Link to='/contact-us'>\n                            <button class=\"btn btn-primary contact-us-button\" type=\"button\">\n                                    Contact Us\n                            </button>\n                        </Link>\n                    </div>\n                </div>\n                {loading ? <Loader/> : (\n                    <Fragment>\n                        <div class=\"row\">\n                            <div class=\"col\">\n                                <div class=\"row second-level-row\">\n                                    <div class=\"col-12\">\n                                        <h1 style={{fontSize: '3rem', fontWeight: 'bold', paddingBottom: '30px'}}>OUR SERVICES</h1>\n                                    </div>\n                                    <div class=\"col-12 title-section\">\n                                        <h2>Information Technology</h2>\n                                    </div>\n                                    <div class=\"col-md-6 item-card\">\n                                        <p>\n                                            <span className=\"fa-stack fa-4x\">\n                                                <i className={`fa fa-circle fa-stack-2x text-${it1_iconBg}`}></i>\n                                                <i className={`fa fa-${it1_icon} fa-stack-1x fa-inverse`}></i>\n                                            </span>\n                                        </p>\n                                        <h4>{it1_subtitle}</h4>\n                                        <p className=\"description\">{it1_desc}</p>\n                                    </div>\n                                    <div class=\"col-md-6 item-card\">\n                                        <p>\n                                            <span className=\"fa-stack fa-4x\">\n                                                <i className={`fa fa-circle fa-stack-2x text-${it2_iconBg}`}></i>\n                                                <i className={`fa fa-${it2_icon} fa-stack-1x fa-inverse`}></i>\n                                            </span>\n                                        </p>\n                                        <h4>{it2_subtitle}</h4>\n                                        <p className=\"description\">{it2_desc}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col\">\n                                <div class=\"row second-level-row\">\n                                    <div class=\"col-12 title-section\">\n                                        <h2>Engineering and Technical Services</h2>\n                                    </div>\n                                    <div class=\"col-md-6 item-card\">\n                                        <p>\n                                            <span className=\"fa-stack fa-4x\">\n                                                <i className={`fa fa-circle fa-stack-2x text-${etd1_iconBg}`}></i>\n                                                <i className={`fa fa-${etd1_icon} fa-stack-1x fa-inverse`}></i>\n                                            </span>\n                                        </p>\n                                        <h4>{etd1_subtitle}</h4>\n                                        <p className=\"description\">{etd1_desc}</p>\n                                    </div>\n                                    <div class=\"col-md-6 item-card\">\n                                        <p>\n                                            <span className=\"fa-stack fa-4x\">\n                                                <i className={`fa fa-circle fa-stack-2x text-${etd2_iconBg}`}></i>\n                                                <i className={`fa fa-${etd2_icon} fa-stack-1x fa-inverse`}></i>\n                                            </span>\n                                        </p>\n                                        <h4>{etd2_subtitle}</h4>\n                                        <p className=\"description\">{etd2_desc}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </Fragment>\n                )}\n            </div>\n        </Fragment>\n    )\n}\n\nexport default Services\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Contact.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ConfirmationPage.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/EmailSent.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/Footer.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/Loader.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateHome.js",["320","321","322","323"],"import React, { Fragment, useEffect, useState } from 'react'\nimport MetaData from '../layout/MetaData'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from  'react-redux'\nimport { updateHome, getHomeDetails, clearErrors } from '../../actions/websiteActions'\nimport { UPDATE_HOME_RESET } from '../../constants/websiteConstants'\n\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport { Link } from 'react-router-dom'\nimport { logout } from '../../actions/userActions'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { OverlayTrigger, Tooltip, Modal, Button } from 'react-bootstrap'\nimport imageCompression from 'browser-image-compression';\n\nconst UpdateHome = ({ match, history }) => {\n\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n    const [image, setImage] = useState('');\n    const [imagePreview, setImagePreview] = useState('images/default_avatar.png');\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, home } = useSelector(state => state.homeDetails);\n    const { error: updateError, isUpdated, loading } = useSelector(state => state.website);\n    const { user } = useSelector(state => state.auth)\n    \n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const homeId = match.params.id\n\n    useEffect(() => {\n        if(home && home._id !== homeId) {\n            dispatch(getHomeDetails(homeId))\n        }\n        else {\n            setName(home.name);\n            setDescription(home.description);\n            setImagePreview(home.image.url);\n        }\n\n        if(error){\n            history.push('/admin/home')\n            alert.error(error);\n            dispatch(clearErrors());\n\n        }\n        \n        if(updateError){\n            history.push('/admin/home')\n            alert.error(updateError);\n            dispatch(clearErrors());\n        }\n\n        if(isUpdated){\n            alert.success('Home updated successfully');\n\n            history.push('/admin/home')\n\n            dispatch({\n                type: UPDATE_HOME_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n\n    }, [dispatch, alert, error, history, home, homeId, isUpdated, updateError])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('description', description);\n        formData.set('image', image);\n\n        dispatch(updateHome(home._id, formData));\n    }\n\n    const onChange = file => {\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            if(reader.readyState === 2){\n                setImagePreview(reader.result)\n                setImage(reader.result)\n            }\n        }\n\n        reader.readAsDataURL(file)\n    }\n\n    const handleImageUpload = e => {\n\n        var imageFile = e.target.files[0];\n        console.log('originalFile instanceof Blob', imageFile instanceof Blob); // true\n        console.log(`originalFile size ${imageFile.size / 1024 / 1024} MB`);\n      \n        var options = {\n          maxSizeMB: 0.6,\n          maxWidthOrHeight: 1920,\n          useWebWorker: true\n        }\n        \n        imageCompression(imageFile, options)\n          .then(function (compressedFile) {\n      \n                onChange(compressedFile); // write your own logic\n            })\n            .catch(function (error) {\n                console.log(error.message);\n            });\t\n    }\n\n    const discardChanges = () => {\n        handleClose()\n        history.push('/admin/home')\n    }\n    \n    return (\n        <Fragment>\n            <MetaData title={'Update Home'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}>\n            <div id=\"sidebar-wrapper\">\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )\n                        }\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} >\n                            <i className=\"fa fa-bars\"   ></i>\n                        </a>\n                        <Modal show={show} onHide={handleClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Discard Changes?</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>Are you sure you want to discard your changes?</Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={handleClose}>\n                                    Close\n                                </Button>\n                                <Button variant=\"primary\" onClick={discardChanges}>\n                                    Yes, I'm sure\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                        <div className=\"login-clean\">\n                            <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data' >\n                                <h2 className=\"sr-only\">Update Home</h2>\n                                <div className=\"div-forgot-password\">\n                                    <h3 className=\"forgot-password-heading\">Update Home </h3>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <h6>Name</h6>\n                                    <input \n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        id=\"name\" \n                                        name=\"name\" \n                                        value={name}\n                                        disabled={true}\n                                        style={{backgroundColor: '#F5F5F5', color: 'gray'}}\n                                        onChange={(e) => setName(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <h6>Description</h6>\n                                    <textarea \n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        id=\"description\" \n                                        name=\"description\" \n                                        placeholder=\"Description\"\n                                        value={description}\n                                        disabled={String(home.name).includes('Description') ? false : true}\n                                        style={String(home.name).includes('Description') ? {width: '100%', height: '150px'} : {backgroundColor: '#F5F5F5', color: 'gray', width: '100%', height: '150px'}}\n                                        onChange={(e) => setDescription(e.target.value)}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Image</h6>\n                                    <figure>\n                                        <img \n                                            src={imagePreview} \n                                            className='mt-3 mr-2' \n                                            width='110' \n                                            height='104'\n                                        />\n                                    </figure>\n                                    {String(home.name).includes('Description') ? (\n                                        <OverlayTrigger overlay={<Tooltip id=\"tooltip-disabled\">Image upload disabled</Tooltip>}>\n                                            <span className=\"d-inline-block\">\n                                                <input \n                                                    type=\"file\" \n                                                    id=\"image\" \n                                                    name=\"image\" \n                                                    accept=\"images/*\"\n                                                    disabled={true} \n                                                    style={{ pointerEvents: 'none' }}\n                                                />\n                                            </span>\n                                        </OverlayTrigger>\n                                    ) : (\n                                        <input \n                                            type=\"file\" \n                                            id=\"image\" \n                                            name=\"image\" \n                                            accept=\"images/*\"\n                                            onChange={handleImageUpload}\n                                        />\n                                    )}\n                                        \n                                    \n                                </div>\n                                <div className=\"form-group\">\n                                    <button \n                                        className=\"btn btn-primary btn-block\" \n                                        type=\"submit\"\n                                    >\n                                        Update Home\n                                    </button>\n                                </div>\n                                <div className=\"form-group\">\n                                    <a\n                                        className=\"btn btn-secondary btn-block mt-2\"\n                                        onClick={handleShow}\n                                        style={{color: 'white'}}\n                                    >Discard</a>\n                                </div>\n                            </form>\n                            \n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default UpdateHome\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateAbout.js",["324","325","326"],"import React, { Fragment, useState, useEffect } from 'react'\nimport MetaData from '../layout/MetaData'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport { Link } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateAbout, getSingleAbout, clearErrors } from '../../actions/websiteActions'\nimport { UPDATE_ABOUT_RESET } from '../../constants/websiteConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { logout } from './../../actions/userActions'\nimport { Modal, Button } from 'react-bootstrap'\n\nconst UpdateAbout = ({ match, history }) => {\n\n    const [title, setTitle] = useState('')\n    const [description, setDescription] = useState('')\n\n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const { error, about } = useSelector(state => state.aboutDetails)\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.website);\n    const { user } = useSelector(state => state.auth)\n\n    const aboutId = match.params.id\n\n    const [isToggled, setToggled] = useState('false')\n    \n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n\n    useEffect(() => {\n        if(about && about._id !== aboutId) {\n            dispatch(getSingleAbout(aboutId))\n        }\n        else { \n            setTitle(about.title)\n            setDescription(about.description)\n        }\n\n        if(error){\n            history.push('/admin/about');\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if(updateError){\n            history.push('/admin/about');\n            alert.error(updateError);\n            dispatch(clearErrors());\n        }\n\n        if(isUpdated) {\n            history.push('/admin/about');\n            alert.success('Information updated successfully.')\n\n            dispatch({\n                type: UPDATE_ABOUT_RESET\n            })\n        }\n        \n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, error, alert, isUpdated, updateError, about, aboutId, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('title', title);\n        formData.set('description', description);\n\n        dispatch(updateAbout(about._id, formData));\n    }\n\n    const discardChanges = () => {\n        handleClose()\n        history.push('/admin/about')\n    }\n    \n    return (<Fragment>\n        <MetaData title={'Update About'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\n            <div id=\"sidebar-wrapper\" >\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )\n                        }\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} >\n                            <i className=\"fa fa-bars\" ></i>\n                        </a>\n                        <Modal show={show} onHide={handleClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Discard Changes?</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>Are you sure you want to discard your changes?</Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={handleClose}>\n                                    Close\n                                </Button>\n                                <Button variant=\"primary\" onClick={discardChanges}>\n                                    Yes, I'm sure\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                    <Fragment>\n                        <div className=\"login-clean\">\n                            <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data'   >\n                                <h2 className=\"sr-only\">Update About: \"{about.title}\"</h2>\n                                <div className=\"div-forgot-password\">\n                                    <h3 className=\"forgot-password-heading\">Update About \"{about.title}\"</h3>\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Name</h6>\n                                    <textarea \n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        name=\"title\"\n                                        value={title}\n                                        placeholder=\"Title\"\n                                        style={{width: '100%'}}\n                                        onChange={(e) => setTitle(e.target.value)}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Description</h6>\n                                    <textarea\n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        name=\"description\"\n                                        value={description}\n                                        placeholder=\"Description\"\n                                        style={{width: '100%', height: '250px'}}\n                                        onChange={(e) => setDescription(e.target.value)}\n                                        height='55px'\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <button \n                                        className=\"btn btn-primary btn-block\" \n                                        type=\"submit\"\n                                    >\n                                        Update Information\n                                    </button>\n                                </div>\n                                <div className=\"form-group\">\n                                    <a\n                                        className=\"btn btn-secondary btn-block mt-2\"\n                                        onClick={handleShow}\n                                        style={{color: 'white'}}\n                                    >Discard</a>\n                                </div>\n                            </form>\n                            \n                        </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n    </Fragment>\n)\n}\n\nexport default UpdateAbout\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateFooter.js",["327","328","329","330","331"],"import React, { Fragment, useState, useEffect } from 'react'\nimport MetaData from '../layout/MetaData'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport { Link } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateFooter, getFooterDetails, clearErrors } from '../../actions/websiteActions'\nimport { UPDATE_FOOTER_RESET } from '../../constants/websiteConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { logout } from './../../actions/userActions'\nimport { Modal, Button } from 'react-bootstrap'\n\nconst UpdateFooter = ({history}) => {\n\n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const [footerTitle, setFooterTitle] = useState('')\n    const [footerDescription, setFooterDescription] = useState('')\n    const [addressInfo, setAddressInfo] = useState('')\n    const [phoneInfo, setPhoneInfo] = useState('')\n    const [cellphoneInfo, setCellphoneInfo] = useState('')\n    const [emailInfo, setEmailInfo] = useState('')\n\n    const { error, footerInfo } = useSelector(state => state.footerDetails)\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.website);\n    const { user } = useSelector(state => state.auth)\n\n    const [isToggled, setToggled] = useState('false')\n\n    useEffect(() => {\n        if(footerInfo){\n            setFooterTitle(footerInfo.footerTitle)\n            setFooterDescription(footerInfo.footerDescription)\n            setAddressInfo(footerInfo.addressInfo)\n            setPhoneInfo(footerInfo.phoneInfo)\n            setCellphoneInfo(footerInfo.cellphoneInfo)\n            setEmailInfo(footerInfo.emailInfo)\n        } \n\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if(updateError){\n            alert.error(updateError);\n            dispatch(clearErrors());\n        }\n        \n        if(isUpdated) {\n            history.push('/admin/footer');\n            alert.success('Footer updated successfully.')\n\n            dispatch({\n                type: UPDATE_FOOTER_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, history, updateError, isUpdated])\n    \n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('footerTitle', footerTitle);\n        formData.set('footerDescription', footerDescription);\n        formData.set('addressInfo', addressInfo);\n        formData.set('phoneInfo', phoneInfo);\n        formData.set('cellphoneInfo', cellphoneInfo);\n        formData.set('emailInfo', emailInfo);\n\n        dispatch(updateFooter(formData));\n    }\n\n    const discardChanges = () => {\n        handleClose()\n        history.push('/admin/footer')\n    }\n    \n    return (<Fragment>\n        <MetaData title={'Update Footer'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\n                <div id=\"sidebar-wrapper\" >\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )\n                        }\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} >\n                            <i className=\"fa fa-bars\"   ></i>\n                        </a>\n                        <Modal show={show} onHide={handleClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Discard Changes?</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>Are you sure you want to discard your changes?</Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={handleClose}>\n                                    Close\n                                </Button>\n                                <Button variant=\"primary\" onClick={discardChanges}>\n                                    Yes, I'm sure\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                    <Fragment>\n                        <div className=\"login-clean\">\n                            \n                            <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data'   >\n                                <h2 className=\"sr-only\">Update Footer</h2>\n                                <div className=\"div-forgot-password\">\n                                    <h3 className=\"forgot-password-heading\">Update Footer</h3>\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Footer Title</h6>\n                                    <textarea \n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        name=\"footerTitle\"\n                                        value={footerTitle}\n                                        placeholder=\"Title\"\n                                        style={{width: '100%'}}\n                                        onChange={(e) => setFooterTitle(e.target.value)}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Footer Description</h6>\n                                    <textarea\n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        name=\"footerDescription\"\n                                        value={footerDescription}\n                                        placeholder=\"Description\"\n                                        style={{width: '100%', height: '250px'}}\n                                        onChange={(e) => setFooterDescription(e.target.value)}\n                                        height='55px'\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Address Info</h6>\n                                    <textarea \n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        name=\"addressInfo\"\n                                        value={addressInfo}\n                                        placeholder=\"Address\"\n                                        style={{width: '100%', height: '150px'}}\n                                        onChange={(e) => setAddressInfo(e.target.value)}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Phone Info</h6>\n                                    <textarea \n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        name=\"phoneInfo\"\n                                        value={phoneInfo}\n                                        placeholder=\"Phone Number\"\n                                        style={{width: '100%'}}\n                                        onChange={(e) => setPhoneInfo(e.target.value)}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Cellphone Info</h6>\n                                    <textarea \n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        name=\"cellphoneInfo\"\n                                        value={cellphoneInfo}\n                                        placeholder=\"Cellphone Number\"\n                                        style={{width: '100%'}}\n                                        onChange={(e) => setCellphoneInfo(e.target.value)}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Email Info</h6>\n                                    <textarea \n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        name=\"emailInfo\"\n                                        value={emailInfo}\n                                        placeholder=\"Email\"\n                                        style={{width: '100%'}}\n                                        onChange={(e) => setEmailInfo(e.target.value)}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                        <button \n                                        className=\"btn btn-primary btn-block\" \n                                        type=\"submit\"\n                                    >\n                                        Update Footer\n                                    </button>\n                                </div>\n                                <div className=\"form-group\">\n                                    <a\n                                        className=\"btn btn-secondary btn-block mt-2\"\n                                        onClick={handleShow}\n                                        style={{color: 'white'}}\n                                    >Discard</a>\n                                </div>\n                            </form>\n                        </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n    </Fragment>\n    )\n}\n\nexport default UpdateFooter","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/Profile.js",["332"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport MetaData from './../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/profile.css'\n\nimport { useAlert } from 'react-alert'\nimport { logout } from './../../actions/userActions'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\n\nconst Profile = ({history}) => {\n    \n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const { user, loading } = useSelector(state => state.auth)\n    \n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n    \n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n\n    useEffect(() => {\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch])\n\n    return (\n        <Fragment>\n            {loading ? <Loader /> : (\n                <Fragment>\n                    <MetaData title={'My Profile'} />\n                    <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\n                        <div id=\"sidebar-wrapper\" >\n                            <ul className=\"sidebar-nav\">\n                                <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                                <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                                <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                                <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                                {user && user.role !== 'admin' ? (\n                                        <Fragment>\n                                            <hr/>\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                        </Fragment>\n                                    ) : (\n                                        <Fragment>\n                                            <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                            <hr/>\n                                            <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                            <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                            <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                            <hr/>\n                                            <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                            <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                        </Fragment>\n                                    )\n                                }\n                                <hr/>\n                                <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                            </ul>\n                        </div>\n                            <div className=\"page-content-wrapper\">\n                                <div className=\"container-fluid\">\n                                    <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\n                                        <i className=\"fa fa-bars\"   ></i>\n                                    </a>\n                                    <div className=\"container\">\n                                        <div className=\"main-body\">\n                                            <h1 style={{textAlign: 'center', padding:'0 0 15px 0'}}>My Profile</h1>\n                                            <div className=\"row gutters-sm\">\n                                                <div className=\"col-md-4 mb-3\">\n                                                    <div className=\"card\">\n                                                        <div className=\"card-body\">\n                                                            <div className=\"d-flex flex-column align-items-center text-center\">\n                                                                <img src={user.avatar.url} alt=\"Avatar\" className=\"rounded-circle\" width=\"150px\" height=\"150px\"/>\n                                                                <div className=\"mt-3\">\n                                                                    <h4>{user.name}</h4>\n                                                                    <p className=\"text-secondary mb-1\" style={{textTransform: 'uppercase'}}>{user.role}</p>\n                                                                    <Link className=\"btn btn-dark btn-sm ml-3 mt-3\" type=\"button\" to=\"/admin/edit-profile\">Edit Profile</Link>\n                                                                    <Link className=\"btn btn-dark btn-sm ml-3 mt-3\" type=\"button\" to=\"/password/update\">Change Password</Link>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-8\">\n                                                    <div className=\"card mb-3\">\n                                                        <div className=\"card-body\">\n                                                            <div className=\"row\">\n                                                                <div className=\"col-sm-3\">\n                                                                    <h6 className=\"mb-0\">Full Name</h6>\n                                                                </div>\n                                                                <div className=\"col-sm-9 text-secondary\">\n                                                                    {user.name}\n                                                                </div>\n                                                            </div>\n                                                            <hr/>\n                                                            <div className=\"row\">\n                                                                <div className=\"col-sm-3\">\n                                                                    <h6 className=\"mb-0\">Email</h6>\n                                                                </div>\n                                                                <div className=\"col-sm-9 text-secondary\">\n                                                                    {user.email}\n                                                                </div>\n                                                            </div>\n                                                            <hr/>\n                                                            <div className=\"row\">\n                                                                <div className=\"col-sm-3\">\n                                                                    <h6 className=\"mb-0\">Phone</h6>\n                                                                </div>\n                                                                <div className=\"col-sm-9 text-secondary\">\n                                                                    {user.contactNumber}\n                                                                </div>\n                                                            </div>\n                                                            <hr/>\n                                                            <div className=\"row\">\n                                                                <div className=\"col-sm-3\">\n                                                                    <h6 className=\"mb-0\">Address</h6>\n                                                                </div>\n                                                                <div className=\"col-sm-9 text-secondary\">\n                                                                    {user.address}\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>    \n                                </div>\n                            </div>\n                        </div>\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nexport default Profile\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateProfile.js",["333"],"import React, { Fragment, useEffect, useState } from 'react'\nimport MetaData from '../layout/MetaData'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from  'react-redux'\nimport { updateProfile, loadUser, clearErrors } from './../../actions/userActions'\nimport { UPDATE_PROFILE_RESET, UPDATE_PROFILE_REQUEST } from '../../constants/userConstants'\n\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport { Link } from 'react-router-dom'\nimport { logout } from './../../actions/userActions'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport imageCompression from 'browser-image-compression';\nimport { Modal, Button } from 'react-bootstrap'\n\nconst UpdateProfile = ({ history }) => {\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [contactNumber, setContactNumber] = useState('');\n    const [address, setAddress] = useState('');\n    const [avatar, setAvatar] = useState('');\n    const [avatarPreview, setAvatarPreview] = useState('images/default_avatar.png');\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { user } = useSelector(state => state.auth);\n    const { error, isUpdated, loading } = useSelector(state => state.user);\n    \n    const [isToggled, setToggled] = useState('false')\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n\n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n\n    useEffect(() => {\n        if(user) {\n            setName(user.name);\n            setEmail(user.email);\n            setContactNumber(user.contactNumber);\n            setAddress(user.address);\n            setAvatarPreview(user.avatar.url);\n        }\n\n        if(error){\n            console.log(error)\n            alert.error(error);\n            dispatch(clearErrors());\n            dispatch({\n                type: UPDATE_PROFILE_RESET\n            })\n        }\n\n        if(isUpdated){\n            history.push('/admin/me')\n            alert.success('User updated successfully');\n            dispatch(loadUser());\n\n            dispatch({\n                type: UPDATE_PROFILE_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n\n    }, [dispatch, alert, error, history, user, isUpdated])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('email', email);\n        formData.set('contactNumber', contactNumber);\n        formData.set('address', address);\n        formData.set('avatar', avatar);\n\n        dispatch(updateProfile(formData));\n    }\n\n    const onChange = file => {\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            if(reader.readyState === 2){\n                setAvatarPreview(reader.result)\n                setAvatar(reader.result)\n            }\n        }\n\n        reader.readAsDataURL(file)\n\n        dispatch({\n            type: UPDATE_PROFILE_RESET\n        })\n    }\n\n    const discardChanges = () => {\n        handleClose()\n        history.push('/admin/me')\n    }\n    \n    const handleImageUpload = e => {\n\n        var imageFile = e.target.files[0];\n        console.log('originalFile instanceof Blob', imageFile instanceof Blob); // true\n        console.log(`originalFile size ${imageFile.size / 1024 / 1024} MB`);\n      \n        var options = {\n          maxSizeMB: 0.6,\n          maxWidthOrHeight: 1920,\n          useWebWorker: true\n        }\n        imageCompression(imageFile, options)\n          .then(function (compressedFile) {\n                onChange(compressedFile); // write your own logic\n          })\n          .catch(function (error) {\n            console.log(error.message);\n          });\n\n          dispatch({\n              type: UPDATE_PROFILE_REQUEST\n          })\n      }\n\n    return (\n        <Fragment>\n            <MetaData title={'Update Profile'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\n                <div id=\"sidebar-wrapper\" >\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )\n                        }\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} >\n                            <i className=\"fa fa-bars\"   ></i>\n                        </a>\n                        <Modal show={show} onHide={handleClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Discard Changes?</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>Are you sure you want to discard your changes?</Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={handleClose}>\n                                    Close\n                                </Button>\n                                <Button variant=\"primary\" onClick={discardChanges}>\n                                    Yes, I'm sure\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                        <div className=\"container\">\n                            <div className=\"main-body\">\n                                <h1 style={{textAlign: 'center', padding:'0 0 15px 0'}}>Update Profile</h1>\n                                <div className=\"row gutters-sm\">\n                                    <div className=\"col-md-4 mb-3\">\n                                        <div className=\"card\">\n                                            <div className=\"card-body\">\n                                                <div className=\"d-flex flex-column align-items-center text-center\">\n                                                    <img src={avatarPreview} alt=\"Avatar\" className=\"rounded-circle\" width=\"150px\" height=\"150px\"/>\n                                                    <div className=\"mt-3\">\n                                                    <hr/>\n                                                    <input \n                                                        type=\"file\" \n                                                        id=\"avatar\" \n                                                        name=\"avatar\" \n                                                        accept=\"images/*\"\n                                                        onChange={handleImageUpload}\n                                                        style={{width: '90%'}}\n                                                    />\n                                                    <br/>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <div className=\"card mb-3\">\n                                            <div className=\"card-body\">\n                                                <form method=\"post\" onSubmit={submitHandler}>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-3\">\n                                                        <h6 className=\"mb-0\">Full Name</h6>\n                                                        </div>\n                                                        <div className=\"col-sm-9 text-secondary\">\n                                                        <input \n                                                            type=\"text\" \n                                                            className=\"form-control\" \n                                                            name=\"name\"\n                                                            value={name}\n                                                            placeholder=\"Name\"\n                                                            onChange={(e) => setName(e.target.value)}\n                                                        />\n                                                        </div>\n                                                    </div>\n                                                    <hr/>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-3\">\n                                                        <h6 className=\"mb-0\">Email</h6>\n                                                        </div>\n                                                        <div className=\"col-sm-9 text-secondary\">\n                                                        <input \n                                                            type=\"email\" \n                                                            className=\"form-control\" \n                                                            name=\"email\"\n                                                            value={email}\n                                                            placeholder=\"Email\"\n                                                            onChange={(e) => setEmail(e.target.value)}\n                                                        />\n                                                        </div>\n                                                    </div>\n                                                    <hr/>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-3\">\n                                                        <h6 className=\"mb-0\">Phone</h6>\n                                                        </div>\n                                                        <div className=\"col-sm-9 text-secondary\">\n                                                        <input \n                                                            type=\"text\" \n                                                            className=\"form-control\" \n                                                            name=\"contactNumber\"\n                                                            value={contactNumber}\n                                                            placeholder=\"09xx-xxx-xxxx\"\n                                                            pattern=\"^[0][9]\\d{2}-\\d{3}-\\d{4}$\"\n                                                            onChange={(e) => setContactNumber(e.target.value)}\n                                                        />\n                                                        </div>\n                                                    </div>\n                                                    <hr/>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-3\">\n                                                        <h6 className=\"mb-0\">Address</h6>\n                                                        </div>\n                                                        <div className=\"col-sm-9 text-secondary\">\n                                                            <textarea \n                                                                type=\"text\"\n                                                                className=\"form-control\"\n                                                                name=\"address\"\n                                                                value={address}\n                                                                placeholder=\"Address\"\n                                                                onChange={(e) => setAddress(e.target.value)}\n                                                                style={{height: '150px'}}\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-12\">\n                                                            <button\n                                                                className=\"btn btn-primary btn-block mt-5\"\n                                                                type=\"submit\"\n                                                                disabled={loading ? true : false}\n                                                            >Update Profile</button>\n                                                        </div>\n                                                    </div>\n                                                </form>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-12\">\n                                                            <button\n                                                                className=\"btn btn-secondary btn-block mt-2\"\n                                                                onClick={handleShow}\n                                                            >Discard</button>\n                                                        </div>\n                                                    </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>    \n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default UpdateProfile\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdatePassword.js",["334","335","336","337","338"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListAppointments.js",["339","340"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTableV5 } from 'mdbreact'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport { useAlert } from 'react-alert'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { logout } from '../../actions/userActions'\nimport { Modal, Button } from 'react-bootstrap'\n\nconst ListOrders = ({history}) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\n    const { isUpdated } = useSelector(state => state.inquiry)\n    const { user } = useSelector(state => state.auth)\n\n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n\n    const [id, setId] = useState('')\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    useEffect(() => {\n        dispatch(listInquiry());\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n        if(isUpdated){\n            history.push('/admin/appointments')\n\n            dispatch({\n                type: UPDATE_INQUIRY_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, history, isUpdated])\n\n    const updateInquiryHandler = (id, inquiryStatus) => { \n        const formData = new FormData();\n        formData.set('inquiryStatus', inquiryStatus);\n\n        alert.success('Message has been moved to Trash.');\n        dispatch(updateInquiry(id, formData));\n        handleClose()\n    }\n\n    let len = 0;\n    \n    const setInquiries = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Date / Time',\n                    field: 'createdAt',\n                    sort: 'desc'\n                },\n                {\n                    label: 'Last Name',\n                    field: 'lastName'\n                },\n                {\n                    label: 'First Name',\n                    field: 'firstName'\n                },\n                {\n                    label: 'Company Name',\n                    field: 'companyName'\n                },\n                \n                {\n                    label: 'Status',\n                    field: 'inquiryStatus'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions'\n                }\n            ],\n            rows: []\n         }\n\n         inquiries.forEach(inquiry => {\n             if(inquiry.concernType==='Appointment' && (inquiry.inquiryStatus !== \"Deleted\" && inquiry.inquiryStatus !== \"Resolved\")){\n                \n                data.rows.push({\n                    createdAt: inquiry.createdAt,\n                    firstName: inquiry.firstName,\n                    lastName: inquiry.lastName,\n                    companyName: inquiry.companyName,\n                    inquiryStatus: <p style={{ color: 'green' }}>{inquiry.inquiryStatus}</p>,\n                    actions:\n                    <Fragment>\n                        <div style={{display: 'flex'}}>\n                            <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                                <i className='fa fa-eye'></i>\n                            </Link>\n                            <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => {\n                                handleShow()\n                                setId(inquiry._id)\n                            }}>\n                                <i className='fa fa-trash'></i>\n                            </button>\n                        </div>     \n                    </Fragment>\n                 })\n             }\n         })\n\n         return data\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Appointments'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\n                <div id=\"sidebar-wrapper\" >\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )\n                        }\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\n                            <i className=\"fa fa-bars\"   ></i>\n                        </a>\n                        <Modal show={show} onHide={handleClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Move to Trash?</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>Are you sure you want to move this message to Trash?</Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={handleClose}>\n                                Close\n                                </Button>\n                                <Button variant=\"primary\" onClick={() => updateInquiryHandler(id, \"Deleted\")}>\n                                Yes, I'm sure\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                        <Fragment>\n                        <div style={{padding: '30px'}}>\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Inbox - Appointments</h1>\n                            {loading? <Loader/> : (\n                                <MDBDataTableV5\n                                    data={setInquiries()}\n                                    entries={5}\n                                    entriesOptions={[5, 10, 15, 20]}\n                                    searchTop\n                                    scrollX\n                                />\n                            )}\n                        </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListOrders","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListInquiries.js",["341"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTableV5 } from 'mdbreact'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport { useAlert } from 'react-alert'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { logout } from './../../actions/userActions'\nimport { Modal, Button } from 'react-bootstrap'\n\nconst ListOrders = ({history}) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\n    const { isUpdated } = useSelector(state => state.inquiry)\n    const { user } = useSelector(state => state.auth)\n\n    const [isToggled, setToggled] = useState('false')\n    const [id, setId] = useState('')\n\n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n\n    useEffect(() => {\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n        \n        dispatch(listInquiry());\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n        if(isUpdated){\n            history.push('/admin/inquiries')\n\n            dispatch({\n                type: UPDATE_INQUIRY_RESET\n            })\n        }\n    }, [dispatch, alert, error, isUpdated, history])\n\n    const updateInquiryHandler = (id, inquiryStatus) => { \n        const formData = new FormData();\n        formData.set('inquiryStatus', inquiryStatus);\n\n        alert.success('Message has been moved to Trash.');\n        dispatch(updateInquiry(id, formData));\n        handleClose()\n    }\n    \n    const setInquiries = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Date / Time',\n                    field: 'createdAt',\n                    sort: 'desc'\n                },\n                {\n                    label: 'Last Name',\n                    field: 'lastName'\n                },\n                {\n                    label: 'First Name',\n                    field: 'firstName'\n                },\n                {\n                    label: 'Company Name',\n                    field: 'companyName'\n                },\n                \n                {\n                    label: 'Status',\n                    field: 'inquiryStatus'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions'\n                }\n            ],\n            rows: []\n         }\n\n         inquiries.forEach(inquiry => {\n             if(inquiry.concernType==='Inquiry' && (inquiry.inquiryStatus !== \"Deleted\" && inquiry.inquiryStatus !== \"Resolved\")){\n                data.rows.push({\n                    createdAt: inquiry.createdAt,\n                    firstName: inquiry.firstName,\n                    lastName: inquiry.lastName,\n                    companyName: inquiry.companyName,\n                    inquiryStatus: <p style={{ color: 'green' }}>{inquiry.inquiryStatus}</p>,\n                    actions:\n                    <Fragment>\n                        <div style={{display: 'flex'}}>\n                            <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                                <i className='fa fa-eye'></i>\n                            </Link>\n                            <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => {\n                                handleShow()\n                                setId(inquiry._id)\n                            }}>\n                                <i className='fa fa-trash'></i>\n                            </button>\n                        </div>\n                    </Fragment>\n                 })\n             }\n         })\n\n         return data\n    }\n    \n    return (\n        <Fragment>\n            <MetaData title={'Inquiries'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\n                <div id=\"sidebar-wrapper\" >\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )\n                        }\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\n                            <i className=\"fa fa-bars\"   ></i>\n                        </a>\n                        <Modal show={show} onHide={handleClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Move to Trash?</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>Are you sure you want to move this message to Trash?</Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={handleClose}>\n                                Close\n                                </Button>\n                                <Button variant=\"primary\" onClick={() => updateInquiryHandler(id, \"Deleted\")}>\n                                Yes, I'm sure\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                        <Fragment>\n                            <div style={{padding: '30px'}}>\n                                <h1 className='mt-3 mb-3 ml-10 mr-10'>Inbox - Inquiry</h1>\n                                {loading? <Loader/> : (\n                                    <MDBDataTableV5\n                                        data={setInquiries()}\n                                        entries={5}\n                                        entriesOptions={[5, 10, 15, 20]}\n                                        searchTop\n                                        scrollX\n                                    />\n                                )}\n                            </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListOrders","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListOthers.js",["342","343"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTableV5 } from 'mdbreact'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport { useAlert } from 'react-alert'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { logout } from './../../actions/userActions'\nimport { Modal, Button } from 'react-bootstrap'\n\nconst ListOrders = ({history}) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\n    const { isUpdated } = useSelector(state => state.inquiry)\n    const { user } = useSelector(state => state.auth)\n\n    const [isToggled, setToggled] = useState('false')\n    const [id, setId] = useState('')\n\n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n\n    useEffect(() => {\n        dispatch(listInquiry());\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n        if(isUpdated){\n            history.push('/admin/others')\n\n            dispatch({\n                type: UPDATE_INQUIRY_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, isUpdated, history])\n\n    const updateInquiryHandler = (id, inquiryStatus) => { \n        const formData = new FormData();\n        formData.set('inquiryStatus', inquiryStatus);\n\n        alert.success('Message has been moved to Trash.');\n        dispatch(updateInquiry(id, formData));\n        handleClose()\n    }\n    \n    let len = 0;\n\n    const setInquiries = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Date / Time',\n                    field: 'createdAt',\n                    sort: 'desc'\n                },\n                {\n                    label: 'Last Name',\n                    field: 'lastName'\n                },\n                {\n                    label: 'First Name',\n                    field: 'firstName'\n                },\n                {\n                    label: 'Company Name',\n                    field: 'companyName'\n                },\n                \n                {\n                    label: 'Status',\n                    field: 'inquiryStatus'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions'\n                }\n            ],\n            rows: []\n         }\n\n         inquiries.forEach(inquiry => {\n             if(inquiry.concernType==='Others'  && (inquiry.inquiryStatus !== \"Deleted\" && inquiry.inquiryStatus !== \"Resolved\")){\n                \n                data.rows.push({\n                    createdAt: inquiry.createdAt,\n                    firstName: inquiry.firstName,\n                    lastName: inquiry.lastName,\n                    companyName: inquiry.companyName,\n                    inquiryStatus: <p style={{ color: 'green' }}>{inquiry.inquiryStatus}</p>,\n                    actions:\n                    <Fragment>\n                        <div style={{display: 'flex'}}>\n                            <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                                <i className='fa fa-eye'></i>\n                            </Link>\n                            <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => {\n                                handleShow()\n                                setId(inquiry._id)\n                            }}>\n                                <i className='fa fa-trash'></i>\n                            </button>\n                        </div>\n                    </Fragment>\n                 })\n             }\n         }) \n         return data\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Others'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\n                <div id=\"sidebar-wrapper\" >\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )\n                        }\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\n                            <i className=\"fa fa-bars\"   ></i>\n                        </a>\n                        <Modal show={show} onHide={handleClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Move to Trash?</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>Are you sure you want to move this message to Trash?</Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={handleClose}>\n                                Close\n                                </Button>\n                                <Button variant=\"primary\" onClick={() => updateInquiryHandler(id, \"Deleted\")}>\n                                Yes, I'm sure\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                        <Fragment>\n                        <div style={{padding: '30px'}}>\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Inbox - Others</h1>\n                            {loading? <Loader/> : (\n                                <MDBDataTableV5\n                                    data={setInquiries()}\n                                    entries={5}\n                                    entriesOptions={[5, 10, 15, 20]}\n                                    searchTop\n                                    scrollX\n                                />\n                            )}\n                        </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListOrders","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListArchives.js",["344","345"],"import React, { Fragment, useEffect , useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTableV5 } from 'mdbreact'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport '../../css/dashboard.css'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { logout } from './../../actions/userActions'\nimport { Modal, Button } from 'react-bootstrap'\n\nconst ListArchives = ({history}) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\n    const { isUpdated } = useSelector(state => state.inquiry)\n    const { user } = useSelector(state => state.auth)\n\n    const [isToggled, setToggled] = useState('false')\n    const [id, setId] = useState('')\n\n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    useEffect(() => {\n        dispatch(listInquiry());\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n        \n        if(isUpdated){\n            dispatch({\n                type: UPDATE_INQUIRY_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, isUpdated, history])\n\n    const updateInquiryHandler = (id, inquiryStatus) => { \n        const formData = new FormData();\n        formData.set('inquiryStatus', inquiryStatus);\n\n        if(inquiryStatus === 'Deleted') {\n            alert.success('Message has been moved to Trash.');\n            history.push('/admin/archives')\n            dispatch(updateInquiry(id, formData));\n            handleClose()\n        } else {\n            alert.success('Message has been restored.');\n            history.push('/admin/archives')\n            dispatch(updateInquiry(id, formData));\n        }\n    }\n\n    let len = 0;\n\n    const setInquiries = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Date / Time',\n                    field: 'createdAt',\n                    sort: 'desc'\n                },\n                {\n                    label: 'Last Name',\n                    field: 'lastName'\n                },\n                {\n                    label: 'First Name',\n                    field: 'firstName'\n                },\n                {\n                    label: 'Company Name',\n                    field: 'companyName'\n                },\n                \n                {\n                    label: 'Concern Type',\n                    field: 'concernType'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions'\n                }\n            ],\n            rows: []\n         }\n\n         inquiries.forEach(inquiry => {\n             if(inquiry.inquiryStatus==='Resolved'){\n                \n                data.rows.push({\n                    createdAt: inquiry.createdAt,\n                    firstName: inquiry.firstName,\n                    lastName: inquiry.lastName,\n                    companyName: inquiry.companyName,\n                    concernType: String(inquiry.concernType),\n                    actions:\n                    <Fragment>\n                        <div style={{display: 'flex'}}>\n                            <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                                <i className='fa fa-eye'></i>\n                            </Link>\n                            <button className=\"btn btn-secondary py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Unresolved\")}>\n                                <i className='fa fa-undo'></i>\n                            </button>\n                            <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => {\n                                handleShow()\n                                setId(inquiry._id)\n                            }}>\n                                <i className='fa fa-trash'></i>\n                            </button>\n                        </div>\n                    </Fragment>\n                 })\n             }\n         })\n\n         return data\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Archives'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\n                <div id=\"sidebar-wrapper\" >\n                    <ul className=\"sidebar-nav\">\n                                <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                                <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                                <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                                <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                                {user && user.role !== 'admin' ? (\n                                        <Fragment>\n                                            <hr/>\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                        </Fragment>\n                                    ) : (\n                                        <Fragment>\n                                            <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                            <hr/>\n                                            <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                            <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                            <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                            <hr/>\n                                            <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                            <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                        </Fragment>\n                                    )\n                                }\n                                <hr/>\n                                <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                            </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\n                            <i className=\"fa fa-bars\"   ></i>\n                        </a>\n                        <Modal show={show} onHide={handleClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Move to Trash?</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>Are you sure you want to move this message to Trash?</Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={handleClose}>\n                                Close\n                                </Button>\n                                <Button variant=\"primary\" onClick={() => updateInquiryHandler(id, \"Deleted\")}>\n                                Yes, I'm sure\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                        <Fragment>\n                            <div style={{padding: '30px'}}>\n                                <h1 className='mt-3 mb-3 ml-10 mr-10'>Archives</h1>\n                                {loading ? <Loader/> : (\n                                    <MDBDataTableV5\n                                        data={setInquiries()}\n                                        entries={5}\n                                        entriesOptions={[5, 10, 15, 20]}\n                                        searchTop\n                                        scrollX\n                                    />\n                                )}\n                            </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListArchives","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListTrash.js",["346","347","348"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTableV5 } from 'mdbreact'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport { useAlert } from 'react-alert'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { deleteInquiry, updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\nimport { DELETE_INQUIRY_RESET, UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { logout } from './../../actions/userActions'\nimport { Modal, Button } from 'react-bootstrap'\n\nconst ListTrash = ( { history} ) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\n    const { deleteError, isUpdated, isDeleted } = useSelector(state => state.inquiry)\n\n    const [deleteAll, setDeleteAll] = useState(false)\n\n    const { user } = useSelector(state => state.auth)\n\n    const [isToggled, setToggled] = useState('false')\n    const [id, setId] = useState('')\n\n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const [emptyShow, setEmptyShow] = useState(false);\n\n    const handleEmptyClose = () => setEmptyShow(false);\n    const handleEmptyShow = () => setEmptyShow(true);\n\n    useEffect(() => {\n        dispatch(listInquiry());\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n        \n        if(deleteError){\n            alert.error(deleteError)\n            dispatch(clearErrors())\n        }\n\n        if(isUpdated){\n            history.push('/admin/trash')\n\n            dispatch({\n                type: UPDATE_INQUIRY_RESET\n            })\n        }\n\n        if(isDeleted && deleteAll){\n            dispatch({\n                type: DELETE_INQUIRY_RESET\n            })\n        }\n\n        if(isDeleted && deleteAll === false){\n            alert.success('Message has been deleted.');\n            history.push('/admin/trash')\n\n            dispatch({\n                type: DELETE_INQUIRY_RESET\n            })\n        }\n        \n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, history, isDeleted, isUpdated, deleteError])\n\n    const setInquiries = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Date / Time',\n                    field: 'createdAt',\n                    sort: 'desc'\n                },\n                {\n                    label: 'Last Name',\n                    field: 'lastName'\n                },\n                {\n                    label: 'First Name',\n                    field: 'firstName'\n                },\n                {\n                    label: 'Company Name',\n                    field: 'companyName'\n                },\n                \n                {\n                    label: 'Concern Type',\n                    field: 'concernType'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions'\n                }\n            ],\n            rows: []\n         }\n\n         inquiries.forEach(inquiry => {\n             if(inquiry.inquiryStatus==='Deleted'){\n                \n                data.rows.push({\n                    createdAt: inquiry.createdAt,\n                    firstName: inquiry.firstName,\n                    lastName: inquiry.lastName,\n                    companyName: inquiry.companyName,\n                    concernType: String(inquiry.concernType),\n                    actions:\n                    <Fragment>\n                        <div style={{display: 'flex'}}>\n                            <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                                <i className='fa fa-eye'></i>\n                            </Link>\n                            <button className=\"btn btn-secondary py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Resolved\")}>\n                                <i className='fa fa-undo'></i>\n                            </button>\n                            <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => {\n                                handleShow()\n                                setId(inquiry._id)\n                            }}>\n                                <i className='fa fa-trash'></i>\n                            </button>\n                        </div>\n                    </Fragment>\n                 })\n             }\n         })\n\n         return data\n    }\n\n    const updateInquiryHandler = (id, inquiryStatus) => { \n        const formData = new FormData();\n        formData.set('inquiryStatus', inquiryStatus);\n\n        alert.success('Message has been restored.');\n        dispatch(updateInquiry(id, formData));\n    }\n\n    const deleteInquiryHandler = (id) => {\n        handleClose()\n        dispatch(deleteInquiry(id))\n    }\n\n    const emptyTrash = () => {\n        setDeleteAll(true)\n\n        let deletedInquiryCount = 0\n\n        inquiries.forEach(inquiry => {\n            if(inquiry.inquiryStatus === 'Deleted') {\n                deletedInquiryCount += 1\n                dispatch(deleteInquiry(inquiry._id))\n                deletedInquiryCount -= 1\n            }\n        })\n\n        if(deletedInquiryCount == 0){\n            alert.success('Trash has been emptied.'); //this is working\n        } \n\n        handleEmptyClose()\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Trash'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\n                <div id=\"sidebar-wrapper\" >\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )\n                        }\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\n                            <i className=\"fa fa-bars\"   ></i>\n                        </a>\n                        <Modal show={show} onHide={handleClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Delete Message?</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>Are you sure you want to delete this? This cannot be undone.</Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={handleClose}>\n                                Close\n                                </Button>\n                                <Button variant=\"primary\" onClick={() => deleteInquiryHandler(id)}>\n                                Yes, I'm sure\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                        <Modal show={emptyShow} onHide={handleEmptyClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Empty Trash?</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>Are you sure you want to delete ALL messages? This cannot be undone.</Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={handleEmptyClose}>\n                                Close\n                                </Button>\n                                <Button variant=\"primary\" onClick={() => emptyTrash()}>\n                                Yes, I'm sure\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                        <Fragment>\n                        <div style={{padding: '30px'}}>\n                            {loading? <Loader/> : (\n                                <Fragment>\n                                    <div style={{display: 'flex'}}>\n                                        <div style={{marginRight: 'auto'}}>\n                                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Trash</h1>\n                                        </div>\n                                        <div style={{marginLeft: 'auto', marginTop: '30px'}}>\n                                            <Link>\n                                                <button \n                                                    className='btn btn-dark btn-sm text-capitalize mb-5' \n                                                    onClick={handleEmptyShow}\n                                                    disabled={setInquiries().rows.length === 0 ? true : false}\n                                                >\n                                                    Empty Trash\n                                                </button>\n                                            </Link>\n                                        </div>\n                                    </div>\n                                    <MDBDataTableV5\n                                        data={setInquiries()}\n                                        entries={5}\n                                        entriesOptions={[5, 10, 15, 20]}\n                                        searchTop\n                                        scrollX\n                                    />\n                                </Fragment>\n                            )}\n                        </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListTrash","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListAbout.js",["349"],"import React, { Fragment, useEffect , useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTableV5 } from 'mdbreact'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport '../../css/dashboard.css'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAboutDetails, clearErrors } from '../../actions/websiteActions'\nimport { UPDATE_ABOUT_RESET } from '../../constants/websiteConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { logout } from './../../actions/userActions'\n\nconst ListAbout = ({history}) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, abouts } = useSelector(state => state.abouts)\n    const { isUpdated } = useSelector(state => state.website)\n    const { user } = useSelector(state => state.auth)\n\n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n\n    useEffect(() => {\n        dispatch(getAboutDetails());\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n        \n        if(isUpdated){\n            alert.success('About Us information has been updated successfully.');\n            history.push('/admin/about')\n\n            dispatch({\n                type: UPDATE_ABOUT_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, isUpdated, history])\n\n    const setAboutData = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Title',\n                    field: 'title',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Description',\n                    field: 'description',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                    sort: 'asc'\n                }\n            ],\n            rows: []\n         }\n\n         abouts.forEach(about => {\n            data.rows.push({\n                title: about.title,\n                description: about.description,\n                actions:\n                <Fragment>\n                    <div style={{display: 'flex'}}>\n                        <Link to={`/admin/about/${about._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                            <i className='fa fa-pencil'></i>\n                        </Link>\n                    </div>\n                </Fragment>\n             })\n         })\n\n         return data\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'All About Us'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\n                <div id=\"sidebar-wrapper\" >\n                    <ul className=\"sidebar-nav\">\n                                <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                                <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                                <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                                <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                                {user && user.role !== 'admin' ? (\n                                        <Fragment>\n                                            <hr/>\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                        </Fragment>\n                                    ) : (\n                                        <Fragment>\n                                            <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                            <hr/>\n                                            <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                            <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\n                                            <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                            <hr/>\n                                            <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                            <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                        </Fragment>\n                                    )\n                                }\n                                <hr/>\n                                <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                            </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\n                            <i className=\"fa fa-bars\"   ></i>\n                        </a>\n                        <Fragment>\n                        <div style={{padding: '30px'}}>\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Update About Us</h1>\n                            {loading ? <Loader/> : (\n                                <MDBDataTableV5\n                                    data={setAboutData()}\n                                    paging={false}\n                                    searching={false}\n                                    searchTop\n                                    scrollX\n                                />\n                            )}\n                        </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListAbout\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListHome.js",["350","351"],"import React, { Fragment, useEffect , useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTableV5 } from 'mdbreact'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport '../../css/dashboard.css'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getHomes, clearErrors } from '../../actions/websiteActions'\nimport { UPDATE_HOME_RESET } from '../../constants/websiteConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { logout } from './../../actions/userActions'\n\nconst ListHome = ({history}) => {\n    \n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, homes } = useSelector(state => state.homes)\n    const { isUpdated } = useSelector(state => state.website)\n    const { user } = useSelector(state => state.auth)\n\n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n\n    useEffect(() => {\n        dispatch(getHomes());\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n        \n        if(isUpdated){\n            alert.success('Home information has been updated successfully.');\n            history.push('/admin/homes')\n\n            dispatch({\n                type: UPDATE_HOME_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, isUpdated, history])\n\n    const setHomeData = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Title',\n                    field: 'name',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Description',\n                    field: 'description',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Image Preview',\n                    field: 'image',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                    sort: 'asc'\n                }\n            ],\n            rows: []\n         }\n\n         homes.forEach(home => {\n            data.rows.push({\n                name: home.name,\n                description: home.description,\n                image: <Fragment>\n                    <figure>\n                        <img \n                            src={home.image.url} \n                            className='mt-3 mr-2' \n                            width='110' \n                            height='104'\n                        />\n                    </figure>\n                </Fragment>,\n                actions:\n                <Fragment>\n                    <div style={{display: 'flex'}}>\n                        <Link to={`/admin/home/${home._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                            <i className='fa fa-pencil'></i>\n                        </Link>\n                    </div>\n                </Fragment>\n             })\n         })\n\n         return data\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Home'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\n                <div id=\"sidebar-wrapper\" >\n                    <ul className=\"sidebar-nav\">\n                                <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                                <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                                <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                                <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                                {user && user.role !== 'admin' ? (\n                                        <Fragment>\n                                            <hr/>\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                        </Fragment>\n                                    ) : (\n                                        <Fragment>\n                                            <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                            <hr/>\n                                            <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                            <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\n                                            <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                            <hr/>\n                                            <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                            <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                        </Fragment>\n                                    )\n                                }\n                                <hr/>\n                                <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                            </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\n                            <i className=\"fa fa-bars\"   ></i>\n                        </a>\n                        <Fragment>\n                        <div style={{padding: '30px'}}>\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Update Home</h1>\n                            {loading ? <Loader/> : (\n                                <MDBDataTableV5\n                                    data={setHomeData()}\n                                    entries={5}\n                                    entriesOptions={[5, 10, 15, 20]}\n                                    paging={false}\n                                    searching={false}\n                                    searchTop\n                                    scrollX\n                                />\n                            )}\n                        </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListHome\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListFooter.js",["352"],"import React, { Fragment, useEffect , useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTableV5 } from 'mdbreact'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport '../../css/dashboard.css'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { UPDATE_FOOTER_RESET } from '../../constants/websiteConstants'\nimport { getFooterDetails, clearErrors } from '../../actions/websiteActions'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { logout } from './../../actions/userActions'\n\nconst ListFooter = ({history}) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, footerInfo } = useSelector(state => state.footerDetails)\n    const { isUpdated } = useSelector(state => state.website)\n    const { user } = useSelector(state => state.auth)\n\n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n\n    useEffect(() => {\n        dispatch(getFooterDetails());\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n        \n        if(isUpdated){\n            alert.success('Footer has been updated successfully.');\n            history.push('/admin/footer')\n\n            dispatch({\n                type: UPDATE_FOOTER_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, isUpdated, history])\n\n    const setFooterData = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Details',\n                    field: 'text',\n                    sort: 'asc'\n                }\n            ],\n            rows: [\n                {\n                    text: footerInfo.footerTitle\n                },\n                {\n                    text: footerInfo.footerDescription\n                },\n                {\n                    text: footerInfo.addressInfo\n                },\n                {\n                    text: footerInfo.phoneInfo\n                },\n                {\n                    text: footerInfo.cellphoneInfo\n                },\n                {\n                    text: footerInfo.emailInfo\n                }\n            ]\n         }\n         return data\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'All About Us'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}>\n                <div id=\"sidebar-wrapper\">\n                    <ul className=\"sidebar-nav\">\n                                <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                                <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                                <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                                <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                                {user && user.role !== 'admin' ? (\n                                        <Fragment>\n                                            <hr/>\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                        </Fragment>\n                                    ) : (\n                                        <Fragment>\n                                            <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                            <hr/>\n                                            <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                            <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\n                                            <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                            <hr/>\n                                            <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                            <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                        </Fragment>\n                                    )\n                                }\n                                <hr/>\n                                <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                            </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\n                        </a>\n                        <Fragment>\n                        <div style={{padding: '30px'}}>\n                            <div style={{display: 'flex'}}>\n                                <div style={{marginRight: 'auto'}}>\n                                    <h1 className='mt-3 mb-3 ml-10 mr-10'>Footer Details</h1>\n                                </div>\n                                <div style={{marginLeft: 'auto', marginTop: '30px'}}>\n                                    <Link to='/admin/update-footer'>\n                                        <button className='btn btn-dark btn-sm text-capitalize mb-5'>\n                                            Update Footer\n                                        </button>\n                                    </Link>\n                                </div>\n                            </div>\n                            {loading ? <Loader/> : (\n                                <MDBDataTableV5\n                                    data={setFooterData()}\n                                    paging={false}\n                                    searcing={false}\n                                    searchTop\n                                    scrollX\n                                />\n                            )}\n                        </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListFooter\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListServices.js",["353"],"import React, { Fragment, useEffect , useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTableV5 } from 'mdbreact'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport '../../css/dashboard.css'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getServices, clearErrors } from '../../actions/websiteActions'\nimport { UPDATE_SERVICES_RESET } from '../../constants/websiteConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { logout } from './../../actions/userActions'\n\nconst ListServices = ({history}) => {\n    \n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, services } = useSelector(state => state.services)\n    const { isUpdated } = useSelector(state => state.website)\n    const { user } = useSelector(state => state.auth)\n\n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n\n    useEffect(() => {\n        dispatch(getServices());\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n        \n        if(isUpdated){\n            alert.success('Services information has been updated successfully.');\n            history.push('/admin/service')\n\n            dispatch({\n                type: UPDATE_SERVICES_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, isUpdated, history])\n\n    const setServiceData = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Title',\n                    field: 'title',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Subtitle',\n                    field: 'subtitle',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Description',\n                    field: 'description',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Icon Preview',\n                    field: 'icon',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                    sort: 'asc'\n                }\n            ],\n            rows: []\n         }\n\n         services.forEach(service => {\n            data.rows.push({\n                title: service.title,\n                subtitle: service.subtitle,\n                description: service.description,\n                icon: <Fragment>\n                    <span className=\"fa-stack fa-2x\">\n                        <i className=\"fa fa-circle fa-stack-2x text-primary\"></i>\n                        <i className={`fa fa-${service.icon} fa-stack-1x fa-inverse`}></i>\n                    </span>\n                </Fragment>,\n                actions:\n                <Fragment>\n                    <div style={{display: 'flex'}}>\n                        <Link to={`/admin/service/${service._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                            <i className='fa fa-pencil'></i>\n                        </Link>\n                    </div>\n                </Fragment>\n             })\n         })\n\n         return data\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Home'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\n                <div id=\"sidebar-wrapper\" >\n                    <ul className=\"sidebar-nav\">\n                                <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                                <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                                <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                                <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                                {user && user.role !== 'admin' ? (\n                                        <Fragment>\n                                            <hr/>\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                        </Fragment>\n                                    ) : (\n                                        <Fragment>\n                                            <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                            <hr/>\n                                            <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                            <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\n                                            <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                            <hr/>\n                                            <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                            <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                        </Fragment>\n                                    )\n                                }\n                                <hr/>\n                                <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                            </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\n                            <i className=\"fa fa-bars\"   ></i>\n                        </a>\n                        <Fragment>\n                        <div style={{padding: '30px'}}>\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Update Services</h1>\n                            {loading ? <Loader/> : (\n                                <MDBDataTableV5\n                                    data={setServiceData()}\n                                    searchTop\n                                    scrollX\n                                    searching={false}\n                                    paging={false}\n                                />\n                            )}\n                        </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListServices\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ProductsList.js",["354","355"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTableV5 } from 'mdbreact'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport '../../css/dashboard.css'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAdminProducts, deleteProduct, clearErrors } from '../../actions/productActions'\nimport { DELETE_PRODUCT_RESET } from '../../constants/productConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { logout } from './../../actions/userActions'\nimport { Modal, Button } from 'react-bootstrap'\n\n\nconst ProductsList = ( {history} ) => {\n    \n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, products } = useSelector(state => state.products)\n    const { deleteError, isDeleted } = useSelector(state => state.product)\n    const { user } = useSelector(state => state.auth)\n    const [id, setId] = useState('')\n\n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    useEffect(() => {\n        dispatch(getAdminProducts());\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n        if(deleteError){\n            alert.error(deleteError)\n            dispatch(clearErrors())\n        }\n\n        if(isDeleted){\n            alert.success('Product has been deleted successfully.');\n            history.push('/admin/products')\n\n            dispatch({\n                type: DELETE_PRODUCT_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, history, isDeleted, deleteError])\n\n    let len = 0;\n\n    const setProducts = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Product Name',\n                    field: 'name',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Description',\n                    field: 'description',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Main Category',\n                    field: 'category',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Sub Category',\n                    field: 'subcategory',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions'\n                }\n            ],\n            rows: []\n         }\n\n         products.forEach(product => {\n            \n             data.rows.push({\n                name: product.name,\n                description: product.description,\n                category: product.category,\n                subcategory: product.subcategory,\n                actions:\n                <Fragment>\n                    <div style={{display: 'flex'}}>\n                        <Link to={`/admin/product/${product._id}`} className='btn btn-primary py-1 px-2'>\n                            <i className='fa fa-pencil'></i>\n                        </Link>\n                        <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => {\n                            handleShow()\n                            setId(product._id)\n                        }}>\n                            <i className='fa fa-trash'></i>\n                        </button>\n                    </div>\n                </Fragment>\n             })\n         })\n         return data\n    }\n\n    const deleteProductHandler = (id) => {\n        dispatch(deleteProduct(id))\n        handleClose()\n    }\n    \n    return (\n        <Fragment>\n            <MetaData title={'All Products'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\n            <div id=\"sidebar-wrapper\" >\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )\n                        }\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\n                            <i className=\"fa fa-bars\"   ></i>\n                        </a>\n                        <Fragment>\n                            <div style={{padding: '30px'}}>\n                                <div style={{display: 'flex'}}>\n                                    <div style={{marginRight: 'auto'}}>\n                                        <h1 className='mt-3 mb-3 ml-10 mr-10'>All Products</h1>\n                                    </div>\n                                    <div style={{marginLeft: 'auto', marginTop: '30px'}}>\n                                        <Link to='/admin/newProduct'>\n                                            <button className='btn btn-dark btn-sm text-capitalize mb-5'>\n                                                Add New Product\n                                            </button>\n                                        </Link>\n                                    </div>\n                                </div>\n                                <Modal show={show} onHide={handleClose}>\n                                    <Modal.Header closeButton>\n                                        <Modal.Title>Delete Product?</Modal.Title>\n                                    </Modal.Header>\n                                    <Modal.Body>Are you sure you want to delete this product? This cannot be undone.</Modal.Body>\n                                    <Modal.Footer>\n                                        <Button variant=\"secondary\" onClick={handleClose}>\n                                        Close\n                                        </Button>\n                                        <Button variant=\"primary\" onClick={() => deleteProductHandler(id)}>\n                                        Yes, I'm sure\n                                        </Button>\n                                    </Modal.Footer>\n                                </Modal>\n                                {loading ? <Loader/> : (\n                                    <MDBDataTableV5\n                                        data={setProducts()}\n                                        entries={5}\n                                        entriesOptions={[5, 10, 15, 20]}\n                                        searchTop\n                                        scrollX\n                                    />\n                                )}\n                            </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ProductsList\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateInquiry.js",["356"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateProduct.js",["357","358","359","360","361","362"],"import React, { Fragment, useState, useEffect } from 'react'\nimport MetaData from '../layout/MetaData'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport { Link } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateProduct, getProductDetails, clearErrors } from '../../actions/productActions'\nimport { UPDATE_PRODUCT_RESET } from '../../constants/productConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { logout } from './../../actions/userActions'\nimport imageCompression from 'browser-image-compression'\nimport { Modal, Button } from 'react-bootstrap'\n\nconst UpdateProduct = ( { match, history } ) => {\n\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n    const [image, setImage] = useState('');\n    const [category, setMainCategory] = useState('');\n    const [subcategory, setSubCategory] = useState('');\n    const [imagePreview, setImagePreview] = useState('')\n    const [useDefaultImage, setUseDefaultImage] = useState('')\n    \n    const [isChecked, setChecked] = useState('false')\n\n\n    const checkboxCheck = () => {\n        setChecked(!isChecked)\n    }\n\n    const categories = [\n        ' - ',\n        'Mechanical Engineering',\n        'DC Power Systems',\n        'Electrical Engineering Equipment',\n        'Test Equipment',\n        'Others'\n    ]\n\n    const me_subCategory = [\n        '-',\n        'Pumps and System',\n        'Fire Protection Systems',\n        'Others'\n    ]\n\n    const dc_subCategory = [\n        '-',\n        'Uninterrupted Power System',\n        'Battery Monitoring System',\n        'Batteries',\n        'Others'\n    ]\n    \n    const eee_subCategory = [\n        '-',\n        'Transformers',\n        'Others'\n    ]\n\n    const te_subCategory = [\n        '-',\n        'Partial Discharge Detection',\n        'Battery Discharge Capacity Tester',\n        'Battery Impedance or Internal Resistance',\n        'Load Banks',\n        'Battery Test Monitor',\n        'Portable Direct Ground Fault Finder',\n        'Earth Tester or Clamp Type',\n        'Others'\n    ]\n\n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const { error, product } = useSelector(state => state.productDetails)\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.product);\n    const { user } = useSelector(state => state.auth)\n\n    const productId = match.params.id\n\n    const [isToggled, setToggled] = useState('false')\n    \n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    useEffect(() => {\n\n        if(product && product._id !== productId) {\n            dispatch(getProductDetails(productId))\n        }\n        else { \n            setName(product.name)\n            setDescription(product.description)\n            setMainCategory(product.category)\n            setSubCategory(product.subcategory)\n            setImagePreview(product.image.url)\n        }\n\n        if(error){\n            history.push('/admin/products')\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if(updateError){\n            history.push('/admin/products')\n            alert.error(updateError);\n            dispatch(clearErrors());\n        }\n\n        if(isUpdated) {\n            history.push('/admin/products');\n            alert.success('Product updated successfully.')\n\n            dispatch({\n                type: UPDATE_PRODUCT_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, error, alert, isUpdated, updateError, product, productId, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('description', description);\n        formData.set('category', category);\n        if(String(category).includes(\"Others\")) {\n            formData.set('subcategory', \"Others\");\n        } else {\n            formData.set('subcategory', subcategory);\n        }\n        formData.set('useDefaultImage', useDefaultImage)\n        formData.set('image', image)\n\n        dispatch(updateProduct(product._id, formData));\n    }\n\n    const handleImageUpload = e => {\n        var imageFile = e.target.files[0];\n        console.log('originalFile instanceof Blob', imageFile instanceof Blob); // true\n        console.log(`originalFile size ${imageFile.size / 1024 / 1024} MB`);\n      \n        var options = {\n          maxSizeMB: 0.6,\n          maxWidthOrHeight: 1920,\n          useWebWorker: true\n        }\n        imageCompression(imageFile, options)\n          .then(function (compressedFile) {\n                addImage(compressedFile); // write your own logic\n          })\n          .catch(function (error) {\n            console.log(error.message);\n          });\n      }\n\n    const addImage = file => {\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            if(reader.readyState === 2){\n                setImagePreview(reader.result)\n                setImage(reader.result)\n            }\n        }\n\n        reader.readAsDataURL(file)\n    }\n\n    const discardChanges = () => {\n        handleClose()\n        history.push('/admin/products')\n    }\n    \n    return (\n        <Fragment>\n            <MetaData title={'Update Product'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\n            <div id=\"sidebar-wrapper\" >\n                <ul className=\"sidebar-nav\">\n                    <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                    <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                    <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                    <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                    {user && user.role !== 'admin' ? (\n                            <Fragment>\n                                <hr/>\n                                    <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                    <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                            </Fragment>\n                        ) : (\n                            <Fragment>\n                                <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                <hr/>\n                                <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                <hr/>\n                                <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                            </Fragment>\n                        )\n                    }\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} >\n                            <i className=\"fa fa-bars\"   ></i>\n                        </a>\n                        <Modal show={show} onHide={handleClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Discard Changes?</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>Are you sure you want to discard your changes?</Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={handleClose}>\n                                    Close\n                                </Button>\n                                <Button variant=\"primary\" onClick={discardChanges}>\n                                    Yes, I'm sure\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                        <Fragment>\n                        <div className=\"login-clean\">\n                            \n                            <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data'   >\n                                <h2 className=\"sr-only\">Update Product</h2>\n                                <div className=\"div-forgot-password\">\n                                    <h3 className=\"forgot-password-heading\">Update Product</h3>\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Name</h6>\n                                    <input \n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        name=\"product_name\"\n                                        value={name}\n                                        placeholder=\"Product Name\"\n                                        style={{width: '100%'}}\n                                        onChange={(e) => setName(e.target.value)}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Description</h6>\n                                    <textarea\n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        name=\"product_name\"\n                                        value={description}\n                                        placeholder=\"Product Description\"\n                                        style={{width: '100%', height: '150px'}}\n                                        onChange={(e) => setDescription(e.target.value)}\n                                        height='55px'\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                <h6>Main Category</h6>\n                                <div className=\"dropdown show\">\n                                    <select \n                                        name=\"mainCategory\" \n                                        className=\"product-dropdown\" \n                                        id=\"mainCategory\"\n                                        value={category}\n                                        onChange={(e) => setMainCategory(e.target.value)}\n                                    >\n                                        {categories.map(category => (\n                                            <option key={category} value={category}>{category}</option>\n                                        ))}\n                                    </select>\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <h6>Sub Category</h6>\n                                <div className=\"dropdown show\">\n                                    <select \n                                        name=\"subCategory\" \n                                        className=\"product-dropdown\" \n                                        id=\"subCategory\"\n                                        value={subcategory}\n                                        disabled={String(category).includes(\"Others\") ? true : false}\n                                        onChange={(e) => setSubCategory(e.target.value)}\n                                    >\n                                    \n                                    {String(category).includes(\"Mechanical Engineering\") ? (\n                                        <Fragment>\n                                            {me_subCategory.map(category => (\n                                                <option key={category} value={category}>{category}</option>\n                                            ))}\n                                        </Fragment>\n                                    ) : ((String(category).includes(\"DC Power Systems\") ? (\n                                        <Fragment>\n                                            {dc_subCategory.map(category => (\n                                                <option key={category} value={category}>{category}</option>\n                                            ))}\n                                        </Fragment>) : (\n                                            (String(category).includes(\"Electrical Engineering Equipment\")) ? (\n                                                <Fragment>\n                                                    {eee_subCategory.map(category => (\n                                                        <option key={category} value={category}>{category}</option>\n                                                    ))}\n                                                </Fragment>\n                                            ) : (\n                                                (String(category).includes(\"Test Equipment\")) ? (\n                                                    <Fragment>\n                                                        {te_subCategory.map(category => (\n                                                            <option key={category} value={category}>{category}</option>\n                                                        ))}\n                                                    </Fragment>) : (\n                                                        <Fragment>\n                                                            <option key=\"Others\" value=\"Others\">Others</option>\n                                                        </Fragment>)\n                                                )\n                                            )))\n                                        }\n                                        </select>\n                                    </div>\n                                </div>\n                                <div className=\"form-group\"> \n                                    <h6>Product Image</h6>\n                                    <input \n                                        type=\"file\" \n                                        name=\"product_images\" \n                                        onChange={handleImageUpload}\n                                    />\n                                    <br/>\n\n                                </div>\n\n                                <img \n                                    src={imagePreview} \n                                    alt='Image Preview'\n                                    className='mt-3 mr-2' \n                                    width='110' \n                                    height='104'\n                                />\n\n                                <div className=\"form-group\">\n                                        <button \n                                        className=\"btn btn-primary btn-block\" \n                                        type=\"submit\"\n                                    >\n                                        Update Product\n                                    </button>\n                                </div>\n                                <div className=\"form-group\">\n                                    <a\n                                        className=\"btn btn-secondary btn-block mt-2\"\n                                        onClick={handleShow}\n                                        style={{color: 'white'}}\n                                    >Discard</a>\n                                </div>\n                            </form>\n                        </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default UpdateProduct\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListSuperAdmins.js",["363","364","365","366"],"import React, { Fragment, useEffect , useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTableV5 } from 'mdbreact'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport '../../css/dashboard.css'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getUsers, deleteUser, clearErrors } from '../../actions/userActions'\nimport { DELETE_USER_RESET, UPDATE_USER_RESET } from '../../constants/userConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { logout } from '../../actions/userActions'\n\nconst ListUsers = ({history}) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, users } = useSelector(state => state.users)\n    const { user } = useSelector(state => state.auth)\n    const { isUpdated } = useSelector(state => state.updateUser)\n\n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    useEffect(() => {\n        dispatch(getUsers());\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n        \n        if(isUpdated){\n            alert.success('User has been updated successfully.');\n            history.push('/admin/users/superadmin')\n\n            dispatch({\n                type: UPDATE_USER_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, isUpdated, history])\n\n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n\n    let len = 0;\n\n    const setSuperAdminData = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Role',\n                    field: 'role',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Name',\n                    field: 'name',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Contact Number',\n                    field: 'contactNumber',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Email',\n                    field: 'email',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                    sort: 'asc'\n                }\n            ],\n            rows: []\n         }\n\n         users.forEach(superadmin => {\n            if(superadmin.role === 'superadmin') {\n                \n                data.rows.push({\n                    role: superadmin.role,\n                    name: superadmin.name,\n                    contactNumber: superadmin.contactNumber,\n                    email: superadmin.email,\n                    actions:   \n                    <Fragment>\n                        <div style={{display: 'flex'}}>\n                            <button\n                                className='btn btn-primary py-1 px-2 ml-2'\n                                disabled={(user.email === superadmin.email) ? false : true}\n                                onClick={\n                                    () => updateUser(superadmin._id)\n                                }\n                            >\n                                <i className='fa fa-pencil'></i>\n                            </button>\n                            <button className=\"btn btn-danger py-1 px-2 ml-2\"\n                                    disabled={true}\n                            >\n                                <i className='fa fa-trash'></i>\n                            </button>\n                        </div>\n                    </Fragment>\n                })\n            }\n         })\n\n         return data\n    }\n\n    const updateUser = (id) => {\n        history.replace(`/superadmin/user/${id}`)\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Superadmins'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\n            <div id=\"sidebar-wrapper\" >\n                <ul className=\"sidebar-nav\">\n                    <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                    <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                    <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                    <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                    {user && user.role !== 'admin' ? (\n                            <Fragment>\n                                <hr/>\n                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                            </Fragment>\n                        ) : (\n                            <Fragment>\n                                <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                <hr/>\n                                <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                <hr/>\n                                <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                            </Fragment>\n                        )}\n\n                    <hr/>\n                    <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                </ul>\n            </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\n                            <i className=\"fa fa-bars\"   ></i>\n                        </a>\n                        <Fragment>\n                        <div style={{padding: '30px'}}>\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Superadmins</h1>\n                            {loading? <Loader/> : (\n                                <MDBDataTableV5\n                                    data={setSuperAdminData()}\n                                    entries={5}\n                                    entriesOptions={[5, 10, 15, 20]}\n                                    searchTop\n                                    scrollX\n                                />\n                            )}\n                        </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListUsers\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateServices.js",["367","368","369"],"import React, { Fragment, useEffect, useState } from 'react'\nimport MetaData from '../layout/MetaData'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from  'react-redux'\nimport { updateServices, getServiceDetails, clearErrors } from '../../actions/websiteActions'\nimport { UPDATE_SERVICES_RESET } from '../../constants/websiteConstants'\n\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport { Link } from 'react-router-dom'\nimport { logout } from '../../actions/userActions'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { Modal, Button } from 'react-bootstrap'\n\nconst UpdateServices = ({ match, history }) => {\n\n    const [title, setTitle] = useState('');\n    const [subtitle, setSubtitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [iconBackground, setIconBackground] = useState('');\n    const [icon, setIcon] = useState('');\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, service } = useSelector(state => state.serviceDetails);\n    const { error: updateError, isUpdated, loading } = useSelector(state => state.website);\n    const { user } = useSelector(state => state.auth)\n    \n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    \n    const serviceId = match.params.id\n\n    useEffect(() => {\n        if(service && service._id !== serviceId) {\n            dispatch(getServiceDetails(serviceId))\n        }\n        else {\n            setTitle(service.title);\n            setSubtitle(service.subtitle);\n            setDescription(service.description);\n            setIconBackground(service.iconBackground);\n            setIcon(service.icon);\n        }\n\n        if(error){\n            history.push('/admin/service')\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n        \n        if(updateError){\n            history.push('/admin/service')\n            alert.error(updateError);\n            dispatch(clearErrors());\n        }\n\n        if(isUpdated){\n            alert.success('Service updated successfully');\n\n            history.push('/admin/service')\n\n            dispatch({\n                type: UPDATE_SERVICES_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n\n    }, [dispatch, alert, error, history, service, serviceId, isUpdated, updateError])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('title', title);\n        formData.set('subtitle', subtitle);\n        formData.set('description', description);\n        formData.set('iconBackground', iconBackground);\n        formData.set('icon', icon);\n\n        dispatch(updateServices(service._id, formData));\n    }\n\n    const discardChanges = () => {\n        handleClose()\n        history.push('/admin/service')\n    }\n    \n    return (\n        <Fragment>\n            <MetaData title={'Update Services'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\n            <div id=\"sidebar-wrapper\" >\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )\n                        }\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} >\n                        <i className=\"fa fa-bars\"   ></i>\n                    </a>\n                    <Modal show={show} onHide={handleClose}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>Discard Changes?</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>Are you sure you want to discard your changes?</Modal.Body>\n                        <Modal.Footer>\n                            <Button variant=\"secondary\" onClick={handleClose}>\n                                Close\n                            </Button>\n                            <Button variant=\"primary\" onClick={discardChanges}>\n                                Yes, I'm sure\n                            </Button>\n                        </Modal.Footer>\n                    </Modal>\n                    <div className=\"container-fluid\">\n                        <div className=\"login-clean\">\n                            <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data'    >\n                                <h2 className=\"sr-only\">Update Services</h2>\n                                <div className=\"div-forgot-password\">\n                                    <h3 className=\"forgot-password-heading\">Update Services </h3>\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Title</h6>\n                                    <input \n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        id=\"title\" \n                                        name=\"title\" \n                                        placeholder=\"Title\"\n                                        value={title}\n                                        disabled={true}\n                                        style={{backgroundColor: '#F5F5F5', color: 'gray'}}\n                                        onChange={(e) => setTitle(e.target.value)}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Subtitle</h6>\n                                    <input \n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        id=\"subtitle\" \n                                        name=\"subtitle\" \n                                        value={subtitle}\n                                        disabled={true}\n                                        onChange={(e) => setSubtitle(e.target.value)}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Description</h6>\n                                    <textarea\n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        name=\"description\"\n                                        value={description}\n                                        placeholder=\"Services Description\"\n                                        style={{width: '100%', height: '150px'}}\n                                        onChange={(e) => setDescription(e.target.value)}\n                                        height='55px'\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Icon Background (eg. primary, secondary)</h6>\n                                    <div class=\"input-group mb-3\">\n                                        <div class=\"input-group-prepend\">\n                                            <span class=\"input-group-text\" id=\"basic-addon2\">\n                                                text-\n                                            </span>\n                                        </div>\n                                        <input \n                                            type=\"text\" \n                                            className=\"form-control\" \n                                            id=\"iconBackground\" \n                                            name=\"iconBackground\" \n                                            value={iconBackground}\n                                            onChange={(e) => setIconBackground(e.target.value)}\n                                            aria-label=\"iconBackground\"\n                                            aria-describedby=\"basic-addon2\"\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Icon (eg. eye, check, info)</h6>\n                                    <div class=\"input-group mb-3\">\n                                        <div class=\"input-group-prepend\">\n                                            <span class=\"input-group-text\" id=\"basic-addon1\">\n                                                fa-\n                                            </span>\n                                        </div>\n                                        <input \n                                            type=\"text\" \n                                            className=\"form-control\" \n                                            id=\"icon\" \n                                            name=\"icon\" \n                                            value={icon}\n                                            onChange={(e) => setIcon(e.target.value)}\n                                            aria-label=\"icon\"\n                                            aria-describedby=\"basic-addon1\"\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"form-group text-center\">\n                                    <h6 style={{textAlign: 'left'}}>Icon Preview</h6>\n                                    <span className=\"fa-stack fa-4x\">\n                                        <i className={`fa fa-circle fa-stack-2x text-${iconBackground}`}></i>\n                                        <i className={`fa fa-${icon} fa-stack-1x fa-inverse`}></i>\n                                    </span>\n                                </div>\n                                <div className=\"form-group\">\n                                    <button \n                                        className=\"btn btn-primary btn-block\" \n                                        type=\"submit\"\n                                    >\n                                        Update Services\n                                    </button>\n                                </div>\n                                <div className=\"form-group\">\n                                    <a\n                                        className=\"btn btn-secondary btn-block mt-2\"\n                                        onClick={handleShow}\n                                        style={{color: 'white'}}\n                                    >Discard</a>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default UpdateServices\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListAdmins.js",["370","371"],"import React, { Fragment, useEffect , useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTableV5 } from 'mdbreact'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport '../../css/dashboard.css'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getUsers, deleteUser, clearErrors } from '../../actions/userActions'\nimport { DELETE_USER_RESET, UPDATE_USER_RESET } from '../../constants/userConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { logout } from '../../actions/userActions'\nimport { Modal, Button } from 'react-bootstrap'\n\nconst ListUsers = ({history}) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, users } = useSelector(state => state.users)\n    const { user } = useSelector(state => state.auth)\n    const { deleteError, isUpdated, isDeleted } = useSelector(state => state.updateUser)\n\n    const [isToggled, setToggled] = useState('false')\n    const [id, setId] = useState('')\n\n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    useEffect(() => {\n        dispatch(getUsers());\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n        \n        if(deleteError){\n            alert.error(deleteError)\n            dispatch(clearErrors())\n        }\n\n        if(isUpdated){\n            alert.success('User has been updated.');\n            history.push('/admin/users/admin')\n\n            dispatch({\n                type: UPDATE_USER_RESET\n            })\n        }\n\n        if(isDeleted){\n            alert.success('User has been deleted.');\n            history.push('/admin/users/admin')\n\n            dispatch({\n                type: DELETE_USER_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, isDeleted, isUpdated, deleteError, history])\n\n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n\n    let len = 0;\n    \n    const setAdminData = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Role',\n                    field: 'role',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Name',\n                    field: 'name',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Contact Number',\n                    field: 'contactNumber',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Email',\n                    field: 'email',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                    sort: 'asc'\n                }\n            ],\n            rows: []\n         }\n\n         users.forEach(user => {\n            if(user.role === 'admin'){\n                \n                data.rows.push({\n                    role: user.role,\n                    name: user.name,\n                    contactNumber: user.contactNumber,\n                    email: user.email,\n                    actions:\n                    <Fragment>\n                        <div style={{display: 'flex'}}>\n                            <Link to={`/superadmin/user/${user._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                                <i className='fa fa-pencil'></i>\n                            </Link>\n                            <button className=\"btn btn-danger py-1 px-2 ml-2\"\n                                disabled={user.role === 'superadmin' ? true : false}\n                                onClick={() => {\n                                    setId(user._id)\n                                    handleShow()\n                                }}\n                            >\n                                <i className='fa fa-trash'></i>\n                            </button>\n                        </div>\n                    </Fragment>\n                })\n            }\n         })\n\n         return data\n    }\n\n    const deleteUserHandler = (id) => {\n        dispatch(deleteUser(id))\n        handleClose()\n    }\n    \n    return (\n        <Fragment>\n            <MetaData title={'Admins'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\n            <div id=\"sidebar-wrapper\" >\n                <ul className=\"sidebar-nav\">\n                    <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                    <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                    <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                    <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                    {user && user.role !== 'admin' ? (\n                            <Fragment>\n                                <hr/>\n                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                            </Fragment>\n                        ) : (\n                            <Fragment>\n                                <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                <hr/>\n                                <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                <hr/>\n                                <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                            </Fragment>\n                        )}\n\n                    <hr/>\n                    <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                </ul>\n            </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\n                            <i className=\"fa fa-bars\"   ></i>\n                        </a>\n                        <Modal show={show} onHide={handleClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Delete user account?</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>Are you sure you want to delete this user? This cannot be undone.</Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={handleClose}>\n                                Close\n                                </Button>\n                                <Button variant=\"primary\" onClick={() => deleteUserHandler(id)}>\n                                Yes, I'm sure\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                        <Fragment>\n                        <div style={{padding: '30px'}}>\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Admins</h1>\n                            {loading? <Loader/> : (\n                                <MDBDataTableV5\n                                    data={setAdminData()}\n                                    entries={5}\n                                    entriesOptions={[5, 10, 15, 20]}\n                                    searchTop\n                                    scrollX\n                                />\n                            )}\n                        </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListUsers\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/product/ProductDetails.js",["372","373"],"import React, { Fragment, useEffect, useState } from 'react'\nimport '../../css/individual-product.css'\nimport { useDispatch, useSelector } from  'react-redux'\nimport { getProductDetails, clearErrors } from '../../actions/productActions'\nimport Loader from '../layout/Loader'\nimport { useAlert } from 'react-alert'\nimport MetaData from '../layout/MetaData'\nimport {Carousel} from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { INSIDE_DASHBOARD_FALSE } from '../../constants/dashboardConstants'\n\nconst ProductDetails = ( { match } ) => {\n\n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const { loading, error, product } = useSelector(state => state.productDetails)\n    \n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n    const [image, setImage] = useState('');\n    const [category, setMainCategory] = useState('');\n    const [subcategory, setSubCategory] = useState('');\n\n    const productId = match.params.id\n\n\n    useEffect(() => {\n\n        if(product && product._id !== productId) {\n            dispatch(getProductDetails(productId))\n        }\n        else { \n            setName(product.name)\n            setDescription(product.description)\n            setMainCategory(product.category)\n            setSubCategory(product.subcategory)\n            setImage(product.image.url)\n        }\n        \n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n        \n        dispatch({\n            type: INSIDE_DASHBOARD_FALSE\n        })\n    }, [dispatch, alert, error, product, productId])\n\n    return (\n        <Fragment>\n            {loading ? <Loader/> : (\n                <Fragment>\n                    <MetaData title={name}/>\n                    <div class=\"container-fluid individual-product\">\n                        <div class=\"row my-container\">\n                            <div class=\"col-sm-12 col-md-6 image-container\">\n                                <img className=\"individual-product-image\" width=\"400px\" src={image} alt={`Image of ${name}`}/>\n                            </div>\n                            <div class=\"col-sm-12 col-md-6 info-container\">\n                                <div class=\"row\">\n                                    <div class=\"col\">\n                                        <h3>{name}</h3>\n                                        <h6>{category} <i className=\"fa fa-angle-right\"></i> {subcategory}</h6>\n                                        <p style={{paddingTop: '10px'}}>{description}</p>\n                                    </div>\n                                </div>\n                                <div class=\"row d-flex link\">\n                                    <div class=\"col my-link\">\n                                    <Link className=\"link-back\" to=\"/our-products\">\n                                        Back to Products <i className=\"fa fa-angle-right\"></i>\n                                    </Link>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nexport default ProductDetails\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateUser.js",["374","375","376"],"import React, { Fragment, useState, useEffect } from 'react'\nimport MetaData from '../layout/MetaData'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport { Link } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateUser, getUserDetails, clearErrors } from '../../actions/userActions'\nimport { UPDATE_USER_RESET } from '../../constants/userConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { logout } from './../../actions/userActions'\nimport { Modal, Button } from 'react-bootstrap'\n\nconst UpdateUser = ({ match, history }) => {\n    const [name, setName] = useState('');\n    const [contactNumber, setContactNumber] = useState('');\n    const [role, setRole] = useState([]);\n    const [address, setAddress] = useState('');\n\n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const { error, user } = useSelector(state => state.getUser)\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.updateUser);\n\n    const userId = match.params.id\n\n    const [isToggled, setToggled] = useState('false')\n    \n    const roles = [\n        'admin',\n        'superadmin'\n    ]\n\n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    useEffect(() => {\n\n        if(user && user._id !== userId) {\n            dispatch(getUserDetails(userId))\n        }\n        else { \n            setName(user.name)\n            setContactNumber(user.contactNumber)\n            setRole(user.role)\n            setAddress(user.address)\n        }\n\n        if(error){\n            history.push('/admin/dashboard')\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if(updateError){\n            history.push('/admin/dashboard')\n            alert.error(updateError);\n            dispatch(clearErrors());\n        }\n\n        if(isUpdated) {\n            history.push('/admin/dashboard')\n            alert.success('User has been updated.')\n\n            dispatch({\n                type: UPDATE_USER_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, error, alert, isUpdated, updateError, user, userId, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('contactNumber', contactNumber);\n        formData.set('address', address);\n        formData.set('role', role);\n\n        dispatch(updateUser(user._id, formData));\n    }\n    \n    const discardChanges = (role) => {\n        if(role === 'admin') {\n            handleClose()\n            history.push('/admin/users/admin')\n        } else {\n            handleClose()\n            history.push('/admin/users/superadmin')\n        }\n    }\n    \n    return (\n        <Fragment>\n            <MetaData title={'Update User'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\n                <div id=\"sidebar-wrapper\" >\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        <hr/>\n                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} >\n                            <i className=\"fa fa-bars\"   ></i>\n                        </a>\n                        <Modal show={show} onHide={handleClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Discard Changes?</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>Are you sure you want to discard your changes?</Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={handleClose}>\n                                    Close\n                                </Button>\n                                <Button variant=\"primary\" onClick={discardChanges}>\n                                    Yes, I'm sure\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                        <Fragment>\n                        <div className=\"login-clean\">\n                            <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data'   >\n                                <h2 className=\"sr-only\">Update User</h2>\n                                <div className=\"div-forgot-password\">\n                                    <h3 className=\"forgot-password-heading\">Update User</h3>\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Name</h6>\n                                    <input \n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        name=\"name\"\n                                        value={name}\n                                        placeholder=\"Name\"\n                                        pattern=\"[A-Za-z\\s]{1,}\"\n                                        style={{width: '100%'}}\n                                        onChange={(e) => setName(e.target.value)}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Contact Number</h6>\n                                    <input\n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        name=\"contactNumber\"\n                                        value={contactNumber}\n                                        placeholder=\"09xx-xxx-xxxx\" \n                                        pattern=\"^[0][9]\\d{2}-\\d{3}-\\d{4}$\"\n                                        onChange={(e) => setContactNumber(e.target.value)}\n                                        height='55px'\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Address</h6>\n                                    <textarea\n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        name=\"address\"\n                                        value={address}\n                                        placeholder=\"Address\"\n                                        style={{width: '100%', height: '150px'}}\n                                        onChange={(e) => setAddress(e.target.value)}\n                                        height='55px'\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Role</h6>\n                                    <div className=\"dropdown show\">\n                                        <select \n                                            name=\"role\" \n                                            className=\"product-dropdown\" \n                                            id=\"role\"\n                                            value={role}\n                                            onChange={(e) => setRole(e.target.value)}\n                                        >\n                                            {roles.map(role => (\n                                                <option key={role} value={role}>{role}</option>\n                                            ))}\n                                        </select>\n                                    </div>\n                                </div>\n                                <div className=\"form-group\">\n                                    <button \n                                        className=\"btn btn-primary btn-block\" \n                                        type=\"submit\"\n                                    >\n                                        Update User\n                                    </button>\n                                </div>\n                                <div className=\"form-group\">\n                                    <a\n                                        className=\"btn btn-secondary btn-block mt-2\"\n                                        onClick={handleShow}\n                                        style={{color: 'white'}}\n                                    >Discard</a>\n                                </div>\n                            </form>\n                        </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default UpdateUser\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/user/Register.js",["377","378","379","380","381"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/user/PasswordSuccess.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/user/ForgotPassword.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/user/NewPassword.js",["382","383"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/route/ProtectedRoute.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/userActions.js",["384","385"],"import axios from 'axios'\nimport {\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    REGISTER_USER_REQUEST,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAIL,\n    LOAD_USER_REQUEST,\n    LOAD_USER_SUCCESS,\n    LOAD_USER_FAIL,\n    LOGOUT_SUCCESS,\n    UPDATE_PROFILE_REQUEST,\n    UPDATE_PROFILE_SUCCESS,\n    UPDATE_PROFILE_FAIL,\n    UPDATE_PASSWORD_REQUEST,\n    UPDATE_PASSWORD_SUCCESS,\n    UPDATE_PASSWORD_FAIL,\n    FORGOT_PASSWORD_REQUEST,\n    FORGOT_PASSWORD_SUCCESS,\n    FORGOT_PASSWORD_FAIL,\n    NEW_PASSWORD_REQUEST,\n    NEW_PASSWORD_SUCCESS,\n    NEW_PASSWORD_FAIL,\n    ALL_USERS_REQUEST,\n    ALL_USERS_SUCCESS,\n    ALL_USERS_FAIL,\n    GET_USER_REQUEST,\n    GET_USER_SUCCESS,\n    GET_USER_FAIL,\n    UPDATE_USER_REQUEST,\n    UPDATE_USER_SUCCESS,\n    UPDATE_USER_FAIL,\n    UPDATE_USER_RESET,\n    DELETE_USER_REQUEST,\n    DELETE_USER_SUCCESS,\n    DELETE_USER_RESET,\n    DELETE_USER_FAIL,\n    LOGOUT_FAIL,\n    CLEAR_ERRORS\n} from '../constants/userConstants'\n\n//Get product details\nexport const getUserDetails = (id) => async(dispatch) => {\n    try{\n        dispatch({\n            type: GET_USER_REQUEST\n        })\n\n        const { data } = await axios.get(`/api/v1/superadmin/user/${id}`)\n\n        dispatch({\n            type: GET_USER_SUCCESS,\n            payload: data.user\n        })\n    }\n    catch(error){\n        dispatch({\n            type: GET_USER_FAIL,\n            payload: error.response.data.message\n            }\n        )\n    }\n}\n\n// Update user (SUPERADMIN)\nexport const updateUser = (id, userData) => async(dispatch) => {\n    try{\n        dispatch({\n            type: UPDATE_USER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        }\n        const { data } = await axios.put(`/api/v1/superadmin/user/${id}`, userData, config)\n\n        dispatch({\n            type: UPDATE_USER_SUCCESS,\n            payload: data.success\n        })\n    }\n    catch(error){\n        dispatch({\n            type: UPDATE_USER_FAIL,\n            payload: error.response.data.message\n            }\n        )\n    }\n}\n\n// Delete user (ADMIN)\nexport const deleteUser = (id) => async(dispatch) => {\n    try{\n        dispatch({\n            type: DELETE_USER_REQUEST\n        })\n\n        const { data } = await axios.delete(`/api/v1/superadmin/user/${id}`)\n\n        dispatch({\n            type: DELETE_USER_SUCCESS,\n            payload: data.success\n        })\n    }\n    catch(error){\n        dispatch({\n            type: DELETE_USER_FAIL,\n            payload: error.response.data.message\n            }\n        )\n    }\n}\n\nexport const getUsers = () => async (dispatch) => {\n    try{\n        dispatch({\n            type: ALL_USERS_REQUEST\n        })\n\n        const { data } = await axios.get('/api/v1/superadmin/users')\n\n        dispatch({\n            type: ALL_USERS_SUCCESS,\n            payload: data\n        })\n    }\n    catch(error){\n        dispatch({\n            type: ALL_USERS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Login\nexport const login = ( email, password ) => async (dispatch) => {\n    try {\n        dispatch ({\n            type: LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/v1/login', { email, password }, config)\n\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: data.user\n        })\n\n    } catch (error) {\n        dispatch({\n            type: LOGIN_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Register user\nexport const register = ( userData ) => async (dispatch) => {\n    try {\n        dispatch ({\n            type: REGISTER_USER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        }\n\n        const { data } = await axios.post('/api/v1/superadmin/register', userData, config)\n\n        dispatch({\n            type: REGISTER_USER_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: REGISTER_USER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Load user\nexport const loadUser = () => async (dispatch) => {\n    try {\n        dispatch ({\n            type: LOAD_USER_REQUEST\n        })\n\n        const { data } = await axios.get('/api/v1/me')\n\n        dispatch({\n            type: LOAD_USER_SUCCESS,\n            payload: data.user\n        })\n\n    } catch (error) {\n        dispatch({\n            type: LOAD_USER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Logout user\nexport const logout = () => async (dispatch) => {\n    try {\n        await axios.get('/api/v1/logout')\n\n        dispatch({\n            type: LOGOUT_SUCCESS\n        })\n\n    } catch (error) {\n        dispatch({\n            type: LOGOUT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Update user profile\nexport const updateProfile = ( userData ) => async (dispatch) => {\n    try {\n        dispatch ({\n            type: UPDATE_PROFILE_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        }\n\n        const { data } = await axios.put('/api/v1/me/update', userData, config)\n\n        dispatch({\n            type: UPDATE_PROFILE_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PROFILE_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Update user password\nexport const updatePassword = ( passwords ) => async (dispatch) => {\n    try {\n        dispatch ({\n            type: UPDATE_PASSWORD_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put('/api/v1/password/update', passwords, config)\n\n        dispatch({\n            type: UPDATE_PASSWORD_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PASSWORD_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Forgot password\nexport const forgotPassword = ( email ) => async (dispatch) => {\n    try {\n        dispatch ({\n            type: FORGOT_PASSWORD_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/v1/password/forgot', email, config)\n\n        dispatch({\n            type: FORGOT_PASSWORD_SUCCESS,\n            payload: data.message\n        })\n\n    } catch (error) {\n        dispatch({\n            type: FORGOT_PASSWORD_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// New password\nexport const resetPassword = ( token, passwords ) => async (dispatch) => {\n    try {\n        dispatch ({\n            type: NEW_PASSWORD_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/password/reset/${token}`, passwords, config)\n\n        dispatch({\n            type: NEW_PASSWORD_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_PASSWORD_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n//clear errors\nexport const clearErrors = () => async(dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    })\n}","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/NewProduct.js",["386","387","388","389"],"import React, { Fragment, useState, useEffect } from 'react'\nimport MetaData from '../layout/MetaData'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport { Link } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { newProduct, clearErrors } from '../../actions/productActions'\nimport { NEW_PRODUCT_RESET, NEW_PRODUCT_REQUEST } from '../../constants/productConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { logout } from './../../actions/userActions'\nimport { OverlayTrigger, Tooltip} from 'react-bootstrap'\nimport imageCompression from 'browser-image-compression'\nimport { Modal, Button } from 'react-bootstrap'\n\nconst NewProduct = ( { history } ) => {\n    \n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n    const [image, setImage] = useState('');\n    const [category, setMainCategory] = useState('-');\n    const [subcategory, setSubCategory] = useState('');\n    const [imagePreview, setImagePreview] = useState('https://res.cloudinary.com/agiletechnodynamicsinc/image/upload/v1615204932/products/default-image-620x600_sdhmvy.jpg');\n    const [useDefaultImage, setUseDefaultImage] = useState('')\n\n    const [isChecked, setChecked] = useState('false')\n\n    const checkboxCheck = () => {\n        setChecked(!isChecked)\n    }\n\n    const categories = [\n        ' - ',\n        'Mechanical Engineering',\n        'DC Power Systems',\n        'Electrical Engineering Equipment',\n        'Test Equipment',\n        'Others'\n    ]\n\n    const me_subCategory = [\n        '-',\n        'Pumps and System',\n        'Fire Protection System',\n        'Others'\n    ]\n\n    const dc_subCategory = [\n        '-',\n        'Uninterrupted Power System',\n        'Battery Monitoring System',\n        'Batteries',\n        'Others'\n    ]\n    \n    const eee_subCategory = [\n        '-',\n        'Transformers',\n        'Others'\n    ]\n\n    const te_subCategory = [\n        '-',\n        'Partial Discharge Detection',\n        'Battery Discharge Capacity Tester',\n        'Battery Impedance or Internal Resistance',\n        'Load Banks',\n        'Battery Test Monitor',\n        'Portable Direct Ground Fault Finder',\n        'Earth Tester or Clamp Type',\n        'Others'\n    ]\n\n    const { loading, error, success } = useSelector(state => state.newProduct);\n\n    const { user } = useSelector(state => state.auth)\n    const [isToggled, setToggled] = useState('false')\n    \n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n    \n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    useEffect(() => {\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors());\n        }\n\n        if(success) {\n            history.push('/admin/products');\n            alert.success('Product created successfully.')\n        \n            dispatch({\n                type: NEW_PRODUCT_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, error, alert, success, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('description', description);\n        formData.set('category', category);\n        if(String(category).includes(\"Others\")) {\n            formData.set('subcategory', \"Others\");\n        } else {\n            formData.set('subcategory', subcategory);\n        }\n        formData.set('useDefaultImage', useDefaultImage)\n        formData.set('image', image)\n\n        dispatch(newProduct(formData));\n    }\n\n    const onChange = e => {\n        if(e.target.name === 'useDefaultImage') {\n            let chkbox = document.getElementById('useDefaultImage')\n\n            if(chkbox.checked == true) { //if changed to ===, register would not work\n                setUseDefaultImage(\"True\")\n            }\n            else{\n                setUseDefaultImage(\"False\")\n            }\n        } \n    }\n\n    const handleImageUpload = e => {\n        var imageFile = e.target.files[0];\n        console.log('originalFile instanceof Blob', imageFile instanceof Blob); // true\n        console.log(`originalFile size ${imageFile.size / 1024 / 1024} MB`);\n      \n        var options = {\n          maxSizeMB: 0.6,\n          maxWidthOrHeight: 1920,\n          useWebWorker: true\n        }\n        imageCompression(imageFile, options)\n          .then(function (compressedFile) {\n                addImage(compressedFile); // write your own logic\n          })\n          .catch(function (error) {\n            console.log(error.message);\n          });\n\n          dispatch({\n              type: NEW_PRODUCT_REQUEST\n          })\n      }\n\n    const addImage = file => {\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            if(reader.readyState === 2){\n                setImagePreview(reader.result)\n                setImage(reader.result)\n            }\n        }\n\n        reader.readAsDataURL(file)\n\n        dispatch({\n            type: NEW_PRODUCT_RESET\n        })\n    }\n\n    const discardChanges = () => {\n        handleClose()\n        history.push('/admin/products')\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'New Product'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}>\n            <div id=\"sidebar-wrapper\">\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )\n                        }\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <div>\n                            <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\n                                <i className=\"fa fa-bars\"   ></i>\n                            </a>\n                        </div>\n                        <Modal show={show} onHide={handleClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Discard Changes?</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>Are you sure you want to discard your changes?</Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={handleClose}>\n                                    Close\n                                </Button>\n                                <Button variant=\"primary\" onClick={discardChanges}>\n                                    Yes, I'm sure\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                    <Fragment>\n                    <div className=\"login-clean\">\n                        \n                        <form method=\"post\" onSubmit={submitHandler} encType='multipart/form-data'   >\n                            <h2 className=\"sr-only\">New Product</h2>\n                            <div className=\"div-forgot-password\">\n                                <h3 className=\"forgot-password-heading\">New Product</h3>\n                            </div>\n                            <div className=\"form-group\">\n                                <h6>Name</h6>\n                                <textarea \n                                    type=\"text\" \n                                    className=\"form-control\" \n                                    name=\"product_name\"\n                                    value={name}\n                                    placeholder=\"Product Name\"\n                                    style={{width: '100%'}}\n                                    onChange={(e) => setName(e.target.value)}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <h6>Description</h6>\n                                <textarea\n                                    type=\"text\" \n                                    className=\"form-control\" \n                                    name=\"product_name\"\n                                    style={{width: '100%', height: '150px'}}\n                                    value={description}\n                                    placeholder=\"Product Description\"\n                                    onChange={(e) => setDescription(e.target.value)}\n                                />\n                            </div>\n                            \n                            \n\n                            <div className=\"form-group\">\n                                <h6>Main Category</h6>\n                                <div className=\"dropdown show\">\n                                    <select \n                                        name=\"mainCategory\" \n                                        className=\"product-dropdown\" \n                                        id=\"mainCategory\"\n                                        value={category}\n                                        onChange={(e) => setMainCategory(e.target.value)}\n                                    >\n                                        {categories.map(category => (\n                                            <option key={category} value={category}>{category}</option>\n                                        ))}\n                                    </select>\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <h6>Sub Category</h6>\n                                <div className=\"dropdown show\">\n                                    <select \n                                        name=\"subCategory\" \n                                        className=\"product-dropdown\" \n                                        id=\"subCategory\"\n                                        value={subcategory}\n                                        disabled={(String(category).includes(\"-\") || String(category).includes(\"Others\") ) ? true : false}\n                                        onChange={(e) => setSubCategory(e.target.value)}\n                                    >\n                                    \n                                    {String(category).includes(\"Mechanical Engineering\") ? (\n                                        <Fragment>\n                                            {me_subCategory.map(category => (\n                                                <option key={category} value={category}>{category}</option>\n                                            ))}\n                                        </Fragment>\n                                    ) : ((String(category).includes(\"DC Power Systems\") ? (\n                                        <Fragment>\n                                            {dc_subCategory.map(category => (\n                                                <option key={category} value={category}>{category}</option>\n                                            ))}\n                                        </Fragment>) : (\n                                            (String(category).includes(\"Electrical Engineering Equipment\")) ? (\n                                                <Fragment>\n                                                    {eee_subCategory.map(category => (\n                                                        <option key={category} value={category}>{category}</option>\n                                                    ))}\n                                                </Fragment>\n                                            ) : (\n                                                (String(category).includes(\"Test Equipment\")) ? (\n                                                    <Fragment>\n                                                        {te_subCategory.map(category => (\n                                                            <option key={category} value={category}>{category}</option>\n                                                        ))}\n                                                    </Fragment>) : (\n                                                        <Fragment>\n                                                            <option key=\"Others\" value=\"Others\">Others</option>\n                                                        </Fragment>)\n                                            )\n                                        )))\n                                    }\n                                    </select>\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <h6>Product Image</h6>\n                                {isChecked ? (\n                                <input \n                                    type=\"file\" \n                                    name=\"image\" \n                                    onChange={handleImageUpload}\n                                />) : ((<OverlayTrigger overlay={<Tooltip id=\"tooltip-disabled\">Image upload disabled</Tooltip>}>\n                                <span className=\"d-inline-block\">\n                                <input \n                                    type=\"file\" \n                                    name=\"image\" \n                                    onChange={handleImageUpload}\n                                    disabled = {true}\n                                    style={{pointerEvents: 'none' }}\n                                />\n                                </span>\n                                </OverlayTrigger>))}\n                                \n                                <br/>\n                                <input \n                                    type='checkbox'\n                                    id='useDefaultImage'\n                                    name='useDefaultImage'\n                                    value={useDefaultImage}\n                                    onChange={onChange}\n                                    onClick={checkboxCheck}\n                                />\n                                    &nbsp;or Use default image\n                            </div>\n                            \n                            <img \n                                src={imagePreview} \n                                alt='Image Preview'\n                                className='mt-3 mr-2' \n                                width='55' \n                                height='52'\n                            />\n\n                            <div className=\"form-group\">\n                                <button \n                                    className=\"btn btn-primary btn-block\" \n                                    type=\"submit\"\n                                    disabled={loading ? true : false}\n                                >\n                                    Create\n                                </button>\n                            </div>\n                            <div className=\"form-group\">\n                                <a\n                                    className=\"btn btn-secondary btn-block mt-2\"\n                                    onClick={handleShow}\n                                    style={{color: 'white'}}\n                                >Discard</a>\n                            </div>\n                        </form>\n                    </div>\n                    </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default NewProduct\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Home.js",["390","391","392","393","394","395","396","397","398","399"],"import React, { Fragment, useEffect, useState } from 'react'\nimport '../css/styles.css'\nimport MetaData from './layout/MetaData'\nimport Loader from './layout/Loader'\nimport { useAlert } from 'react-alert'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getHomes, clearErrors } from '../actions/websiteActions'\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\nimport { Link } from 'react-router-dom'\n\nconst Home = () => {\n\n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const { loading,\n            error,\n            productsDescription,\n            servicesDescription,\n            productImageLeft,\n            productImageRight,\n            titleBackground,\n            servicesBackground\n        } = useSelector(state => state.homes)\n\n    useEffect(() => {\n        dispatch(getHomes())\n\n        dispatch({\n            type: INSIDE_DASHBOARD_FALSE\n        })\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n    }, [dispatch, alert, error]) //loop if homePage added as dependency\n\n    return (\n            <Fragment>\n                <MetaData title={'Home'}/>\n                {loading ? <Loader/> : (\n                    <Fragment>\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                <div className=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 text-center\"\n                                    style={{\n                                    background: \"linear-gradient(to bottom, rgba(216, 203, 194, 0.8) 0%, rgba(34, 33, 32, 0.8) 100%), url(\"+`${titleBackground}`+\") center / auto no-repeat\", \n                                    backgroundSize: \"cover\", \n                                    width: \"100%\", \n                                    height: \"100%\"}\n                                }>\n                                    <div className=\"main-section\">\n                                        <img className=\"logo\" src=\"https://res.cloudinary.com/agiletechnodynamicsinc/image/upload/v1615205387/websiteImages/agile-logo-home_nhud2z.png\"/>\n                                        <h1 className=\"pt-3 main-text\">AGILE TECHNODYNAMICS, INC.</h1>\n                                    </div>\n                                </div>\n                            </div>\n                            <div>\n                                <div className=\"row agile-products-home\">\n                                    <div className=\"col\">\n                                        <h1>Our Products</h1>\n                                        <p className=\"our-products-description pb-3\" >{productsDescription}</p>\n                                        <Link className=\"mt-4\" to=\"/our-products\">See Products <i className=\"fa fa-angle-right\"></i></Link>\n                                    </div>\n                                </div>\n                                <div className=\"row\" style={{margin: 'auto'}}>\n                                    <div className=\"col-sm-12 col-md-6\">\n                                        <div className=\"product-container\" style={{background: \"url(\"+`${productImageLeft}`+\") center / auto no-repeat\", backgroundSize: 'contain'}}></div>\n                                    </div>\n                                    <div className=\"col-sm-12 col-md-6\">\n                                        <div className=\"product-container\" style={{background: \"url(\"+`${productImageRight}`+\") center / auto no-repeat\", backgroundSize: 'contain'}}></div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row services-container\" \n                                style={{\n                                    background: \"linear-gradient(to right, rgb(0,0,0) 0%, rgba(151,161,179,0.4) 100%), url(\"+`${servicesBackground}`+\") no-repeat\", \n                                    backgroundSize: \"cover\", \n                                    backgroundPosition: \"right\"\n                                }}\n                            >\n                                <div className=\"col-sm-12 col-md-6\">\n                                    <div>\n                                        <div className=\"col-auto our-services-description\">\n                                            <h1 className=\"text-center\">Our Services</h1>\n                                            <p>{servicesDescription}</p>\n                                            <Link className=\"mt-4\" to=\"/our-services\">See Services <i className=\"fa fa-angle-right\"></i></Link>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </Fragment>\n                )}\n        </Fragment>\n    )\n}\n\nexport default Home;","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/Dashboard.js",["400","401","402"],"import React, { Fragment, useEffect, useState} from 'react'\nimport { Link } from 'react-router-dom'\n\nimport MetaData from './../layout/MetaData'\nimport Loader from './../layout/Loader'\nimport '../../css/bootstrap.min.css'\nimport '../../css/dashboard.css'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAdminProducts } from '../../actions/productActions'\nimport { listInquiry } from '../../actions/inquiryActions'\nimport { getUsers } from '../../actions/userActions'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { logout } from './../../actions/userActions'\n\nconst Dashboard = () => {\n\n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const { loading, products } = useSelector(state => state.products)\n    const { users, adminCount, superadminCount } = useSelector(state => state.users)\n    const { inquiryCount, appointmentCount, otherCount } = useSelector(state => state.listInquiry)\n    const { user } = useSelector(state => state.auth)\n\n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n    \n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n\n    useEffect(() => {\n        dispatch(getAdminProducts())\n        dispatch(listInquiry())\n        dispatch(getUsers())\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch])\n    \n    return (\n        <Fragment>\n            <MetaData title={'Dashboard'}/>\n            <Fragment>\n                {loading ? <Loader/> : (\n                    <Fragment>\n                        <MetaData title={'Admin Dashboard'}/>\n                        <div id=\"wrapper\" className={isToggled ? null : \"toggled\"}   >\n                            <div id=\"sidebar-wrapper\" >\n                                <ul className=\"sidebar-nav\">\n                                    <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                                    <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                                    <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                                    <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                                    {user && user.role !== 'admin' ? (\n                                            <Fragment>\n                                                <hr/>\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                            </Fragment>\n                                        ) : (\n                                            <Fragment>\n                                                <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                                <hr/>\n                                                <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                                <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                                <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                                <hr/>\n                                                <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                                <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                            </Fragment>\n                                        )}\n\n                                    <hr/>\n                                    <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                                </ul>\n                            </div>\n                            <div className=\"page-content-wrapper\">\n                                <div className=\"container-fluid\">\n                                    <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\n                                        <i className=\"fa fa-bars\"   ></i>\n                                    </a>\n                                    {user && user.role !== 'admin' ? (\n                                        <Fragment>\n                                            <div className=\"main-section\" style={{paddingTop: '65px'}}>\n                                                <h3><strong>Overview</strong></h3>\n                                                <div className=\"dashbord\">\n                                                    <div className=\"icon-section\">\n                                                        <i className=\"fa fa-users\" aria-hidden=\"true\"></i><br/>\n                                                        <small>Admins</small>\n                                                        <p>{adminCount} admins</p>\n                                                    </div>\n                                                    <div className=\"detail-section\">\n                                                        <Link to=\"/admin/users/admin\">More Info </Link>\n                                                    </div>\n                                                </div>\n                                                <div className=\"dashbord\">\n                                                    <div className=\"icon-section\">\n                                                        <i className=\"fa fa-user-circle\" aria-hidden=\"true\"></i><br/>\n                                                        <small>Super Admins</small>\n                                                        <p>{superadminCount}  superadmins</p>\n                                                    </div>\n                                                    <div className=\"detail-section\">\n                                                        <Link to=\"/admin/users/superadmin\">More Info </Link>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </Fragment>\n                                    ) : (\n                                        <Fragment>\n                                            <div className=\"main-section\" style={{paddingTop: '65px'}}>\n                                                <h3><strong>Inbox</strong></h3>\n                                                <div className=\"dashbord\">\n                                                    <div className=\"icon-section\">\n                                                        <i className=\"fa fa-envelope\" aria-hidden=\"true\"></i><br/>\n                                                        <small>Inquiries</small>\n                                                        <p>{inquiryCount} messages</p>\n                                                    </div>\n                                                    <div className=\"detail-section\">\n                                                        <Link to=\"/admin/inquiries\">View Inquiries</Link>\n                                                    </div>\n                                                </div>\n                                                <div className=\"dashbord\">\n                                                    <div className=\"icon-section\">\n                                                        <i className=\"fa fa-archive\" aria-hidden=\"true\"></i><br/>\n                                                        <small>Appointments</small>\n                                                        <p>{appointmentCount} messages</p>\n                                                    </div>\n                                                    <div className=\"detail-section\">\n                                                        <Link to=\"/admin/appointments\">View Appointments</Link>\n                                                    </div>\n                                                </div>\n                                                <div className=\"dashbord\">\n                                                    <div className=\"icon-section\">\n                                                        <i className=\"fa fa-inbox\" aria-hidden=\"true\"></i><br/>\n                                                        <small>Other Concerns</small>\n                                                        <p>{otherCount} messages</p>\n                                                    </div>\n                                                    <div className=\"detail-section\">\n                                                        <Link to=\"/admin/others\">View Others</Link>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </Fragment>\n                                    )}\n                                    <div className=\"main-section\" style={{paddingTop: '65px', paddingBottom: '65px'}}>\n                                        <h3><strong>Settings</strong></h3>\n                                        <div className=\"dashbord-25\">\n                                            <div className=\"icon-section\">\n                                                <i className=\"fa fa-home\" aria-hidden=\"true\"></i><br/>\n                                                <p>Update Home</p>\n                                            </div>\n                                            <div className=\"detail-section\">\n                                                <Link to=\"/admin/home\">Update <i className=\"fa fa-angle-right\"></i></Link>\n                                            </div>\n                                        </div>\n                                        <div className=\"dashbord-25\">\n                                            <div className=\"icon-section\">\n                                                <i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i><br/>\n                                                <p>Update About</p>\n                                            </div>\n                                            <div className=\"detail-section\">\n                                                <Link to=\"/admin/about\">Update <i className=\"fa fa-angle-right\"></i></Link>\n                                            </div>\n                                        </div>\n                                        <div className=\"dashbord-25\">\n                                            <div className=\"icon-section\">\n                                                <i className=\"fa fa-quote-left\" aria-hidden=\"true\"></i><br/>\n                                                <p>Update Footer</p>\n                                            </div>\n                                            <div className=\"detail-section\">\n                                                <Link to=\"/admin/footer\">Update <i className=\"fa fa-angle-right\"></i></Link>\n                                            </div>\n                                        </div>\n                                        <div className=\"dashbord-25\">\n                                            <div className=\"icon-section\">\n                                                <i className=\"fa fa-check\" aria-hidden=\"true\"></i><br/>\n                                                <p>Update Services</p>\n                                            </div>\n                                            <div className=\"detail-section\">\n                                                <Link to=\"/admin/service\">Update <i className=\"fa fa-angle-right\"></i></Link>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </Fragment>\n                )}\n            </Fragment>\n        </Fragment>\n    )\n}\n\nexport default Dashboard\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/Header.js",["403","404","405","406","407","408"],"import React, { Fragment, useState } from 'react'\nimport '../../css/Navbar---Apple.css'\nimport '../../css/Navbar---Apple-1.css'\nimport '../../css/bootstrap.min.css'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useAlert } from 'react-alert'\nimport { logout } from './../../actions/userActions'\n\nconst Header = () => {\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const { user, loading } = useSelector(state => state.auth)\n\n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n    \n    let userAvatar = \"\"\n\n    if(user && user.avatar) {\n        userAvatar = user.avatar.url\n    } else {\n        userAvatar = \"\"\n    }\n\n    const [isOpen, setOpen] = useState('true');\n\n    const toggle = () => {\n        setOpen(!isOpen)\n    }\n\n    const [isProductOpen, setProductOpen] = useState('false');\n\n    const productToggle = () => {\n        setProductOpen(!isProductOpen)\n    }\n\n    const [isUserOpen, setUserOpen] = useState('false');\n\n    const userToggle = () => {\n        setUserOpen(!isUserOpen)\n    }\n\n    return (\n        <Fragment>\n            <nav className=\"navbar navbar-light navbar-expand-md fixed-top bg-light navbar--apple\">\n                <div className=\"container\">\n                    <button \n                        data-toggle=\"collapse\" \n                        data-target=\"#menu\" \n                        className={isOpen ? \"navbar-toggler\" : \"navbar-toggler collapsed\"}\n                        aria-expanded={isOpen ? true : false}\n                        onClick={toggle}\n                    >\n                        <span className=\"sr-only\">Toggle navigation</span>\n                        <span className=\"navbar-toggler-icon\"><i className=\"la la-navicon\"></i></span>\n                    </button>\n                    <div className={isOpen ? \"collapse navbar-collapse show\" : \"collapse navbar-collapse d-none\"} id=\"menu\">\n                        <ul className=\"navbar-nav flex-grow-1 justify-content-between\">\n                            <li className=\"nav-item d-none d-xs-block d-md-block\">\n                                <a href=\"/\">\n                                    <img className=\"nav-link nav-logo\" src=\"https://res.cloudinary.com/agiletechnodynamicsinc/image/upload/v1615205387/websiteImages/agile-header-logo_tan5lw.png\"/>\n                                </a>\n                            </li>\n                            <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/\"><strong></strong></Link></li>\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/\"><strong>Home</strong></Link></li>\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/about-us\"><strong>About Us</strong></Link></li>\n                        <div className=\"dropdown d-inline\">    \n                            <button\n                                className=\"btn dropdown-toggle text-black nav-link\"\n                                type=\"button\"\n                                id=\"productMenuButton\"\n                                data-toggle=\"dropdown\"\n                                aria-aria-haspopup=\"true\"\n                                aria-expanded=\"false\"\n                                style={{fontSize: '15px'}}\n                                onClick={productToggle}\n                            >\n                                <strong>Products</strong>\n                            </button>\n                            <div className=\"dropdown-menu\" aria-aria-labelledby=\"productMenuButton\">\n                                <Link className=\"dropdown-item\" to='/our-products'>\n                                    All Products\n                                </Link>\n                                <hr/>\n                                <Link className=\"dropdown-item\" to='/products/Mechanical Engineering'>\n                                    Mechanical Engineering\n                                </Link>\n                                <Link className=\"dropdown-item\" to='/products/DC Power Systems'>\n                                    DC Power Systems\n                                </Link>\n                                <Link className=\"dropdown-item\" to='/products/Electrical Engineering Equipment'>\n                                    Electrical Engineering Equipment\n                                </Link>\n                                <Link className=\"dropdown-item\" to='/products/Test Equipment'>\n                                    Test Equipment\n                                </Link>\n                                <Link className=\"dropdown-item\" to='/products/Others'>\n                                    Others\n                                </Link>\n                            </div>\n                        </div>\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/our-services\"><strong>Services</strong></Link></li>\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/contact-us\"><strong>Contact Us</strong></Link></li>\n                        {user ? (\n                            <div class=\"dropdown d-inline\">\n                                <button\n                                    className=\"btn dropdown-toggle text-black nav-link\"\n                                    type=\"button\"\n                                    id=\"userMenuButton\"\n                                    data-toggle=\"dropdown\"\n                                    aria-aria-haspopup=\"true\"\n                                    aria-expanded=\"false\"\n                                    style={{fontSize: '15px'}}\n                                    onClick={userToggle}\n                                >\n                                    <img \n                                        class='mr-2 rounded-circle'\n                                        src={userAvatar}\n                                        width='30' \n                                        height='32'\n                                    />{user && user.name}\n                                </button>\n                                <div class=\"dropdown-menu\" aria-aria-labelledby=\"userMenuButton\">\n                                    <Link className=\"dropdown-item\" to=\"/admin/dashboard\">\n                                        Dashboard\n                                    </Link>\n                                    <Link className=\"dropdown-item text-danger\" to=\"/\" onClick={logoutHandler}>\n                                        Log out\n                                    </Link>\n                                </div>\n                            </div>\n                            ) : !loading && <Link to=\"/login\">\n                                <div></div>\n                            </Link>}\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n        </Fragment>\n    )\n}\n\nexport default Header;","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/user/Login.js",["409","410","411"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport Loader from '../layout/Loader'\nimport MetaData from '../layout/MetaData'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from  'react-redux'\nimport { login, clearErrors } from './../../actions/userActions'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport '../../css/forms.css'\n\nconst Login = ( { history }) => {\n\n    const [ email, setEmail ] = useState('');\n    const [ password, setPassword ] = useState('');\n    \n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\n\n    const [isChecked, setChecked] = useState('false')\n\n    const checkboxCheck = () => {\n        setChecked(!isChecked)\n    }\n\n    const [userInput, setUserInput ] = useState('')\n    const [isCorrect, setIsCorrect ] = useState('false')\n    const loginPassword = 'cgJBHJXe'\n    const [attempts, setAttempts] = useState(2)\n    let counter = 3;\n\n    const passwordCheck = (userInput) => {\n        if(userInput === loginPassword) {\n            setIsCorrect(!isCorrect)\n            alert.success('Access code is correct.')\n        } else {\n            setAttempts((attempts-1))\n\n            if(attempts > 0) {\n                alert.error(`You have ${attempts} attempts left`)\n            } else {\n                alert.error('Cannot redirect to log in page.')\n                history.push('/')\n            }\n        }\n    }\n\n    useEffect(() => {\n        if(isAuthenticated) {\n            history.push('/admin/dashboard')\n            alert.success('Logged in successfully.')\n        }\n\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors());\n        } //loadError in load_user_fail\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, isAuthenticated, error, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(login(email, password));\n    }\n\n    return (\n        <Fragment>\n            {loading ? <Loader/> : (\n                <Fragment>\n                <MetaData title={'Log In'}/>\n                <div className={isCorrect ? \"login\" : \"d-none\"} style={{margin: 'auto'}}>\n                    <form>\n                        <div className=\"illustration\">\n                            <img className=\"login-logo\" alt=\"company logo\" src=\"https://res.cloudinary.com/agiletechnodynamicsinc/image/upload/v1615205387/websiteImages/agile-logo-home_nhud2z.png\"/>\n                        </div>\n                        <div className=\"form-group\">\n                            <h6>Enter access code</h6>\n                            <p style={{color: '#333', fontSize: '10px'}}>If you don't know the code, contact your administrator.</p>\n                            <input \n                                className=\"form-control\" \n                                type=\"text\" \n                                name=\"userInput\"\n                                value={userInput}\n                                placeholder=\"xxxxxxxx\"\n                                maxLength=\"8\"\n                                onChange={(e) => setUserInput(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <a\n                                className=\"btn btn-primary btn-block\"\n                                style={{color: 'white'}}\n                                onClick={() => passwordCheck(userInput)}\n                            >Submit</a>\n                        </div>\n                    </form>\n                </div>\n                <div className={isCorrect ? \"d-none\" : \"login\"} style={{margin: 'auto'}}>\n                        <form onSubmit={submitHandler}>\n                            <h2 className=\"sr-only\">Login Form</h2>\n                            <div className=\"illustration\">\n                                <img className=\"login-logo\" alt=\"company logo\" src=\"https://res.cloudinary.com/agiletechnodynamicsinc/image/upload/v1615205387/websiteImages/agile-logo-home_nhud2z.png\"/>\n                            </div>\n                            <div className=\"form-group\">\n                                <input className=\"form-control\" type=\"email\" name=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <div class=\"input-group mb-3\">\n                                    <input \n                                        className=\"form-control\" \n                                        type={isChecked ? \"password\" : \"text\"}  \n                                        name=\"password\" \n                                        placeholder=\"Password\" \n                                        value={password} \n                                        onChange={(e) => setPassword(e.target.value)}\n                                    />\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\" id=\"basic-addon1\">\n                                            <a\n                                                onClick={checkboxCheck}\n                                                style={{cursor: 'pointer'}}\n                                            >\n                                                <span className=\"fa-lg\">\n                                                    <i className={isChecked ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\n                                                </span>\n                                            </a>\n                                        </span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <button className=\"btn btn-primary btn-block\" type=\"submit\">Log In</button>\n                            </div>\n                            <Link className=\"forgot\" to=\"/password/forgot\">Forgot your password?</Link>\n                        </form>\n                    </div>\n            </Fragment>\n        )}\n        </Fragment>\n    )\n}\n\nexport default Login\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/MetaData.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/productActions.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/product/ProductDisplay.js",["412"],"import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst ProductList = ({ product }) => {\n\n    function getName(name) {\n        var x = name;\n        var y = x.split(' ')\n        var z = x.split(' ').slice(0,5).join(' ');\n\n        if(y.length > 5) {\n            z = z + \"...\"\n        }\n        \n        return z\n    }\n\n    return (\n        <div class=\"col-sm-6 col-md-4 col-lg-3 col-xl-3 product-image\">\n            <div>\n                <img alt={`Image of ${product.name}`} height=\"250px\" src={product.image.url}/>\n            </div>\n            <Link to={`/our-products/${product._id}`} class=\"product-name text-nowrap\">\n                {getName(product.name)}\n            </Link>\n        </div>\n    )\n}\n\nexport default ProductList\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/productConstants.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/userConstants.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/inquiryConstants.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/websiteConstants.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/dashboardConstants.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/websiteActions.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/inquiryActions.js",[],{"ruleId":"413","replacedBy":"414"},{"ruleId":"415","replacedBy":"416"},{"ruleId":"417","severity":1,"message":"418","line":60,"column":8,"nodeType":"419","messageId":"420","endLine":60,"endColumn":14},{"ruleId":"417","severity":1,"message":"421","line":68,"column":20,"nodeType":"419","messageId":"420","endLine":68,"endColumn":35},{"ruleId":"417","severity":1,"message":"422","line":68,"column":37,"nodeType":"419","messageId":"420","endLine":68,"endColumn":41},{"ruleId":"417","severity":1,"message":"423","line":20,"column":22,"nodeType":"419","messageId":"420","endLine":20,"endColumn":37},{"ruleId":"424","severity":1,"message":"425","line":74,"column":71,"nodeType":"426","messageId":"427","endLine":74,"endColumn":73},{"ruleId":"417","severity":1,"message":"428","line":6,"column":10,"nodeType":"419","messageId":"420","endLine":6,"endColumn":14},{"ruleId":"417","severity":1,"message":"423","line":20,"column":22,"nodeType":"419","messageId":"420","endLine":20,"endColumn":37},{"ruleId":"417","severity":1,"message":"429","line":21,"column":25,"nodeType":"419","messageId":"420","endLine":21,"endColumn":39},{"ruleId":"424","severity":1,"message":"425","line":61,"column":75,"nodeType":"426","messageId":"427","endLine":61,"endColumn":77},{"ruleId":"417","severity":1,"message":"423","line":20,"column":22,"nodeType":"419","messageId":"420","endLine":20,"endColumn":37},{"ruleId":"424","severity":1,"message":"425","line":76,"column":67,"nodeType":"426","messageId":"427","endLine":76,"endColumn":69},{"ruleId":"417","severity":1,"message":"423","line":20,"column":22,"nodeType":"419","messageId":"420","endLine":20,"endColumn":37},{"ruleId":"424","severity":1,"message":"425","line":74,"column":67,"nodeType":"426","messageId":"427","endLine":74,"endColumn":69},{"ruleId":"417","severity":1,"message":"423","line":20,"column":22,"nodeType":"419","messageId":"420","endLine":20,"endColumn":37},{"ruleId":"424","severity":1,"message":"425","line":76,"column":71,"nodeType":"426","messageId":"427","endLine":76,"endColumn":73},{"ruleId":"417","severity":1,"message":"423","line":20,"column":22,"nodeType":"419","messageId":"420","endLine":20,"endColumn":37},{"ruleId":"424","severity":1,"message":"425","line":80,"column":75,"nodeType":"426","messageId":"427","endLine":80,"endColumn":77},{"ruleId":"417","severity":1,"message":"430","line":21,"column":9,"nodeType":"419","messageId":"420","endLine":21,"endColumn":15},{"ruleId":"417","severity":1,"message":"431","line":1,"column":38,"nodeType":"419","messageId":"420","endLine":1,"endColumn":46},{"ruleId":"417","severity":1,"message":"432","line":28,"column":44,"nodeType":"419","messageId":"420","endLine":28,"endColumn":51},{"ruleId":"433","severity":1,"message":"434","line":176,"column":25,"nodeType":"435","endLine":176,"endColumn":108},{"ruleId":"436","severity":1,"message":"437","line":231,"column":41,"nodeType":"435","endLine":236,"endColumn":43},{"ruleId":"433","severity":1,"message":"434","line":272,"column":37,"nodeType":"435","endLine":276,"endColumn":38},{"ruleId":"417","severity":1,"message":"432","line":24,"column":13,"nodeType":"419","messageId":"420","endLine":24,"endColumn":20},{"ruleId":"433","severity":1,"message":"434","line":132,"column":25,"nodeType":"435","endLine":132,"endColumn":108},{"ruleId":"433","severity":1,"message":"434","line":190,"column":37,"nodeType":"435","endLine":194,"endColumn":38},{"ruleId":"417","severity":1,"message":"438","line":9,"column":24,"nodeType":"419","messageId":"420","endLine":9,"endColumn":40},{"ruleId":"417","severity":1,"message":"432","line":28,"column":13,"nodeType":"419","messageId":"420","endLine":28,"endColumn":20},{"ruleId":"439","severity":1,"message":"440","line":65,"column":8,"nodeType":"441","endLine":65,"endColumn":65,"suggestions":"442"},{"ruleId":"433","severity":1,"message":"434","line":136,"column":25,"nodeType":"435","endLine":136,"endColumn":108},{"ruleId":"433","severity":1,"message":"434","line":243,"column":37,"nodeType":"435","endLine":247,"endColumn":38},{"ruleId":"433","severity":1,"message":"434","line":75,"column":37,"nodeType":"435","endLine":75,"endColumn":121},{"ruleId":"433","severity":1,"message":"434","line":179,"column":25,"nodeType":"435","endLine":179,"endColumn":108},{"ruleId":"417","severity":1,"message":"432","line":36,"column":31,"nodeType":"419","messageId":"420","endLine":36,"endColumn":38},{"ruleId":"433","severity":1,"message":"434","line":141,"column":25,"nodeType":"435","endLine":141,"endColumn":108},{"ruleId":"433","severity":1,"message":"434","line":184,"column":49,"nodeType":"435","endLine":187,"endColumn":50},{"ruleId":"433","severity":1,"message":"434","line":210,"column":49,"nodeType":"435","endLine":213,"endColumn":50},{"ruleId":"433","severity":1,"message":"434","line":229,"column":37,"nodeType":"435","endLine":233,"endColumn":38},{"ruleId":"417","severity":1,"message":"443","line":74,"column":9,"nodeType":"419","messageId":"420","endLine":74,"endColumn":12},{"ruleId":"433","severity":1,"message":"434","line":175,"column":25,"nodeType":"435","endLine":175,"endColumn":109},{"ruleId":"433","severity":1,"message":"434","line":173,"column":25,"nodeType":"435","endLine":173,"endColumn":109},{"ruleId":"417","severity":1,"message":"443","line":75,"column":9,"nodeType":"419","messageId":"420","endLine":75,"endColumn":12},{"ruleId":"433","severity":1,"message":"434","line":175,"column":25,"nodeType":"435","endLine":175,"endColumn":109},{"ruleId":"417","severity":1,"message":"443","line":79,"column":9,"nodeType":"419","messageId":"420","endLine":79,"endColumn":12},{"ruleId":"433","severity":1,"message":"434","line":183,"column":25,"nodeType":"435","endLine":183,"endColumn":109},{"ruleId":"439","severity":1,"message":"444","line":91,"column":8,"nodeType":"441","endLine":91,"endColumn":76,"suggestions":"445"},{"ruleId":"424","severity":1,"message":"446","line":185,"column":32,"nodeType":"426","messageId":"427","endLine":185,"endColumn":34},{"ruleId":"433","severity":1,"message":"434","line":228,"column":25,"nodeType":"435","endLine":228,"endColumn":109},{"ruleId":"433","severity":1,"message":"434","line":136,"column":25,"nodeType":"435","endLine":136,"endColumn":109},{"ruleId":"436","severity":1,"message":"437","line":93,"column":25,"nodeType":"435","endLine":98,"endColumn":27},{"ruleId":"433","severity":1,"message":"434","line":151,"column":25,"nodeType":"435","endLine":151,"endColumn":109},{"ruleId":"433","severity":1,"message":"434","line":129,"column":25,"nodeType":"435","endLine":129,"endColumn":107},{"ruleId":"433","severity":1,"message":"434","line":153,"column":25,"nodeType":"435","endLine":153,"endColumn":109},{"ruleId":"417","severity":1,"message":"443","line":74,"column":9,"nodeType":"419","messageId":"420","endLine":74,"endColumn":12},{"ruleId":"433","severity":1,"message":"434","line":174,"column":25,"nodeType":"435","endLine":174,"endColumn":109},{"ruleId":"433","severity":1,"message":"434","line":169,"column":21,"nodeType":"435","endLine":169,"endColumn":105},{"ruleId":"417","severity":1,"message":"447","line":24,"column":29,"nodeType":"419","messageId":"420","endLine":24,"endColumn":47},{"ruleId":"417","severity":1,"message":"448","line":29,"column":11,"nodeType":"419","messageId":"420","endLine":29,"endColumn":24},{"ruleId":"417","severity":1,"message":"432","line":79,"column":13,"nodeType":"419","messageId":"420","endLine":79,"endColumn":20},{"ruleId":"433","severity":1,"message":"434","line":231,"column":25,"nodeType":"435","endLine":231,"endColumn":108},{"ruleId":"449","severity":1,"message":"450","line":354,"column":33,"nodeType":"435","endLine":360,"endColumn":35},{"ruleId":"433","severity":1,"message":"434","line":371,"column":37,"nodeType":"435","endLine":375,"endColumn":38},{"ruleId":"417","severity":1,"message":"451","line":12,"column":20,"nodeType":"419","messageId":"420","endLine":12,"endColumn":30},{"ruleId":"417","severity":1,"message":"452","line":13,"column":10,"nodeType":"419","messageId":"420","endLine":13,"endColumn":27},{"ruleId":"417","severity":1,"message":"443","line":60,"column":9,"nodeType":"419","messageId":"420","endLine":60,"endColumn":12},{"ruleId":"433","severity":1,"message":"434","line":168,"column":25,"nodeType":"435","endLine":168,"endColumn":109},{"ruleId":"417","severity":1,"message":"432","line":28,"column":44,"nodeType":"419","messageId":"420","endLine":28,"endColumn":51},{"ruleId":"433","severity":1,"message":"434","line":144,"column":21,"nodeType":"435","endLine":144,"endColumn":104},{"ruleId":"433","severity":1,"message":"434","line":263,"column":37,"nodeType":"435","endLine":267,"endColumn":38},{"ruleId":"417","severity":1,"message":"443","line":81,"column":9,"nodeType":"419","messageId":"420","endLine":81,"endColumn":12},{"ruleId":"433","severity":1,"message":"434","line":188,"column":25,"nodeType":"435","endLine":188,"endColumn":109},{"ruleId":"417","severity":1,"message":"453","line":8,"column":9,"nodeType":"419","messageId":"420","endLine":8,"endColumn":17},{"ruleId":"449","severity":1,"message":"450","line":60,"column":33,"nodeType":"435","endLine":60,"endColumn":127},{"ruleId":"417","severity":1,"message":"432","line":25,"column":13,"nodeType":"419","messageId":"420","endLine":25,"endColumn":20},{"ruleId":"433","severity":1,"message":"434","line":131,"column":25,"nodeType":"435","endLine":131,"endColumn":108},{"ruleId":"433","severity":1,"message":"434","line":219,"column":37,"nodeType":"435","endLine":223,"endColumn":38},{"ruleId":"417","severity":1,"message":"432","line":44,"column":20,"nodeType":"419","messageId":"420","endLine":44,"endColumn":27},{"ruleId":"424","severity":1,"message":"446","line":122,"column":31,"nodeType":"426","messageId":"427","endLine":122,"endColumn":33},{"ruleId":"433","severity":1,"message":"434","line":209,"column":25,"nodeType":"435","endLine":209,"endColumn":109},{"ruleId":"433","severity":1,"message":"434","line":372,"column":73,"nodeType":"435","endLine":375,"endColumn":74},{"ruleId":"433","severity":1,"message":"434","line":403,"column":73,"nodeType":"435","endLine":406,"endColumn":74},{"ruleId":"433","severity":1,"message":"434","line":99,"column":37,"nodeType":"435","endLine":102,"endColumn":38},{"ruleId":"433","severity":1,"message":"434","line":125,"column":37,"nodeType":"435","endLine":128,"endColumn":38},{"ruleId":"417","severity":1,"message":"454","line":34,"column":5,"nodeType":"419","messageId":"420","endLine":34,"endColumn":22},{"ruleId":"417","severity":1,"message":"452","line":37,"column":5,"nodeType":"419","messageId":"420","endLine":37,"endColumn":22},{"ruleId":"424","severity":1,"message":"446","line":140,"column":31,"nodeType":"426","messageId":"427","endLine":140,"endColumn":33},{"ruleId":"433","severity":1,"message":"434","line":231,"column":29,"nodeType":"435","endLine":231,"endColumn":111},{"ruleId":"449","severity":1,"message":"450","line":377,"column":29,"nodeType":"435","endLine":383,"endColumn":31},{"ruleId":"433","severity":1,"message":"434","line":395,"column":33,"nodeType":"435","endLine":399,"endColumn":34},{"ruleId":"417","severity":1,"message":"431","line":1,"column":38,"nodeType":"419","messageId":"420","endLine":1,"endColumn":46},{"ruleId":"455","severity":1,"message":"456","line":49,"column":140,"nodeType":"426","messageId":"457","endLine":49,"endColumn":141},{"ruleId":"455","severity":1,"message":"456","line":49,"column":161,"nodeType":"426","messageId":"457","endLine":49,"endColumn":162},{"ruleId":"436","severity":1,"message":"437","line":55,"column":41,"nodeType":"435","endLine":55,"endColumn":186},{"ruleId":"455","severity":1,"message":"456","line":70,"column":102,"nodeType":"426","messageId":"457","endLine":70,"endColumn":103},{"ruleId":"455","severity":1,"message":"456","line":70,"column":124,"nodeType":"426","messageId":"457","endLine":70,"endColumn":125},{"ruleId":"455","severity":1,"message":"456","line":73,"column":102,"nodeType":"426","messageId":"457","endLine":73,"endColumn":103},{"ruleId":"455","severity":1,"message":"456","line":73,"column":125,"nodeType":"426","messageId":"457","endLine":73,"endColumn":126},{"ruleId":"455","severity":1,"message":"456","line":79,"column":125,"nodeType":"426","messageId":"457","endLine":79,"endColumn":126},{"ruleId":"455","severity":1,"message":"456","line":79,"column":149,"nodeType":"426","messageId":"457","endLine":79,"endColumn":150},{"ruleId":"417","severity":1,"message":"458","line":24,"column":22,"nodeType":"419","messageId":"420","endLine":24,"endColumn":30},{"ruleId":"417","severity":1,"message":"459","line":25,"column":13,"nodeType":"419","messageId":"420","endLine":25,"endColumn":18},{"ruleId":"433","severity":1,"message":"434","line":91,"column":37,"nodeType":"435","endLine":91,"endColumn":121},{"ruleId":"436","severity":1,"message":"437","line":65,"column":37,"nodeType":"435","endLine":65,"endColumn":197},{"ruleId":"460","severity":1,"message":"461","line":77,"column":33,"nodeType":"462","endLine":77,"endColumn":58},{"ruleId":"460","severity":1,"message":"463","line":84,"column":60,"nodeType":"462","endLine":84,"endColumn":100},{"ruleId":"460","severity":1,"message":"461","line":115,"column":37,"nodeType":"462","endLine":115,"endColumn":62},{"ruleId":"436","severity":1,"message":"437","line":120,"column":37,"nodeType":"435","endLine":125,"endColumn":39},{"ruleId":"460","severity":1,"message":"463","line":127,"column":60,"nodeType":"462","endLine":127,"endColumn":97},{"ruleId":"417","severity":1,"message":"464","line":31,"column":9,"nodeType":"419","messageId":"420","endLine":31,"endColumn":16},{"ruleId":"433","severity":1,"message":"434","line":94,"column":29,"nodeType":"435","endLine":98,"endColumn":30},{"ruleId":"433","severity":1,"message":"434","line":123,"column":45,"nodeType":"435","endLine":126,"endColumn":46},{"ruleId":"449","severity":1,"message":"450","line":21,"column":17,"nodeType":"435","endLine":21,"endColumn":95},"no-native-reassign",["465"],"no-negated-in-lhs",["466"],"no-unused-vars","'Loader' is defined but never used.","Identifier","unusedVar","'isAuthenticated' is assigned a value but never used.","'user' is assigned a value but never used.","'setMainCategory' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Link' is defined but never used.","'setSubCategory' is assigned a value but never used.","'abouts' is assigned a value but never used.","'useState' is defined but never used.","'loading' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'getFooterDetails' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'footerInfo'. Either include it or remove the dependency array.","ArrayExpression",["467"],"'len' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'deleteAll'. Either include it or remove the dependency array.",["468"],"Expected '===' and instead saw '=='.","'setUseDefaultImage' is assigned a value but never used.","'checkboxCheck' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'deleteUser' is defined but never used.","'DELETE_USER_RESET' is defined but never used.","'Carousel' is defined but never used.","'UPDATE_USER_RESET' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'products' is assigned a value but never used.","'users' is assigned a value but never used.","jsx-a11y/aria-props","aria-aria-haspopup: This attribute is an invalid ARIA attribute.","JSXAttribute","aria-aria-labelledby: This attribute is an invalid ARIA attribute.","'counter' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"469","fix":"470"},{"desc":"471","fix":"472"},"Update the dependencies array to be: [dispatch, alert, error, history, updateError, isUpdated, footerInfo]",{"range":"473","text":"474"},"Update the dependencies array to be: [dispatch, alert, error, history, isDeleted, isUpdated, deleteError, deleteAll]",{"range":"475","text":"476"},[2294,2351],"[dispatch, alert, error, history, updateError, isUpdated, footerInfo]",[2648,2716],"[dispatch, alert, error, history, isDeleted, isUpdated, deleteError, deleteAll]"]