[{"/Users/abby/Desktop/agile-technodynamics/frontend/src/index.js":"1","/Users/abby/Desktop/agile-technodynamics/frontend/src/store.js":"2","/Users/abby/Desktop/agile-technodynamics/frontend/src/App.js":"3","/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/productReducers.js":"4","/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/userReducers.js":"5","/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/inquiryReducers.js":"6","/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/websiteReducers.js":"7","/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/dashboardReducers.js":"8","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/About.js":"9","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Services.js":"10","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Contact.js":"11","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ConfirmationPage.js":"12","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/EmailSent.js":"13","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/Footer.js":"14","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/Loader.js":"15","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListAppointments.js":"16","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListInquiries.js":"17","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListOthers.js":"18","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListArchives.js":"19","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListTrash.js":"20","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateInquiry.js":"21","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateProduct.js":"22","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/product/ProductDetails.js":"23","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/route/ProtectedRoute.js":"24","/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/userActions.js":"25","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/NewProduct.js":"26","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Home.js":"27","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/Header.js":"28","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/MetaData.js":"29","/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/productActions.js":"30","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/product/ProductDisplay.js":"31","/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/productConstants.js":"32","/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/userConstants.js":"33","/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/inquiryConstants.js":"34","/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/websiteConstants.js":"35","/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/dashboardConstants.js":"36","/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/websiteActions.js":"37","/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/inquiryActions.js":"38","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListProducts.js":"39","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/NewPassword.js":"40","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/ForgotPassword.js":"41","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/Profile.js":"42","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/Login.js":"43","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/UpdateProfile.js":"44","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/UpdatePassword.js":"45","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/PasswordSuccess.js":"46","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/Dashboard.js":"47","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/ListAbout.js":"48","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/ListHome.js":"49","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/ListFooter.js":"50","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/ListServices.js":"51","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/UpdateHome.js":"52","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/UpdateAbout.js":"53","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/UpdateServices.js":"54","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/UpdateFooter.js":"55","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/superadmin/ListSuperAdmins.js":"56","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/superadmin/ListAdmins.js":"57","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/superadmin/UpdateUser.js":"58","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/superadmin/UpdateUserSuccess.js":"59","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/superadmin/Register.js":"60","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/product/Products.js":"61","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/product/ProductsOthers.js":"62","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/product/ProductsDC.js":"63","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/product/ProductsTE.js":"64","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/product/ProductsEEE.js":"65","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/product/ProductsME.js":"66"},{"size":582,"mtime":1615917684922,"results":"67","hashOfConfig":"68"},{"size":2109,"mtime":1615917678639,"results":"69","hashOfConfig":"68"},{"size":7502,"mtime":1615921366033,"results":"70","hashOfConfig":"68"},{"size":4764,"mtime":1615917707229,"results":"71","hashOfConfig":"68"},{"size":8601,"mtime":1615917713902,"results":"72","hashOfConfig":"68"},{"size":4274,"mtime":1615921611787,"results":"73","hashOfConfig":"68"},{"size":9758,"mtime":1615623199948,"results":"74","hashOfConfig":"68"},{"size":497,"mtime":1615623306470,"results":"75","hashOfConfig":"68"},{"size":4005,"mtime":1615917527054,"results":"76","hashOfConfig":"68"},{"size":6229,"mtime":1615819325519,"results":"77","hashOfConfig":"68"},{"size":9464,"mtime":1615950663310,"results":"78","hashOfConfig":"68"},{"size":1291,"mtime":1615950488407,"results":"79","hashOfConfig":"68"},{"size":1306,"mtime":1615917657291,"results":"80","hashOfConfig":"68"},{"size":3853,"mtime":1615917609856,"results":"81","hashOfConfig":"68"},{"size":411,"mtime":1615359817965,"results":"82","hashOfConfig":"68"},{"size":8917,"mtime":1615918962862,"results":"83","hashOfConfig":"68"},{"size":8937,"mtime":1615918935732,"results":"84","hashOfConfig":"68"},{"size":8853,"mtime":1615918929726,"results":"85","hashOfConfig":"68"},{"size":9291,"mtime":1615918953134,"results":"86","hashOfConfig":"68"},{"size":12354,"mtime":1615918915297,"results":"87","hashOfConfig":"68"},{"size":18789,"mtime":1615917029591,"results":"88","hashOfConfig":"68"},{"size":18047,"mtime":1615950720861,"results":"89","hashOfConfig":"68"},{"size":3205,"mtime":1615820090361,"results":"90","hashOfConfig":"68"},{"size":1765,"mtime":1615622014277,"results":"91","hashOfConfig":"68"},{"size":7723,"mtime":1615818499832,"results":"92","hashOfConfig":"68"},{"size":19373,"mtime":1615950731521,"results":"93","hashOfConfig":"68"},{"size":4957,"mtime":1615917650391,"results":"94","hashOfConfig":"68"},{"size":6976,"mtime":1615917583486,"results":"95","hashOfConfig":"68"},{"size":270,"mtime":1615182325200,"results":"96","hashOfConfig":"68"},{"size":4342,"mtime":1615917695624,"results":"97","hashOfConfig":"68"},{"size":745,"mtime":1615917587289,"results":"98","hashOfConfig":"68"},{"size":1292,"mtime":1615182325212,"results":"99","hashOfConfig":"68"},{"size":2376,"mtime":1615559253219,"results":"100","hashOfConfig":"68"},{"size":1077,"mtime":1615182325212,"results":"101","hashOfConfig":"68"},{"size":2226,"mtime":1615182325214,"results":"102","hashOfConfig":"68"},{"size":123,"mtime":1615182325211,"results":"103","hashOfConfig":"68"},{"size":7270,"mtime":1615623015297,"results":"104","hashOfConfig":"68"},{"size":3362,"mtime":1615623152866,"results":"105","hashOfConfig":"68"},{"size":9465,"mtime":1615922520796,"results":"106","hashOfConfig":"68"},{"size":6395,"mtime":1615950757536,"results":"107","hashOfConfig":"68"},{"size":2670,"mtime":1615950747854,"results":"108","hashOfConfig":"68"},{"size":10403,"mtime":1615920962031,"results":"109","hashOfConfig":"68"},{"size":5866,"mtime":1615950753083,"results":"110","hashOfConfig":"68"},{"size":17694,"mtime":1615950686297,"results":"111","hashOfConfig":"68"},{"size":11866,"mtime":1615950691091,"results":"112","hashOfConfig":"68"},{"size":1353,"mtime":1615921002338,"results":"113","hashOfConfig":"68"},{"size":14263,"mtime":1615922881517,"results":"114","hashOfConfig":"68"},{"size":6553,"mtime":1615920958750,"results":"115","hashOfConfig":"68"},{"size":7130,"mtime":1615920960810,"results":"116","hashOfConfig":"68"},{"size":6940,"mtime":1615920960100,"results":"117","hashOfConfig":"68"},{"size":7210,"mtime":1615920961444,"results":"118","hashOfConfig":"68"},{"size":13987,"mtime":1615950697012,"results":"119","hashOfConfig":"68"},{"size":10438,"mtime":1615950706850,"results":"120","hashOfConfig":"68"},{"size":15382,"mtime":1615950679445,"results":"121","hashOfConfig":"68"},{"size":14357,"mtime":1615950702606,"results":"122","hashOfConfig":"68"},{"size":7381,"mtime":1615920922291,"results":"123","hashOfConfig":"68"},{"size":8783,"mtime":1615920923269,"results":"124","hashOfConfig":"68"},{"size":10360,"mtime":1615950641936,"results":"125","hashOfConfig":"68"},{"size":1175,"mtime":1615920926357,"results":"126","hashOfConfig":"68"},{"size":26638,"mtime":1615950645199,"results":"127","hashOfConfig":"68"},{"size":4047,"mtime":1615921307435,"results":"128","hashOfConfig":"68"},{"size":3409,"mtime":1615921290077,"results":"129","hashOfConfig":"68"},{"size":4212,"mtime":1615921302218,"results":"130","hashOfConfig":"68"},{"size":4425,"mtime":1615921271639,"results":"131","hashOfConfig":"68"},{"size":4157,"mtime":1615921299532,"results":"132","hashOfConfig":"68"},{"size":4226,"mtime":1615921296354,"results":"133","hashOfConfig":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},"15m85vh",{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"136"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"136"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"136"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"136"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"136"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"136"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"136"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"136"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"136"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"136"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"136"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"136"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"136"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"136"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"253","messages":"254","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"257","messages":"258","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"259","messages":"260","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"136"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"136"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},"/Users/abby/Desktop/agile-technodynamics/frontend/src/index.js",[],["283","284"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/store.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/App.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/productReducers.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/userReducers.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/inquiryReducers.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/websiteReducers.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/dashboardReducers.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/About.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Services.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Contact.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ConfirmationPage.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/EmailSent.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/Footer.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/Loader.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListAppointments.js",["285"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTableV5 } from 'mdbreact'\nimport { useAlert } from 'react-alert'\nimport { Modal, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\nimport { logout } from '../../actions/userActions'\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst ListAppointments = ({history}) => {\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\n    const { isUpdated } = useSelector(state => state.inquiry)\n    const { user } = useSelector(state => state.auth)\n\n    const [isToggled, setToggled] = useState('false')\n    const [id, setId] = useState('')\n    const [show, setShow] = useState(false)\n\n    const handleClose = () => setShow(false)\n    const handleShow = () => setShow(true)\n    const handleToggle = () => setToggled(!isToggled)\n\n    const logoutHandler = () => {\n        dispatch(logout())\n        alert.success('Logged out successfully')\n    }\n\n    const updateInquiryHandler = (id, inquiryStatus) => { \n        const formData = new FormData()\n        formData.set('inquiryStatus', inquiryStatus)\n\n        alert.success('Message has been moved to Trash.')\n        dispatch(updateInquiry(id, formData))\n        handleClose()\n    }\n    \n    useEffect(() => {\n        dispatch(listInquiry())\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n        if(isUpdated){\n            history.push('/admin/appointments')\n\n            dispatch({\n                type: UPDATE_INQUIRY_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, history, isUpdated])\n    \n    const setInquiries = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Date / Time',\n                    field: 'createdAt',\n                    sort: 'desc'\n                },\n                {\n                    label: 'Last Name',\n                    field: 'lastName'\n                },\n                {\n                    label: 'First Name',\n                    field: 'firstName'\n                },\n                {\n                    label: 'Company Name',\n                    field: 'companyName'\n                },\n                \n                {\n                    label: 'Status',\n                    field: 'inquiryStatus'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions'\n                }\n            ],\n            rows: []\n         }\n\n         inquiries.forEach(inquiry => {\n             if(inquiry.concernType==='Appointment' && (inquiry.inquiryStatus !== \"Deleted\" && inquiry.inquiryStatus !== \"Resolved\")){\n                \n                data.rows.push({\n                    createdAt: inquiry.createdAt,\n                    firstName: inquiry.firstName,\n                    lastName: inquiry.lastName,\n                    companyName: inquiry.companyName,\n                    inquiryStatus: <p style={{ color: 'red' }}>{inquiry.inquiryStatus}</p>,\n                    actions:\n                    <Fragment>\n                        <div style={{display: 'flex'}}>\n                            <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                                <i className='fa fa-eye'></i>\n                            </Link>\n                            <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => {\n                                handleShow()\n                                setId(inquiry._id)\n                            }}>\n                                <i className='fa fa-trash'></i>\n                            </button>\n                        </div>     \n                    </Fragment>\n                 })\n             }\n         })\n\n         return data\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Appointments'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\n                <div id=\"sidebar-wrapper\" >\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )\n                        }\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\n                            <i className=\"fa fa-bars\"   ></i>\n                        </a>\n                        <Modal show={show} onHide={handleClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Move to Trash?</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>Are you sure you want to move this message to Trash?</Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={handleClose}>\n                                Close\n                                </Button>\n                                <Button variant=\"primary\" onClick={() => updateInquiryHandler(id, \"Deleted\")}>\n                                Yes, I'm sure\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                        <Fragment>\n                        <div style={{padding: '30px'}}>\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Inbox - Appointments</h1>\n                            {loading? <Loader/> : (\n                                <MDBDataTableV5\n                                    data={setInquiries()}\n                                    entries={5}\n                                    entriesOptions={[5, 10, 15, 20]}\n                                    searchTop\n                                    searchBottom={false}\n                                    scrollX\n                                    sortable={false}   \n                                />\n                            )}\n                        </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListAppointments","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListInquiries.js",["286"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTableV5 } from 'mdbreact'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Modal, Button } from 'react-bootstrap'\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\nimport { logout } from './../../actions/userActions'\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst ListInquiries = ({history}) => {\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\n    const { isUpdated } = useSelector(state => state.inquiry)\n    const { user } = useSelector(state => state.auth)\n\n    const [isToggled, setToggled] = useState('false')\n    const [show, setShow] = useState(false)\n    const [id, setId] = useState('')\n\n    const handleToggle = () => setToggled(!isToggled)\n    const handleClose = () => setShow(false)\n    const handleShow = () => setShow(true)\n\n    const logoutHandler = () => {\n        dispatch(logout())\n        alert.success('Logged out successfully')\n    }\n\n    const updateInquiryHandler = (id, inquiryStatus) => { \n        const formData = new FormData()\n        formData.set('inquiryStatus', inquiryStatus)\n\n        alert.success('Message has been moved to Trash.')\n        dispatch(updateInquiry(id, formData))\n        handleClose()\n    }\n    \n    useEffect(() => {\n        dispatch(listInquiry())\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n        if(isUpdated){\n            history.push('/admin/inquiries')\n\n            dispatch({\n                type: UPDATE_INQUIRY_RESET\n            })\n        }\n        \n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, isUpdated, history])\n\n    const setInquiries = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Date / Time',\n                    field: 'createdAt',\n                    sort: 'desc'\n                },\n                {\n                    label: 'Last Name',\n                    field: 'lastName'\n                },\n                {\n                    label: 'First Name',\n                    field: 'firstName'\n                },\n                {\n                    label: 'Company Name',\n                    field: 'companyName'\n                },\n                \n                {\n                    label: 'Status',\n                    field: 'inquiryStatus'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions'\n                }\n            ],\n            rows: []\n         }\n\n         inquiries.forEach(inquiry => {\n             if(inquiry.concernType==='Inquiry' && (inquiry.inquiryStatus !== \"Deleted\" && inquiry.inquiryStatus !== \"Resolved\")){\n                data.rows.push({\n                    createdAt: inquiry.createdAt,\n                    firstName: inquiry.firstName,\n                    lastName: inquiry.lastName,\n                    companyName: inquiry.companyName,\n                    inquiryStatus: <p style={{ color: 'red' }}>{inquiry.inquiryStatus}</p>,\n                    actions:\n                    <Fragment>\n                        <div style={{display: 'flex'}}>\n                            <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                                <i className='fa fa-eye'></i>\n                            </Link>\n                            <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => {\n                                handleShow()\n                                setId(inquiry._id)\n                            }}>\n                                <i className='fa fa-trash'></i>\n                            </button>\n                        </div>\n                    </Fragment>\n                 })\n             }\n         })\n\n         return data\n    }\n    \n    return (\n        <Fragment>\n            <MetaData title={'Inquiries'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\n                <div id=\"sidebar-wrapper\" >\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )\n                        }\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\n                            <i className=\"fa fa-bars\"   ></i>\n                        </a>\n                        <Modal show={show} onHide={handleClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Move to Trash?</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>Are you sure you want to move this message to Trash?</Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={handleClose}>\n                                Close\n                                </Button>\n                                <Button variant=\"primary\" onClick={() => updateInquiryHandler(id, \"Deleted\")}>\n                                Yes, I'm sure\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                        <Fragment>\n                            <div style={{padding: '30px'}}>\n                                <h1 className='mt-3 mb-3 ml-10 mr-10'>Inbox - Inquiry</h1>\n                                {loading? <Loader/> : (\n                                    <MDBDataTableV5\n                                        data={setInquiries()}\n                                        entries={5}\n                                        entriesOptions={[5, 10, 15, 20]}\n                                        searchTop\n                                        searchBottom={false}\n                                        scrollX\n                                        sortable={false}\n                                    />\n                                )}\n                            </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListInquiries","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListOthers.js",["287"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTableV5 } from 'mdbreact'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Modal, Button } from 'react-bootstrap'\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\nimport { logout } from './../../actions/userActions'\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst ListOthers = ({history}) => {\n\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\n    const { isUpdated } = useSelector(state => state.inquiry)\n    const { user } = useSelector(state => state.auth)\n\n    const [isToggled, setToggled] = useState('false')\n    const [id, setId] = useState('')\n    const [show, setShow] = useState(false)\n\n    const handleToggle = () => setToggled(!isToggled)\n    const handleClose = () => setShow(false)\n    const handleShow = () => setShow(true)\n\n    const logoutHandler = () => {\n        dispatch(logout())\n        alert.success('Logged out successfully')\n    }\n\n    const updateInquiryHandler = (id, inquiryStatus) => { \n        const formData = new FormData()\n        formData.set('inquiryStatus', inquiryStatus)\n\n        alert.success('Message has been moved to Trash.')\n        dispatch(updateInquiry(id, formData))\n        handleClose()\n    }\n\n    useEffect(() => {\n        dispatch(listInquiry())\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n        if(isUpdated){\n            history.push('/admin/others')\n\n            dispatch({\n                type: UPDATE_INQUIRY_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, isUpdated, history])\n\n    const setInquiries = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Date / Time',\n                    field: 'createdAt',\n                    sort: 'desc'\n                },\n                {\n                    label: 'Last Name',\n                    field: 'lastName'\n                },\n                {\n                    label: 'First Name',\n                    field: 'firstName'\n                },\n                {\n                    label: 'Company Name',\n                    field: 'companyName'\n                },\n                \n                {\n                    label: 'Status',\n                    field: 'inquiryStatus'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions'\n                }\n            ],\n            rows: []\n         }\n\n         inquiries.forEach(inquiry => {\n             if(inquiry.concernType==='Others'  && (inquiry.inquiryStatus !== \"Deleted\" && inquiry.inquiryStatus !== \"Resolved\")){\n                data.rows.push({\n                    createdAt: inquiry.createdAt,\n                    firstName: inquiry.firstName,\n                    lastName: inquiry.lastName,\n                    companyName: inquiry.companyName,\n                    inquiryStatus: <p style={{ color: 'red' }}>{inquiry.inquiryStatus}</p>,\n                    actions:\n                    <Fragment>\n                        <div style={{display: 'flex'}}>\n                            <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                                <i className='fa fa-eye'></i>\n                            </Link>\n                            <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => {\n                                handleShow()\n                                setId(inquiry._id)\n                            }}>\n                                <i className='fa fa-trash'></i>\n                            </button>\n                        </div>\n                    </Fragment>\n                 })\n             }\n         }) \n         return data\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Others'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\n                <div id=\"sidebar-wrapper\" >\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )\n                        }\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\n                            <i className=\"fa fa-bars\"   ></i>\n                        </a>\n                        <Modal show={show} onHide={handleClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Move to Trash?</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>Are you sure you want to move this message to Trash?</Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={handleClose}>\n                                Close\n                                </Button>\n                                <Button variant=\"primary\" onClick={() => updateInquiryHandler(id, \"Deleted\")}>\n                                Yes, I'm sure\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                        <Fragment>\n                        <div style={{padding: '30px'}}>\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Inbox - Others</h1>\n                            {loading? <Loader/> : (\n                                <MDBDataTableV5\n                                    data={setInquiries()}\n                                    entries={5}\n                                    entriesOptions={[5, 10, 15, 20]}\n                                    searchTop\n                                    searchBottom={false}\n                                    scrollX\n                                    sortable={false}\n                                />\n                            )}\n                        </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListOthers","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListArchives.js",["288"],"import React, { Fragment, useEffect , useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTableV5 } from 'mdbreact'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Modal, Button } from 'react-bootstrap'\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\nimport { logout } from './../../actions/userActions'\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst ListArchives = ({history}) => {\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\n    const { isUpdated } = useSelector(state => state.inquiry)\n    const { user } = useSelector(state => state.auth)\n\n    const [isToggled, setToggled] = useState('false')\n    const [show, setShow] = useState(false)\n    const [id, setId] = useState('')\n\n    const handleToggle = () => setToggled(!isToggled)\n    const handleClose = () => setShow(false)\n    const handleShow = () => setShow(true)\n\n    const logoutHandler = () => {\n        dispatch(logout())\n\n        alert.success('Logged out successfully')\n    }\n\n    useEffect(() => {\n        dispatch(listInquiry())\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n        \n        if(isUpdated){\n            dispatch({\n                type: UPDATE_INQUIRY_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, isUpdated, history])\n\n    const updateInquiryHandler = (id, inquiryStatus) => { \n        const formData = new FormData()\n        formData.set('inquiryStatus', inquiryStatus)\n\n        if(inquiryStatus === 'Deleted') {\n            alert.success('Message has been moved to Trash.')\n            history.push('/admin/archives')\n            dispatch(updateInquiry(id, formData))\n            handleClose()\n        } else {\n            alert.success('Message has been restored.')\n            history.push('/admin/archives')\n            dispatch(updateInquiry(id, formData))\n        }\n    }\n\n    const setInquiries = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Date / Time',\n                    field: 'createdAt',\n                    sort: 'desc'\n                },\n                {\n                    label: 'Last Name',\n                    field: 'lastName'\n                },\n                {\n                    label: 'First Name',\n                    field: 'firstName'\n                },\n                {\n                    label: 'Company Name',\n                    field: 'companyName'\n                },\n                \n                {\n                    label: 'Concern Type',\n                    field: 'concernType'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions'\n                }\n            ],\n            rows: []\n         }\n\n         inquiries.forEach(inquiry => {\n             if(inquiry.inquiryStatus==='Resolved'){\n                data.rows.push({\n                    createdAt: inquiry.createdAt,\n                    firstName: inquiry.firstName,\n                    lastName: inquiry.lastName,\n                    companyName: inquiry.companyName,\n                    concernType: String(inquiry.concernType),\n                    actions:\n                    <Fragment>\n                        <div style={{display: 'flex'}}>\n                            <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                                <i className='fa fa-eye'></i>\n                            </Link>\n                            <button className=\"btn btn-secondary py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Unresolved\")}>\n                                <i className='fa fa-undo'></i>\n                            </button>\n                            <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => {\n                                handleShow()\n                                setId(inquiry._id)\n                            }}>\n                                <i className='fa fa-trash'></i>\n                            </button>\n                        </div>\n                    </Fragment>\n                 })\n             }\n         })\n\n         return data\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Archives'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}>\n                <div id=\"sidebar-wrapper\" >\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )\n                        }\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\n                            <i className=\"fa fa-bars\"   ></i>\n                        </a>\n                        <Modal show={show} onHide={handleClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Move to Trash?</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>Are you sure you want to move this message to Trash?</Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={handleClose}>\n                                Close\n                                </Button>\n                                <Button variant=\"primary\" onClick={() => updateInquiryHandler(id, \"Deleted\")}>\n                                Yes, I'm sure\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                        <Fragment>\n                            <div style={{padding: '30px'}}>\n                                <h1 className='mt-3 mb-3 ml-10 mr-10'>Archives</h1>\n                                {loading ? <Loader/> : (\n                                    <MDBDataTableV5\n                                        data={setInquiries()}\n                                        entries={5}\n                                        entriesOptions={[5, 10, 15, 20]}\n                                        searchTop\n                                        searchBottom={false}\n                                        scrollX\n                                        sortable={false}\n                                    />\n                                )}\n                            </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListArchives","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListTrash.js",["289"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTableV5 } from 'mdbreact'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport { useAlert } from 'react-alert'\nimport { Modal, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { deleteInquiry, updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\nimport { logout } from './../../actions/userActions'\nimport { DELETE_INQUIRY_RESET, UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst ListTrash = ({history}) => {\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\n    const { deleteError, isUpdated, isDeleted } = useSelector(state => state.inquiry)\n    const { user } = useSelector(state => state.auth)\n\n    const [isToggled, setToggled] = useState('false')\n    const [id, setId] = useState('')\n    const [show, setShow] = useState(false)\n    const [emptyShow, setEmptyShow] = useState(false)\n    const [deleteAll, setDeleteAll] = useState(false)\n\n    const handleToggle = () => setToggled(!isToggled)\n    const handleClose = () => setShow(false)\n    const handleShow = () => setShow(true)\n    const handleEmptyClose = () => setEmptyShow(false)\n    const handleEmptyShow = () => setEmptyShow(true)\n\n    const logoutHandler = () => {\n        dispatch(logout())\n\n        alert.success('Logged out successfully')\n    }\n\n    const updateInquiryHandler = (id, inquiryStatus) => { \n        const formData = new FormData()\n        formData.set('inquiryStatus', inquiryStatus)\n\n        alert.success('Message has been restored.')\n        dispatch(updateInquiry(id, formData))\n    }\n\n    const deleteInquiryHandler = (id) => {\n        handleClose()\n        dispatch(deleteInquiry(id))\n    }\n\n    const emptyTrash = () => {\n        setDeleteAll(true)\n\n        let deletedInquiryCount = 0\n\n        inquiries.forEach(inquiry => {\n            if(inquiry.inquiryStatus === 'Deleted') {\n                deletedInquiryCount += 1\n                dispatch(deleteInquiry(inquiry._id))\n                deletedInquiryCount -= 1\n            }\n        })\n\n        if(deletedInquiryCount === 0){\n            alert.success('Trash has been emptied.') //this is working\n        } \n\n        handleEmptyClose()\n    }\n\n    useEffect(() => {\n        dispatch(listInquiry())\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n        \n        if(deleteError){\n            alert.error(deleteError)\n            dispatch(clearErrors())\n        }\n\n        if(isUpdated){\n            history.push('/admin/trash')\n\n            dispatch({\n                type: UPDATE_INQUIRY_RESET\n            })\n        }\n\n        if(isDeleted && deleteAll){\n            dispatch({\n                type: DELETE_INQUIRY_RESET\n            })\n        }\n\n        if(isDeleted && deleteAll === false){\n            alert.success('Message has been deleted.')\n            history.push('/admin/trash')\n\n            dispatch({\n                type: DELETE_INQUIRY_RESET\n            })\n        }\n        \n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, history, isDeleted, isUpdated, deleteError, deleteAll])\n\n    const setInquiries = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Date / Time',\n                    field: 'createdAt',\n                    sort: 'desc'\n                },\n                {\n                    label: 'Last Name',\n                    field: 'lastName'\n                },\n                {\n                    label: 'First Name',\n                    field: 'firstName'\n                },\n                {\n                    label: 'Company Name',\n                    field: 'companyName'\n                },\n                \n                {\n                    label: 'Concern Type',\n                    field: 'concernType'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions'\n                }\n            ],\n            rows: []\n         }\n\n         inquiries.forEach(inquiry => {\n             if(inquiry.inquiryStatus==='Deleted'){\n                \n                data.rows.push({\n                    createdAt: inquiry.createdAt,\n                    firstName: inquiry.firstName,\n                    lastName: inquiry.lastName,\n                    companyName: inquiry.companyName,\n                    concernType: String(inquiry.concernType),\n                    actions:\n                    <Fragment>\n                        <div style={{display: 'flex'}}>\n                            <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                                <i className='fa fa-eye'></i>\n                            </Link>\n                            <button className=\"btn btn-secondary py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Resolved\")}>\n                                <i className='fa fa-undo'></i>\n                            </button>\n                            <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => {\n                                handleShow()\n                                setId(inquiry._id)\n                            }}>\n                                <i className='fa fa-trash'></i>\n                            </button>\n                        </div>\n                    </Fragment>\n                 })\n             }\n         })\n\n         return data\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Trash'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\n                <div id=\"sidebar-wrapper\" >\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )\n                        }\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\n                            <i className=\"fa fa-bars\"   ></i>\n                        </a>\n                        <Modal show={show} onHide={handleClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Delete Message?</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>Are you sure you want to delete this? This cannot be undone.</Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={handleClose}>\n                                Close\n                                </Button>\n                                <Button variant=\"primary\" onClick={() => deleteInquiryHandler(id)}>\n                                Yes, I'm sure\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                        <Modal show={emptyShow} onHide={handleEmptyClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Empty Trash?</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>Are you sure you want to delete ALL messages? This cannot be undone.</Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={handleEmptyClose}>\n                                Close\n                                </Button>\n                                <Button variant=\"primary\" onClick={() => emptyTrash()}>\n                                Yes, I'm sure\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                        <Fragment>\n                        <div style={{padding: '30px'}}>\n                            {loading? <Loader/> : (\n                                <Fragment>\n                                    <div style={{display: 'flex'}}>\n                                        <div style={{marginRight: 'auto'}}>\n                                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Trash</h1>\n                                        </div>\n                                        <div style={{marginLeft: 'auto', marginTop: '30px'}}>\n                                            <Link>\n                                                <button \n                                                    className='btn btn-dark btn-sm text-capitalize mb-5' \n                                                    onClick={handleEmptyShow}\n                                                    disabled={setInquiries().rows.length === 0 ? true : false}\n                                                >\n                                                    Empty Trash\n                                                </button>\n                                            </Link>\n                                        </div>\n                                    </div>\n                                    <MDBDataTableV5\n                                        data={setInquiries()}\n                                        entries={5}\n                                        entriesOptions={[5, 10, 15, 20]}\n                                        searchTop\n                                        searchBottom={false}\n                                        scrollX\n                                        sortable={false}\n                                    />\n                                </Fragment>\n                            )}\n                        </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListTrash","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateInquiry.js",["290"],"import React, { Fragment, useEffect, useState } from 'react'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport { Link } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Modal, Button } from 'react-bootstrap'\nimport { updateInquiry, deleteInquiry, getInquiryDetails, clearErrors } from '../../actions/inquiryActions'\nimport { logout } from './../../actions/userActions'\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst UpdateInquiry = ({match, history}) => {\n    const dispatch = useDispatch()\n    const alert = useAlert()\n\n    const { loading, error, inquiry } = useSelector(state => state.inquiryDetails)\n    const {error: updateError, isUpdated } = useSelector(state => state.inquiry)\n    const { user } = useSelector(state => state.auth)\n\n    const [isToggled, setToggled] = useState('false')\n    const [id, setId] = useState('')\n    const [inTrash, setInTrash] = useState('')\n    const [inArchives, setInArchives] = useState('')\n    const [concernType, setConcernType] = useState('')\n    const [show, setShow] = useState(false)\n    const [emptyShow, setEmptyShow] = useState(false)\n\n    const inquiryId = match.params.id\n\n    const handleToggle = () => setToggled(!isToggled)\n    const handleClose = () => setShow(false)\n    const handleShow = () => setShow(true)\n    const handleEmptyClose = () => setEmptyShow(false)\n    const handleEmptyShow = () => setEmptyShow(true)\n\n    const logoutHandler = () => {\n        dispatch(logout())\n        alert.success('Logged out successfully')\n    }\n\n    const updateInquiryHandler = (id, inquiryStatus, concernType, inTrash, inArchives) => { \n        const formData = new FormData()\n        formData.set('inquiryStatus', inquiryStatus)\n\n        if(inquiryStatus === 'Unresolved') {\n            dispatch(updateInquiry(id, formData))\n            alert.success('Message has been restored.')\n            history.push('/admin/archives')\n        } else if (inquiryStatus === 'Resolved'){\n            dispatch(updateInquiry(id, formData))\n\n            if(inTrash) {\n                alert.success('Message has been restored.')\n                history.push('/admin/trash')\n\n            } else if(inArchives) {\n                alert.success('Message has been restored.')\n                history.push('/admin/archives')\n\n            } else {\n                alert.success('Message has been moved to archives.')\n\n                if(concernType === 'Inquiry'){\n                    history.push('/admin/inquiries')\n                } else if(concernType === 'Appointment'){\n                    history.push('/admin/appointments')\n                } else {\n                    history.push('/admin/others')\n                }\n            }\n        } else {\n            dispatch(updateInquiry(id, formData))\n            alert.success('Message has been moved to Trash.')\n\n            if(concernType === 'Inquiry'){\n                history.push('/admin/inquiries')\n            } else if(concernType === 'Appointment'){\n                history.push('/admin/appointments')\n            } else {\n                history.push('/admin/others')\n            }\n            handleEmptyClose()\n        }\n    }\n\n    const deleteInquiryHandler = (id) => {\n        handleEmptyShow()\n        dispatch(deleteInquiry(id))\n    }\n    \n    useEffect(() => { \n        if(inquiry && inquiry._id !== inquiryId) {\n            dispatch(getInquiryDetails(inquiryId))\n        }\n\n        if(error){\n            history.push('/admin/dashboard')\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n        if(updateError){\n            history.push('/admin/dashboard')\n            alert.error(updateError)\n            dispatch(clearErrors())\n        }\n\n        if(isUpdated) {\n            dispatch({\n                type: UPDATE_INQUIRY_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, error, alert, isUpdated, updateError, inquiry, inquiryId, history])\n\n    return (\n        <Fragment>\n            <MetaData title={'View Message'}/>\n            <div id=\"wrapper\" className={isToggled ? null : \"toggled\"}>\n                <div id=\"sidebar-wrapper\" >\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )\n                        }\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                    <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\n                        <i className=\"fa fa-bars\"   ></i>\n                    </a>\n                    <Modal show={show} onHide={handleClose}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>Move to Trash?</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>Are you sure you want to move this message to Trash?</Modal.Body>\n                        <Modal.Footer>\n                            <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                            </Button>\n                            <Button variant=\"primary\" onClick={() => updateInquiryHandler(id, \"Deleted\", concernType, inTrash, inArchives)}>\n                            Yes, I'm sure\n                            </Button>\n                        </Modal.Footer>\n                    </Modal>\n                    <Modal show={emptyShow} onHide={handleEmptyClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Delete Message?</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>Are you sure you want to delete this? This cannot be undone.</Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={handleEmptyClose}>\n                                    Close\n                                </Button>\n                                <Button variant=\"primary\" onClick={() => deleteInquiryHandler(id)}>\n                                    Yes, I'm sure\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                    <Fragment>\n                        {loading ? <Loader/> : (\n                            <section className=\"process-section\" style={{fontSize: '100%', fontWeight: '400', lineHeight: '1.3', color: '#000', width: '100%', paddingTop: '11px'}}>\n                                <table style={{width: '85%', minWidth: '150px', margin: '20px auto', backgroundColor: '#fff', padding: '30px', WebkitBorderRadius: '3px', MozBorderRadius: '3px', borderRadius: '3px', WebkitBoxShadow: '0 1px 3px rgba(0,0,0.12), 0 1px 2px rgba(0,0,0,.24)', MozBoxShadow: '0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24)', boxShadow: '0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24)', borderTop: 'solid 10px #1b1449'}}>\n                                    <tbody>\n                                        <tr>\n                                            <td style={{height: '20px'}}></td>\n                                        </tr>\n                                        <tr>\n                                            <td style={{width: '100%', padding: '15px', verticalAlign: 'top'}}>\n                                                <p style={{margin: '0 0 10[x 0', padding: '0', fontSize: '14px'}}><span style={{display: 'block', fontWeight: 'bold', fontSize: '13px'}}>Concern Type</span> {inquiry.concernType}</p>\n                                                <p style={{margin: '0 0 10[x 0', padding: '0', fontSize: '14px'}}><span style={{display: 'block', fontWeight: 'bold', fontSize: '13px'}}>Status</span> {inquiry.inquiryStatus}</p>\n                                                <br/>\n                                                <p style={{margin: '0 0 10[x 0', padding: '0', fontSize: '14px'}}><span style={{display: 'block', fontWeight: 'bold', fontSize: '13px'}}>Name</span> {inquiry.firstName} {inquiry.lastName}</p>\n                                                <p style={{margin: '0 0 10[x 0', padding: '0', fontSize: '14px'}}><span style={{display: 'block', fontWeight: 'bold', fontSize: '13px'}}>Company and Position</span> {inquiry.companyName}, {inquiry.position}</p>\n                                                <p style={{margin: '0 0 10[x 0', padding: '0', fontSize: '14px'}}><span style={{display: 'block', fontWeight: 'bold', fontSize: '13px'}}>Email</span> {inquiry.customerEmail}</p>\n                                                <p style={{margin: '0 0 10[x 0', padding: '0', fontSize: '14px'}}><span style={{display: 'block', fontWeight: 'bold', fontSize: '13px'}}>Phone</span> {inquiry.contactNumber}</p>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td colspan=\"2\" style={{padding: '0 15px'}}>\n                                                <h3 style={{margin: '0 0 10px 0', padding: '0'}}>Message Content</h3>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td colspan=\"2\" style={{padding:'15px'}}>\n                                                <p style={{fontSize: '15px', margin: '0', padding: '10px 40px', textAlign: 'justify'}}>\n                                                {inquiry.customerMessage}\n                                                </p>\n                                            </td>\n                                        </tr>\n                                        <tr style={{ width: '100%'}}>\n                                            {(inquiry.inquiryStatus === 'Resolved' ) ? (\n                                                <Fragment>\n                                                    <div style={{margin: '20px auto', display: 'flex', alignContent: 'center', justifyContent: 'center'}}>\n                                                        <button \n                                                            className=\"btn btn-primary update-status-button align-center ml-2 mr-2\" \n                                                            type=\"button\"\n                                                            onClick={() => updateInquiryHandler(inquiry._id, 'Unresolved', inquiry.concernType, false, true)}\n                                                        >\n                                                            Restore message back to {inquiry.concernType}\n                                                        </button>\n                                                        <button \n                                                            className=\"btn btn-secondary update-status-button align-center ml-2 mr-2\" \n                                                            type=\"button\"\n                                                            onClick={() => \n                                                            {\n                                                                handleShow()\n                                                                setId(inquiry._id)\n                                                                setInTrash(false)\n                                                                setInArchives(true)\n                                                                setConcernType(inquiry.concernType)\n                                                            }}\n                                                        >\n                                                            Delete message\n                                                        </button>\n                                                    </div>\n                                                </Fragment>\n                                            ) : ((inquiry.inquiryStatus === 'Deleted') ? (\n                                                <Fragment>\n                                                    <div style={{margin: '20px auto', display: 'flex', alignContent: 'center', justifyContent: 'center'}}>\n                                                        <button \n                                                            className=\"btn btn-primary update-status-button align-center ml-2 mr-2\" \n                                                            type=\"button\"\n                                                            onClick={() => updateInquiryHandler(inquiry._id, 'Resolved', inquiry.concernType, true, false)}\n                                                        >\n                                                            Restore message back to Archives\n                                                        </button>\n                                                        <button \n                                                            className=\"btn btn-secondary update-status-button align-center ml-2 mr-2\" \n                                                            type=\"button\"\n                                                            onClick={() => {\n                                                                handleEmptyShow()\n                                                                setId(inquiry._id)\n                                                            }}>\n                                                            Delete message permanently\n                                                        </button>\n                                                    </div>\n                                                </Fragment>\n                                            ) : (\n                                                <Fragment>\n                                                    <div style={{margin: '20px auto', display: 'flex', alignContent: 'center', justifyContent: 'center'}}>\n                                                        <button \n                                                            className=\"btn btn-primary update-status-button align-center ml-2 mr-2\" \n                                                            type=\"button\"\n                                                            onClick={() => updateInquiryHandler(inquiry._id, 'Resolved', inquiry.concernType, false, false)}\n                                                        >\n                                                            Resolve message\n                                                        </button>\n                                                        <button \n                                                            className=\"btn btn-secondary update-status-button align-center ml-2 mr-2\" \n                                                            type=\"button\"\n                                                            onClick={() => \n                                                            {\n                                                                handleShow()\n                                                                setId(inquiry._id)\n                                                                setInTrash(false)\n                                                                setInArchives(false)\n                                                                setConcernType(inquiry.concernType)\n                                                            }}\n                                                        >\n                                                            Delete message\n                                                        </button>\n                                                    </div>\n                                                </Fragment>\n                                                )\n                                            )}\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </section>\n                        )}\n                    </Fragment>\n                    </div>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default UpdateInquiry\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateProduct.js",["291","292","293"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/product/ProductDetails.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/route/ProtectedRoute.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/userActions.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/NewProduct.js",["294","295"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Home.js",["296","297","298","299","300","301","302","303"],"import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getHomes, clearErrors } from '../actions/websiteActions'\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\nimport MetaData from './layout/MetaData'\nimport Loader from './layout/Loader'\nimport '../css/styles.css'\n\nconst Home = () => {\n    const dispatch = useDispatch()\n    const alert = useAlert()\n\n    const { loading,\n            error,\n            productsDescription,\n            servicesDescription,\n            productImageLeft,\n            productImageRight,\n            titleBackground,\n            servicesBackground\n        } = useSelector(state => state.homes)\n\n    useEffect(() => {\n        dispatch(getHomes())\n\n        dispatch({\n            type: INSIDE_DASHBOARD_FALSE\n        })\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n    }, [dispatch, alert, error])\n\n    return (\n            <Fragment>\n                <MetaData title={'Home'}/>\n                {loading ? <Loader/> : (\n                    <Fragment>\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                <div className=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 text-center\"\n                                    style={{\n                                    background: \"linear-gradient(to bottom, rgba(216, 203, 194, 0.8) 0%, rgba(34, 33, 32, 0.8) 100%), url(\"+`${titleBackground}`+\") center / auto no-repeat\", \n                                    backgroundSize: \"cover\", \n                                    width: \"100%\", \n                                    height: \"100%\"}\n                                }>\n                                    <div className=\"main-section\">\n                                        <img className=\"logo\" alt=\"Logo of Agile Technodynamics, Inc.\" src=\"https://res.cloudinary.com/agiletechnodynamicsinc/image/upload/v1615205387/websiteImages/agile-logo-home_nhud2z.png\"/>\n                                        <h1 className=\"pt-3 main-text\">AGILE TECHNODYNAMICS, INC.</h1>\n                                    </div>\n                                </div>\n                            </div>\n                            <div>\n                                <div className=\"row agile-products-home\">\n                                    <div className=\"col\">\n                                        <h1>Our Products</h1>\n                                        <p className=\"our-products-description pb-3\" >{productsDescription}</p>\n                                        <Link className=\"mt-4\" to=\"/our-products\">See Products <i className=\"fa fa-angle-right\"></i></Link>\n                                    </div>\n                                </div>\n                                <div className=\"row\" style={{margin: 'auto'}}>\n                                    <div className=\"col-sm-12 col-md-6\">\n                                        <div className=\"product-container\" style={{background: \"url(\"+`${productImageLeft}`+\") center / auto no-repeat\", backgroundSize: 'contain'}}></div>\n                                    </div>\n                                    <div className=\"col-sm-12 col-md-6\">\n                                        <div className=\"product-container\" style={{background: \"url(\"+`${productImageRight}`+\") center / auto no-repeat\", backgroundSize: 'contain'}}></div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row services-container\" \n                                style={{\n                                    background: \"linear-gradient(to right, rgb(0,0,0) 0%, rgba(151,161,179,0.4) 100%), url(\"+`${servicesBackground}`+\") no-repeat\", \n                                    backgroundSize: \"cover\", \n                                    backgroundPosition: \"right\"\n                                }}\n                            >\n                                <div className=\"col-sm-12 col-md-6\">\n                                    <div>\n                                        <div className=\"col-auto our-services-description\">\n                                            <h1 className=\"text-center\">Our Services</h1>\n                                            <p>{servicesDescription}</p>\n                                            <Link className=\"mt-4\" to=\"/our-services\">See Services <i className=\"fa fa-angle-right\"></i></Link>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </Fragment>\n                )}\n        </Fragment>\n    )\n}\n\nexport default Home","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/Header.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/MetaData.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/productActions.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/product/ProductDisplay.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/productConstants.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/userConstants.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/inquiryConstants.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/websiteConstants.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/dashboardConstants.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/websiteActions.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/inquiryActions.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListProducts.js",["304"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTableV5 } from 'mdbreact'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Modal, Button } from 'react-bootstrap'\nimport { getAdminProducts, deleteProduct, clearErrors } from '../../actions/productActions'\nimport { logout } from '../../actions/userActions'\nimport { DELETE_PRODUCT_RESET } from '../../constants/productConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst ListProducts = ({history}) => {\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { loading, error, products } = useSelector(state => state.products)\n    const { deleteError, isDeleted } = useSelector(state => state.product)\n    const { user } = useSelector(state => state.auth)\n\n    const [isToggled, setToggled] = useState('false')\n    const [id, setId] = useState('')\n    const [show, setShow] = useState(false)\n\n    const handleToggle = () => setToggled(!isToggled)\n    const handleClose = () => setShow(false)\n    const handleShow = () => setShow(true)\n\n    const logoutHandler = () => {\n        dispatch(logout())\n        alert.success('Logged out successfully')\n    }\n\n    const deleteProductHandler = (id) => {\n        dispatch(deleteProduct(id))\n        handleClose()\n    }\n\n    useEffect(() => {\n        dispatch(getAdminProducts())\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n        if(deleteError){\n            alert.error(deleteError)\n            dispatch(clearErrors())\n        }\n\n        if(isDeleted){\n            alert.success('Product has been deleted successfully.')\n            history.push('/admin/products')\n\n            dispatch({\n                type: DELETE_PRODUCT_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, history, isDeleted, deleteError])\n\n    const setProducts = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Product Name',\n                    field: 'name',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Description',\n                    field: 'description',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Main Category',\n                    field: 'category',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Sub Category',\n                    field: 'subcategory',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions'\n                }\n            ],\n            rows: []\n         }\n\n         products.forEach(product => {\n             data.rows.push({\n                name: product.name,\n                description: product.description,\n                category: product.category,\n                subcategory: product.subcategory,\n                actions:\n                <Fragment>\n                    <div style={{display: 'flex'}}>\n                        <Link to={`/admin/product/${product._id}`} className='btn btn-primary py-1 px-2'>\n                            <i className='fa fa-pencil'></i>\n                        </Link>\n                        <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => {\n                            handleShow()\n                            setId(product._id)\n                        }}>\n                            <i className='fa fa-trash'></i>\n                        </button>\n                    </div>\n                </Fragment>\n             })\n         })\n         return data\n    }\n    \n    return (\n        <Fragment>\n            <MetaData title={'All Products'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}>\n                <div id=\"sidebar-wrapper\" >\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )\n                        }\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\n                            <i className=\"fa fa-bars\"></i>\n                        </a>\n                        <Fragment>\n                            <div style={{padding: '30px'}}>\n                                <div style={{display: 'flex'}}>\n                                    <div style={{marginRight: 'auto'}}>\n                                        <h1 className='mt-3 mb-3 ml-10 mr-10'>All Products</h1>\n                                    </div>\n                                    <div style={{marginLeft: 'auto', marginTop: '30px'}}>\n                                        <Link to='/admin/newProduct'>\n                                            <button className='btn btn-dark btn-sm text-capitalize mb-5'>\n                                                Add New Product\n                                            </button>\n                                        </Link>\n                                    </div>\n                                </div>\n                                <Modal show={show} onHide={handleClose}>\n                                    <Modal.Header closeButton>\n                                        <Modal.Title>Delete Product?</Modal.Title>\n                                    </Modal.Header>\n                                    <Modal.Body>Are you sure you want to delete this product? This cannot be undone.</Modal.Body>\n                                    <Modal.Footer>\n                                        <Button variant=\"secondary\" onClick={handleClose}>\n                                            Close\n                                        </Button>\n                                        <Button variant=\"primary\" onClick={() => deleteProductHandler(id)}>\n                                            Yes, I'm sure\n                                        </Button>\n                                    </Modal.Footer>\n                                </Modal>\n                                {loading ? <Loader/> : (\n                                    <MDBDataTableV5\n                                        data={setProducts()}\n                                        entries={5}\n                                        entriesOptions={[5, 10, 15, 20]}\n                                        searchTop\n                                        searchBottom={false}\n                                        scrollX\n                                        hover={true}\n                                        sortable={false}\n                                    />\n                                )}\n                            </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListProducts\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/NewPassword.js",["305","306"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/ForgotPassword.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/Profile.js",["307"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useAlert } from 'react-alert'\nimport { logout } from './../../actions/userActions'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport MetaData from './../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/profile.css'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst Profile = () => {\n    const dispatch = useDispatch()\n    const alert = useAlert()\n\n    const { user, loading } = useSelector(state => state.auth)\n    \n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => setToggled(!isToggled)\n    \n    const logoutHandler = () => {\n        dispatch(logout())\n        alert.success('Logged out successfully')\n    }\n\n    useEffect(() => {\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch])\n\n    return (\n        <Fragment>\n            {loading ? <Loader /> : (\n                <Fragment>\n                    <MetaData title={'My Profile'} />\n                    <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\n                        <div id=\"sidebar-wrapper\" >\n                            <ul className=\"sidebar-nav\">\n                                <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                                <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                                <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                                <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                                {user && user.role !== 'admin' ? (\n                                        <Fragment>\n                                            <hr/>\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                        </Fragment>\n                                    ) : (\n                                        <Fragment>\n                                            <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                            <hr/>\n                                            <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                            <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                            <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                            <hr/>\n                                            <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                            <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                        </Fragment>\n                                    )\n                                }\n                                <hr/>\n                                <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                            </ul>\n                        </div>\n                            <div className=\"page-content-wrapper\">\n                                <div className=\"container-fluid\">\n                                    <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\n                                        <i className=\"fa fa-bars\"   ></i>\n                                    </a>\n                                    <div className=\"container\">\n                                        <div className=\"main-body\">\n                                            <h1 style={{textAlign: 'center', padding:'0 0 15px 0'}}>My Profile</h1>\n                                            {loading ? <Loader/> : (\n                                                <Fragment>\n                                                    <div className=\"row gutters-sm\">\n                                                        <div className=\"col-md-4 mb-3\">\n                                                            <div className=\"card\">\n                                                                <div className=\"card-body\">\n                                                                    <div className=\"d-flex flex-column align-items-center text-center\">\n                                                                        <img src={user.avatar.url} alt=\"Avatar\" className=\"rounded-circle\" width=\"150px\" height=\"150px\"/>\n                                                                        <div className=\"mt-3\">\n                                                                            <h4>{user.name}</h4>\n                                                                            <p className=\"text-secondary mb-1\" style={{textTransform: 'uppercase'}}>{user.role}</p>\n                                                                            <Link className=\"btn btn-dark btn-sm ml-3 mt-3\" type=\"button\" to=\"/admin/edit-profile\">Edit Profile</Link>\n                                                                            <Link className=\"btn btn-dark btn-sm ml-3 mt-3\" type=\"button\" to=\"/password/update\">Change Password</Link>\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <div className=\"col-md-8\">\n                                                            <div className=\"card mb-3\">\n                                                                <div className=\"card-body\">\n                                                                    <div className=\"row\">\n                                                                        <div className=\"col-sm-3\">\n                                                                            <h6 className=\"mb-0\">Full Name</h6>\n                                                                        </div>\n                                                                        <div className=\"col-sm-9 text-secondary\">\n                                                                            {user.name}\n                                                                        </div>\n                                                                    </div>\n                                                                    <hr/>\n                                                                    <div className=\"row\">\n                                                                        <div className=\"col-sm-3\">\n                                                                            <h6 className=\"mb-0\">Email</h6>\n                                                                        </div>\n                                                                        <div className=\"col-sm-9 text-secondary\">\n                                                                            {user.email}\n                                                                        </div>\n                                                                    </div>\n                                                                    <hr/>\n                                                                    <div className=\"row\">\n                                                                        <div className=\"col-sm-3\">\n                                                                            <h6 className=\"mb-0\">Phone</h6>\n                                                                        </div>\n                                                                        <div className=\"col-sm-9 text-secondary\">\n                                                                            {user.contactNumber}\n                                                                        </div>\n                                                                    </div>\n                                                                    <hr/>\n                                                                    <div className=\"row\">\n                                                                        <div className=\"col-sm-3\">\n                                                                            <h6 className=\"mb-0\">Address</h6>\n                                                                        </div>\n                                                                        <div className=\"col-sm-9 text-secondary\">\n                                                                            {user.address}\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </Fragment>\n                                            )}\n                                        </div>\n                                    </div>    \n                                </div>\n                            </div>\n                        </div>\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nexport default Profile\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/Login.js",["308","309"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/UpdateProfile.js",["310"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/UpdatePassword.js",["311","312","313","314"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/PasswordSuccess.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/Dashboard.js",["315"],"import React, { Fragment, useEffect, useState} from 'react'\nimport { Link } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { listInquiry } from '../../actions/inquiryActions'\nimport { getUsers, logout } from '../../actions/userActions'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/dashboard.css'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst Dashboard = () => {\n    const dispatch = useDispatch()\n    const alert = useAlert()\n\n    const { loading, adminCount, superadminCount } = useSelector(state => state.users)\n    const { inquiryCount, appointmentCount, otherCount } = useSelector(state => state.listInquiry)\n    const { user } = useSelector(state => state.auth)\n\n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => setToggled(!isToggled)\n    \n    const logoutHandler = () => {\n        dispatch(logout())\n        alert.success('Logged out successfully')\n    }\n\n    useEffect(() => {\n        dispatch(listInquiry())\n        dispatch(getUsers())\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch])\n    \n    return (\n        <Fragment>\n            <MetaData title={'Dashboard'}/>\n            <Fragment>\n                {loading ? <Loader/> : (\n                    <Fragment>\n                        <MetaData title={'Admin Dashboard'}/>\n                        <div id=\"wrapper\" className={isToggled ? null : \"toggled\"}   >\n                            <div id=\"sidebar-wrapper\" >\n                                <ul className=\"sidebar-nav\">\n                                    <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                                    <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                                    <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                                    <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                                    {user && user.role !== 'admin' ? (\n                                            <Fragment>\n                                                <hr/>\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                            </Fragment>\n                                        ) : (\n                                            <Fragment>\n                                                <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                                <hr/>\n                                                <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                                <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                                <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                                <hr/>\n                                                <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                                <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                            </Fragment>\n                                        )}\n\n                                    <hr/>\n                                    <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                                </ul>\n                            </div>\n                            <div className=\"page-content-wrapper\">\n                                <div className=\"container-fluid\">\n                                    <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\n                                        <i className=\"fa fa-bars\"   ></i>\n                                    </a>\n                                    {user && user.role !== 'admin' ? (\n                                        <Fragment>\n                                            <div className=\"main-section\" style={{paddingTop: '65px'}}>\n                                                <h3><strong>Overview</strong></h3>\n                                                <div className=\"dashbord\">\n                                                    <div className=\"icon-section\">\n                                                        <i className=\"fa fa-users\" aria-hidden=\"true\"></i><br/>\n                                                        <small>Admins</small>\n                                                        <p>{adminCount} admins</p>\n                                                    </div>\n                                                    <Link to=\"/admin/users/admin\" className=\"text-decoration-none text-white\">\n                                                        <div className=\"detail-section\">\n                                                            View <i className=\"fa fa-angle-right\"></i>\n                                                        </div>\n                                                    </Link>\n                                                </div>\n                                                <div className=\"dashbord\">\n                                                    <div className=\"icon-section\">\n                                                        <i className=\"fa fa-user-circle\" aria-hidden=\"true\"></i><br/>\n                                                        <small>Super Admins</small>\n                                                        <p>{superadminCount}  superadmins</p>\n                                                    </div>\n                                                    <Link to=\"/admin/users/superadmin\" className=\"text-decoration-none text-white\">\n                                                        <div className=\"detail-section\">\n                                                            View <i className=\"fa fa-angle-right\"></i>\n                                                        </div>\n                                                    </Link>\n                                                </div>\n                                            </div>\n                                        </Fragment>\n                                    ) : (\n                                        <Fragment>\n                                            <div className=\"main-section\" style={{paddingTop: '65px'}}>\n                                                <h3><strong>Inbox</strong></h3>\n                                                <div className=\"dashbord\">\n                                                    <div className=\"icon-section\">\n                                                        <i className=\"fa fa-envelope\" aria-hidden=\"true\"></i><br/>\n                                                        <small>Inquiries</small>\n                                                        <p>{inquiryCount} messages</p>\n                                                    </div>\n                                                    <Link to=\"/admin/inquiries\" className=\"text-decoration-none text-white\">\n                                                        <div className=\"detail-section\">\n                                                            View <i className=\"fa fa-angle-right\"></i>\n                                                        </div>\n                                                    </Link>\n                                                </div>\n                                                <div className=\"dashbord\">\n                                                    <div className=\"icon-section\">\n                                                        <i className=\"fa fa-archive\" aria-hidden=\"true\"></i><br/>\n                                                        <small>Appointments</small>\n                                                        <p>{appointmentCount} messages</p>\n                                                    </div>\n                                                    <Link to=\"/admin/appointments\" className=\"text-decoration-none text-white\">\n                                                        <div className=\"detail-section\">\n                                                            View <i className=\"fa fa-angle-right\"></i>\n                                                        </div>\n                                                    </Link>\n                                                </div>\n                                                <div className=\"dashbord\">\n                                                    <div className=\"icon-section\">\n                                                        <i className=\"fa fa-inbox\" aria-hidden=\"true\"></i><br/>\n                                                        <small>Other Concerns</small>\n                                                        <p>{otherCount} messages</p>\n                                                    </div>\n                                                    <Link to=\"/admin/others\" className=\"text-decoration-none text-white\">\n                                                        <div className=\"detail-section\">\n                                                            View <i className=\"fa fa-angle-right\"></i>\n                                                        </div>\n                                                    </Link>\n                                                </div>\n                                            </div>\n                                        </Fragment>\n                                    )}\n                                    <div className=\"main-section\" style={{paddingTop: '65px', paddingBottom: '65px'}}>\n                                        <h3><strong>Settings</strong></h3>\n                                        <div className=\"dashbord dashbord-25\">\n                                            <div className=\"icon-section\">\n                                                <i className=\"fa fa-home\" aria-hidden=\"true\"></i><br/>\n                                                <p>Update Home</p>\n                                            </div>\n                                            <Link to=\"/admin/home\" className=\"text-decoration-none text-white\">\n                                                <div className=\"detail-section\">\n                                                    Update <i className=\"fa fa-angle-right\"></i>\n                                                </div>\n                                            </Link>\n                                        </div>\n                                        <div className=\"dashbord dashbord-25\">\n                                            <div className=\"icon-section\">\n                                                <i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i><br/>\n                                                <p>Update About</p>\n                                            </div>\n                                            <Link to=\"/admin/about\" className=\"text-decoration-none text-white\">\n                                                <div className=\"detail-section\">\n                                                    Update <i className=\"fa fa-angle-right\"></i>\n                                                </div>\n                                            </Link>\n                                        </div>\n                                        <div className=\"dashbord dashbord-25\">\n                                            <div className=\"icon-section\">\n                                                <i className=\"fa fa-quote-left\" aria-hidden=\"true\"></i><br/>\n                                                <p>Update Footer</p>\n                                            </div>\n                                            <Link to=\"/admin/footer\" className=\"text-decoration-none text-white\">\n                                                <div className=\"detail-section\">\n                                                    Update <i className=\"fa fa-angle-right\"></i>\n                                                </div>\n                                            </Link>\n                                        </div>\n                                        <div className=\"dashbord dashbord-25\">\n                                            <div className=\"icon-section\">\n                                                <i className=\"fa fa-check\" aria-hidden=\"true\"></i><br/>\n                                                <p>Update Services</p>\n                                            </div>\n                                            <Link to=\"/admin/service\" className=\"text-decoration-none text-white\">\n                                                <div className=\"detail-section\">\n                                                    Update <i className=\"fa fa-angle-right\"></i>\n                                                </div>\n                                            </Link>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </Fragment>\n                )}\n            </Fragment>\n        </Fragment>\n    )\n}\n\nexport default Dashboard\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/ListAbout.js",["316"],"import React, { Fragment, useEffect , useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTableV5 } from 'mdbreact'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAboutDetails, clearErrors } from '../../actions/websiteActions'\nimport { logout } from './../../actions/userActions'\nimport { UPDATE_ABOUT_RESET } from '../../constants/websiteConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst ListAbout = ({history}) => {\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { loading, error, abouts } = useSelector(state => state.abouts)\n    const { isUpdated } = useSelector(state => state.website)\n    const { user } = useSelector(state => state.auth)\n\n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => setToggled(!isToggled)\n\n    const logoutHandler = () => {\n        dispatch(logout())\n        alert.success('Logged out successfully')\n    }\n\n    useEffect(() => {\n        dispatch(getAboutDetails())\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n        \n        if(isUpdated){\n            alert.success('About Us information has been updated successfully.')\n            history.push('/admin/about')\n\n            dispatch({\n                type: UPDATE_ABOUT_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, isUpdated, history])\n\n    const setAboutData = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Title',\n                    field: 'title',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Description',\n                    field: 'description',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                    sort: 'asc'\n                }\n            ],\n            rows: []\n         }\n\n         abouts.forEach(about => {\n            data.rows.push({\n                title: about.title,\n                description: about.description,\n                actions:\n                <Fragment>\n                    <div style={{display: 'flex'}}>\n                        <Link to={`/admin/about/${about._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                            <i className='fa fa-pencil'></i>\n                        </Link>\n                    </div>\n                </Fragment>\n             })\n         })\n\n         return data\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'About Us Details'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\n                <div id=\"sidebar-wrapper\" >\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )\n                        }\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\n                            <i className=\"fa fa-bars\"   ></i>\n                        </a>\n                        <Fragment>\n                        <div style={{padding: '30px'}}>\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Update About Us</h1>\n                            {loading ? <Loader/> : (\n                                <MDBDataTableV5\n                                    data={setAboutData()}\n                                    paging={false}\n                                    searching={false}\n                                    searchTop\n                                    searchBottom={false}\n                                    scrollX\n                                    sortable={false}\n                                />\n                            )}\n                        </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListAbout\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/ListHome.js",["317","318"],"import React, { Fragment, useEffect , useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTableV5 } from 'mdbreact'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getHomes, clearErrors } from '../../actions/websiteActions'\nimport { logout } from './../../actions/userActions'\nimport { UPDATE_HOME_RESET } from '../../constants/websiteConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst ListHome = ({history}) => {\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { loading, error, homes } = useSelector(state => state.homes)\n    const { isUpdated } = useSelector(state => state.website)\n    const { user } = useSelector(state => state.auth)\n\n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => setToggled(!isToggled)\n\n    const logoutHandler = () => {\n        dispatch(logout())\n        alert.success('Logged out successfully')\n    }\n\n    useEffect(() => {\n        dispatch(getHomes())\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n        \n        if(isUpdated){\n            alert.success('Home information has been updated successfully.')\n            history.push('/admin/homes')\n\n            dispatch({\n                type: UPDATE_HOME_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, isUpdated, history])\n\n    const setHomeData = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Title',\n                    field: 'name',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Description',\n                    field: 'description',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Image Preview',\n                    field: 'image',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                    sort: 'asc'\n                }\n            ],\n            rows: []\n         }\n\n         homes.forEach(home => {\n            data.rows.push({\n                name: home.name,\n                description: home.description,\n                image: <Fragment>\n                    <figure>\n                        <img \n                            src={home.image.url} \n                            className='mt-3 mr-2' \n                            width='110' \n                            height='104'\n                        />\n                    </figure>\n                </Fragment>,\n                actions:\n                <Fragment>\n                    <div style={{display: 'flex'}}>\n                        <Link to={`/admin/home/${home._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                            <i className='fa fa-pencil'></i>\n                        </Link>\n                    </div>\n                </Fragment>\n             })\n         })\n\n         return data\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Home'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\n                <div id=\"sidebar-wrapper\" >\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )\n                        }\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\n                            <i className=\"fa fa-bars\"   ></i>\n                        </a>\n                        <Fragment>\n                        <div style={{padding: '30px'}}>\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Update Home</h1>\n                            {loading ? <Loader/> : (\n                                <MDBDataTableV5\n                                    data={setHomeData()}\n                                    entries={5}\n                                    entriesOptions={[5, 10, 15, 20]}\n                                    paging={false}\n                                    searching={false}\n                                    searchTop\n                                    searchBottom={false}\n                                    scrollX\n                                    sortable={false}\n                                />\n                            )}\n                        </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListHome\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/ListFooter.js",["319"],"import React, { Fragment, useEffect , useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTableV5 } from 'mdbreact'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getFooterDetails, clearErrors } from '../../actions/websiteActions'\nimport { logout } from './../../actions/userActions'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { UPDATE_FOOTER_RESET } from '../../constants/websiteConstants'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst ListFooter = ({history}) => {\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { loading, error, footerInfo } = useSelector(state => state.footerDetails)\n    const { isUpdated } = useSelector(state => state.website)\n    const { user } = useSelector(state => state.auth)\n\n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => setToggled(!isToggled)\n\n    const logoutHandler = () => {\n        dispatch(logout())\n        alert.success('Logged out successfully')\n    }\n\n    useEffect(() => {\n        dispatch(getFooterDetails())\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n        \n        if(isUpdated){\n            alert.success('Footer has been updated successfully.')\n            history.push('/admin/footer')\n\n            dispatch({\n                type: UPDATE_FOOTER_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, isUpdated, history])\n\n    const setFooterData = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Details',\n                    field: 'text',\n                    sort: 'asc'\n                }\n            ],\n            rows: [\n                {\n                    text: footerInfo.footerTitle\n                },\n                {\n                    text: footerInfo.footerDescription\n                },\n                {\n                    text: footerInfo.addressInfo\n                },\n                {\n                    text: footerInfo.phoneInfo\n                },\n                {\n                    text: footerInfo.cellphoneInfo\n                },\n                {\n                    text: footerInfo.emailInfo\n                }\n            ]\n         }\n         return data\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Footer Details'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}>\n                <div id=\"sidebar-wrapper\">\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )\n                        }\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\n                        </a>\n                        <Fragment>\n                        <div style={{padding: '30px'}}>\n                            <div style={{display: 'flex'}}>\n                                <div style={{marginRight: 'auto'}}>\n                                    <h1 className='mt-3 mb-3 ml-10 mr-10'>Footer Details</h1>\n                                </div>\n                                <div style={{marginLeft: 'auto', marginTop: '30px'}}>\n                                    <Link to='/admin/update-footer'>\n                                        <button className='btn btn-dark btn-sm text-capitalize mb-5'>\n                                            Update Footer\n                                        </button>\n                                    </Link>\n                                </div>\n                            </div>\n                            {loading ? <Loader/> : (\n                                <MDBDataTableV5\n                                    data={setFooterData()}\n                                    paging={false}\n                                    searcing={false}\n                                    searchTop\n                                    searchBottom={false}\n                                    scrollX\n                                    sortable={false}\n                                />\n                            )}\n                        </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListFooter\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/ListServices.js",["320"],"import React, { Fragment, useEffect , useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTableV5 } from 'mdbreact'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getServices, clearErrors } from '../../actions/websiteActions'\nimport { logout } from './../../actions/userActions'\nimport { UPDATE_SERVICES_RESET } from '../../constants/websiteConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst ListServices = ({history}) => {\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { loading, error, services } = useSelector(state => state.services)\n    const { isUpdated } = useSelector(state => state.website)\n    const { user } = useSelector(state => state.auth)\n\n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => setToggled(!isToggled)\n\n    const logoutHandler = () => {\n        dispatch(logout())\n        alert.success('Logged out successfully')\n    }\n\n    useEffect(() => {\n        dispatch(getServices())\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n        \n        if(isUpdated){\n            alert.success('Services has been updated successfully.')\n            history.push('/admin/service')\n\n            dispatch({\n                type: UPDATE_SERVICES_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, isUpdated, history])\n\n    const setServiceData = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Title',\n                    field: 'title',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Subtitle',\n                    field: 'subtitle',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Description',\n                    field: 'description',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Icon Preview',\n                    field: 'icon',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                    sort: 'asc'\n                }\n            ],\n            rows: []\n         }\n\n         services.forEach(service => {\n            data.rows.push({\n                title: service.title,\n                subtitle: service.subtitle,\n                description: service.description,\n                icon: <Fragment>\n                    <span className=\"fa-stack fa-2x\">\n                        <i className=\"fa fa-circle fa-stack-2x text-primary\"></i>\n                        <i className={`fa fa-${service.icon} fa-stack-1x fa-inverse`}></i>\n                    </span>\n                </Fragment>,\n                actions:\n                <Fragment>\n                    <div style={{display: 'flex'}}>\n                        <Link to={`/admin/service/${service._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                            <i className='fa fa-pencil'></i>\n                        </Link>\n                    </div>\n                </Fragment>\n             })\n         })\n\n         return data\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Home'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\n                <div id=\"sidebar-wrapper\" >\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )\n                        }\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\n                            <i className=\"fa fa-bars\"   ></i>\n                        </a>\n                        <Fragment>\n                        <div style={{padding: '30px'}}>\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Update Services</h1>\n                            {loading ? <Loader/> : (\n                                <MDBDataTableV5\n                                    data={setServiceData()}\n                                    searchTop\n                                    searchBottom={false}\n                                    scrollX\n                                    sortable={false}\n                                    searching={false}\n                                    paging={false}\n                                />\n                            )}\n                        </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListServices\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/UpdateHome.js",["321","322","323"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/UpdateAbout.js",["324","325"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/UpdateServices.js",["326","327"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admins/UpdateFooter.js",["328","329"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/superadmin/ListSuperAdmins.js",["330","331","332"],"import React, { Fragment, useEffect , useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTableV5 } from 'mdbreact'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getUsers, deleteUser, clearErrors } from '../../actions/userActions'\nimport { logout } from '../../actions/userActions'\nimport { DELETE_USER_RESET, UPDATE_USER_RESET } from '../../constants/userConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport MetaData from '../layout/MetaData'       \nimport Loader from '../layout/Loader'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst ListSuperAdmins = ({history}) => {\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { loading, error, users } = useSelector(state => state.users)\n    const { user } = useSelector(state => state.auth)\n    const { isUpdated } = useSelector(state => state.updateUser)\n\n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => setToggled(!isToggled)\n\n    const logoutHandler = () => {\n        dispatch(logout())\n\n        alert.success('Logged out successfully')\n    }\n    \n    const updateUser = (id) => {\n        history.replace(`/superadmin/user/${id}`)\n    }\n\n    useEffect(() => {\n        dispatch(getUsers())\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n        \n        if(isUpdated){\n            alert.success('User has been updated successfully.')\n            history.push('/admin/users/superadmin')\n\n            dispatch({\n                type: UPDATE_USER_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, isUpdated, history])\n\n    const setSuperAdminData = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Name',\n                    field: 'name',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Contact Number',\n                    field: 'contactNumber',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Email',\n                    field: 'email',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                    sort: 'asc'\n                }\n            ],\n            rows: []\n         }\n\n         users.forEach(superadmin => {\n            if(superadmin.role === 'superadmin') {\n                data.rows.push({\n                    name: superadmin.name,\n                    contactNumber: superadmin.contactNumber,\n                    email: superadmin.email,\n                    actions:   \n                    <Fragment>\n                        <div style={{display: 'flex'}}>\n                            <button\n                                className='btn btn-primary py-1 px-2 ml-2'\n                                disabled={(user.email === superadmin.email) ? false : true}\n                                onClick={\n                                    () => updateUser(superadmin._id)\n                                }\n                            >\n                                <i className='fa fa-pencil'></i>\n                            </button>\n                            <button className=\"btn btn-danger py-1 px-2 ml-2\"\n                                    disabled={true}\n                            >\n                                <i className='fa fa-trash'></i>\n                            </button>\n                        </div>\n                    </Fragment>\n                })\n            }\n         })\n\n         return data\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Superadmins'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\n            <div id=\"sidebar-wrapper\" >\n                <ul className=\"sidebar-nav\">\n                    <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                    <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                    <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                    <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                    {user && user.role !== 'admin' ? (\n                            <Fragment>\n                                <hr/>\n                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                            </Fragment>\n                        ) : (\n                            <Fragment>\n                                <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                <hr/>\n                                <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                <hr/>\n                                <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                            </Fragment>\n                        )}\n\n                    <hr/>\n                    <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                </ul>\n            </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\n                            <i className=\"fa fa-bars\"   ></i>\n                        </a>\n                        <Fragment>\n                        <div style={{padding: '30px'}}>\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Superadmins</h1>\n                            {loading? <Loader/> : (\n                                <MDBDataTableV5\n                                    data={setSuperAdminData()}\n                                    entries={5}\n                                    entriesOptions={[5, 10, 15, 20]}\n                                    searchTop\n                                    searchBottom={false}\n                                    scrollX\n                                    sortable={false}\n                                />\n                            )}\n                        </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListSuperAdmins\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/superadmin/ListAdmins.js",["333"],"import React, { Fragment, useEffect , useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTableV5 } from 'mdbreact'\nimport { useAlert } from 'react-alert'\nimport { Modal, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getUsers, deleteUser, clearErrors } from '../../actions/userActions'\nimport { logout } from '../../actions/userActions'\nimport { DELETE_USER_RESET, UPDATE_USER_RESET } from '../../constants/userConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst ListAdmins = ({history}) => {\n    const alert = useAlert()\n    const dispatch = useDispatch()\n\n    const { loading, error, users } = useSelector(state => state.users)\n    const { user } = useSelector(state => state.auth)\n    const { deleteError, isUpdated, isDeleted } = useSelector(state => state.updateUser)\n\n    const [isToggled, setToggled] = useState('false')\n    const [id, setId] = useState('')\n    const [show, setShow] = useState(false)\n\n    const handleClose = () => setShow(false)\n    const handleShow = () => setShow(true)\n    const handleToggle = () => setToggled(!isToggled)\n\n    const logoutHandler = () => {\n        dispatch(logout())\n        alert.success('Logged out successfully')\n    }\n\n    const deleteUserHandler = (id) => {\n        dispatch(deleteUser(id))\n        handleClose()\n    }\n\n    useEffect(() => {\n        dispatch(getUsers())\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n        \n        if(deleteError){\n            alert.error(deleteError)\n            dispatch(clearErrors())\n        }\n\n        if(isUpdated){\n            alert.success('User has been updated.')\n            history.push('/admin/users/admin')\n\n            dispatch({\n                type: UPDATE_USER_RESET\n            })\n        }\n\n        if(isDeleted){\n            alert.success('User has been deleted.')\n            history.push('/admin/users/admin')\n\n            dispatch({\n                type: DELETE_USER_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, isDeleted, isUpdated, deleteError, history])\n\n    const setAdminData = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Name',\n                    field: 'name',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Contact Number',\n                    field: 'contactNumber',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Email',\n                    field: 'email',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                    sort: 'asc'\n                }\n            ],\n            rows: []\n         }\n\n         users.forEach(user => {\n            if(user.role === 'admin'){\n                data.rows.push({\n                    name: user.name,\n                    contactNumber: user.contactNumber,\n                    email: user.email,\n                    actions:\n                    <Fragment>\n                        <div style={{display: 'flex'}}>\n                            <Link to={`/superadmin/user/${user._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                                <i className='fa fa-pencil'></i>\n                            </Link>\n                            <button className=\"btn btn-danger py-1 px-2 ml-2\"\n                                disabled={user.role === 'superadmin' ? true : false}\n                                onClick={() => {\n                                    setId(user._id)\n                                    handleShow()\n                                }}\n                            >\n                                <i className='fa fa-trash'></i>\n                            </button>\n                        </div>\n                    </Fragment>\n                })\n            }\n         })\n\n         return data\n    }\n    \n    return (\n        <Fragment>\n            <MetaData title={'Admins'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\n                <div id=\"sidebar-wrapper\" >\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                    <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )}\n\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\n                            <i className=\"fa fa-bars\"   ></i>\n                        </a>\n                        <Modal show={show} onHide={handleClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Delete user account?</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>Are you sure you want to delete this user? This cannot be undone.</Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={handleClose}>\n                                Close\n                                </Button>\n                                <Button variant=\"primary\" onClick={() => deleteUserHandler(id)}>\n                                Yes, I'm sure\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                        <Fragment>\n                        <div style={{padding: '30px'}}>\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Admins</h1>\n                            {loading? <Loader/> : (\n                                <MDBDataTableV5\n                                    data={setAdminData()}\n                                    entries={5}\n                                    entriesOptions={[5, 10, 15, 20]}\n                                    searchTop\n                                    searchBottom={false}\n                                    scrollX\n                                    sortable={false}\n                                />\n                            )}\n                        </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListAdmins\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/superadmin/UpdateUser.js",["334","335"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/superadmin/UpdateUserSuccess.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/superadmin/Register.js",["336","337","338"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/product/Products.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/product/ProductsOthers.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/product/ProductsDC.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/product/ProductsTE.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/product/ProductsEEE.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/product/ProductsME.js",[],{"ruleId":"339","replacedBy":"340"},{"ruleId":"341","replacedBy":"342"},{"ruleId":"343","severity":1,"message":"344","line":167,"column":25,"nodeType":"345","endLine":167,"endColumn":109},{"ruleId":"343","severity":1,"message":"344","line":166,"column":25,"nodeType":"345","endLine":166,"endColumn":109},{"ruleId":"343","severity":1,"message":"344","line":166,"column":25,"nodeType":"345","endLine":166,"endColumn":109},{"ruleId":"343","severity":1,"message":"344","line":175,"column":25,"nodeType":"345","endLine":175,"endColumn":109},{"ruleId":"343","severity":1,"message":"344","line":219,"column":25,"nodeType":"345","endLine":219,"endColumn":109},{"ruleId":"343","severity":1,"message":"344","line":159,"column":21,"nodeType":"345","endLine":159,"endColumn":105},{"ruleId":"343","severity":1,"message":"344","line":201,"column":25,"nodeType":"345","endLine":201,"endColumn":107},{"ruleId":"346","severity":1,"message":"347","line":324,"column":41,"nodeType":"345","endLine":330,"endColumn":43},{"ruleId":"343","severity":1,"message":"344","line":342,"column":45,"nodeType":"345","endLine":346,"endColumn":46},{"ruleId":"343","severity":1,"message":"344","line":193,"column":29,"nodeType":"345","endLine":193,"endColumn":111},{"ruleId":"343","severity":1,"message":"344","line":352,"column":41,"nodeType":"345","endLine":356,"endColumn":42},{"ruleId":"348","severity":1,"message":"349","line":48,"column":140,"nodeType":"350","messageId":"351","endLine":48,"endColumn":141},{"ruleId":"348","severity":1,"message":"349","line":48,"column":161,"nodeType":"350","messageId":"351","endLine":48,"endColumn":162},{"ruleId":"348","severity":1,"message":"349","line":69,"column":102,"nodeType":"350","messageId":"351","endLine":69,"endColumn":103},{"ruleId":"348","severity":1,"message":"349","line":69,"column":124,"nodeType":"350","messageId":"351","endLine":69,"endColumn":125},{"ruleId":"348","severity":1,"message":"349","line":72,"column":102,"nodeType":"350","messageId":"351","endLine":72,"endColumn":103},{"ruleId":"348","severity":1,"message":"349","line":72,"column":125,"nodeType":"350","messageId":"351","endLine":72,"endColumn":126},{"ruleId":"348","severity":1,"message":"349","line":78,"column":125,"nodeType":"350","messageId":"351","endLine":78,"endColumn":126},{"ruleId":"348","severity":1,"message":"349","line":78,"column":149,"nodeType":"350","messageId":"351","endLine":78,"endColumn":150},{"ruleId":"343","severity":1,"message":"344","line":162,"column":25,"nodeType":"345","endLine":162,"endColumn":109},{"ruleId":"343","severity":1,"message":"344","line":99,"column":37,"nodeType":"345","endLine":102,"endColumn":38},{"ruleId":"343","severity":1,"message":"344","line":125,"column":37,"nodeType":"345","endLine":128,"endColumn":38},{"ruleId":"343","severity":1,"message":"344","line":73,"column":37,"nodeType":"345","endLine":73,"endColumn":121},{"ruleId":"343","severity":1,"message":"344","line":87,"column":25,"nodeType":"345","endLine":91,"endColumn":26},{"ruleId":"343","severity":1,"message":"344","line":116,"column":37,"nodeType":"345","endLine":119,"endColumn":38},{"ruleId":"343","severity":1,"message":"344","line":176,"column":25,"nodeType":"345","endLine":176,"endColumn":107},{"ruleId":"343","severity":1,"message":"344","line":126,"column":25,"nodeType":"345","endLine":126,"endColumn":107},{"ruleId":"343","severity":1,"message":"344","line":169,"column":49,"nodeType":"345","endLine":172,"endColumn":50},{"ruleId":"343","severity":1,"message":"344","line":195,"column":49,"nodeType":"345","endLine":198,"endColumn":50},{"ruleId":"343","severity":1,"message":"344","line":215,"column":37,"nodeType":"345","endLine":219,"endColumn":38},{"ruleId":"343","severity":1,"message":"344","line":81,"column":37,"nodeType":"345","endLine":81,"endColumn":119},{"ruleId":"343","severity":1,"message":"344","line":131,"column":25,"nodeType":"345","endLine":131,"endColumn":109},{"ruleId":"352","severity":1,"message":"353","line":88,"column":25,"nodeType":"345","endLine":93,"endColumn":27},{"ruleId":"343","severity":1,"message":"344","line":146,"column":25,"nodeType":"345","endLine":146,"endColumn":109},{"ruleId":"343","severity":1,"message":"344","line":124,"column":25,"nodeType":"345","endLine":124,"endColumn":107},{"ruleId":"343","severity":1,"message":"344","line":148,"column":25,"nodeType":"345","endLine":148,"endColumn":109},{"ruleId":"343","severity":1,"message":"344","line":186,"column":25,"nodeType":"345","endLine":186,"endColumn":108},{"ruleId":"352","severity":1,"message":"353","line":242,"column":49,"nodeType":"345","endLine":247,"endColumn":51},{"ruleId":"343","severity":1,"message":"344","line":282,"column":45,"nodeType":"345","endLine":286,"endColumn":46},{"ruleId":"343","severity":1,"message":"344","line":130,"column":29,"nodeType":"345","endLine":130,"endColumn":112},{"ruleId":"343","severity":1,"message":"344","line":190,"column":49,"nodeType":"345","endLine":194,"endColumn":50},{"ruleId":"343","severity":1,"message":"344","line":139,"column":21,"nodeType":"345","endLine":139,"endColumn":104},{"ruleId":"343","severity":1,"message":"344","line":269,"column":45,"nodeType":"345","endLine":273,"endColumn":46},{"ruleId":"343","severity":1,"message":"344","line":138,"column":29,"nodeType":"345","endLine":138,"endColumn":111},{"ruleId":"343","severity":1,"message":"344","line":246,"column":49,"nodeType":"345","endLine":250,"endColumn":50},{"ruleId":"354","severity":1,"message":"355","line":6,"column":20,"nodeType":"356","messageId":"357","endLine":6,"endColumn":30},{"ruleId":"354","severity":1,"message":"358","line":8,"column":10,"nodeType":"356","messageId":"357","endLine":8,"endColumn":27},{"ruleId":"343","severity":1,"message":"344","line":155,"column":25,"nodeType":"345","endLine":155,"endColumn":109},{"ruleId":"343","severity":1,"message":"344","line":172,"column":25,"nodeType":"345","endLine":172,"endColumn":109},{"ruleId":"343","severity":1,"message":"344","line":129,"column":25,"nodeType":"345","endLine":129,"endColumn":108},{"ruleId":"343","severity":1,"message":"344","line":218,"column":37,"nodeType":"345","endLine":222,"endColumn":38},{"ruleId":"343","severity":1,"message":"344","line":218,"column":25,"nodeType":"345","endLine":218,"endColumn":107},{"ruleId":"343","severity":1,"message":"344","line":381,"column":73,"nodeType":"345","endLine":384,"endColumn":74},{"ruleId":"343","severity":1,"message":"344","line":412,"column":73,"nodeType":"345","endLine":415,"endColumn":74},"no-native-reassign",["359"],"no-negated-in-lhs",["360"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-unused-vars","'deleteUser' is defined but never used.","Identifier","unusedVar","'DELETE_USER_RESET' is defined but never used.","no-global-assign","no-unsafe-negation"]