[{"/Users/abby/Desktop/agile-technodynamics/frontend/src/index.js":"1","/Users/abby/Desktop/agile-technodynamics/frontend/src/store.js":"2","/Users/abby/Desktop/agile-technodynamics/frontend/src/App.js":"3","/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/inquiryReducers.js":"4","/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/productReducers.js":"5","/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/userReducers.js":"6","/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/dashboardReducers.js":"7","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ConfirmationPage.js":"8","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/EmailSent.js":"9","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/Header.js":"10","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/Footer.js":"11","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/product/ProductDetails.js":"12","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Products.js":"13","/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/websiteReducers.js":"14","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateFooter.js":"15","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Home.js":"16","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/Profile.js":"17","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListAppointments.js":"18","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListOthers.js":"19","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListInquiries.js":"20","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateAbout.js":"21","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdatePassword.js":"22","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateHome.js":"23","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Contact.js":"24","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateProfile.js":"25","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListArchives.js":"26","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListTrash.js":"27","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListAbout.js":"28","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateInquiry.js":"29","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ProductsList.js":"30","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateUser.js":"31","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListServices.js":"32","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/NewProduct.js":"33","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/user/RegisterSuccess.js":"34","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/user/ForgotPassword.js":"35","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateProduct.js":"36","/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/userActions.js":"37","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/route/ProtectedRoute.js":"38","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/Dashboard.js":"39","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/user/Register.js":"40","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/user/Login.js":"41","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/user/NewPassword.js":"42","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateServices.js":"43","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListHome.js":"44","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Services.js":"45","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/MetaData.js":"46","/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/productActions.js":"47","/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/inquiryConstants.js":"48","/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/productConstants.js":"49","/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/userConstants.js":"50","/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/dashboardConstants.js":"51","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/Loader.js":"52","/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/inquiryActions.js":"53","/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/websiteActions.js":"54","/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/websiteConstants.js":"55","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/product/ProductDisplay.js":"56","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductsOthers.js":"57","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductsDC.js":"58","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductsEEE.js":"59","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductsTE.js":"60","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductsME.js":"61","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/About.js":"62","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListSuperAdmins.js":"63","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListAdmins.js":"64","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListFooter.js":"65","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/user/RegisterError.js":"66"},{"size":586,"mtime":1614863606280,"results":"67","hashOfConfig":"68"},{"size":2009,"mtime":1614438439165,"results":"69","hashOfConfig":"68"},{"size":7455,"mtime":1615106346868,"results":"70","hashOfConfig":"68"},{"size":4183,"mtime":1614948846777,"results":"71","hashOfConfig":"68"},{"size":4538,"mtime":1614951281761,"results":"72","hashOfConfig":"68"},{"size":8019,"mtime":1615105981136,"results":"73","hashOfConfig":"68"},{"size":468,"mtime":1613899505000,"results":"74","hashOfConfig":"68"},{"size":1346,"mtime":1614945461665,"results":"75","hashOfConfig":"68"},{"size":1330,"mtime":1614945407511,"results":"76","hashOfConfig":"68"},{"size":6716,"mtime":1615095421391,"results":"77","hashOfConfig":"68"},{"size":4060,"mtime":1614863606207,"results":"78","hashOfConfig":"68"},{"size":2506,"mtime":1614945584866,"results":"79","hashOfConfig":"68"},{"size":4298,"mtime":1615049656820,"results":"80","hashOfConfig":"68"},{"size":9678,"mtime":1615098084085,"results":"81","hashOfConfig":"68"},{"size":11565,"mtime":1615100986308,"results":"82","hashOfConfig":"68"},{"size":4935,"mtime":1615104687438,"results":"83","hashOfConfig":"68"},{"size":9658,"mtime":1615101383064,"results":"84","hashOfConfig":"68"},{"size":8534,"mtime":1615107820429,"results":"85","hashOfConfig":"68"},{"size":8515,"mtime":1615107747934,"results":"86","hashOfConfig":"68"},{"size":8597,"mtime":1615107816230,"results":"87","hashOfConfig":"68"},{"size":8279,"mtime":1615021075162,"results":"88","hashOfConfig":"68"},{"size":9831,"mtime":1615101310461,"results":"89","hashOfConfig":"68"},{"size":10029,"mtime":1615021075162,"results":"90","hashOfConfig":"68"},{"size":8319,"mtime":1614945224076,"results":"91","hashOfConfig":"68"},{"size":14025,"mtime":1615021075161,"results":"92","hashOfConfig":"68"},{"size":8393,"mtime":1615107894109,"results":"93","hashOfConfig":"68"},{"size":9847,"mtime":1615107889844,"results":"94","hashOfConfig":"68"},{"size":6988,"mtime":1615106849521,"results":"95","hashOfConfig":"68"},{"size":12612,"mtime":1615026271351,"results":"96","hashOfConfig":"68"},{"size":8403,"mtime":1615107807097,"results":"97","hashOfConfig":"68"},{"size":9993,"mtime":1615026386052,"results":"98","hashOfConfig":"68"},{"size":7665,"mtime":1615106833830,"results":"99","hashOfConfig":"68"},{"size":15716,"mtime":1615021075162,"results":"100","hashOfConfig":"68"},{"size":1353,"mtime":1615106307536,"results":"101","hashOfConfig":"68"},{"size":2437,"mtime":1614945436499,"results":"102","hashOfConfig":"68"},{"size":17435,"mtime":1615021075161,"results":"103","hashOfConfig":"68"},{"size":7712,"mtime":1615095707252,"results":"104","hashOfConfig":"68"},{"size":1595,"mtime":1615104687456,"results":"105","hashOfConfig":"68"},{"size":13153,"mtime":1615105981126,"results":"106","hashOfConfig":"68"},{"size":21376,"mtime":1615106380151,"results":"107","hashOfConfig":"68"},{"size":4136,"mtime":1614947640765,"results":"108","hashOfConfig":"68"},{"size":5199,"mtime":1614947047970,"results":"109","hashOfConfig":"68"},{"size":12405,"mtime":1615043072778,"results":"110","hashOfConfig":"68"},{"size":7456,"mtime":1615106827414,"results":"111","hashOfConfig":"68"},{"size":5597,"mtime":1615093510451,"results":"112","hashOfConfig":"68"},{"size":270,"mtime":1613899505000,"results":"113","hashOfConfig":"68"},{"size":4463,"mtime":1615050693465,"results":"114","hashOfConfig":"68"},{"size":1077,"mtime":1613899505000,"results":"115","hashOfConfig":"68"},{"size":1292,"mtime":1614951281756,"results":"116","hashOfConfig":"68"},{"size":2203,"mtime":1615104687463,"results":"117","hashOfConfig":"68"},{"size":123,"mtime":1613899505000,"results":"118","hashOfConfig":"68"},{"size":160,"mtime":1613899505000,"results":"119","hashOfConfig":"68"},{"size":3325,"mtime":1614948911288,"results":"120","hashOfConfig":"68"},{"size":7346,"mtime":1614915180367,"results":"121","hashOfConfig":"68"},{"size":2226,"mtime":1614437406626,"results":"122","hashOfConfig":"68"},{"size":490,"mtime":1615091192595,"results":"123","hashOfConfig":"68"},{"size":3661,"mtime":1615050440380,"results":"124","hashOfConfig":"68"},{"size":4471,"mtime":1615091937522,"results":"125","hashOfConfig":"68"},{"size":4444,"mtime":1615091927697,"results":"126","hashOfConfig":"68"},{"size":4648,"mtime":1615091873631,"results":"127","hashOfConfig":"68"},{"size":4469,"mtime":1615091920610,"results":"128","hashOfConfig":"68"},{"size":3684,"mtime":1614945272434,"results":"129","hashOfConfig":"68"},{"size":7696,"mtime":1615107800223,"results":"130","hashOfConfig":"68"},{"size":7963,"mtime":1615107812000,"results":"131","hashOfConfig":"68"},{"size":7047,"mtime":1615106798196,"results":"132","hashOfConfig":"68"},{"size":1235,"mtime":1615106257841,"results":"133","hashOfConfig":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},"1vxlg7h",{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"136"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"136"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"136"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"136"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"136"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"136"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"136"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"136"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"136"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"136"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"136"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"136"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"136"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"136"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"136"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"136"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"136"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"136"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"136"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"136"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"136"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"136"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"136"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"136"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"136"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"136"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"136"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"288","messages":"289","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"290","messages":"291","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"136"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/abby/Desktop/agile-technodynamics/frontend/src/index.js",[],["295","296"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/store.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/App.js",["297","298"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/inquiryReducers.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/productReducers.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/userReducers.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/dashboardReducers.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ConfirmationPage.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/EmailSent.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/Header.js",["299","300","301","302","303","304"],"import React, { Fragment, useState } from 'react'\nimport '../../css/Navbar---Apple.css'\nimport '../../css/Navbar---Apple-1.css'\nimport '../../css/bootstrap.min.css'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useAlert } from 'react-alert'\nimport { logout } from './../../actions/userActions'\n\nconst Header = () => {\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const { user, loading } = useSelector(state => state.auth)\n\n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n    \n    let userAvatar = \"\"\n\n    if(user && user.avatar) {\n        userAvatar = user.avatar.url\n    } else {\n        userAvatar = \"\"\n    }\n\n    const [isOpen, setOpen] = useState('false');\n\n    const toggle = () => {\n        setOpen(!isOpen)\n    }\n\n    const [isProductOpen, setProductOpen] = useState('false');\n\n    const productToggle = () => {\n        setProductOpen(!isProductOpen)\n    }\n\n    const [isUserOpen, setUserOpen] = useState('false');\n\n    const userToggle = () => {\n        setUserOpen(!isUserOpen)\n    }\n\n    return (\n        <Fragment>\n            <nav className=\"navbar navbar-light navbar-expand-md fixed-top bg-light navbar--apple\">\n                <div className=\"container\">\n                    <button data-toggle=\"collapse\" data-target=\"#menu\" className=\"navbar-toggler\" onClick={toggle}>\n                    <span className=\"sr-only\">Toggle navigation</span>\n                    <span className=\"navbar-toggler-icon\"><i className=\"la la-navicon\"></i></span></button>\n                    <div className=\"collapse navbar-collapse\" id=\"menu\">\n                        <ul className=\"navbar-nav flex-grow-1 justify-content-between\">\n                            <li className=\"nav-item d-none d-xs-block d-md-block\">\n                                <a href=\"/\">\n                                    <img className=\"nav-link nav-logo\" src=\"https://res.cloudinary.com/agiletech3itf/image/upload/v1610472388/agile-tech-big-blue-logo_cej4nt.png\"/>\n                                </a>\n                            </li>\n                            <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/\"><strong></strong></Link></li>\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/\"><strong>Home</strong></Link></li>\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/about-us\"><strong>About Us</strong></Link></li>\n                        <div className=\"dropdown d-inline\">    \n                            <button\n                                className=\"btn dropdown-toggle text-black nav-link\"\n                                type=\"button\"\n                                id=\"productMenuButton\"\n                                data-toggle=\"dropdown\"\n                                aria-aria-haspopup=\"true\"\n                                aria-expanded=\"false\"\n                                style={{fontSize: '15px'}}\n                                onClick={productToggle}\n                            >\n                                <strong>Products</strong>\n                            </button>\n                            <div className=\"dropdown-menu\" aria-aria-labelledby=\"productMenuButton\">\n                                <Link className=\"dropdown-item\" to='/our-products'>\n                                    All Products\n                                </Link>\n                                <hr/>\n                                <Link className=\"dropdown-item\" to='/products/Mechanical Engineering'>\n                                    Mechanical Engineering\n                                </Link>\n                                <Link className=\"dropdown-item\" to='/products/DC Power Systems'>\n                                    DC Power Systems\n                                </Link>\n                                <Link className=\"dropdown-item\" to='/products/Electrical Engineering Equipment'>\n                                    Electrical Engineering Equipment\n                                </Link>\n                                <Link className=\"dropdown-item\" to='/products/Test Equipment'>\n                                    Test Equipment\n                                </Link>\n                                <Link className=\"dropdown-item\" to='/products/Others'>\n                                    Others\n                                </Link>\n                            </div>\n                        </div>\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/our-services\"><strong>Services</strong></Link></li>\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/contact-us\"><strong>Contact Us</strong></Link></li>\n                        {user ? (\n                            <div class=\"dropdown d-inline\">\n                                <button\n                                    className=\"btn dropdown-toggle text-black nav-link\"\n                                    type=\"button\"\n                                    id=\"userMenuButton\"\n                                    data-toggle=\"dropdown\"\n                                    aria-aria-haspopup=\"true\"\n                                    aria-expanded=\"false\"\n                                    style={{fontSize: '15px'}}\n                                    onClick={userToggle}\n                                >\n                                    <img \n                                        class='mr-2 rounded-circle'\n                                        src={userAvatar}\n                                        width='30' \n                                        height='32'\n                                    />{user && user.name}\n                                </button>\n                                <div class=\"dropdown-menu\" aria-aria-labelledby=\"userMenuButton\">\n                                    <Link className=\"dropdown-item\" to=\"/admin/dashboard\">\n                                        Dashboard\n                                    </Link>\n                                    <Link className=\"dropdown-item text-danger\" to=\"/\" onClick={logoutHandler}>\n                                        Log out\n                                    </Link>\n                                </div>\n                            </div>\n                            ) : !loading && <Link to=\"/login\">\n                                <div></div>\n                            </Link>}\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n        </Fragment>\n    )\n}\n\nexport default Header;","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/Footer.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/product/ProductDetails.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Products.js",["305"],"import React, { Fragment, useState, useEffect } from 'react'\nimport '../css/products.css'\nimport '../css/bootstrap.min.css'\nimport '../fonts/font-awesome.min.css'\nimport { Link } from 'react-router-dom'\nimport MetaData from './layout/MetaData'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProducts, clearErrors } from '../actions/productActions'\nimport ProductDisplay from './product/ProductDisplay'\nimport Loader from './layout/Loader'\nimport { useAlert } from 'react-alert'\nimport Pagination from 'react-js-pagination'\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\n\nconst Products = () => { \n    const [currentPage, setCurrentPage] = useState(1);\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products);\n    const [category, setMainCategory] = useState('');\n    const [subcategory, setSubCategory] = useState('');\n\n    const categories = [\n        'Mechanical Engineering',\n        'DC Power Systems',\n        'Electrical Engineering Equipment',\n        'Test Equipment',\n        'Others'\n    ]\n    \n    useEffect(() => {\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n        dispatch(getProducts(currentPage, category, subcategory));\n\n        dispatch({\n            type: INSIDE_DASHBOARD_FALSE\n        })\n    }, [dispatch, alert, error, currentPage, category, subcategory]);\n\n    function setCurrentPageNo(pageNumber) {\n        setCurrentPage(pageNumber);\n    }\n\n    let count = productsCount;\n    \n    if(category) {\n        count = filteredProductsCount\n    }\n\n    return (\n            <Fragment>\n                {loading ? <Loader/> : \n                (\n                    <Fragment>\n                        <MetaData title={'Our Products'}/>\n                        <div class=\"container-fluid\">\n                            <div class=\"product-header-container\">\n                                <h1 class=\"text-center product-text\">Our Products</h1>\n                                <ul class=\"product-categories\">\n                                    {categories.map( category => (\n                                        <li\n                                            key={category}\n                                            onClick={() => {setCurrentPageNo(1); setSubCategory(category)}}>\n                                                <Link to={`/products/${category}`}>{category}</Link>\n                                        </li>\n                                    ))}\n                                </ul>\n                            </div>\n                            <div class=\"container product-list-container\">\n                                <div class=\"list-products\">\n                                    <div class=\"row product-container-row\">\n                                        {products && products.map( product => (\n                                            <ProductDisplay key={product._id} product={product}/>\n                                        ))}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        {resPerPage < count && (\n                            <div className=\"d-flex justify-content-center mt-5\">\n                                <Pagination \n                                    activePage={currentPage}\n                                    itemsCountPerPage={resPerPage}\n                                    totalItemsCount={productsCount}\n                                    onChange={setCurrentPageNo}\n                                    nextPageText={'Next'}\n                                    prevPageText={'Prev'}\n                                    firstPageText={'First'}\n                                    lastPageText={'Last'}\n                                    itemClass='page-item'\n                                    linkClass='page-link'\n                                />\n                            </div>\n                        )} \n                        \n                    </Fragment>\n                )}\n            </Fragment>\n    )\n}\n\nexport default Products;\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/websiteReducers.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateFooter.js",["306","307","308","309"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Home.js",["310","311","312","313","314","315","316","317","318"],"import React, { Fragment, useEffect, useState } from 'react'\nimport '../css/styles.css'\nimport MetaData from './layout/MetaData'\nimport Loader from './layout/Loader'\nimport { useAlert } from 'react-alert'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getHomes, clearErrors } from '../actions/websiteActions'\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\nimport { Link } from 'react-router-dom'\n\nconst Home = () => {\n\n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const { loading,\n            error,\n            productsDescription,\n            servicesDescription,\n            productImageLeft,\n            productImageRight,\n            titleBackground,\n            servicesBackground\n        } = useSelector(state => state.homes)\n\n    useEffect(() => {\n        dispatch(getHomes())\n\n        dispatch({\n            type: INSIDE_DASHBOARD_FALSE\n        })\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n    }, [dispatch, alert, error]) //loop if homePage added as dependency\n\n    return (\n            <Fragment>\n                <MetaData title={'Home'}/>\n                {loading ? <Loader/> : (\n                    <Fragment>\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                <div className=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 text-center\"\n                                    style={{\n                                    background: \"linear-gradient(to bottom, rgba(216, 203, 194, 0.8) 0%, rgba(34, 33, 32, 0.8) 100%), url(\"+`${titleBackground}`+\") center / auto no-repeat\", \n                                    backgroundSize: \"cover\", \n                                    width: \"100%\", \n                                    height: \"100%\"}\n                                }>\n                                    <div className=\"main-section\">\n                                        <img className=\"logo\" src=\"https://res.cloudinary.com/agiletech3itf/image/upload/v1610472388/agile-logo_cqnjad.png\"/>\n                                        <h1 className=\"pt-3 main-text\">AGILE TECHNODYNAMICS, INC.</h1>\n                                    </div>\n                                </div>\n                            </div>\n                            <div>\n                                <div className=\"row agile-products-home\">\n                                    <div className=\"col\">\n                                        <h1>Our Products</h1>\n                                        <p className=\"our-products-description\">{productsDescription}</p>\n                                        <Link className=\"mt-4\" to=\"/our-products\">See Products <i className=\"fa fa-angle-right\"></i></Link>\n                                    </div>\n                                </div>\n                                <div className=\"row\" style={{margin: 'auto'}}>\n                                    <div className=\"col-sm-12 col-md-6\">\n                                        <div className=\"product-container\" style={{background: \"url(\"+`${productImageLeft}`+\") center / auto no-repeat\", backgroundSize: 'contain'}}></div>\n                                    </div>\n                                    <div className=\"col-sm-12 col-md-6\">\n                                        <div className=\"product-container\" style={{background: \"url(\"+`${productImageRight}`+\") center / auto no-repeat\", backgroundSize: 'contain'}}></div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row services-container\" \n                                style={{\n                                    background: \"linear-gradient(to right, rgb(0,0,0) 0%, rgba(151,161,179,0.4) 100%), url(\"+`${servicesBackground}`+\") no-repeat\", \n                                    backgroundSize: \"cover\", \n                                    backgroundPosition: \"right\"\n                                }}\n                            >\n                                <div className=\"col-sm-12 col-md-6\">\n                                    <div>\n                                        <div className=\"col-auto our-services-description\">\n                                            <h1 className=\"text-center\">Our Services</h1>\n                                            <p>{servicesDescription}</p>\n                                            <Link className=\"mt-4\" to=\"/our-services\">See Services <i className=\"fa fa-angle-right\"></i></Link>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </Fragment>\n                )}\n        </Fragment>\n    )\n}\n\nexport default Home;","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/Profile.js",["319"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListAppointments.js",["320"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListOthers.js",["321"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport { useAlert } from 'react-alert'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { logout } from './../../actions/userActions'\n\nconst ListOrders = ({history}) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\n    const { isUpdated } = useSelector(state => state.inquiry)\n    const { user } = useSelector(state => state.auth)\n\n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n\n    useEffect(() => {\n        dispatch(listInquiry());\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n        if(isUpdated){\n            alert.success('Inquiry has been moved to trash successfully.');\n            history.push('/admin/others')\n\n            dispatch({\n                type: UPDATE_INQUIRY_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, isUpdated, history])\n\n    const updateInquiryHandler = (id, inquiryStatus) => { \n        if(window.confirm(\"Are you sure you want to delete this? This message will be moved to Trash.\")){\n            const formData = new FormData();\n            formData.set('inquiryStatus', inquiryStatus);\n    \n            dispatch(updateInquiry(id, formData));\n        }\n    }\n    \n    let len = 0;\n\n    const setInquiries = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Date / Time',\n                    field: 'createdAt',\n                    sort: 'desc'\n                },\n                {\n                    label: 'Last Name',\n                    field: 'lastName'\n                },\n                {\n                    label: 'First Name',\n                    field: 'firstName'\n                },\n                {\n                    label: 'Company Name',\n                    field: 'companyName'\n                },\n                \n                {\n                    label: 'Status',\n                    field: 'inquiryStatus'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions'\n                }\n            ],\n            rows: []\n         }\n\n         inquiries.forEach(inquiry => {\n             if(inquiry.concernType==='Others'  && (inquiry.inquiryStatus !== \"Deleted\" && inquiry.inquiryStatus !== \"Resolved\")){\n                len += 1\n                data.rows.push({\n                    createdAt: inquiry.createdAt,\n                    firstName: inquiry.firstName,\n                    lastName: inquiry.lastName,\n                    companyName: inquiry.companyName,\n                    inquiryStatus: inquiry.inquiryStatus && (String(inquiry.inquiryStatus).includes('Processing') || String(inquiry.inquiryStatus).includes('Resolved'))\n                        ? <p style={{ color: 'green' }}>{inquiry.inquiryStatus}</p>\n                        :  <p style={{ color: 'red' }}>{inquiry.inquiryStatus}</p>,\n                    actions:   <Fragment>\n                                <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                                    <i className='fa fa-eye'></i>\n                                </Link>\n                                <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Deleted\")}>\n                                    <i className='fa fa-trash'></i>\n                                </button>\n                            </Fragment>\n                 })\n             }\n         }) \n         return data\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Others'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"} style={{paddingTop: '11px'}}>\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\n                    <ul className=\"sidebar-nav\">\n                                <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                                <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                                <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                                <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                                {user && user.role !== 'admin' ? (\n                                        <Fragment>\n                                            <hr/>\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                        </Fragment>\n                                    ) : (\n                                        <Fragment>\n                                            <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                            <hr/>\n                                            <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                            <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\n                                            <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                            <hr/>\n                                            <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                            <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                        </Fragment>\n                                    )\n                                }\n                                <hr/>\n                                <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                            </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{position: 'fixed'}}>\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\n                        </a>\n                        <Fragment>\n                        <div style={{padding: '30px'}}>\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Inbox - Others</h1>\n                            {loading? <Loader/> : (\n                                <MDBDataTable\n                                    data={setInquiries()}\n                                    className='px-3'\n                                    bordered\n                                    striped\n                                    hover\n                                    entries={5}\n                                    entriesOptions={[5, 10, 15, 20]}\n                                    paging={len < 5 ? false : true}\n                                />\n                            )}\n                        </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListOrders","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListInquiries.js",["322"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateAbout.js",["323","324"],"import React, { Fragment, useState, useEffect } from 'react'\nimport MetaData from '../layout/MetaData'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport { Link } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateAbout, getSingleAbout, clearErrors } from '../../actions/websiteActions'\nimport { UPDATE_ABOUT_RESET } from '../../constants/websiteConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { logout } from './../../actions/userActions'\n\nconst UpdateAbout = ({ match, history }) => {\n\n    const [title, setTitle] = useState('')\n    const [description, setDescription] = useState('')\n\n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const { error, about } = useSelector(state => state.aboutDetails)\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.website);\n    const { user } = useSelector(state => state.auth)\n\n    const aboutId = match.params.id\n\n    const [isToggled, setToggled] = useState('false')\n    \n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n\n    useEffect(() => {\n        if(about && about._id !== aboutId) {\n            dispatch(getSingleAbout(aboutId))\n        }\n        else { \n            setTitle(about.title)\n            setDescription(about.description)\n        }\n\n        if(error){\n            history.push('/admin/about');\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if(updateError){\n            history.push('/admin/about');\n            alert.error(updateError);\n            dispatch(clearErrors());\n        }\n\n        if(isUpdated) {\n            history.push('/admin/about');\n            alert.success('Information updated successfully.')\n\n            dispatch({\n                type: UPDATE_ABOUT_RESET\n            })\n        }\n        \n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, error, alert, isUpdated, updateError, about, aboutId, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('title', title);\n        formData.set('description', description);\n\n        dispatch(updateAbout(about._id, formData));\n    }\n\n\n    return (<Fragment>\n        <MetaData title={'Update About'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"} style={{paddingTop: '11px'}}>\n            <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\n                    <ul className=\"sidebar-nav\">\n                                <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                                <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                                <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                                <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                                {user && user.role !== 'admin' ? (\n                                        <Fragment>\n                                            <hr/>\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                        </Fragment>\n                                    ) : (\n                                        <Fragment>\n                                            <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                            <hr/>\n                                            <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                            <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\n                                            <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                            <hr/>\n                                            <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                            <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                        </Fragment>\n                                    )\n                                }\n                                <hr/>\n                                <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                            </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                    <Fragment>\n                        <div className=\"login-clean\">\n                            <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{marginTop: '-65px', position: 'fixed'}}>\n                                <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\n                            </a>\n                            <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data' style={{maxWidth: '500px'}}>\n                                <h2 className=\"sr-only\">Update About: \"{about.title}\"</h2>\n                                <div className=\"div-forgot-password\">\n                                    <h3 className=\"forgot-password-heading\">Update About \"{about.title}\"</h3>\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Name</h6>\n                                    <textarea \n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        name=\"title\"\n                                        value={title}\n                                        placeholder=\"Title\"\n                                        style={{width: '100%'}}\n                                        onChange={(e) => setTitle(e.target.value)}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Description</h6>\n                                    <textarea\n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        name=\"description\"\n                                        value={description}\n                                        placeholder=\"Description\"\n                                        style={{width: '100%', height: '250px'}}\n                                        onChange={(e) => setDescription(e.target.value)}\n                                        height='55px'\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                        <button \n                                        className=\"btn btn-primary btn-block\" \n                                        type=\"submit\"\n                                    >\n                                        Update Information\n                                    </button>\n                                </div>\n                            </form>\n                        </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n    </Fragment>\n)\n}\n\nexport default UpdateAbout\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdatePassword.js",["325","326","327","328"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateHome.js",["329","330","331"],"import React, { Fragment, useEffect, useState } from 'react'\nimport MetaData from '../layout/MetaData'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from  'react-redux'\nimport { updateHome, getHomeDetails, clearErrors } from '../../actions/websiteActions'\nimport { UPDATE_HOME_RESET } from '../../constants/websiteConstants'\n\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport { Link } from 'react-router-dom'\nimport { logout } from '../../actions/userActions'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\n\nconst UpdateHome = ({ match, history }) => {\n\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n    const [image, setImage] = useState('');\n    const [imagePreview, setImagePreview] = useState('images/default_avatar.png');\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, home } = useSelector(state => state.homeDetails);\n    const { error: updateError, isUpdated, loading } = useSelector(state => state.website);\n    const { user } = useSelector(state => state.auth)\n    \n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n\n    const homeId = match.params.id\n\n    useEffect(() => {\n        if(home && home._id !== homeId) {\n            dispatch(getHomeDetails(homeId))\n        }\n        else {\n            setName(home.name);\n            setDescription(home.description);\n            setImagePreview(home.image.url);\n        }\n\n        if(error){\n            history.push('/admin/home')\n            alert.error(error);\n            dispatch(clearErrors());\n\n        }\n        \n        if(updateError){\n            history.push('/admin/home')\n            alert.error(updateError);\n            dispatch(clearErrors());\n        }\n\n        if(isUpdated){\n            alert.success('Home updated successfully');\n\n            history.push('/admin/home')\n\n            dispatch({\n                type: UPDATE_HOME_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n\n    }, [dispatch, alert, error, history, home, homeId, isUpdated, updateError])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('description', description);\n        formData.set('image', image);\n\n        dispatch(updateHome(home._id, formData));\n    }\n\n    const onChange = e => {\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            if(reader.readyState === 2){\n                setImagePreview(reader.result)\n                setImage(reader.result)\n            }\n        }\n\n        reader.readAsDataURL(e.target.files[0])\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Update Home'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"} style={{paddingTop: '11px'}}>\n            <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\n                    <ul className=\"sidebar-nav\">\n                                <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                                <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                                <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                                <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                                {user && user.role !== 'admin' ? (\n                                        <Fragment>\n                                            <hr/>\n                                            <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\n                                            <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\n                                        </Fragment>\n                                    ) : (\n                                        <Fragment>\n                                            <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                            <hr/>\n                                            <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                            <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\n                                            <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                            <hr/>\n                                            <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                            <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                        </Fragment>\n                                    )\n                                }\n                                <hr/>\n                                <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                            </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <div className=\"login-clean\">\n                            <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{marginTop: '-65px', position: 'fixed'}}>\n                                <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\n                            </a>\n                            <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data'  style={{maxWidth: '500px'}}>\n                                <h2 className=\"sr-only\">Update Home</h2>\n                                <div className=\"div-forgot-password\">\n                                    <h3 className=\"forgot-password-heading\">Update Home </h3>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <h6>Name</h6>\n                                    <input \n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        id=\"name\" \n                                        name=\"name\" \n                                        value={name}\n                                        disabled={true}\n                                        style={{backgroundColor: '#F5F5F5', color: 'gray'}}\n                                        onChange={(e) => setName(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <h6>Description</h6>\n                                    <textarea \n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        id=\"description\" \n                                        name=\"description\" \n                                        placeholder=\"Description\"\n                                        value={description}\n                                        disabled={String(home.name).includes('Description') ? false : true}\n                                        style={String(home.name).includes('Description') ? {width: '100%', height: '150px'} : {backgroundColor: '#F5F5F5', color: 'gray', width: '100%', height: '150px'}}\n                                        onChange={(e) => setDescription(e.target.value)}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Image</h6>\n                                    <figure>\n                                        <img \n                                            src={imagePreview} \n                                            className='mt-3 mr-2' \n                                            width='110' \n                                            height='104'\n                                        />\n                                    </figure>\n                                    <input \n                                        type=\"file\" \n                                        id=\"image\" \n                                        name=\"image\" \n                                        accept=\"images/*\"\n                                        disabled={String(home.name).includes('Description') ? true : false} \n                                        onChange={onChange}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <button \n                                        className=\"btn btn-primary btn-block\" \n                                        type=\"submit\"\n                                    >\n                                        Update Home\n                                    </button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default UpdateHome\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Contact.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateProfile.js",["332","333"],"import React, { Fragment, useEffect, useState } from 'react'\nimport MetaData from '../layout/MetaData'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from  'react-redux'\nimport { updateProfile, loadUser, clearErrors } from './../../actions/userActions'\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants'\n\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport { Link } from 'react-router-dom'\nimport { logout } from './../../actions/userActions'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\n\nconst UpdateProfile = ({ history }) => {\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [contactNumber, setContactNumber] = useState('');\n    const [address, setAddress] = useState('');\n    const [avatar, setAvatar] = useState('');\n    const [avatarPreview, setAvatarPreview] = useState('images/default_avatar.png');\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { user } = useSelector(state => state.auth);\n    const { error, isUpdated, loading } = useSelector(state => state.user);\n    \n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n\n    useEffect(() => {\n        if(user) {\n            setName(user.name);\n            setEmail(user.email);\n            setContactNumber(user.contactNumber);\n            setAddress(user.address);\n            setAvatarPreview(user.avatar.url);\n        }\n\n        if(error){\n            history.push('/admin/me')\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if(isUpdated){\n            history.push('/admin/me')\n            alert.success('User updated successfully');\n            dispatch(loadUser());\n\n            dispatch({\n                type: UPDATE_PROFILE_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n\n    }, [dispatch, alert, error, history, user, isUpdated])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('email', email);\n        formData.set('contactNumber', contactNumber);\n        formData.set('address', address);\n        formData.set('avatar', avatar);\n\n        dispatch(updateProfile(formData));\n    }\n\n    const onChange = e => {\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            if(reader.readyState === 2){\n                setAvatarPreview(reader.result)\n                setAvatar(reader.result)\n            }\n        }\n\n        reader.readAsDataURL(e.target.files[0])\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Update Profile'}/>\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                        <hr/>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )}\n\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                        <li></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{marginTop: '-65px', position: 'fixed'}}>\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\n                        </a>\n                        <div className=\"container\">\n                            <div className=\"main-body\">\n                                <div className=\"row gutters-sm\">\n                                    <div className=\"col-md-4 mb-3\">\n                                        <div className=\"card\">\n                                            <div className=\"card-body\">\n                                                <div className=\"d-flex flex-column align-items-center text-center\">\n                                                    <img src={avatarPreview} alt=\"Admin\" className=\"rounded-circle\" width=\"100%\" style={{minWidth: '100px', maxWidth: '150px'}}/>\n                                                    <div className=\"mt-3\">\n                                                    <hr/>\n                                                    <input \n                                                        type=\"file\" \n                                                        id=\"avatar\" \n                                                        name=\"avatar\" \n                                                        accept=\"images/*\"\n                                                        onChange={onChange}\n                                                        style={{width: '90%'}}\n                                                    />\n                                                    <br/>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <div className=\"card mb-3\">\n                                            <div className=\"card-body\">\n                                                <form method=\"post\" onSubmit={submitHandler}>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-3\">\n                                                        <h6 className=\"mb-0\">Full Name</h6>\n                                                        </div>\n                                                        <div className=\"col-sm-9 text-secondary\">\n                                                        <input \n                                                            type=\"text\" \n                                                            className=\"form-control\" \n                                                            name=\"name\"\n                                                            value={name}\n                                                            placeholder=\"Name\"\n                                                            onChange={(e) => setName(e.target.value)}\n                                                        />\n                                                        </div>\n                                                    </div>\n                                                    <hr/>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-3\">\n                                                        <h6 className=\"mb-0\">Email</h6>\n                                                        </div>\n                                                        <div className=\"col-sm-9 text-secondary\">\n                                                        <input \n                                                            type=\"email\" \n                                                            className=\"form-control\" \n                                                            name=\"email\"\n                                                            value={email}\n                                                            placeholder=\"Email\"\n                                                            onChange={(e) => setEmail(e.target.value)}\n                                                        />\n                                                        </div>\n                                                    </div>\n                                                    <hr/>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-3\">\n                                                        <h6 className=\"mb-0\">Phone</h6>\n                                                        </div>\n                                                        <div className=\"col-sm-9 text-secondary\">\n                                                        <input \n                                                            type=\"text\" \n                                                            className=\"form-control\" \n                                                            name=\"contactNumber\"\n                                                            value={contactNumber}\n                                                            placeholder=\"09xx-xxx-xxxx\"\n                                                            pattern=\"^[0][9]\\d{2}-\\d{3}-\\d{4}$\"\n                                                            onChange={(e) => setContactNumber(e.target.value)}\n                                                        />\n                                                        </div>\n                                                    </div>\n                                                    <hr/>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-3\">\n                                                        <h6 className=\"mb-0\">Address</h6>\n                                                        </div>\n                                                        <div className=\"col-sm-9 text-secondary\">\n                                                            <textarea \n                                                                type=\"text\"\n                                                                className=\"form-control\"\n                                                                name=\"address\"\n                                                                value={address}\n                                                                placeholder=\"Address\"\n                                                                onChange={(e) => setAddress(e.target.value)}\n                                                                style={{height: '150px'}}\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"row\">\n                                                        <br/>\n                                                        <br/>\n                                                        <button\n                                                            className=\"btn btn-primary btn-block\"\n                                                            type=\"submit\"\n                                                        >Update Profile</button>\n                                                    </div>\n                                                </form>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>    \n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default UpdateProfile\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListArchives.js",["334"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListTrash.js",["335","336","337"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListAbout.js",["338"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateInquiry.js",["339"],"import React, { Fragment, useEffect, useState } from 'react'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport { Link } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateInquiry, getInquiryDetails, clearErrors } from '../../actions/inquiryActions'\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { logout } from './../../actions/userActions'\n\nconst UpdateInquiry = ( { match, history } ) => {\n\n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const { error, inquiry } = useSelector(state => state.inquiryDetails)\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.inquiry);\n    const { user } = useSelector(state => state.auth)\n\n    const inquiryId = match.params.id\n\n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n\n    useEffect(() => { \n        if(inquiry && inquiry._id !== inquiryId) {\n            dispatch(getInquiryDetails(inquiryId))\n        }\n\n        if(error){\n            history.push('/admin/dashboard')\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if(updateError){\n            history.push('/admin/dashboard')\n            alert.error(updateError);\n            dispatch(clearErrors());\n        }\n\n        if(isUpdated) {\n            history.push('/admin/dashboard');\n            alert.success('Inquiry updated successfully.')\n\n            dispatch({\n                type: UPDATE_INQUIRY_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, error, alert, isUpdated, updateError, inquiry, inquiryId, history])\n\n    const updateInquiryHandler = (id, inquiryStatus) => { \n        const formData = new FormData();\n        formData.set('inquiryStatus', inquiryStatus);\n\n        dispatch(updateInquiry(id, formData));\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'View Message'}/>\n            <div id=\"wrapper\" className={isToggled ? null : \"toggled\"} style={{paddingTop: '11px'}}>\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\n                    <ul className=\"sidebar-nav\">\n                                <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                                <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                                <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                                <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                                {user && user.role !== 'admin' ? (\n                                        <Fragment>\n                                            <hr/>\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                        </Fragment>\n                                    ) : (\n                                        <Fragment>\n                                            <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                            <hr/>\n                                            <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                            <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\n                                            <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                            <hr/>\n                                            <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                            <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                        </Fragment>\n                                    )\n                                }\n                                <hr/>\n                                <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                            </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                    <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{position: 'fixed'}}>\n                        <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\n                    </a>\n                    <Fragment>\n                        {loading ? <Loader/> : (\n                            <section className=\"process-section\" style={{backgroundColor: '#f1f7fc', fontSize: '100%', fontWeight: '400', lineHeight: '1.4', color: '#000', width: '100%'}}>\n                                <table style={{width: '85%', minWidth: '150px', margin: '0 auto 20px auto', backgroundColor: '#fff', padding: '30px', WebkitBorderRadius: '3px', MozBorderRadius: '3px', borderRadius: '3px', WebkitBoxShadow: '0 1px 3px rgba(0,0,0.12), 0 1px 2px rgba(0,0,0,.24)', MozBoxShadow: '0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24)', boxShadow: '0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24)', borderTop: 'solid 10px #1b1449'}}>\n                                    <thead>\n                                        <tr>\n                                        <th style={{textAlign: 'left'}}><img style={{maxWidth: '300px'}} src=\"https://res.cloudinary.com/agiletech3itf/image/upload/v1610472388/agile-tech-big-blue-logo_cej4nt.png\" alt=\"logo\"/></th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr>\n                                        <td style={{height: '35px'}}></td>\n                                        </tr>\n                                        <tr>\n                                        <td colspan=\"2\" style={{border: 'solid 1px #ddd', padding:'10px 20px'}}>\n                                            <p style={{fontSize:'14px', margin:'0 0 6px 0'}}><span style={{fontWeight: 'bold', display: 'inline-block', minWidth: '150px'}}>Concern Type</span><b style={{color: 'green', fontWeight: 'normal', margin: '0'}}>{inquiry.concernType}</b></p>\n                                        </td>\n                                        </tr>\n                                        <tr>\n                                        <td style={{height: '35px'}}></td>\n                                        </tr>\n                                        <tr>\n                                        <td style={{width: '100%', padding: '20px', verticalAlign: 'top'}}>\n                                            <h2 style={{margin: '0 0 10px 0', padding: '0'}}>Sender Details</h2>\n                                            <p style={{margin: '0 0 10[x 0', padding: '0', fontSize: '14px'}}><span style={{display: 'block', fontWeight: 'bold', fontSize: '13px'}}>Name</span> {inquiry.firstName} {inquiry.lastName}</p>\n                                            <p style={{margin: '0 0 10[x 0', padding: '0', fontSize: '14px'}}><span style={{display: 'block', fontWeight: 'bold', fontSize: '13px'}}>Company and Position</span> {inquiry.companyName}, {inquiry.position}</p>\n                                            <p style={{margin: '0 0 10[x 0', padding: '0', fontSize: '14px'}}><span style={{display: 'block', fontWeight: 'bold', fontSize: '13px'}}>Email</span> {inquiry.customerEmail}</p>\n                                            <p style={{margin: '0 0 10[x 0', padding: '0', fontSize: '14px'}}><span style={{display: 'block', fontWeight: 'bold', fontSize: '13px'}}>Phone</span> {inquiry.contactNumber}</p>\n                                        </td>\n                                        </tr>\n                                        <tr>\n                                        <td colspan=\"2\" style={{padding: '30px 15px 0 15px'}}>\n                                            <h2 style={{margin: '0 0 10px 0', padding: '0'}}>Message Content</h2>\n                                        </td>\n                                        </tr>\n                                        <tr>\n                                        <td colspan=\"2\" style={{padding:'15px'}}>\n                                            <p style={{fontSize: '14px', margin: '0', padding: '10px', textAlign: 'justify'}}>\n                                            {inquiry.customerMessage}\n                                            </p>\n                                        </td>\n                                        </tr>\n                                        <tr style={{ width: '100%'}}>\n                                            {(inquiry.inquiryStatus === 'Resolved' ) ? (\n                                                <Fragment>\n                                                    <button \n                                                        className=\"btn btn-primary update-status-button\" \n                                                        type=\"button\"\n                                                        onClick={() => updateInquiryHandler(inquiry._id, 'Unresolved')}\n                                                        style={{margin: '50px auto 50px auto', display: 'block'}}>\n                                                        Restore message back to {inquiry.concernType}\n                                                    </button>\n                                                </Fragment>\n                                            ) : ((inquiry.inquiryStatus === 'Deleted') ? (\n                                                <Fragment>\n                                                    <button \n                                                        className=\"btn btn-primary update-status-button align-center\" \n                                                        type=\"button\"\n                                                        onClick={() => updateInquiryHandler(inquiry._id, 'Resolved')}\n                                                        style={{margin: '50px auto 50px auto', display: 'block'}}>\n                                                        Restore message back to Archives\n                                                    </button>\n                                                </Fragment>\n                                            ) : (\n                                                <Fragment>\n                                                    <button \n                                                        className=\"btn btn-primary update-status-button align-center\" \n                                                        type=\"button\"\n                                                        onClick={() => updateInquiryHandler(inquiry._id, 'Resolved')}\n                                                        style={{margin: '50px auto 50px auto', display: 'block'}}>\n                                                        Resolve message\n                                                    </button>\n                                                </Fragment>\n                                            )\n\n                                            )}\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </section>\n                        )}\n                    </Fragment>\n                    </div>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default UpdateInquiry\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ProductsList.js",["340"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateUser.js",["341","342"],"import React, { Fragment, useState, useEffect } from 'react'\nimport MetaData from '../layout/MetaData'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport { Link } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateUser, getUserDetails, clearErrors } from '../../actions/userActions'\nimport { UPDATE_USER_RESET } from '../../constants/userConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { logout } from './../../actions/userActions'\n\n\nconst UpdateUser = ({ match, history }) => {\n    const [name, setName] = useState('');\n    const [contactNumber, setContactNumber] = useState('');\n    const [role, setRole] = useState([]);\n    const [address, setAddress] = useState('');\n\n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const { error, user } = useSelector(state => state.getUser)\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.updateUser);\n\n    const userId = match.params.id\n\n    const [isToggled, setToggled] = useState('false')\n    \n    const roles = [\n        'admin',\n        'superadmin'\n    ]\n\n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n\n    useEffect(() => {\n\n        if(user && user._id !== userId) {\n            dispatch(getUserDetails(userId))\n        }\n        else { \n            setName(user.name)\n            setContactNumber(user.contactNumber)\n            setRole(user.role)\n            setAddress(user.address)\n        }\n\n        if(error){\n            history.push('/admin/dashboard')\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if(updateError){\n            history.push('/admin/dashboard')\n            alert.error(updateError);\n            dispatch(clearErrors());\n        }\n\n        if(isUpdated) {\n            history.push('/admin/dashboard')\n            alert.success('User updated successfully.')\n\n            dispatch({\n                type: UPDATE_USER_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, error, alert, isUpdated, updateError, user, userId, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('contactNumber', contactNumber);\n        formData.set('address', address);\n        formData.set('role', role);\n\n        dispatch(updateUser(user._id, formData));\n    }\n    \n    return (\n        <Fragment>\n            <MetaData title={'Update User'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"} style={{paddingTop: '11px'}}>\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                    <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )}\n\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <Fragment>\n                        <div className=\"login-clean\">\n                            <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{marginTop: '-65px', position: 'fixed'}}>\n                                <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\n                            </a>\n                            <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data' style={{maxWidth: '500px'}}>\n                                <h2 className=\"sr-only\">Update User</h2>\n                                <div className=\"div-forgot-password\">\n                                    <h3 className=\"forgot-password-heading\">Update User</h3>\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Name</h6>\n                                    <input \n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        name=\"name\"\n                                        value={name}\n                                        placeholder=\"Name\"\n                                        pattern=\"[A-Za-z\\s]{1,}\"\n                                        style={{width: '100%'}}\n                                        onChange={(e) => setName(e.target.value)}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Contact Number</h6>\n                                    <input\n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        name=\"contactNumber\"\n                                        value={contactNumber}\n                                        placeholder=\"09xx-xxx-xxxx\" \n                                        pattern=\"^[0][9]\\d{2}-\\d{3}-\\d{4}$\"\n                                        onChange={(e) => setContactNumber(e.target.value)}\n                                        height='55px'\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Address</h6>\n                                    <textarea\n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        name=\"address\"\n                                        value={address}\n                                        placeholder=\"Address\"\n                                        style={{width: '100%', height: '150px'}}\n                                        onChange={(e) => setAddress(e.target.value)}\n                                        height='55px'\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Role</h6>\n                                    <div className=\"dropdown show\">\n                                        <select \n                                            name=\"role\" \n                                            className=\"product-dropdown\" \n                                            id=\"role\"\n                                            value={role}\n                                            onChange={(e) => setRole(e.target.value)}\n                                        >\n                                            {roles.map(role => (\n                                                <option key={role} value={role}>{role}</option>\n                                            ))}\n                                        </select>\n                                    </div>\n                                </div>\n                                <div className=\"form-group\">\n                                        <button \n                                        className=\"btn btn-primary btn-block\" \n                                        type=\"submit\"\n                                    >\n                                        Update User\n                                    </button>\n                                </div>\n                            </form>\n                        </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default UpdateUser\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListServices.js",["343"],"import React, { Fragment, useEffect , useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport '../../css/dashboard.css'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getServices, clearErrors } from '../../actions/websiteActions'\nimport { UPDATE_SERVICES_RESET } from '../../constants/websiteConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { logout } from './../../actions/userActions'\n\nconst ListServices = ({history}) => {\n    \n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, services } = useSelector(state => state.services)\n    const { isUpdated } = useSelector(state => state.website)\n    const { user } = useSelector(state => state.auth)\n\n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n\n    useEffect(() => {\n        dispatch(getServices());\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n        \n        if(isUpdated){\n            alert.success('Services information has been updated successfully.');\n            history.push('/admin/service')\n\n            dispatch({\n                type: UPDATE_SERVICES_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, isUpdated, history])\n\n    const setServiceData = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Title',\n                    field: 'title',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Subtitle',\n                    field: 'subtitle',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Description',\n                    field: 'description',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Icon Preview',\n                    field: 'icon',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                    sort: 'asc'\n                }\n            ],\n            rows: []\n         }\n\n         services.forEach(service => {\n            data.rows.push({\n                title: service.title,\n                subtitle: service.subtitle,\n                description: service.description,\n                icon: <Fragment>\n                    <span className=\"fa-stack fa-2x\">\n                        <i className=\"fa fa-circle fa-stack-2x text-primary\"></i>\n                        <i className={`fa fa-${service.icon} fa-stack-1x fa-inverse`}></i>\n                    </span>\n                </Fragment>,\n                actions:   <Fragment>\n                            <Link to={`/admin/service/${service._id}`} className='btn btn-primary py-1 px-2 ml-2'>\n                                <i className='fa fa-pencil'></i>\n                            </Link>\n                        </Fragment>\n             })\n         })\n\n         return data\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Home'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"} style={{paddingTop: '11px'}}>\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\n                    <ul className=\"sidebar-nav\">\n                                <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                                <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                                <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                                <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                                {user && user.role !== 'admin' ? (\n                                        <Fragment>\n                                            <hr/>\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                        </Fragment>\n                                    ) : (\n                                        <Fragment>\n                                            <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                            <hr/>\n                                            <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                            <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\n                                            <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                            <hr/>\n                                            <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                            <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                        </Fragment>\n                                    )\n                                }\n                                <hr/>\n                                <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                            </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{position: 'fixed'}}>\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\n                        </a>\n                        <Fragment>\n                        <div style={{padding: '30px'}}>\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Update Services</h1>\n                            {loading ? <Loader/> : (\n                                <MDBDataTable\n                                    data={setServiceData()}\n                                    className='px-3'\n                                    bordered\n                                    striped\n                                    hover\n                                    entries={5}\n                                    entriesOptions={['-']}\n                                    paging={false}\n                                    searching={false}\n                                />\n                            )}\n                        </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListServices\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/NewProduct.js",["344","345","346"],"import React, { Fragment, useState, useEffect } from 'react'\nimport MetaData from '../layout/MetaData'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport { Link } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { newProduct, clearErrors } from '../../actions/productActions'\nimport { NEW_PRODUCT_RESET } from '../../constants/productConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { logout } from './../../actions/userActions'\n\nconst NewProduct = ( { history } ) => {\n    \n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n    const [images, setImages] = useState([]);\n    const [category, setMainCategory] = useState('');\n    const [subcategory, setSubCategory] = useState('');\n    const [imagesPreview, setImagesPreview] = useState([])\n    const [useDefaultImage, setUseDefaultImage] = useState('')\n\n    const [isChecked, setChecked] = useState('false')\n\n    const checkboxCheck = () => {\n        setChecked(!isChecked)\n    }\n\n    const categories = [\n        ' - ',\n        'Mechanical Engineering',\n        'DC Power Systems',\n        'Electrical Engineering Equipment',\n        'Test Equipment',\n        'Others'\n    ]\n\n    const me_subCategory = [\n        '-',\n        'Pumps and System',\n        'Fire Protection System',\n        'Others'\n    ]\n\n    const dc_subCategory = [\n        '-',\n        'Uninterrupted Power System',\n        'Battery Monitoring System',\n        'Batteries',\n        'Others'\n    ]\n    \n    const eee_subCategory = [\n        '-',\n        'Transformers',\n        'Others'\n    ]\n\n    const te_subCategory = [\n        '-',\n        'Partial Discharge Detection',\n        'Battery Discharge Capacity Tester',\n        'Battery Impedance or Internal Resistance',\n        'Load Banks',\n        'Battery Test Monitor',\n        'Portable Direct Ground Fault Finder',\n        'Earth Tester or Clamp Type',\n        'Others'\n    ]\n\n    const { loading, error, success } = useSelector(state => state.newProduct);\n\n    const { user } = useSelector(state => state.auth)\n    const [isToggled, setToggled] = useState('false')\n    \n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n    \n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n\n    useEffect(() => {\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors());\n        }\n\n        if(success) {\n            history.push('/admin/products');\n            alert.success('Product created successfully.')\n        \n            dispatch({\n                type: NEW_PRODUCT_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, error, alert, success, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('description', description);\n        formData.set('category', category);\n        if(String(category).includes(\"Others\")) {\n            formData.set('subcategory', \"Others\");\n        } else {\n            formData.set('subcategory', subcategory);\n        }\n        formData.set('useDefaultImage', useDefaultImage)\n\n        images.forEach(image => {\n            formData.append('images', image)\n        });\n\n        dispatch(newProduct(formData));\n    }\n\n    const onChange = e => {\n\n        if(e.target.name === 'useDefaultImage') {\n            let chkbox = document.getElementById('useDefaultImage')\n\n            if(chkbox.checked == true) { //if changed to ===, register would not work\n                setUseDefaultImage(\"True\")\n            }\n            else{\n                setUseDefaultImage(\"False\")\n            }\n\n        } else {\n            const files = Array.from(e.target.files)\n\n            setImagesPreview([]);\n            setImages([])\n    \n            files.forEach(file => {\n                const reader = new FileReader();\n    \n                reader.onload = () => {\n                    if(reader.readyState === 2){\n                        setImagesPreview(oldArray => [...oldArray, reader.result])\n                        setImages(oldArray => [...oldArray, reader.result])\n                    }\n                }\n    \n                reader.readAsDataURL(file)\n            })\n        }\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'New Product'}/>\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\n            <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                        <hr/>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )}\n\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                        <li></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                    <Fragment>\n                    <div className=\"login-clean\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{marginTop: '-65px', position: 'fixed'}}>\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\n                        </a>\n                        <form method=\"post\" onSubmit={submitHandler} encType='multipart/form-data' style={{maxWidth: '500px'}}>\n                            <h2 className=\"sr-only\">New Product</h2>\n                            <div className=\"div-forgot-password\">\n                                <h3 className=\"forgot-password-heading\">New Product</h3>\n                            </div>\n                            <div className=\"form-group\">\n                                <h6>Name</h6>\n                                <textarea \n                                    type=\"text\" \n                                    className=\"form-control\" \n                                    name=\"product_name\"\n                                    value={name}\n                                    placeholder=\"Product Name\"\n                                    style={{width: '100%'}}\n                                    onChange={(e) => setName(e.target.value)}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <h6>Description</h6>\n                                <textarea\n                                    type=\"text\" \n                                    className=\"form-control\" \n                                    name=\"product_name\"\n                                    style={{width: '100%', height: '150px'}}\n                                    value={description}\n                                    placeholder=\"Product Description\"\n                                    onChange={(e) => setDescription(e.target.value)}\n                                />\n                            </div>\n                            \n                            \n\n                            <div className=\"form-group\">\n                                <h6>Main Category</h6>\n                                <div className=\"dropdown show\">\n                                    <select \n                                        name=\"mainCategory\" \n                                        className=\"product-dropdown\" \n                                        id=\"mainCategory\"\n                                        value={category}\n                                        onChange={(e) => setMainCategory(e.target.value)}\n                                    >\n                                        {categories.map(category => (\n                                            <option key={category} value={category}>{category}</option>\n                                        ))}\n                                    </select>\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <h6>Sub Category</h6>\n                                <div className=\"dropdown show\">\n                                    <select \n                                        name=\"subCategory\" \n                                        className=\"product-dropdown\" \n                                        id=\"subCategory\"\n                                        value={subcategory}\n                                        disabled={String(category).includes(\"Others\") ? true : false}\n                                        onChange={(e) => setSubCategory(e.target.value)}\n                                    >\n                                    \n                                    {String(category).includes(\"Mechanical Engineering\") ? (\n                                        <Fragment>\n                                            {me_subCategory.map(category => (\n                                                <option key={category} value={category}>{category}</option>\n                                            ))}\n                                        </Fragment>\n                                    ) : ((String(category).includes(\"DC Power Systems\") ? (\n                                        <Fragment>\n                                            {dc_subCategory.map(category => (\n                                                <option key={category} value={category}>{category}</option>\n                                            ))}\n                                        </Fragment>) : (\n                                            (String(category).includes(\"Electrical Engineering Equipment\")) ? (\n                                                <Fragment>\n                                                    {eee_subCategory.map(category => (\n                                                        <option key={category} value={category}>{category}</option>\n                                                    ))}\n                                                </Fragment>\n                                            ) : (\n                                                (String(category).includes(\"Test Equipment\")) ? (\n                                                    <Fragment>\n                                                        {te_subCategory.map(category => (\n                                                            <option key={category} value={category}>{category}</option>\n                                                        ))}\n                                                    </Fragment>) : (\n                                                        <Fragment>\n                                                            <option key=\"Others\" value=\"Others\">Others</option>\n                                                        </Fragment>)\n                                            )\n                                        )))\n                                    }\n                                    </select>\n                                </div>\n                            </div>\n\n                            <input \n                                type='checkbox'\n                                id='useDefaultImage'\n                                name='useDefaultImage'\n                                value={useDefaultImage}\n                                onChange={onChange}\n                                onClick={checkboxCheck}\n                            />\n                                &nbsp;Use default image\n                                \n                            <div className=\"form-group\">\n                                <h6>Images</h6>\n                                <input \n                                    type=\"file\" \n                                    name=\"product_images\" \n                                    onChange={onChange}\n                                    disabled={isChecked ? false : true}\n                                    multiple={true}\n                                />\n                            </div>\n                            \n                            {imagesPreview.map(img => (\n                                <img \n                                    src={img} \n                                    key={img} \n                                    alt='Images Preview'\n                                    className='mt-3 mr-2' \n                                    width='55' \n                                    height='52'\n                                />\n                            ))}\n\n                            <div className=\"form-group\">\n                                <button \n                                    className=\"btn btn-primary btn-block\" \n                                    type=\"submit\"\n                                >\n                                    Create\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                    </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default NewProduct\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/user/RegisterSuccess.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/user/ForgotPassword.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateProduct.js",["347","348","349"],"import React, { Fragment, useState, useEffect } from 'react'\nimport MetaData from '../layout/MetaData'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport { Link } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateProduct, getProductDetails, clearErrors } from '../../actions/productActions'\nimport { UPDATE_PRODUCT_RESET } from '../../constants/productConstants'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { logout } from './../../actions/userActions'\n\nconst UpdateProduct = ( { match, history } ) => {\n\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n    const [images, setImages] = useState([]);\n    const [category, setMainCategory] = useState('');\n    const [subcategory, setSubCategory] = useState('');\n    const [imagesPreview, setImagesPreview] = useState([])\n    const [oldImages, setOldImages] = useState([]);\n    const [useDefaultImage, setUseDefaultImage] = useState('')\n    \n    const [isChecked, setChecked] = useState('false')\n\n    const checkboxCheck = () => {\n        setChecked(!isChecked)\n    }\n\n    const categories = [\n        ' - ',\n        'Mechanical Engineering',\n        'DC Power Systems',\n        'Electrical Engineering Equipment',\n        'Test Equipment',\n        'Others'\n    ]\n\n    const me_subCategory = [\n        '-',\n        'Pumps and System',\n        'Fire Protection Systems',\n        'Others'\n    ]\n\n    const dc_subCategory = [\n        '-',\n        'Uninterrupted Power System',\n        'Battery Monitoring System',\n        'Batteries',\n        'Others'\n    ]\n    \n    const eee_subCategory = [\n        '-',\n        'Transformers',\n        'Others'\n    ]\n\n    const te_subCategory = [\n        '-',\n        'Partial Discharge Detection',\n        'Battery Discharge Capacity Tester',\n        'Battery Impedance or Internal Resistance',\n        'Load Banks',\n        'Battery Test Monitor',\n        'Portable Direct Ground Fault Finder',\n        'Earth Tester or Clamp Type',\n        'Others'\n    ]\n\n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const { error, product } = useSelector(state => state.productDetails)\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.product);\n    const { user } = useSelector(state => state.auth)\n\n    const productId = match.params.id\n\n    const [isToggled, setToggled] = useState('false')\n    \n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n\n    useEffect(() => {\n\n        if(product && product._id !== productId) {\n            dispatch(getProductDetails(productId))\n        }\n        else { \n            setName(product.name)\n            setDescription(product.description)\n            setMainCategory(product.category)\n            setSubCategory(product.subcategory)\n            setOldImages(product.images)\n        }\n\n        if(error){\n            history.push('/admin/products')\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if(updateError){\n            history.push('/admin/products')\n            alert.error(updateError);\n            dispatch(clearErrors());\n        }\n\n        if(isUpdated) {\n            history.push('/admin/products');\n            alert.success('Product updated successfully.')\n\n            dispatch({\n                type: UPDATE_PRODUCT_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, error, alert, isUpdated, updateError, product, productId, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('description', description);\n        formData.set('category', category);\n        if(String(category).includes(\"Others\")) {\n            formData.set('subcategory', \"Others\");\n        } else {\n            formData.set('subcategory', subcategory);\n        }\n        formData.set('useDefaultImage', useDefaultImage)\n\n        images.forEach(image => {\n            formData.append('images', image)\n        });\n\n        dispatch(updateProduct(product._id, formData));\n    }\n\n    const onChange = e => {\n\n        if(e.target.name === 'useDefaultImage') {\n            let chkbox = document.getElementById('useDefaultImage')\n\n            if(chkbox.checked == true) { //if changed to ===, register would not work\n                setUseDefaultImage(\"True\")\n            }\n            else{\n                setUseDefaultImage(\"False\")\n            }\n\n        } else {\n            const files = Array.from(e.target.files)\n\n            setImagesPreview([]);\n            setImages([])\n            setOldImages([])\n\n            files.forEach(file => {\n                const reader = new FileReader();\n\n                reader.onload = () => {\n                    if(reader.readyState === 2){\n                        setImagesPreview(oldArray => [...oldArray, reader.result])\n                        setImages(oldArray => [...oldArray, reader.result])\n                    }\n                }\n\n                reader.readAsDataURL(file)\n            })\n        }\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Update Product'}/>\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\n            <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                        <hr/>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )}\n\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                        <li></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <Fragment>\n                        <div className=\"login-clean\">\n                            <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{marginTop: '-65px', position: 'fixed'}}>\n                                <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\n                            </a>\n                            <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data' style={{maxWidth: '500px'}}>\n                                <h2 className=\"sr-only\">Update Product</h2>\n                                <div className=\"div-forgot-password\">\n                                    <h3 className=\"forgot-password-heading\">Update Product</h3>\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Name</h6>\n                                    <input \n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        name=\"product_name\"\n                                        value={name}\n                                        placeholder=\"Product Name\"\n                                        style={{width: '100%'}}\n                                        onChange={(e) => setName(e.target.value)}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Description</h6>\n                                    <textarea\n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        name=\"product_name\"\n                                        value={description}\n                                        placeholder=\"Product Description\"\n                                        style={{width: '100%', height: '150px'}}\n                                        onChange={(e) => setDescription(e.target.value)}\n                                        height='55px'\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                <h6>Main Category</h6>\n                                <div className=\"dropdown show\">\n                                    <select \n                                        name=\"mainCategory\" \n                                        className=\"product-dropdown\" \n                                        id=\"mainCategory\"\n                                        value={category}\n                                        onChange={(e) => setMainCategory(e.target.value)}\n                                    >\n                                        {categories.map(category => (\n                                            <option key={category} value={category}>{category}</option>\n                                        ))}\n                                    </select>\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <h6>Sub Category</h6>\n                                <div className=\"dropdown show\">\n                                    <select \n                                        name=\"subCategory\" \n                                        className=\"product-dropdown\" \n                                        id=\"subCategory\"\n                                        value={subcategory}\n                                        disabled={String(category).includes(\"Others\") ? true : false}\n                                        onChange={(e) => setSubCategory(e.target.value)}\n                                    >\n                                    \n                                    {String(category).includes(\"Mechanical Engineering\") ? (\n                                        <Fragment>\n                                            {me_subCategory.map(category => (\n                                                <option key={category} value={category}>{category}</option>\n                                            ))}\n                                        </Fragment>\n                                    ) : ((String(category).includes(\"DC Power Systems\") ? (\n                                        <Fragment>\n                                            {dc_subCategory.map(category => (\n                                                <option key={category} value={category}>{category}</option>\n                                            ))}\n                                        </Fragment>) : (\n                                            (String(category).includes(\"Electrical Engineering Equipment\")) ? (\n                                                <Fragment>\n                                                    {eee_subCategory.map(category => (\n                                                        <option key={category} value={category}>{category}</option>\n                                                    ))}\n                                                </Fragment>\n                                            ) : (\n                                                (String(category).includes(\"Test Equipment\")) ? (\n                                                    <Fragment>\n                                                        {te_subCategory.map(category => (\n                                                            <option key={category} value={category}>{category}</option>\n                                                        ))}\n                                                    </Fragment>) : (\n                                                        <Fragment>\n                                                            <option key=\"Others\" value=\"Others\">Others</option>\n                                                        </Fragment>)\n                                                )\n                                            )))\n                                        }\n                                        </select>\n                                    </div>\n                                </div>\n                                \n\n                                <input \n                                    type='checkbox'\n                                    id='useDefaultImage'\n                                    name='useDefaultImage'\n                                    value={useDefaultImage}\n                                    onChange={onChange}\n                                    onClick={checkboxCheck}\n                                />\n                                    &nbsp;Use default image\n                                    \n                                <div className=\"form-group\">\n                                    <h6>Images</h6>\n                                    <input \n                                        type=\"file\" \n                                        name=\"product_images\" \n                                        onChange={onChange}\n                                        disabled={isChecked ? false : true}\n                                        multiple\n                                    />\n                                </div>\n                                \n                                {oldImages && oldImages.map(img => (\n                                    <img \n                                        className='mt-3 mr-2'\n                                        src={img.url}\n                                        alt={img.url}\n                                        key={img}\n                                        width='55' \n                                        height='52'\n                                    />\n\n                                ))}\n\n                                {imagesPreview.map(img => (\n                                    <img \n                                        src={img} \n                                        key={img} \n                                        alt='Images Preview'\n                                        className='mt-3 mr-2' \n                                        width='110' \n                                        height='104'\n                                    />\n                                ))}\n\n                                <div className=\"form-group\">\n                                        <button \n                                        className=\"btn btn-primary btn-block\" \n                                        type=\"submit\"\n                                    >\n                                        Update Product\n                                    </button>\n                                </div>\n                            </form>\n                        </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default UpdateProduct\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/userActions.js",["350","351"],"import axios from 'axios'\nimport {\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    REGISTER_USER_REQUEST,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAIL,\n    LOAD_USER_REQUEST,\n    LOAD_USER_SUCCESS,\n    LOAD_USER_FAIL,\n    LOGOUT_SUCCESS,\n    UPDATE_PROFILE_REQUEST,\n    UPDATE_PROFILE_SUCCESS,\n    UPDATE_PROFILE_FAIL,\n    UPDATE_PASSWORD_REQUEST,\n    UPDATE_PASSWORD_SUCCESS,\n    UPDATE_PASSWORD_FAIL,\n    FORGOT_PASSWORD_REQUEST,\n    FORGOT_PASSWORD_SUCCESS,\n    FORGOT_PASSWORD_FAIL,\n    NEW_PASSWORD_REQUEST,\n    NEW_PASSWORD_SUCCESS,\n    NEW_PASSWORD_FAIL,\n    ALL_USERS_REQUEST,\n    ALL_USERS_SUCCESS,\n    ALL_USERS_FAIL,\n    GET_USER_REQUEST,\n    GET_USER_SUCCESS,\n    GET_USER_FAIL,\n    UPDATE_USER_REQUEST,\n    UPDATE_USER_SUCCESS,\n    UPDATE_USER_FAIL,\n    UPDATE_USER_RESET,\n    DELETE_USER_REQUEST,\n    DELETE_USER_SUCCESS,\n    DELETE_USER_RESET,\n    DELETE_USER_FAIL,\n    LOGOUT_FAIL,\n    CLEAR_ERRORS\n} from '../constants/userConstants'\n\n//Get product details\nexport const getUserDetails = (id) => async(dispatch) => {\n    try{\n        dispatch({\n            type: GET_USER_REQUEST\n        })\n\n        const { data } = await axios.get(`/api/v1/superadmin/user/${id}`)\n\n        dispatch({\n            type: GET_USER_SUCCESS,\n            payload: data.user\n        })\n    }\n    catch(error){\n        dispatch({\n            type: GET_USER_FAIL,\n            payload: error.response.data.message\n            }\n        )\n    }\n}\n\n// Update user (SUPERADMIN)\nexport const updateUser = (id, userData) => async(dispatch) => {\n    try{\n        dispatch({\n            type: UPDATE_USER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        }\n        const { data } = await axios.put(`/api/v1/superadmin/user/${id}`, userData, config)\n\n        dispatch({\n            type: UPDATE_USER_SUCCESS,\n            payload: data.success\n        })\n    }\n    catch(error){\n        dispatch({\n            type: UPDATE_USER_FAIL,\n            payload: error.response.data.message\n            }\n        )\n    }\n}\n\n// Delete user (ADMIN)\nexport const deleteUser = (id) => async(dispatch) => {\n    try{\n        dispatch({\n            type: DELETE_USER_REQUEST\n        })\n\n        const { data } = await axios.delete(`/api/v1/superadmin/user/${id}`)\n\n        dispatch({\n            type: DELETE_USER_SUCCESS,\n            payload: data.success\n        })\n    }\n    catch(error){\n        dispatch({\n            type: DELETE_USER_FAIL,\n            payload: error.response.data.message\n            }\n        )\n    }\n}\n\nexport const getUsers = () => async (dispatch) => {\n    try{\n        dispatch({\n            type: ALL_USERS_REQUEST\n        })\n\n        const { data } = await axios.get('/api/v1/superadmin/users')\n\n        dispatch({\n            type: ALL_USERS_SUCCESS,\n            payload: data\n        })\n    }\n    catch(error){\n        dispatch({\n            type: ALL_USERS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Login\nexport const login = ( email, password ) => async (dispatch) => {\n    try {\n        dispatch ({\n            type: LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/v1/login', { email, password }, config)\n\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: data.user\n        })\n\n    } catch (error) {\n        dispatch({\n            type: LOGIN_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Register user\nexport const register = ( userData ) => async (dispatch) => {\n    try {\n        dispatch ({\n            type: REGISTER_USER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        }\n\n        const { data } = await axios.post('/api/v1/superadmin/register', userData, config)\n\n        dispatch({\n            type: REGISTER_USER_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: REGISTER_USER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Load user\nexport const loadUser = () => async (dispatch) => {\n    try {\n        dispatch ({\n            type: LOAD_USER_REQUEST\n        })\n\n        const { data } = await axios.get('/api/v1/me')\n\n        dispatch({\n            type: LOAD_USER_SUCCESS,\n            payload: data.user\n        })\n\n    } catch (error) {\n        dispatch({\n            type: LOAD_USER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Logout user\nexport const logout = () => async (dispatch) => {\n    try {\n        await axios.get('/api/v1/logout')\n\n        dispatch({\n            type: LOGOUT_SUCCESS\n        })\n\n    } catch (error) {\n        dispatch({\n            type: LOGOUT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Update user profile\nexport const updateProfile = ( userData ) => async (dispatch) => {\n    try {\n        dispatch ({\n            type: UPDATE_PROFILE_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        }\n\n        const { data } = await axios.put('/api/v1/me/update', userData, config)\n\n        dispatch({\n            type: UPDATE_PROFILE_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PROFILE_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Update user password\nexport const updatePassword = ( passwords ) => async (dispatch) => {\n    try {\n        dispatch ({\n            type: UPDATE_PASSWORD_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put('/api/v1/password/update', passwords, config)\n\n        dispatch({\n            type: UPDATE_PASSWORD_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PASSWORD_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Forgot password\nexport const forgotPassword = ( email ) => async (dispatch) => {\n    try {\n        dispatch ({\n            type: FORGOT_PASSWORD_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/v1/password/forgot', email, config)\n\n        dispatch({\n            type: FORGOT_PASSWORD_SUCCESS,\n            payload: data.message\n        })\n\n    } catch (error) {\n        dispatch({\n            type: FORGOT_PASSWORD_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// New password\nexport const resetPassword = ( token, passwords ) => async (dispatch) => {\n    try {\n        dispatch ({\n            type: NEW_PASSWORD_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/password/reset/${token}`, passwords, config)\n\n        dispatch({\n            type: NEW_PASSWORD_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_PASSWORD_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n//clear errors\nexport const clearErrors = () => async(dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    })\n}","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/route/ProtectedRoute.js",["352"],"import React, { Fragment } from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\n\nconst ProtectedRoute = ({ forAdmins, isAdmin, isSuperAdmin, component: Component, ...rest }) => {\n\n    const { isAuthenticated, loading, user } = useSelector(state => state.auth);\n    const { isCreated } = useSelector(state => state.register);\n    \n    return (\n        <Fragment>\n            {loading === false && (\n                <Route \n                    {...rest}\n                    render={props => {\n                        if(isAuthenticated === false && isCreated === false) {\n                            return <Redirect to='/register-success' />\n                        }\n\n                        if(isAuthenticated === false) {\n                            return <Redirect to='/' />\n                        }\n\n                        if(forAdmins === true && (user.role !== 'admin' && user.role !== 'superadmin')) {\n                            return <Redirect to='/' />\n                        }\n\n                        if(isAdmin === true && user.role !== 'admin') {\n                            return <Redirect to='/admin/dashboard' />\n                        }\n\n                        if(isSuperAdmin === true && (user.role === 'admin' && user.role !== 'superadmin')) {\n                            return <Redirect to='/admin/dashboard' />\n                        }\n\n                        return <Component {...props} />\n                    }}\n                />\n            )}\n        </Fragment>\n    )\n}\n\nexport default ProtectedRoute\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/Dashboard.js",["353","354","355"],"import React, { Fragment, useEffect, useState} from 'react'\nimport { Link } from 'react-router-dom'\n\nimport MetaData from './../layout/MetaData'\nimport Loader from './../layout/Loader'\nimport '../../css/bootstrap.min.css'\nimport '../../css/dashboard.css'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAdminProducts } from '../../actions/productActions'\nimport { listInquiry } from '../../actions/inquiryActions'\nimport { getUsers } from '../../actions/userActions'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { logout } from './../../actions/userActions'\n\nconst Dashboard = () => {\n\n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const { loading, products } = useSelector(state => state.products)\n    const { users, adminCount, superadminCount } = useSelector(state => state.users)\n    const { inquiryCount, appointmentCount, otherCount } = useSelector(state => state.listInquiry)\n    const { user } = useSelector(state => state.auth)\n\n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n    \n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n\n    useEffect(() => {\n        dispatch(getAdminProducts())\n        dispatch(listInquiry())\n        dispatch(getUsers())\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch])\n\n    \n    return (\n        <Fragment>\n            <MetaData title={'Dashboard'}/>\n            <Fragment>\n                {loading ? <Loader/> : (\n                    <Fragment>\n                        <MetaData title={'Admin Dashboard'}/>\n                        <div id=\"wrapper\" className={isToggled ? null : \"toggled\"} style={{paddingTop: '11px'}}>\n                            <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\n                                <ul className=\"sidebar-nav\">\n                                    <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                                    <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                                    <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                                    <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                                    {user && user.role !== 'admin' ? (\n                                            <Fragment>\n                                                <hr/>\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                            </Fragment>\n                                        ) : (\n                                            <Fragment>\n                                                <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                                <hr/>\n                                                <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                                <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\n                                                <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                                <hr/>\n                                                <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                                <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                            </Fragment>\n                                        )}\n\n                                    <hr/>\n                                    <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                                </ul>\n                            </div>\n                            <div className=\"page-content-wrapper\">\n                                <div className=\"container-fluid\">\n                                    <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{position: 'fixed'}}>\n                                        <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\n                                    </a>\n                                    {user && user.role !== 'admin' ? (\n                                        <Fragment>\n                                            <div className=\"main-section\" style={{paddingTop: '65px'}}>\n                                                <h3><strong>Overview</strong></h3>\n                                                <div className=\"dashbord\">\n                                                    <div className=\"icon-section\">\n                                                        <i className=\"fa fa-users\" aria-hidden=\"true\"></i><br/>\n                                                        <small>Admins</small>\n                                                        <p>{adminCount} admins</p>\n                                                    </div>\n                                                    <div className=\"detail-section\">\n                                                        <Link to=\"/admin/users/admin\">More Info </Link>\n                                                    </div>\n                                                </div>\n                                                <div className=\"dashbord dashbord-green\">\n                                                    <div className=\"icon-section\">\n                                                        <i className=\"fa fa-user-circle\" aria-hidden=\"true\"></i><br/>\n                                                        <small>Super Admins</small>\n                                                        <p>{superadminCount}  superadmins</p>\n                                                    </div>\n                                                    <div className=\"detail-section\">\n                                                        <Link to=\"/admin/users/superadmin\">More Info </Link>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </Fragment>\n                                    ) : (\n                                        <Fragment>\n                                            <div className=\"main-section\" style={{paddingTop: '65px'}}>\n                                                <h3><strong>Inbox</strong></h3>\n                                                <div className=\"dashbord\">\n                                                    <div className=\"icon-section\">\n                                                        <i className=\"fa fa-envelope\" aria-hidden=\"true\"></i><br/>\n                                                        <small>Inquiries</small>\n                                                        <p>{inquiryCount} messages</p>\n                                                    </div>\n                                                    <div className=\"detail-section\">\n                                                        <Link to=\"/admin/inquiries\">View Inquiries</Link>\n                                                    </div>\n                                                </div>\n                                                <div className=\"dashbord dashbord-green\">\n                                                    <div className=\"icon-section\">\n                                                        <i className=\"fa fa-archive\" aria-hidden=\"true\"></i><br/>\n                                                        <small>Appointments</small>\n                                                        <p>{appointmentCount} messages</p>\n                                                    </div>\n                                                    <div className=\"detail-section\">\n                                                        <Link to=\"/admin/appointments\">View Appointments</Link>\n                                                    </div>\n                                                </div>\n                                                <div className=\"dashbord dashbord-orange\">\n                                                    <div className=\"icon-section\">\n                                                        <i className=\"fa fa-inbox\" aria-hidden=\"true\"></i><br/>\n                                                        <small>Other Concerns</small>\n                                                        <p>{otherCount} messages</p>\n                                                    </div>\n                                                    <div className=\"detail-section\">\n                                                        <Link to=\"/admin/others\">View Others</Link>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </Fragment>\n                                    )}\n                                    <div className=\"main-section\" style={{paddingTop: '65px'}}>\n                                        <h3><strong>Settings</strong></h3>\n                                        <div className=\"dashbord dashbord-blue\">\n                                            <div className=\"icon-section\">\n                                                <i className=\"fa fa-home\" aria-hidden=\"true\"></i><br/>\n                                                <p>Update Home</p>\n                                            </div>\n                                            <div className=\"detail-section\">\n                                                <Link to=\"/admin/home\">Update <i className=\"fa fa-angle-right\"></i></Link>\n                                            </div>\n                                        </div>\n                                        <div className=\"dashbord dashbord-red\">\n                                            <div className=\"icon-section\">\n                                                <i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i><br/>\n                                                <p>Update About</p>\n                                            </div>\n                                            <div className=\"detail-section\">\n                                                <Link to=\"/admin/about\">Update <i className=\"fa fa-angle-right\"></i></Link>\n                                            </div>\n                                        </div>\n                                        <div className=\"dashbord dashbord-skyblue\">\n                                            <div className=\"icon-section\">\n                                                <i className=\"fa fa-quote-left\" aria-hidden=\"true\"></i><br/>\n                                                <p>Update Footer</p>\n                                            </div>\n                                            <div className=\"detail-section\">\n                                                <Link to=\"/admin/footer\">Update <i className=\"fa fa-angle-right\"></i></Link>\n                                            </div>\n                                        </div>\n                                        <div className=\"dashbord dashbord-green\">\n                                            <div className=\"icon-section\">\n                                                <i className=\"fa fa-check\" aria-hidden=\"true\"></i><br/>\n                                                <p>Update Services</p>\n                                            </div>\n                                            <div className=\"detail-section\">\n                                                <Link to=\"/admin/service\">More Info </Link>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </Fragment>\n                )}\n            </Fragment>\n        </Fragment>\n    )\n}\n\nexport default Dashboard\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/user/Register.js",["356","357","358","359"],"import React, { Fragment, useEffect, useState } from 'react'\nimport MetaData from '../layout/MetaData'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from  'react-redux'\nimport { register } from './../../actions/userActions'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { logout } from './../../actions/userActions'\nimport { Link } from 'react-router-dom'\n\nconst Register = ( { history } ) => {\n\n    const [user, setUser] = useState({\n        name: '',\n        email: '',\n        contactNumber: '',\n        address: '',\n        password: '',\n        confirmPassword: ''\n    })\n\n    const { name, email, contactNumber, address, password, confirmPassword } = user;\n    const [avatar, setAvatar] = useState('');\n    const [avatarPreview, setAvatarPreview] = useState('images/default_avatar.png');\n    const [useDefaultImage, setUseDefaultImage] = useState('')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, loading, success } = useSelector(state => state.register);\n\n    const [isChecked, setChecked] = useState('false')\n\n    const checkboxCheck = () => {\n        setChecked(!isChecked)\n    }\n\n    const [showOld, setOld] = useState('false')\n\n    const showOldToggle = () => {\n        setOld(!showOld)\n    }\n\n    const [showNew, setNew] = useState('false')\n\n    const showNewToggle = () => {\n        setNew(!showNew)\n    }\n\n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n    \n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n\n    useEffect(() => {\n        if(error){\n            history.push('/register-error')\n        }\n        if(success){\n            history.push('/register-success')\n        }\n        \n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n\n    }, [dispatch, alert, error, success, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('email', email);\n        formData.set('password', password);\n        formData.set('confirmPassword', confirmPassword);\n        formData.set('contactNumber', contactNumber);\n        formData.set('address', address);\n        formData.set('avatar', avatar);\n        formData.set('useDefaultImage', useDefaultImage)\n\n        dispatch(register(formData));\n    }\n\n    const onChange = e => {\n        \n        if(e.target.name === 'useDefaultImage') {\n            let chkbox = document.getElementById('useDefaultImage')\n\n            if(chkbox.checked == true) { //if changed to ===, register would not work\n                setUseDefaultImage(\"True\")\n            }\n            else{\n                setUseDefaultImage(\"False\")\n            }\n\n        } else {\n            if(e.target.name === 'avatar') {\n\n                const reader = new FileReader();\n    \n                reader.onload = () => {\n                    if(reader.readyState === 2){\n                        setAvatarPreview(reader.result)\n                        setAvatar(reader.result)\n                    }\n                }\n    \n                reader.readAsDataURL(e.target.files[0])\n    \n            }\n            else {\n                setUser({\n                    ...user,\n                    [e.target.name]: e.target.value\n                })\n            }\n        }\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Register'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"} style={{paddingTop: '11px'}}>\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\n                    <ul className=\"sidebar-nav\">\n                                <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                                <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                                <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                                <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                                {user && user.role !== 'admin' ? (\n                                        <Fragment>\n                                            <hr/>\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                        </Fragment>\n                                    ) : (\n                                        <Fragment>\n                                            <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                            <hr/>\n                                            <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                            <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\n                                            <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                            <hr/>\n                                            <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                            <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                        </Fragment>\n                                    )\n                                }\n                                <hr/>\n                                <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                            </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{position: 'fixed'}}>\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\n                        </a>\n                        <div className=\"container\">\n                            <div className=\"main-body\">\n                                <div className=\"row gutters-sm\">\n                                    <div className=\"col-md-4 mb-3\">\n                                        <div className=\"card\">\n                                            <div className=\"card-body\">   \n                                                <div className=\"row text-center\">\n                                                    <h3 className=\"ml-3 mb-5 \">Register New User</h3>\n                                                </div>\n                                                <div className=\"d-flex flex-column align-items-center text-center\">\n                                                    <img src={avatarPreview} alt=\"Admin\" className=\"rounded-circle\" width=\"150\"/>\n                                                    <div className=\"mt-3\">\n                                                        <hr/>\n                                                        <input \n                                                            type='checkbox'\n                                                            id='useDefaultImage'\n                                                            name='useDefaultImage'\n                                                            value={useDefaultImage}\n                                                            onChange={onChange}\n                                                            onClick={checkboxCheck}\n                                                        />\n                                                            &nbsp;Use default image\n                                                            <br/>\n                                                            <br/>\n                                                            <input \n                                                                type=\"file\" \n                                                                id=\"avatar\" \n                                                                name=\"avatar\" \n                                                                accept=\"images/*\"\n                                                                onChange={onChange}\n                                                                style={{width: '90%'}}\n                                                                disabled={isChecked ? false : true}\n                                                            />\n                                                        <br/>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <div className=\"card mb-3\">\n                                            <div className=\"card-body\">\n                                                <form method=\"post\" onSubmit={submitHandler}>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-3\">\n                                                            <h6 className=\"mb-0\">Full Name</h6>\n                                                        </div>\n                                                        <div className=\"col-sm-9 text-secondary\">\n                                                            <input \n                                                                type=\"text\" \n                                                                className=\"form-control\" \n                                                                name=\"name\"\n                                                                value={name}\n                                                                placeholder=\"Name\"\n                                                                pattern=\"[A-Za-z\\s]{1,}\"\n                                                                onChange={onChange}\n                                                            />\n                                                            </div>\n                                                    </div>\n                                                    <hr/>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-3\">\n                                                            <h6 className=\"mb-0\">Email</h6>\n                                                        </div>\n                                                        <div className=\"col-sm-9 text-secondary\">\n                                                            <input \n                                                                type=\"email\" \n                                                                className=\"form-control\" \n                                                                name=\"email\"\n                                                                value={email}\n                                                                placeholder=\"Email\"\n                                                                onChange={onChange}\n                                                            />\n                                                            </div>\n                                                    </div>\n                                                    <hr/>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-3\">\n                                                            <h6 className=\"mb-0\">Contact Number</h6>\n                                                        </div>\n                                                        <div className=\"col-sm-9 text-secondary\">\n                                                            <input \n                                                                type=\"tel\" \n                                                                className=\"form-control\" \n                                                                name=\"contactNumber\" \n                                                                value={contactNumber}\n                                                                placeholder=\"09xx-xxx-xxxx\"\n                                                                pattern=\"^[0][9]\\d{2}-\\d{3}-\\d{4}$\"\n                                                                onChange={onChange}\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                    <hr/>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-3\">\n                                                            <h6 className=\"mb-0\">Address</h6>\n                                                        </div>\n                                                        <div className=\"col-sm-9 text-secondary\">\n                                                            <textarea \n                                                                type=\"text\"\n                                                                className=\"form-control\"\n                                                                name=\"address\"\n                                                                value={address}\n                                                                onChange={onChange}\n                                                                placeholder=\"Address\"\n                                                                style={{height: '150px'}}\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                    <hr/>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-3\">\n                                                            <h6 className=\"mb-0\">Password</h6>\n                                                        </div>\n                                                        <div className=\"col-sm-9 text-secondary\">\n                                                            <div class=\"input-group mb-3\">\n                                                                <input \n                                                                    type={showOld ? \"password\" : \"text\"} \n                                                                    className=\"form-control\" \n                                                                    name=\"password\"\n                                                                    value={password}\n                                                                    placeholder=\"Password\"\n                                                                    onChange={onChange}\n                                                                    aria-label=\"password\" aria-describedby=\"basic-addon1\"\n                                                                />\n                                                                <div class=\"input-group-prepend\">\n                                                                    <span class=\"input-group-text\" id=\"basic-addon1\">\n                                                                        <a\n                                                                            onClick={showOldToggle}\n                                                                            style={{cursor: 'pointer'}}\n                                                                        >\n                                                                            <span className=\"fa-lg\">\n                                                                                <i className={showOld ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\n                                                                            </span>\n                                                                        </a>\n                                                                    </span>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <hr/>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-3\">\n                                                            <h6 className=\"mb-0\">Confirm Password</h6>\n                                                        </div>\n                                                        <div className=\"col-sm-9 text-secondary\">\n                                                            <div class=\"input-group mb-3\">\n                                                                <input\n                                                                    type={showNew ? \"password\" : \"text\"} \n                                                                    className=\"form-control\"\n                                                                    name=\"confirmPassword\"\n                                                                    value={confirmPassword}\n                                                                    placeholder=\"Confirm Password\"\n                                                                    onChange={onChange}\n                                                                    aria-label=\"confirm\" aria-describedby=\"basic-addon1\"\n                                                                />\n                                                                <div class=\"input-group-prepend\">\n                                                                    <span class=\"input-group-text\" id=\"basic-addon1\">\n                                                                        <a\n                                                                            onClick={showNewToggle}\n                                                                            style={{cursor: 'pointer'}}\n                                                                        >\n                                                                            <span className=\"fa-lg\">\n                                                                                <i className={showNew ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\n                                                                            </span>\n                                                                        </a>\n                                                                    </span>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"row\">\n                                                        <br/>\n                                                        <br/>\n                                                        <button\n                                                            className=\"btn btn-primary btn-block\"\n                                                            type=\"submit\"\n                                                            disabled={ loading ? true : false}\n                                                        >Register</button>\n                                                    </div>\n                                                </form>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>    \n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default Register\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/user/Login.js",["360"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport Loader from '../layout/Loader'\nimport MetaData from '../layout/MetaData'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from  'react-redux'\nimport { login, clearErrors } from './../../actions/userActions'\nimport { INSIDE_DASHBOARD_FALSE } from '../../constants/dashboardConstants'\nimport '../../css/forms.css'\n\nconst Login = ( { history }) => {\n\n    const [ email, setEmail ] = useState('');\n    const [ password, setPassword ] = useState('');\n    \n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\n\n    const [isChecked, setChecked] = useState('false')\n\n    const checkboxCheck = () => {\n        setChecked(!isChecked)\n    }\n\n    useEffect(() => {\n        if(isAuthenticated) {\n            history.push('/')\n        }\n\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors());\n        } //loadError in load_user_fail\n\n        dispatch({\n            type: INSIDE_DASHBOARD_FALSE\n        })\n    }, [dispatch, alert, isAuthenticated, error, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(login(email, password));\n    }\n\n    return (\n        <Fragment>\n            {loading ? <Loader/> : (\n                <Fragment>\n                    <MetaData title={'Login'}/>\n                    <div className=\"login-clean\" style={{paddingTop: '150px'}}>\n                        <form onSubmit={submitHandler}>\n                            <h2 className=\"sr-only\">Login Form</h2>\n                            <div className=\"illustration\">\n                                <img className=\"login-logo\" alt=\"company logo\" src=\"https://res.cloudinary.com/agiletech3itf/image/upload/v1610472388/agile-logo_cqnjad.png\"/>\n                            </div>\n                            <div className=\"form-group\">\n                                <input className=\"form-control\" type=\"email\" name=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <div class=\"input-group mb-3\">\n                                    <input \n                                        className=\"form-control\" \n                                        type={isChecked ? \"password\" : \"text\"}  \n                                        name=\"password\" \n                                        placeholder=\"Password\" \n                                        value={password} \n                                        onChange={(e) => setPassword(e.target.value)}\n                                    />\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\" id=\"basic-addon1\">\n                                            <a\n                                                onClick={checkboxCheck}\n                                                style={{cursor: 'pointer'}}\n                                            >\n                                                <span className=\"fa-lg\">\n                                                    <i className={isChecked ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\n                                                </span>\n                                            </a>\n                                        </span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <button className=\"btn btn-primary btn-block\" type=\"submit\">Log In</button>\n                            </div>\n                            <Link className=\"forgot\" to=\"/password/forgot\">Forgot your password?</Link>\n                        </form>\n                    </div>\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nexport default Login\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/user/NewPassword.js",["361","362"],"import React, { Fragment, useEffect, useState } from 'react'\nimport MetaData from '../layout/MetaData'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from  'react-redux'\nimport { resetPassword, clearErrors } from './../../actions/userActions'\nimport { INSIDE_DASHBOARD_FALSE } from '../../constants/dashboardConstants'\n\nconst NewPassword = ({ history, match }) => {\n\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, success } = useSelector(state => state.forgotPassword);\n    \n    const [showOld, setOld] = useState('false')\n\n    const showOldToggle = () => {\n        setOld(!showOld)\n    }\n\n    const [showNew, setNew] = useState('false')\n\n    const showNewToggle = () => {\n        setNew(!showNew)\n    }\n\n    useEffect(() => {\n        if(success){\n            history.push('/admin/me')\n            alert.success('Password updated successfully');\n        }\n        \n        if(error){\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_FALSE\n        })\n\n    }, [dispatch, alert, error, success, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('password', password);\n        formData.set('confirmPassword', confirmPassword);\n\n        dispatch(resetPassword(match.params.token, formData));\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Reset Password'}/>\n            <div className=\"login-clean\" style={{paddingTop: '65px'}}>\n                <form onSubmit={submitHandler}>\n                    <h2 className=\"sr-only\">New Password</h2>\n                    <div className=\"div-forgot-password\">\n                        <h3 className=\"forgot-password-heading\">New Password</h3>\n                    </div>\n                    <div className=\"form-group\">\n                        <h6>New Password</h6>\n                        <div class=\"input-group mb-3\">\n                            <input \n                                type={showOld ? \"password\" : \"text\"} \n                                className=\"form-control\" \n                                name=\"password\"\n                                value={password}\n                                placeholder=\"Old Password\"\n                                onChange={(e) => setPassword(e.target.value)}\n                                aria-label=\"oldpassword\" aria-describedby=\"basic-addon1\"\n                            />\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\" id=\"basic-addon1\">\n                                    <a\n                                        onClick={showOldToggle}\n                                        style={{cursor: 'pointer'}}\n                                    >\n                                        <span className=\"fa-lg\">\n                                            <i className={showOld ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\n                                        </span>\n                                    </a>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <h6>Confirm Password</h6>\n                        <div class=\"input-group mb-3\">\n                            <input\n                                type={showNew ? \"password\" : \"text\"} \n                                className=\"form-control\"\n                                name=\"confirmPassword\"\n                                value={confirmPassword}\n                                placeholder=\"Confirm Password\"\n                                onChange={(e) => setConfirmPassword(e.target.value)}\n                                aria-label=\"confirm\" aria-describedby=\"basic-addon1\"\n                            />\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\" id=\"basic-addon1\">\n                                    <a\n                                        onClick={showNewToggle}\n                                        style={{cursor: 'pointer'}}\n                                    >\n                                        <span className=\"fa-lg\">\n                                            <i className={showNew ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\n                                        </span>\n                                    </a>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <button \n                            className=\"btn btn-primary btn-block\" \n                            type=\"submit\"\n                        >Update New Password</button>\n                    </div>\n                </form>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default NewPassword\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateServices.js",["363","364"],"import React, { Fragment, useEffect, useState } from 'react'\nimport MetaData from '../layout/MetaData'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from  'react-redux'\nimport { updateServices, getServiceDetails, clearErrors } from '../../actions/websiteActions'\nimport { UPDATE_SERVICES_RESET } from '../../constants/websiteConstants'\n\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport { Link } from 'react-router-dom'\nimport { logout } from '../../actions/userActions'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\n\nconst UpdateServices = ({ match, history }) => {\n\n    const [title, setTitle] = useState('');\n    const [subtitle, setSubtitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [iconBackground, setIconBackground] = useState('');\n    const [icon, setIcon] = useState('');\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, service } = useSelector(state => state.serviceDetails);\n    const { error: updateError, isUpdated, loading } = useSelector(state => state.website);\n    const { user } = useSelector(state => state.auth)\n    \n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n\n    const serviceId = match.params.id\n\n    useEffect(() => {\n        if(service && service._id !== serviceId) {\n            dispatch(getServiceDetails(serviceId))\n        }\n        else {\n            setTitle(service.title);\n            setSubtitle(service.subtitle);\n            setDescription(service.description);\n            setIconBackground(service.iconBackground);\n            setIcon(service.icon);\n        }\n\n        if(error){\n            history.push('/admin/service')\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n        \n        if(updateError){\n            history.push('/admin/service')\n            alert.error(updateError);\n            dispatch(clearErrors());\n        }\n\n        if(isUpdated){\n            alert.success('Service updated successfully');\n\n            history.push('/admin/service')\n\n            dispatch({\n                type: UPDATE_SERVICES_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n\n    }, [dispatch, alert, error, history, service, serviceId, isUpdated, updateError])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('title', title);\n        formData.set('subtitle', subtitle);\n        formData.set('description', description);\n        formData.set('iconBackground', iconBackground);\n        formData.set('icon', icon);\n\n        dispatch(updateServices(service._id, formData));\n    }\n\n\n    return (\n        <Fragment>\n            <MetaData title={'Update Services'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"} style={{paddingTop: '11px'}}>\n            <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\n                    <ul className=\"sidebar-nav\">\n                                <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                                <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                                <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                                <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                                {user && user.role !== 'admin' ? (\n                                        <Fragment>\n                                            <hr/>\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                        </Fragment>\n                                    ) : (\n                                        <Fragment>\n                                            <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                            <hr/>\n                                            <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                            <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\n                                            <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                            <hr/>\n                                            <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                            <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                        </Fragment>\n                                    )\n                                }\n                                <hr/>\n                                <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                            </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <div className=\"login-clean\">\n                            <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{marginTop: '-65px', position: 'fixed'}}>\n                                <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\n                            </a>\n                            <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data'  style={{maxWidth: '500px'}}>\n                                <h2 className=\"sr-only\">Update Services</h2>\n                                <div className=\"div-forgot-password\">\n                                    <h3 className=\"forgot-password-heading\">Update Services </h3>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <h6>Title</h6>\n                                    <input \n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        id=\"title\" \n                                        name=\"title\" \n                                        placeholder=\"Title\"\n                                        value={title}\n                                        disabled={true}\n                                        style={{backgroundColor: '#F5F5F5', color: 'gray'}}\n                                        onChange={(e) => setTitle(e.target.value)}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Subtitle</h6>\n                                    <input \n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        id=\"subtitle\" \n                                        name=\"subtitle\" \n                                        value={subtitle}\n                                        disabled={true}\n                                        onChange={(e) => setSubtitle(e.target.value)}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Description</h6>\n                                    <textarea\n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        name=\"description\"\n                                        value={description}\n                                        placeholder=\"Services Description\"\n                                        style={{width: '100%', height: '150px'}}\n                                        onChange={(e) => setDescription(e.target.value)}\n                                        height='55px'\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Icon Background (eg. primary, secondary)</h6>\n                                    <div class=\"input-group mb-3\">\n                                        <div class=\"input-group-prepend\">\n                                            <span class=\"input-group-text\" id=\"basic-addon2\">\n                                                text-\n                                            </span>\n                                        </div>\n                                        <input \n                                            type=\"text\" \n                                            className=\"form-control\" \n                                            id=\"iconBackground\" \n                                            name=\"iconBackground\" \n                                            value={iconBackground}\n                                            onChange={(e) => setIconBackground(e.target.value)}\n                                            aria-label=\"iconBackground\"\n                                            aria-describedby=\"basic-addon2\"\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"form-group\">\n                                    <h6>Icon (eg. eye, check, info)</h6>\n                                    <div class=\"input-group mb-3\">\n                                        <div class=\"input-group-prepend\">\n                                            <span class=\"input-group-text\" id=\"basic-addon1\">\n                                                fa-\n                                            </span>\n                                        </div>\n                                        <input \n                                            type=\"text\" \n                                            className=\"form-control\" \n                                            id=\"icon\" \n                                            name=\"icon\" \n                                            value={icon}\n                                            onChange={(e) => setIcon(e.target.value)}\n                                            aria-label=\"icon\"\n                                            aria-describedby=\"basic-addon1\"\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"form-group\">\n                                    <span className=\"fa-stack fa-2x\">\n                                        <i className={`fa fa-circle fa-stack-2x text-${iconBackground}`}></i>\n                                        <i className={`fa fa-${icon} fa-stack-1x fa-inverse`}></i>\n                                    </span>\n                                </div>\n                                <div className=\"form-group\">\n                                    <button \n                                        className=\"btn btn-primary btn-block\" \n                                        type=\"submit\"\n                                    >\n                                        Update Services\n                                    </button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default UpdateServices\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListHome.js",["365","366"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Services.js",["367","368"],"import React, { Fragment, useEffect, useState } from 'react'\nimport '../css/services.css'\nimport '../css/bootstrap.min.css'\nimport '../fonts/font-awesome.min.css'\nimport { useAlert } from 'react-alert'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getServices, clearErrors } from '../actions/websiteActions'\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\nimport { Link } from 'react-router-dom'\nimport MetaData from './layout/MetaData'\n\nconst Services = () => {\n\n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const { loading,\n            error,\n            it1_subtitle,\n            it2_subtitle,\n            etd1_subtitle,\n            etd2_subtitle,\n\n            it1_desc,\n            it2_desc,\n            etd1_desc,\n            etd2_desc,\n\n            it1_icon,\n            it2_icon,\n            etd1_icon,\n            etd2_icon,\n\n            it1_iconBg,\n            it2_iconBg,\n            etd1_iconBg,\n            etd2_iconBg\n        } = useSelector(state => state.services)\n\n    useEffect(() => {\n        dispatch(getServices())\n\n        dispatch({\n            type: INSIDE_DASHBOARD_FALSE\n        })\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n    }, [dispatch, alert, error]) //loop if homePage added as dependency\n\n    return (\n        <Fragment>\n            <MetaData title={'Our Services'} />\n            <div class=\"container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 contact-us-banner\">\n                        <h1 class=\"text-center\">Have some questions?</h1>\n                        <p class=\"text-center\">We are ready to help you.</p>\n                        <Link to='/contact-us'>\n                            <button class=\"btn btn-primary contact-us-button\" type=\"button\">\n                                    Contact Us\n                            </button>\n                        </Link>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <div class=\"row second-level-row\">\n                            <div class=\"col-12\">\n                                <h1 style={{fontSize: '3rem', fontWeight: 'bold', paddingBottom: '30px'}}>OUR SERVICES</h1>\n                            </div>\n                            <div class=\"col-12 title-section\">\n                                <h2>Information Technology</h2>\n                            </div>\n                            <div class=\"col-md-6 item-card\">\n                                <p>\n                                    <span className=\"fa-stack fa-4x\">\n                                        <i className={`fa fa-circle fa-stack-2x text-${it1_iconBg}`}></i>\n                                        <i className={`fa fa-${it1_icon} fa-stack-1x fa-inverse`}></i>\n                                    </span>\n                                </p>\n                                <h4>{it1_subtitle}</h4>\n                                <p className=\"description\">{it1_desc}</p>\n                            </div>\n                            <div class=\"col-md-6 item-card\">\n                                <p>\n                                    <span className=\"fa-stack fa-4x\">\n                                        <i className={`fa fa-circle fa-stack-2x text-${it2_iconBg}`}></i>\n                                        <i className={`fa fa-${it2_icon} fa-stack-1x fa-inverse`}></i>\n                                    </span>\n                                </p>\n                                <h4>{it2_subtitle}</h4>\n                                <p className=\"description\">{it2_desc}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <div class=\"row second-level-row\">\n                            <div class=\"col-12 title-section\">\n                                <h2>Engineering and Technical Services</h2>\n                            </div>\n                            <div class=\"col-md-6 item-card\">\n                                <p>\n                                    <span className=\"fa-stack fa-4x\">\n                                        <i className={`fa fa-circle fa-stack-2x text-${etd1_iconBg}`}></i>\n                                        <i className={`fa fa-${etd1_icon} fa-stack-1x fa-inverse`}></i>\n                                    </span>\n                                </p>\n                                <h4>{etd1_subtitle}</h4>\n                                <p className=\"description\">{etd1_desc}</p>\n                            </div>\n                            <div class=\"col-md-6 item-card\">\n                                <p>\n                                    <span className=\"fa-stack fa-4x\">\n                                        <i className={`fa fa-circle fa-stack-2x text-${etd2_iconBg}`}></i>\n                                        <i className={`fa fa-${etd2_icon} fa-stack-1x fa-inverse`}></i>\n                                    </span>\n                                </p>\n                                <h4>{etd2_subtitle}</h4>\n                                <p className=\"description\">{etd2_desc}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default Services\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/MetaData.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/productActions.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/inquiryConstants.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/productConstants.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/userConstants.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/dashboardConstants.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/Loader.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/inquiryActions.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/websiteActions.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/websiteConstants.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/product/ProductDisplay.js",["369"],"import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst ProductList = ({ product }) => {\n    return (\n        <div class=\"col-sm-6 col-md-4 col-lg-3 col-xl-3 product-image\">\n            <div>\n                <img alt={`Image of ${product.name}`} src={product.images[0].url}/>\n            </div>\n            <Link to={`/our-products/${product._id}`} class=\"product-name\">\n                {product.name}\n            </Link>\n        </div>\n    )\n}\n\nexport default ProductList\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductsOthers.js",["370","371","372"],"import React, { Fragment, useState, useEffect } from 'react'\nimport '../css/products.css'\nimport '../css/bootstrap.min.css'\nimport '../fonts/font-awesome.min.css'\nimport MetaData from './layout/MetaData'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProducts, clearErrors } from '../actions/productActions'\nimport ProductDisplay from './product/ProductDisplay'\nimport Loader from './layout/Loader'\nimport { useAlert } from 'react-alert'\nimport Pagination from 'react-js-pagination'\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\n\nconst ProductsOthers = () => { \n    const [currentPage, setCurrentPage] = useState(1);\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products);\n    const [category, setMainCategory] = useState('Others');\n    const [subcategory, setSubCategory] = useState('Others');\n\n    \n    useEffect(() => {\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n        dispatch(getProducts(currentPage, category, subcategory));\n\n        dispatch({\n            type: INSIDE_DASHBOARD_FALSE\n        })\n    }, [dispatch, alert, error, currentPage, category, subcategory]);\n\n    function setCurrentPageNo(pageNumber) {\n        setCurrentPage(pageNumber);\n    }\n\n    let count = productsCount;\n    \n    if(category) {\n        count = filteredProductsCount\n    }\n\n    return (\n            <Fragment>\n                {loading ? <Loader/> : \n                (\n                    <Fragment>\n                        \n                        <MetaData title={`${category}`}/>\n                        <div class=\"container-fluid\">\n                            <div class=\"product-header-container\">\n                                <h1 class=\"text-center product-text\">Our Products</h1>\n                                <h3 class=\"text-center product-category\">{category}</h3>\n                            </div>\n                            <div class=\"container product-list-container\">\n                                <div class=\"list-products\">\n                                    <div class=\"row product-container-row\">\n                                        {products && products.map( product => (\n                                            <ProductDisplay key={product._id} product={product}/>\n                                        ))}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        {resPerPage < count && (\n                            <div className=\"d-flex justify-content-center mt-5\">\n                                <Pagination \n                                    activePage={currentPage}\n                                    itemsCountPerPage={resPerPage}\n                                    totalItemsCount={productsCount}\n                                    onChange={setCurrentPageNo}\n                                    nextPageText={'Next'}\n                                    prevPageText={'Prev'}\n                                    firstPageText={'First'}\n                                    lastPageText={'Last'}\n                                    itemClass='page-item'\n                                    linkClass='page-link'\n                                />\n                            </div>\n                        )}\n                    </Fragment>\n                )}\n            </Fragment>\n    )\n}\n\nexport default ProductsOthers;\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductsDC.js",["373"],"import React, { Fragment, useState, useEffect } from 'react'\nimport '../css/products.css'\nimport '../css/bootstrap.min.css'\nimport '../fonts/font-awesome.min.css'\nimport MetaData from './layout/MetaData'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProducts, clearErrors } from '../actions/productActions'\nimport ProductDisplay from './product/ProductDisplay'\nimport Loader from './layout/Loader'\nimport { useAlert } from 'react-alert'\nimport Pagination from 'react-js-pagination'\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\n\nconst ProductsDC = () => { \n    const [currentPage, setCurrentPage] = useState(1);\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products);\n    const [category, setMainCategory] = useState('DC Power Systems');\n    const [subcategory, setSubCategory] = useState('');\n\n    const dc_subCategory = [\n        'Uninterrupted Power System',\n        'Battery Monitoring System',\n        'Batteries',\n        'Others'\n    ]\n    \n    useEffect(() => {\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n        dispatch(getProducts(currentPage, category, subcategory));\n\n        dispatch({\n            type: INSIDE_DASHBOARD_FALSE\n        })\n    }, [dispatch, alert, error, currentPage, category, subcategory]);\n\n    function setCurrentPageNo(pageNumber) {\n        setCurrentPage(pageNumber);\n    }\n\n    let count = productsCount;\n    \n    if(category) {\n        count = filteredProductsCount\n    }\n\n    return (\n            <Fragment>\n                {loading ? <Loader/> : \n                (\n                    <Fragment>\n                        <MetaData title={`${category}`}/>\n                        <div class=\"container-fluid\">\n                            <div class=\"product-header-container\">\n                                <h1 class=\"text-center product-text\">Our Products</h1>\n                                <h3 class=\"text-center product-category\">{category}</h3>\n                                <ul class=\"product-categories\">\n                                    {dc_subCategory.map( category => (\n                                        <li\n                                            key={category}\n                                            onClick={() => {setCurrentPageNo(1); setSubCategory(category)}}\n                                            className={subcategory === category ? \"current-active\" : null}\n                                        >\n                                                <Link>{category}</Link>\n                                        </li>\n                                    ))}\n                                </ul>\n                            </div>\n                            <div class=\"container product-list-container\">\n                                <div class=\"list-products\">\n                                    <div class=\"row product-container-row\">\n                                        {products && products.map( product => (\n                                            <ProductDisplay key={product._id} product={product}/>\n                                        ))}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        {resPerPage < count && (\n                            <div className=\"d-flex justify-content-center mt-5\">\n                                <Pagination \n                                    activePage={currentPage}\n                                    itemsCountPerPage={resPerPage}\n                                    totalItemsCount={productsCount}\n                                    onChange={setCurrentPageNo}\n                                    nextPageText={'Next'}\n                                    prevPageText={'Prev'}\n                                    firstPageText={'First'}\n                                    lastPageText={'Last'}\n                                    itemClass='page-item'\n                                    linkClass='page-link'\n                                />\n                            </div>\n                        )}\n                    </Fragment>\n                )}\n            </Fragment>\n    )\n}\n\nexport default ProductsDC;\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductsEEE.js",["374"],"import React, { Fragment, useState, useEffect } from 'react'\nimport '../css/products.css'\nimport '../css/bootstrap.min.css'\nimport '../fonts/font-awesome.min.css'\nimport MetaData from './layout/MetaData'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProducts, clearErrors } from '../actions/productActions'\nimport ProductDisplay from './product/ProductDisplay'\nimport Loader from './layout/Loader'\nimport { useAlert } from 'react-alert'\nimport Pagination from 'react-js-pagination'\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\n\nconst ProductsEEE = () => { \n    const [currentPage, setCurrentPage] = useState(1);\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products);\n    const [category, setMainCategory] = useState('Electrical Engineering Equipment');\n    const [subcategory, setSubCategory] = useState('');\n\n    const eee_subCategory = [\n        'Transformers',\n        'Others'\n    ]\n    \n    useEffect(() => {\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n        dispatch(getProducts(currentPage, category, subcategory));\n\n        dispatch({\n            type: INSIDE_DASHBOARD_FALSE\n        })\n    }, [dispatch, alert, error, currentPage, category, subcategory]);\n\n    function setCurrentPageNo(pageNumber) {\n        setCurrentPage(pageNumber);\n    }\n\n    let count = productsCount;\n    \n    if(category) {\n        count = filteredProductsCount\n    }\n\n    return (\n            <Fragment>\n                {loading ? <Loader/> : \n                (\n                    <Fragment>\n                        \n                        <MetaData title={`${category}`}/>\n                        <div class=\"container-fluid\">\n                            <div class=\"product-header-container\">\n                                <h1 class=\"text-center product-text\">Our Products</h1>\n                                <h3 class=\"text-center product-category\">{category}</h3>\n                                <ul class=\"product-categories\">\n                                    {eee_subCategory.map( category => (\n                                        <li\n                                            key={category}\n                                            onClick={() => {setCurrentPageNo(1); setSubCategory(category)}}\n                                            className={subcategory === category ? \"current-active\" : null}\n                                        >\n                                                <Link>{category}</Link>\n                                        </li>\n                                    ))}\n                                </ul>\n                            </div>\n                            <div class=\"container product-list-container\">\n                                <div class=\"list-products\">\n                                    <div class=\"row product-container-row\">\n                                        {products && products.map( product => (\n                                            <ProductDisplay key={product._id} product={product}/>\n                                        ))}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        {resPerPage < count && (\n                            <div className=\"d-flex justify-content-center mt-5\">\n                                <Pagination \n                                    activePage={currentPage}\n                                    itemsCountPerPage={resPerPage}\n                                    totalItemsCount={productsCount}\n                                    onChange={setCurrentPageNo}\n                                    nextPageText={'Next'}\n                                    prevPageText={'Prev'}\n                                    firstPageText={'First'}\n                                    lastPageText={'Last'}\n                                    itemClass='page-item'\n                                    linkClass='page-link'\n                                />\n                            </div>\n                        )}\n                    </Fragment>\n                )}\n            </Fragment>\n    )\n}\n\nexport default ProductsEEE;\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductsTE.js",["375"],"import React, { Fragment, useState, useEffect } from 'react'\nimport '../css/products.css'\nimport '../css/bootstrap.min.css'\nimport '../fonts/font-awesome.min.css'\nimport MetaData from './layout/MetaData'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProducts, clearErrors } from '../actions/productActions'\nimport ProductDisplay from './product/ProductDisplay'\nimport Loader from './layout/Loader'\nimport { useAlert } from 'react-alert'\nimport Pagination from 'react-js-pagination'\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\n\nconst ProductsTE = () => { \n    const [currentPage, setCurrentPage] = useState(1);\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products);\n    const [category, setMainCategory] = useState('Test Equipment');\n    const [subcategory, setSubCategory] = useState('');\n\n    const te_subCategory = [\n        'Partial Discharge Detection',\n        'Battery Discharge Capacity Tester',\n        'Battery Impedance or Internal Resistance',\n        'Load Banks',\n        'Battery Test Monitor',\n        'Portable Direct Ground Fault Finder',\n        'Earth Tester or Clamp Type',\n        'Others'\n    ]\n    \n    useEffect(() => {\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n        dispatch(getProducts(currentPage, category, subcategory));\n\n        dispatch({\n            type: INSIDE_DASHBOARD_FALSE\n        })\n    }, [dispatch, alert, error, currentPage, category, subcategory]);\n\n    function setCurrentPageNo(pageNumber) {\n        setCurrentPage(pageNumber);\n    }\n\n    let count = productsCount;\n    \n    if(category) {\n        count = filteredProductsCount\n    }\n\n    return (\n            <Fragment>\n                {loading ? <Loader/> : \n                (\n                    <Fragment>\n                    <MetaData title={`${category}`}/>\n                        <div class=\"container-fluid\">\n                            <div class=\"product-header-container\">\n                                <h1 class=\"text-center product-text\">Our Products</h1>\n                                <h3 class=\"text-center product-category\">{category}</h3>\n                                <ul class=\"product-categories\">\n                                    {te_subCategory.map( category => (\n                                        <li\n                                            key={category}\n                                            onClick={() => {setCurrentPageNo(1); setSubCategory(category)}}\n                                            className={subcategory === category ? \"current-active\" : null}\n                                            >\n                                                <Link>{category}</Link>\n                                        </li>\n                                    ))}\n                                </ul>\n                            </div>\n                            <div class=\"container product-list-container\">\n                                <div class=\"list-products\">\n                                    <div class=\"row product-container-row\">\n                                        {products && products.map( product => (\n                                            <ProductDisplay key={product._id} product={product}/>\n                                        ))}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        {resPerPage < count && (\n                            <div className=\"d-flex justify-content-center mt-5\">\n                                <Pagination \n                                    activePage={currentPage}\n                                    itemsCountPerPage={resPerPage}\n                                    totalItemsCount={productsCount}\n                                    onChange={setCurrentPageNo}\n                                    nextPageText={'Next'}\n                                    prevPageText={'Prev'}\n                                    firstPageText={'First'}\n                                    lastPageText={'Last'}\n                                    itemClass='page-item'\n                                    linkClass='page-link'\n                                />\n                            </div>\n                        )}\n                    </Fragment>\n                )}\n            </Fragment>\n    )\n}\n\nexport default ProductsTE;\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductsME.js",["376"],"import React, { Fragment, useState, useEffect } from 'react'\nimport '../css/products.css'\nimport '../css/bootstrap.min.css'\nimport '../fonts/font-awesome.min.css'\nimport MetaData from './layout/MetaData'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProducts, clearErrors } from '../actions/productActions'\nimport ProductDisplay from './product/ProductDisplay'\nimport Loader from './layout/Loader'\nimport { useAlert } from 'react-alert'\nimport Pagination from 'react-js-pagination'\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\n\nconst ProductsME = () => { \n    const [currentPage, setCurrentPage] = useState(1);\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products);\n    const [category, setMainCategory] = useState('Mechanical Engineering');\n    const [subcategory, setSubCategory] = useState('');\n\n    const me_subCategory = [\n        'Pumps and System',\n        'Fire Protection Systems',\n        'Others'\n    ]\n    \n    useEffect(() => {\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n        dispatch(getProducts(currentPage, category, subcategory));\n\n        dispatch({\n            type: INSIDE_DASHBOARD_FALSE\n        })\n    }, [dispatch, alert, error, currentPage, category, subcategory]);\n\n    function setCurrentPageNo(pageNumber) {\n        setCurrentPage(pageNumber);\n    }\n\n    let count = productsCount;\n    \n    if(category) {\n        count = filteredProductsCount\n    }\n\n    return (\n            <Fragment>\n                {loading ? <Loader/> : \n                (\n                    <Fragment>\n                        \n                        <MetaData title={`${category}`}/>\n                        <div class=\"container-fluid\">\n                            <div class=\"product-header-container\">\n                                <h1 class=\"text-center product-text\">Our Products</h1>\n                                <h3 class=\"text-center product-category\">{category}</h3>\n                                <ul class=\"product-categories\">\n                                    {me_subCategory.map( category => (\n                                        <li\n                                            key={category}\n                                            onClick={() => {setCurrentPageNo(1); setSubCategory(category)}}\n                                            className={subcategory === category ? \"current-active\" : null}\n                                        >\n                                                <Link>{category}</Link>\n                                        </li>\n                                    ))}\n                                </ul>\n                            </div>\n                            <div class=\"container product-list-container\">\n                                <div class=\"list-products\">\n                                    <div class=\"row product-container-row\">\n                                        {products && products.map( product => (\n                                            <ProductDisplay key={product._id} product={product}/>\n                                        ))}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        {resPerPage < count && (\n                            <div className=\"d-flex justify-content-center mt-5\">\n                                <Pagination \n                                    activePage={currentPage}\n                                    itemsCountPerPage={resPerPage}\n                                    totalItemsCount={productsCount}\n                                    onChange={setCurrentPageNo}\n                                    nextPageText={'Next'}\n                                    prevPageText={'Prev'}\n                                    firstPageText={'First'}\n                                    lastPageText={'Last'}\n                                    itemClass='page-item'\n                                    linkClass='page-link'\n                                />\n                            </div>\n                        )}\n                    </Fragment>\n                )}\n            </Fragment>\n    )\n}\n\nexport default ProductsME;\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/About.js",["377"],"import React, { Fragment, useEffect } from 'react'\nimport '../css/about.css'\nimport '../css/bootstrap.min.css'\nimport '../fonts/font-awesome.min.css'\nimport MetaData from './layout/MetaData'\nimport { useAlert } from 'react-alert'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getAboutDetails, clearErrors } from '../actions/websiteActions'\nimport { Markup } from 'interweave'\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\n\nconst AboutMissionVision = () => {\n\n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const { \n        error, \n        abouts, \n        aboutCompany_title, \n        aboutCompany_description,\n        aboutScope_title, \n        aboutScope_description,\n        aboutObjectives_title, \n        aboutObjectives_description,\n        aboutMission_title, \n        aboutMission_description,\n        aboutVision_title, \n        aboutVision_description,\n        aboutHistory_title, \n        aboutHistory_description,\n    } = useSelector(state => state.abouts)\n\n    useEffect(() => {\n        dispatch(getAboutDetails());\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_FALSE\n        })\n\n    }, [dispatch, error, alert]);\n\n    return (\n            <Fragment>\n                <MetaData title={'About Us'}/>\n                <div className=\"container-fluid\" style={{paddingTop: '77px'}}>\n                    <div className=\"header-wrapper\">\n                        <div className=\"header-container\" style={{display: 'block'}}>\n                            <h1 className=\"text-center about-text\">ABOUT US</h1>\n                            <ul className=\"about-list\">\n                                <li><a href=\"#company\">The Company</a></li>\n                                <li><a href=\"#objectives\">Objectives</a></li>\n                                <li><a href=\"#scope\">Scope of Activities</a></li>\n                                <li><a href=\"#mission\">Mission</a></li>\n                                <li><a href=\"#vision\">Vision</a></li>\n                                <li><a href=\"#history\">History</a></li>\n                            </ul>\n                        </div>\n                    </div>\n                    <div id=\"company\" className=\"sections white-bg\">\n                        <h1>{aboutCompany_title}</h1>\n                        <Markup content={aboutCompany_description}/>\n                    </div>\n                    <div id=\"objectives\" className=\"sections blue-bg\">\n                        <h1>{aboutObjectives_title}</h1>\n                        <Markup content={aboutObjectives_description}/>\n                    </div>\n                    <div id=\"scope\" className=\"sections white-bg\">\n                        <h1>{aboutScope_title}</h1>\n                        <Markup content={aboutScope_description}/>\n                    </div>\n                    <div id=\"mission\" className=\"sections blue-bg\">\n                        <h1>{aboutMission_title}</h1>\n                        <Markup content={aboutMission_description}/>\n                    </div>\n                    <div id=\"vision\" className=\"sections white-bg\">\n                        <h1>{aboutVision_title}</h1>\n                        <Markup content={aboutVision_description}/>\n                    </div>\n                    <div id=\"history\" className=\"sections blue-bg\">\n                        <h1>{aboutHistory_title}</h1>\n                        <Markup content={aboutHistory_description}/>\n                    </div>\n                </div>\n            </Fragment>\n    )\n}\n\nexport default AboutMissionVision;","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListSuperAdmins.js",["378","379","380"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListAdmins.js",["381"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListFooter.js",["382"],"import React, { Fragment, useEffect , useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\nimport '../../css/dashboard.css'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { UPDATE_FOOTER_RESET } from '../../constants/websiteConstants'\nimport { getFooterDetails, clearErrors } from '../../actions/websiteActions'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { logout } from './../../actions/userActions'\n\nconst ListFooter = ({history}) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, footerInfo } = useSelector(state => state.footerDetails)\n    const { isUpdated } = useSelector(state => state.website)\n    const { user } = useSelector(state => state.auth)\n\n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n\n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n\n    useEffect(() => {\n        dispatch(getFooterDetails());\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n        \n        if(isUpdated){\n            alert.success('Footer has been updated successfully.');\n            history.push('/admin/footer')\n\n            dispatch({\n                type: UPDATE_FOOTER_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, error, isUpdated, history])\n\n    const setFooterData = () => {\n        const data = { \n            columns: [\n                {\n                    label: 'Details',\n                    field: 'text',\n                    sort: 'asc'\n                }\n            ],\n            rows: [\n                {\n                    text: footerInfo.footerTitle\n                },\n                {\n                    text: footerInfo.footerDescription\n                },\n                {\n                    text: footerInfo.addressInfo\n                },\n                {\n                    text: footerInfo.phoneInfo\n                },\n                {\n                    text: footerInfo.cellphoneInfo\n                },\n                {\n                    text: footerInfo.emailInfo\n                }\n            ]\n         }\n         return data\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'All About Us'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"} style={{paddingTop: '11px'}}>\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\n                    <ul className=\"sidebar-nav\">\n                                <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                                <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                                <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                                <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                                {user && user.role !== 'admin' ? (\n                                        <Fragment>\n                                            <hr/>\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                        </Fragment>\n                                    ) : (\n                                        <Fragment>\n                                            <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                            <hr/>\n                                            <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                            <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\n                                            <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                            <hr/>\n                                            <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                            <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                        </Fragment>\n                                    )\n                                }\n                                <hr/>\n                                <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                            </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{position: 'fixed'}}>\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\n                        </a>\n                        <Fragment>\n                        <div style={{padding: '30px'}}>\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Footer Details</h1>\n                            <Link to='/admin/update-footer'>\n                                <button className='btn btn-dark btn-sm text-capitalize mb-5'>\n                                    Update Footer\n                                </button>\n                            </Link>\n                            {loading ? <Loader/> : (\n                                <MDBDataTable\n                                    data={setFooterData()}\n                                    className='px-3'\n                                    bordered\n                                    striped\n                                    hover\n                                    entries={6}\n                                    entriesOptions={['-']}\n                                    paging={false}\n                                    searching={false}\n                                />\n                            )}\n                        </div>\n                        </Fragment>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ListFooter\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/user/RegisterError.js",[],{"ruleId":"383","replacedBy":"384"},{"ruleId":"385","replacedBy":"386"},{"ruleId":"387","severity":1,"message":"388","line":67,"column":20,"nodeType":"389","messageId":"390","endLine":67,"endColumn":35},{"ruleId":"387","severity":1,"message":"391","line":67,"column":37,"nodeType":"389","messageId":"390","endLine":67,"endColumn":41},{"ruleId":"392","severity":1,"message":"393","line":58,"column":37,"nodeType":"394","endLine":58,"endColumn":181},{"ruleId":"395","severity":1,"message":"396","line":70,"column":33,"nodeType":"397","endLine":70,"endColumn":58},{"ruleId":"395","severity":1,"message":"398","line":77,"column":60,"nodeType":"397","endLine":77,"endColumn":100},{"ruleId":"395","severity":1,"message":"396","line":108,"column":37,"nodeType":"397","endLine":108,"endColumn":62},{"ruleId":"392","severity":1,"message":"393","line":113,"column":37,"nodeType":"394","endLine":118,"endColumn":39},{"ruleId":"395","severity":1,"message":"398","line":120,"column":60,"nodeType":"397","endLine":120,"endColumn":97},{"ruleId":"387","severity":1,"message":"399","line":20,"column":22,"nodeType":"389","messageId":"390","endLine":20,"endColumn":37},{"ruleId":"387","severity":1,"message":"400","line":9,"column":24,"nodeType":"389","messageId":"390","endLine":9,"endColumn":40},{"ruleId":"387","severity":1,"message":"401","line":27,"column":13,"nodeType":"389","messageId":"390","endLine":27,"endColumn":20},{"ruleId":"402","severity":1,"message":"403","line":64,"column":8,"nodeType":"404","endLine":64,"endColumn":65,"suggestions":"405"},{"ruleId":"406","severity":1,"message":"407","line":127,"column":29,"nodeType":"394","endLine":127,"endColumn":159},{"ruleId":"408","severity":1,"message":"409","line":66,"column":140,"nodeType":"410","messageId":"411","endLine":66,"endColumn":141},{"ruleId":"408","severity":1,"message":"409","line":66,"column":161,"nodeType":"410","messageId":"411","endLine":66,"endColumn":162},{"ruleId":"392","severity":1,"message":"393","line":72,"column":41,"nodeType":"394","endLine":72,"endColumn":158},{"ruleId":"408","severity":1,"message":"409","line":87,"column":102,"nodeType":"410","messageId":"411","endLine":87,"endColumn":103},{"ruleId":"408","severity":1,"message":"409","line":87,"column":124,"nodeType":"410","messageId":"411","endLine":87,"endColumn":125},{"ruleId":"408","severity":1,"message":"409","line":90,"column":102,"nodeType":"410","messageId":"411","endLine":90,"endColumn":103},{"ruleId":"408","severity":1,"message":"409","line":90,"column":125,"nodeType":"410","messageId":"411","endLine":90,"endColumn":126},{"ruleId":"408","severity":1,"message":"409","line":96,"column":125,"nodeType":"410","messageId":"411","endLine":96,"endColumn":126},{"ruleId":"408","severity":1,"message":"409","line":96,"column":149,"nodeType":"410","messageId":"411","endLine":96,"endColumn":150},{"ruleId":"406","severity":1,"message":"407","line":75,"column":37,"nodeType":"394","endLine":75,"endColumn":147},{"ruleId":"406","severity":1,"message":"407","line":164,"column":25,"nodeType":"394","endLine":164,"endColumn":135},{"ruleId":"406","severity":1,"message":"407","line":164,"column":25,"nodeType":"394","endLine":164,"endColumn":135},{"ruleId":"406","severity":1,"message":"407","line":164,"column":25,"nodeType":"394","endLine":164,"endColumn":135},{"ruleId":"387","severity":1,"message":"401","line":23,"column":13,"nodeType":"389","messageId":"390","endLine":23,"endColumn":20},{"ruleId":"406","severity":1,"message":"407","line":123,"column":29,"nodeType":"394","endLine":123,"endColumn":159},{"ruleId":"387","severity":1,"message":"401","line":23,"column":31,"nodeType":"389","messageId":"390","endLine":23,"endColumn":38},{"ruleId":"406","severity":1,"message":"407","line":118,"column":25,"nodeType":"394","endLine":118,"endColumn":155},{"ruleId":"406","severity":1,"message":"407","line":141,"column":49,"nodeType":"394","endLine":144,"endColumn":50},{"ruleId":"406","severity":1,"message":"407","line":167,"column":49,"nodeType":"394","endLine":170,"endColumn":50},{"ruleId":"387","severity":1,"message":"401","line":26,"column":44,"nodeType":"389","messageId":"390","endLine":26,"endColumn":51},{"ruleId":"406","severity":1,"message":"407","line":142,"column":29,"nodeType":"394","endLine":142,"endColumn":159},{"ruleId":"392","severity":1,"message":"393","line":182,"column":41,"nodeType":"394","endLine":187,"endColumn":43},{"ruleId":"387","severity":1,"message":"401","line":28,"column":31,"nodeType":"389","messageId":"390","endLine":28,"endColumn":38},{"ruleId":"406","severity":1,"message":"407","line":134,"column":25,"nodeType":"394","endLine":134,"endColumn":155},{"ruleId":"406","severity":1,"message":"407","line":165,"column":25,"nodeType":"394","endLine":165,"endColumn":135},{"ruleId":"402","severity":1,"message":"412","line":75,"column":8,"nodeType":"404","endLine":75,"endColumn":76,"suggestions":"413"},{"ruleId":"414","severity":1,"message":"415","line":168,"column":36,"nodeType":"410","messageId":"416","endLine":168,"endColumn":38},{"ruleId":"406","severity":1,"message":"407","line":210,"column":25,"nodeType":"394","endLine":210,"endColumn":135},{"ruleId":"406","severity":1,"message":"407","line":133,"column":25,"nodeType":"394","endLine":133,"endColumn":135},{"ruleId":"406","severity":1,"message":"407","line":112,"column":21,"nodeType":"394","endLine":112,"endColumn":131},{"ruleId":"406","severity":1,"message":"407","line":161,"column":25,"nodeType":"394","endLine":161,"endColumn":135},{"ruleId":"387","severity":1,"message":"401","line":25,"column":13,"nodeType":"389","messageId":"390","endLine":25,"endColumn":20},{"ruleId":"406","severity":1,"message":"407","line":134,"column":29,"nodeType":"394","endLine":134,"endColumn":159},{"ruleId":"406","severity":1,"message":"407","line":150,"column":25,"nodeType":"394","endLine":150,"endColumn":135},{"ruleId":"387","severity":1,"message":"401","line":75,"column":13,"nodeType":"389","messageId":"390","endLine":75,"endColumn":20},{"ruleId":"414","severity":1,"message":"415","line":136,"column":31,"nodeType":"410","messageId":"416","endLine":136,"endColumn":33},{"ruleId":"406","severity":1,"message":"407","line":201,"column":25,"nodeType":"394","endLine":201,"endColumn":155},{"ruleId":"387","severity":1,"message":"401","line":77,"column":13,"nodeType":"389","messageId":"390","endLine":77,"endColumn":20},{"ruleId":"414","severity":1,"message":"415","line":159,"column":31,"nodeType":"410","messageId":"416","endLine":159,"endColumn":33},{"ruleId":"406","severity":1,"message":"407","line":225,"column":29,"nodeType":"394","endLine":225,"endColumn":159},{"ruleId":"387","severity":1,"message":"417","line":34,"column":5,"nodeType":"389","messageId":"390","endLine":34,"endColumn":22},{"ruleId":"387","severity":1,"message":"418","line":37,"column":5,"nodeType":"389","messageId":"390","endLine":37,"endColumn":22},{"ruleId":"387","severity":1,"message":"419","line":9,"column":13,"nodeType":"389","messageId":"390","endLine":9,"endColumn":22},{"ruleId":"387","severity":1,"message":"420","line":24,"column":22,"nodeType":"389","messageId":"390","endLine":24,"endColumn":30},{"ruleId":"387","severity":1,"message":"421","line":25,"column":13,"nodeType":"389","messageId":"390","endLine":25,"endColumn":18},{"ruleId":"406","severity":1,"message":"407","line":92,"column":37,"nodeType":"394","endLine":92,"endColumn":147},{"ruleId":"414","severity":1,"message":"415","line":96,"column":31,"nodeType":"410","messageId":"416","endLine":96,"endColumn":33},{"ruleId":"406","severity":1,"message":"407","line":163,"column":25,"nodeType":"394","endLine":163,"endColumn":135},{"ruleId":"406","severity":1,"message":"407","line":293,"column":73,"nodeType":"394","endLine":296,"endColumn":74},{"ruleId":"406","severity":1,"message":"407","line":324,"column":73,"nodeType":"394","endLine":327,"endColumn":74},{"ruleId":"406","severity":1,"message":"407","line":73,"column":45,"nodeType":"394","endLine":76,"endColumn":46},{"ruleId":"406","severity":1,"message":"407","line":80,"column":37,"nodeType":"394","endLine":83,"endColumn":38},{"ruleId":"406","severity":1,"message":"407","line":106,"column":37,"nodeType":"394","endLine":109,"endColumn":38},{"ruleId":"387","severity":1,"message":"401","line":27,"column":44,"nodeType":"389","messageId":"390","endLine":27,"endColumn":51},{"ruleId":"406","severity":1,"message":"407","line":135,"column":29,"nodeType":"394","endLine":135,"endColumn":159},{"ruleId":"392","severity":1,"message":"393","line":93,"column":25,"nodeType":"394","endLine":98,"endColumn":27},{"ruleId":"406","severity":1,"message":"407","line":148,"column":25,"nodeType":"394","endLine":148,"endColumn":135},{"ruleId":"387","severity":1,"message":"422","line":1,"column":38,"nodeType":"389","messageId":"390","endLine":1,"endColumn":46},{"ruleId":"387","severity":1,"message":"401","line":17,"column":13,"nodeType":"389","messageId":"390","endLine":17,"endColumn":20},{"ruleId":"423","severity":1,"message":"424","line":8,"column":17,"nodeType":"394","endLine":8,"endColumn":84},{"ruleId":"387","severity":1,"message":"425","line":6,"column":10,"nodeType":"389","messageId":"390","endLine":6,"endColumn":14},{"ruleId":"387","severity":1,"message":"399","line":20,"column":22,"nodeType":"389","messageId":"390","endLine":20,"endColumn":37},{"ruleId":"387","severity":1,"message":"426","line":21,"column":25,"nodeType":"389","messageId":"390","endLine":21,"endColumn":39},{"ruleId":"387","severity":1,"message":"399","line":20,"column":22,"nodeType":"389","messageId":"390","endLine":20,"endColumn":37},{"ruleId":"387","severity":1,"message":"399","line":20,"column":22,"nodeType":"389","messageId":"390","endLine":20,"endColumn":37},{"ruleId":"387","severity":1,"message":"399","line":20,"column":22,"nodeType":"389","messageId":"390","endLine":20,"endColumn":37},{"ruleId":"387","severity":1,"message":"399","line":20,"column":22,"nodeType":"389","messageId":"390","endLine":20,"endColumn":37},{"ruleId":"387","severity":1,"message":"427","line":19,"column":9,"nodeType":"389","messageId":"390","endLine":19,"endColumn":15},{"ruleId":"387","severity":1,"message":"428","line":12,"column":20,"nodeType":"389","messageId":"390","endLine":12,"endColumn":30},{"ruleId":"387","severity":1,"message":"418","line":13,"column":10,"nodeType":"389","messageId":"390","endLine":13,"endColumn":27},{"ruleId":"406","severity":1,"message":"407","line":166,"column":25,"nodeType":"394","endLine":166,"endColumn":135},{"ruleId":"406","severity":1,"message":"407","line":176,"column":25,"nodeType":"394","endLine":176,"endColumn":135},{"ruleId":"406","severity":1,"message":"407","line":129,"column":25,"nodeType":"394","endLine":129,"endColumn":135},"no-native-reassign",["429"],"no-negated-in-lhs",["430"],"no-unused-vars","'isAuthenticated' is assigned a value but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/aria-props","aria-aria-haspopup: This attribute is an invalid ARIA attribute.","JSXAttribute","aria-aria-labelledby: This attribute is an invalid ARIA attribute.","'setMainCategory' is assigned a value but never used.","'getFooterDetails' is defined but never used.","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'footerInfo'. Either include it or remove the dependency array.","ArrayExpression",["431"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","React Hook useEffect has a missing dependency: 'deleteAll'. Either include it or remove the dependency array.",["432"],"eqeqeq","Expected '===' and instead saw '=='.","unexpected","'UPDATE_USER_RESET' is defined but never used.","'DELETE_USER_RESET' is defined but never used.","'isCreated' is assigned a value but never used.","'products' is assigned a value but never used.","'users' is assigned a value but never used.","'useState' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'Link' is defined but never used.","'setSubCategory' is assigned a value but never used.","'abouts' is assigned a value but never used.","'deleteUser' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"433","fix":"434"},{"desc":"435","fix":"436"},"Update the dependencies array to be: [dispatch, alert, error, history, updateError, isUpdated, footerInfo]",{"range":"437","text":"438"},"Update the dependencies array to be: [dispatch, alert, error, history, isDeleted, isUpdated, deleteError, deleteAll]",{"range":"439","text":"440"},[2246,2303],"[dispatch, alert, error, history, updateError, isUpdated, footerInfo]",[2174,2242],"[dispatch, alert, error, history, isDeleted, isUpdated, deleteError, deleteAll]"]