[{"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\index.js":"1","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\App.js":"2","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\store.js":"3","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\ProductsOthers.js":"4","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\Products.js":"5","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\ProductsME.js":"6","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\ProductsDC.js":"7","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\ProductsEEE.js":"8","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\ProductsTE.js":"9","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\Contact.js":"10","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\layout\\Loader.js":"11","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\Services.js":"12","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateFooter.js":"13","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\ConfirmationPage.js":"14","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateAbout.js":"15","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\EmailSent.js":"16","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateHome.js":"17","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\layout\\Footer.js":"18","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\product\\ProductDetails.js":"19","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdatePassword.js":"20","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListAbout.js":"21","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListTrash.js":"22","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListOthers.js":"23","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListArchives.js":"24","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ProductsList.js":"25","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListServices.js":"26","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateProduct.js":"27","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListHome.js":"28","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateInquiry.js":"29","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\Profile.js":"30","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListInquiries.js":"31","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListFooter.js":"32","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListAppointments.js":"33","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListSuperAdmins.js":"34","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\user\\RegisterSuccess.js":"35","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\user\\Register.js":"36","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateUser.js":"37","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateServices.js":"38","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\user\\RegisterError.js":"39","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\reducers\\dashboardReducers.js":"40","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListAdmins.js":"41","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\user\\ForgotPassword.js":"42","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\reducers\\websiteReducers.js":"43","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\reducers\\productReducers.js":"44","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\reducers\\userReducers.js":"45","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\user\\PasswordSuccess.js":"46","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\route\\ProtectedRoute.js":"47","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\user\\NewPassword.js":"48","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\actions\\userActions.js":"49","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\reducers\\inquiryReducers.js":"50","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\Home.js":"51","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\About.js":"52","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\layout\\Header.js":"53","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateProfile.js":"54","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\Dashboard.js":"55","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\user\\Login.js":"56","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\NewProduct.js":"57","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\layout\\MetaData.js":"58","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\product\\ProductDisplay.js":"59","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\actions\\productActions.js":"60","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\actions\\websiteActions.js":"61","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\constants\\dashboardConstants.js":"62","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\constants\\userConstants.js":"63","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\constants\\inquiryConstants.js":"64","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\constants\\websiteConstants.js":"65","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\constants\\productConstants.js":"66","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\actions\\inquiryActions.js":"67"},{"size":609,"mtime":1614154818332,"results":"68","hashOfConfig":"69"},{"size":7848,"mtime":1615131279224,"results":"70","hashOfConfig":"69"},{"size":2060,"mtime":1614440293149,"results":"71","hashOfConfig":"69"},{"size":3779,"mtime":1615128059149,"results":"72","hashOfConfig":"69"},{"size":4145,"mtime":1615128059147,"results":"73","hashOfConfig":"69"},{"size":4293,"mtime":1615128059148,"results":"74","hashOfConfig":"69"},{"size":4279,"mtime":1615128059147,"results":"75","hashOfConfig":"69"},{"size":4243,"mtime":1615128059148,"results":"76","hashOfConfig":"69"},{"size":4676,"mtime":1615128059149,"results":"77","hashOfConfig":"69"},{"size":8529,"mtime":1615128059140,"results":"78","hashOfConfig":"69"},{"size":426,"mtime":1615128059158,"results":"79","hashOfConfig":"69"},{"size":5732,"mtime":1615097010094,"results":"80","hashOfConfig":"69"},{"size":12011,"mtime":1615128059155,"results":"81","hashOfConfig":"69"},{"size":1355,"mtime":1615128059042,"results":"82","hashOfConfig":"69"},{"size":8641,"mtime":1615128059155,"results":"83","hashOfConfig":"69"},{"size":1343,"mtime":1615128059147,"results":"84","hashOfConfig":"69"},{"size":10211,"mtime":1615128059155,"results":"85","hashOfConfig":"69"},{"size":4145,"mtime":1614154818304,"results":"86","hashOfConfig":"69"},{"size":2569,"mtime":1614947873526,"results":"87","hashOfConfig":"69"},{"size":10249,"mtime":1615128059156,"results":"88","hashOfConfig":"69"},{"size":6870,"mtime":1615128059150,"results":"89","hashOfConfig":"69"},{"size":10220,"mtime":1615128059153,"results":"90","hashOfConfig":"69"},{"size":8466,"mtime":1615128059152,"results":"91","hashOfConfig":"69"},{"size":8321,"mtime":1615128059151,"results":"92","hashOfConfig":"69"},{"size":8655,"mtime":1615128059154,"results":"93","hashOfConfig":"69"},{"size":7564,"mtime":1615128059152,"results":"94","hashOfConfig":"69"},{"size":18052,"mtime":1615128059156,"results":"95","hashOfConfig":"69"},{"size":7472,"mtime":1615128059151,"results":"96","hashOfConfig":"69"},{"size":12273,"mtime":1615128059156,"results":"97","hashOfConfig":"69"},{"size":9690,"mtime":1615128059154,"results":"98","hashOfConfig":"69"},{"size":8536,"mtime":1615128059152,"results":"99","hashOfConfig":"69"},{"size":7260,"mtime":1615128059151,"results":"100","hashOfConfig":"69"},{"size":8490,"mtime":1615128059151,"results":"101","hashOfConfig":"69"},{"size":7719,"mtime":1615128059153,"results":"102","hashOfConfig":"69"},{"size":1376,"mtime":1615131821214,"results":"103","hashOfConfig":"69"},{"size":22156,"mtime":1615128059159,"results":"104","hashOfConfig":"69"},{"size":9199,"mtime":1615128059157,"results":"105","hashOfConfig":"69"},{"size":12724,"mtime":1615128059157,"results":"106","hashOfConfig":"69"},{"size":1463,"mtime":1615131822484,"results":"107","hashOfConfig":"69"},{"size":489,"mtime":1614154818333,"results":"108","hashOfConfig":"69"},{"size":7995,"mtime":1615128059150,"results":"109","hashOfConfig":"69"},{"size":2507,"mtime":1615132370149,"results":"110","hashOfConfig":"69"},{"size":10036,"mtime":1615102542122,"results":"111","hashOfConfig":"69"},{"size":4729,"mtime":1614154818333,"results":"112","hashOfConfig":"69"},{"size":8367,"mtime":1615097010136,"results":"113","hashOfConfig":"69"},{"size":1377,"mtime":1615131823267,"results":"114","hashOfConfig":"69"},{"size":1818,"mtime":1615128059158,"results":"115","hashOfConfig":"69"},{"size":5332,"mtime":1615132379633,"results":"116","hashOfConfig":"69"},{"size":8061,"mtime":1614154818293,"results":"117","hashOfConfig":"69"},{"size":4365,"mtime":1614951347167,"results":"118","hashOfConfig":"69"},{"size":5063,"mtime":1615205455780,"results":"119","hashOfConfig":"69"},{"size":4125,"mtime":1615203386724,"results":"120","hashOfConfig":"69"},{"size":7180,"mtime":1615205433505,"results":"121","hashOfConfig":"69"},{"size":14977,"mtime":1615203386762,"results":"122","hashOfConfig":"69"},{"size":13241,"mtime":1615203386731,"results":"123","hashOfConfig":"69"},{"size":4255,"mtime":1615205441271,"results":"124","hashOfConfig":"69"},{"size":16320,"mtime":1615207541658,"results":"125","hashOfConfig":"69"},{"size":283,"mtime":1614154818305,"results":"126","hashOfConfig":"69"},{"size":507,"mtime":1615093543022,"results":"127","hashOfConfig":"69"},{"size":4658,"mtime":1614611353540,"results":"128","hashOfConfig":"69"},{"size":7683,"mtime":1614927090041,"results":"129","hashOfConfig":"69"},{"size":124,"mtime":1614154818307,"results":"130","hashOfConfig":"69"},{"size":2255,"mtime":1614154818308,"results":"131","hashOfConfig":"69"},{"size":1100,"mtime":1614154818307,"results":"132","hashOfConfig":"69"},{"size":2274,"mtime":1614440293124,"results":"133","hashOfConfig":"69"},{"size":1320,"mtime":1614154818307,"results":"134","hashOfConfig":"69"},{"size":3472,"mtime":1614951347049,"results":"135","hashOfConfig":"69"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},"1utfutg",{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"138"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"138"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"138"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"138"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"138"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"138"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"138"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"138"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"138"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"138"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"138"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"138"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"138"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"138"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"138"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"138"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"138"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"138"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"138"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"138"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"138"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"138"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"138"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"138"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"138"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"138"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"138"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"138"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"138"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"138"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"138"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"138"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"138"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"138"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"138"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"138"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"138"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"138"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\index.js",[],["309","310"],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\App.js",["311","312","313"],"import { BrowserRouter as Router, Route } from 'react-router-dom' \r\nimport { useSelector } from 'react-redux'\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\n\r\nimport Header from './components/layout/Header'\r\nimport Footer from './components/layout/Footer'\r\nimport Home from './components/Home'\r\nimport Products from './components/Products'\r\n\r\nimport ProductsOthers from './components/ProductsOthers'\r\nimport ProductsDC from './components/ProductsDC'\r\nimport ProductsEEE from './components/ProductsEEE'\r\nimport ProductsME from './components/ProductsME'\r\nimport ProductsTE from './components/ProductsTE'\r\n\r\nimport ProductDetails from './components/product/ProductDetails'\r\nimport About from './components/About'\r\nimport Services from './components/Services'\r\nimport Contact from './components/Contact'\r\nimport ConfirmationPage from './components/ConfirmationPage'\r\n\r\nimport UpdateHome from './components/admin/UpdateHome'\r\nimport UpdateAbout from './components/admin/UpdateAbout'\r\nimport UpdateFooter from './components/admin/UpdateFooter'\r\n\r\nimport Login from './components/user/Login'\r\nimport Register from './components/user/Register'\r\nimport RegisterSuccess from './components/user/RegisterSuccess'\r\nimport PasswordSuccess from './components/user/PasswordSuccess'\r\nimport RegisterError from './components/user/RegisterError'\r\nimport Profile from './components/admin/Profile'\r\nimport UpdateProfile from './components/admin/UpdateProfile'\r\nimport UpdatePassword from './components/admin/UpdatePassword'\r\nimport ForgotPassword from './components/user/ForgotPassword'\r\nimport NewPassword from './components/user/NewPassword'\r\nimport EmailSent from './components/EmailSent'\r\n\r\nimport Dashboard from './components/admin/Dashboard'\r\nimport ListInquiries from './components/admin/ListInquiries'\r\nimport ListAppointments from './components/admin/ListAppointments'\r\nimport ListOthers from './components/admin/ListOthers'\r\nimport ListArchives from './components/admin/ListArchives'\r\nimport ListTrash from './components/admin/ListTrash'\r\nimport ListAbout from './components/admin/ListAbout'\r\nimport ListHome from './components/admin/ListHome'\r\nimport ListFooter from './components/admin/ListFooter'\r\nimport ListServices from './components/admin/ListServices'\r\nimport ProductsList from './components/admin/ProductsList'\r\nimport NewProduct from './components/admin/NewProduct'\r\nimport UpdateProduct from './components/admin/UpdateProduct'\r\nimport UpdateInquiry from './components/admin/UpdateInquiry'\r\nimport UpdateServices from './components/admin/UpdateServices'\r\n\r\nimport ListSuperAdmins from './components/admin/ListSuperAdmins'\r\nimport ListAdmins from './components/admin/ListAdmins'\r\nimport UpdateUser from './components/admin/UpdateUser'\r\n\r\nimport ProtectedRoute from './components/route/ProtectedRoute'\r\nimport { loadUser } from './actions/userActions'\r\nimport store from './store'\r\nimport { useEffect } from 'react'\r\nimport Loader from './components/layout/Loader';\r\n\r\nfunction App() {\r\n\r\n  useEffect(() => {\r\n    store.dispatch(loadUser());\r\n  }, [])\r\n\r\n  const { loading, isAuthenticated, user } = useSelector(state => state.auth);\r\n  const { isDashboard }  = useSelector(state => state.dashboard);\r\n\r\n  return (\r\n    <Router>\r\n        <div className=\"App\">\r\n                {!loading && !isDashboard && (\r\n                    <Header/>\r\n                )}\r\n\r\n                <Route path='/' component={Home} exact/>\r\n                <Route path={['/products/our-products', '/our-products']} component={Products} exact/>\r\n                <Route path='/products/Mechanical Engineering' component={ProductsME} exact/>\r\n                <Route path='/products/DC Power Systems' component={ProductsDC} exact/>\r\n                <Route path='/products/Electrical Engineering Equipment' component={ProductsEEE} exact/>\r\n                <Route path='/products/Test Equipment' component={ProductsTE} exact/>\r\n                <Route path='/products/Others' component={ProductsOthers} exact/>\r\n\r\n                <Route path='/our-products/:id' component={ProductDetails} exact/>\r\n\r\n                <Route path='/about-us' component={About} exact/>\r\n                <Route path='/our-services' component={Services} exact/>\r\n                <Route path='/contact-us' component={Contact} exact/>\r\n                <Route path='/confirmation' component={ConfirmationPage} exact/>\r\n                <Route path='/register-success' isSuperAdmin={true} component={RegisterSuccess} exact/>\r\n                <Route path='/password-success' component={PasswordSuccess} exact/>\r\n                <Route path='/register-error' isSuperAdmin={true} component={RegisterError} exact/>\r\n\r\n                <ProtectedRoute path=\"/admin/me\" forAdmins={true} component={Profile} exact/>\r\n                <ProtectedRoute path=\"/admin/edit-profile\" forAdmins={true} component={UpdateProfile} exact/>\r\n                <ProtectedRoute path=\"/password/update\" forAdmins={true} component={UpdatePassword} exact/>\r\n\r\n                <Route path=\"/password/forgot\" component={ForgotPassword} exact/>\r\n                <Route path=\"/password/reset/:token\" component={NewPassword} exact/>\r\n                <Route path='/email-sent' component={EmailSent} exact/>\r\n\r\n                <Route path='/login' component={Login} exact/>\r\n                <ProtectedRoute path='/register' isSuperAdmin={true} component={Register} exact/>\r\n                <ProtectedRoute path='/admin/users/superadmin' isSuperAdmin={true} component={ListSuperAdmins} exact/>\r\n                <ProtectedRoute path='/admin/users/admin' isSuperAdmin={true} component={ListAdmins} exact/>\r\n                <ProtectedRoute path=\"/superadmin/user/:id\" isSuperAdmin={true} component={UpdateUser} exact/>\r\n                \r\n                <ProtectedRoute path=\"/admin/dashboard\" forAdmins={true} component={Dashboard} exact/>\r\n                <ProtectedRoute path=\"/admin/inquiries\" isAdmin={true} component={ListInquiries} exact/>\r\n                <ProtectedRoute path=\"/admin/appointments\" isAdmin={true} component={ListAppointments} exact/>\r\n                <ProtectedRoute path=\"/admin/others\" isAdmin={true} component={ListOthers} exact/>\r\n                <ProtectedRoute path=\"/admin/archives\" isAdmin={true} component={ListArchives} exact/>\r\n                <ProtectedRoute path=\"/admin/trash\" isAdmin={true} component={ListTrash} exact/>\r\n                \r\n                <ProtectedRoute path=\"/admin/about\" forAdmins={true} component={ListAbout} exact/>\r\n                <ProtectedRoute path=\"/admin/about/:id\" forAdmins={true} component={UpdateAbout} exact/>\r\n                <ProtectedRoute path=\"/admin/service\" forAdmins={true} component={ListServices} exact/>\r\n                <ProtectedRoute path=\"/admin/service/:id\" forAdmins={true} component={UpdateServices} exact/>\r\n                <ProtectedRoute path=\"/admin/home\" forAdmins={true} component={ListHome} exact/>\r\n                <ProtectedRoute path=\"/admin/home/:id\" forAdmins={true} component={UpdateHome} exact/>\r\n                <ProtectedRoute path=\"/admin/footer\" forAdmins={true} component={ListFooter} exact/>\r\n                <ProtectedRoute path=\"/admin/update-footer\" forAdmins={true} component={UpdateFooter} exact/>\r\n                \r\n                <ProtectedRoute path=\"/admin/products\" isAdmin={true} component={ProductsList} exact/>\r\n                <ProtectedRoute path=\"/admin/newProduct\" isAdmin={true} component={NewProduct} exact/>\r\n                <ProtectedRoute path=\"/admin/product/:id\" isAdmin={true} component={UpdateProduct} exact/>\r\n                <ProtectedRoute path=\"/admin/inquiry/:id\" isAdmin={true} component={UpdateInquiry} exact/>\r\n                \r\n                {!loading && !isDashboard && (\r\n                  <Footer/>\r\n                )}\r\n        </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\store.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\ProductsOthers.js",["314","315","316"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport '../css/products.css'\r\nimport '../css/bootstrap.min.css'\r\nimport '../fonts/font-awesome.min.css'\r\nimport MetaData from './layout/MetaData'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getProducts, clearErrors } from '../actions/productActions'\r\nimport ProductDisplay from './product/ProductDisplay'\r\nimport Loader from './layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\nimport Pagination from 'react-js-pagination'\r\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\r\n\r\nconst ProductsOthers = () => { \r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products);\r\n    const [category, setMainCategory] = useState('Others');\r\n    const [subcategory, setSubCategory] = useState('Others');\r\n\r\n    \r\n    useEffect(() => {\r\n        if(error){\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n        dispatch(getProducts(currentPage, category, subcategory));\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_FALSE\r\n        })\r\n    }, [dispatch, alert, error, currentPage, category, subcategory]);\r\n\r\n    function setCurrentPageNo(pageNumber) {\r\n        setCurrentPage(pageNumber);\r\n    }\r\n\r\n    let count = productsCount;\r\n    \r\n    if(category) {\r\n        count = filteredProductsCount\r\n    }\r\n\r\n    return (\r\n            <Fragment>\r\n                <MetaData title={`${category}`}/>\r\n                <div class=\"container-fluid\">\r\n                    <div class=\"product-header-container\">\r\n                        <h1 class=\"text-center product-text\">Our Products</h1>\r\n                        <h3 class=\"text-center product-category\">{category}</h3>\r\n                    </div>\r\n                    <div class=\"container product-list-container\">\r\n                        <div class=\"list-products\">\r\n                            <div class=\"row product-container-row\">\r\n                                {loading ? <Loader/> : (\r\n                                    <Fragment>\r\n                                        {loading ? <Loader/> : (\r\n                                        <Fragment>\r\n                                            {products && products.map( product => (\r\n                                                <ProductDisplay key={product._id} product={product}/>\r\n                                            ))}\r\n                                        </Fragment>\r\n                                    )}\r\n                                    </Fragment>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {resPerPage < count && (\r\n                    <div className=\"d-flex justify-content-center mt-5\">\r\n                        <Pagination \r\n                            activePage={currentPage}\r\n                            itemsCountPerPage={resPerPage}\r\n                            totalItemsCount={productsCount}\r\n                            onChange={setCurrentPageNo}\r\n                            nextPageText={'Next'}\r\n                            prevPageText={'Prev'}\r\n                            firstPageText={'First'}\r\n                            lastPageText={'Last'}\r\n                            itemClass='page-item'\r\n                            linkClass='page-link'\r\n                        />\r\n                    </div>\r\n                )}\r\n            </Fragment>\r\n               \r\n    )\r\n}\r\n\r\nexport default ProductsOthers;\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\Products.js",["317"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport '../css/products.css'\r\nimport '../css/bootstrap.min.css'\r\nimport '../fonts/font-awesome.min.css'\r\nimport { Link } from 'react-router-dom'\r\nimport MetaData from './layout/MetaData'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getProducts, clearErrors } from '../actions/productActions'\r\nimport ProductDisplay from './product/ProductDisplay'\r\nimport Loader from './layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\nimport Pagination from 'react-js-pagination'\r\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\r\n\r\nconst Products = () => { \r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products);\r\n    const [category, setMainCategory] = useState('');\r\n    const [subcategory, setSubCategory] = useState('');\r\n\r\n    const categories = [\r\n        'Mechanical Engineering',\r\n        'DC Power Systems',\r\n        'Electrical Engineering Equipment',\r\n        'Test Equipment',\r\n        'Others'\r\n    ]\r\n    \r\n    useEffect(() => {\r\n        if(error){\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n        dispatch(getProducts(currentPage, category, subcategory));\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_FALSE\r\n        })\r\n    }, [dispatch, alert, error, currentPage, category, subcategory]);\r\n\r\n    function setCurrentPageNo(pageNumber) {\r\n        setCurrentPage(pageNumber);\r\n    }\r\n\r\n    let count = productsCount;\r\n    \r\n    if(category) {\r\n        count = filteredProductsCount\r\n    }\r\n\r\n    return (\r\n            <Fragment>\r\n                <MetaData title={'Our Products'}/>\r\n                <div class=\"container-fluid\">\r\n                    <div class=\"product-header-container\">\r\n                        <h1 class=\"text-center product-text\">Our Products</h1>\r\n                        <ul class=\"product-categories\">\r\n                            {categories.map( category => (\r\n                                <li\r\n                                    key={category}\r\n                                    onClick={() => {setCurrentPageNo(1); setSubCategory(category)}}>\r\n                                        <Link to={`/products/${category}`}>{category}</Link>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                    <div class=\"container product-list-container\">\r\n                        <div class=\"list-products\">\r\n                            <div class=\"row product-container-row\">\r\n                                {loading ? <Loader/> : (\r\n                                    <Fragment>\r\n                                        {products && products.map( product => (\r\n                                            <ProductDisplay key={product._id} product={product}/>\r\n                                        ))}\r\n                                    </Fragment>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {resPerPage < count && (\r\n                    <div className=\"d-flex justify-content-center mt-5\">\r\n                        <Pagination \r\n                            activePage={currentPage}\r\n                            itemsCountPerPage={resPerPage}\r\n                            totalItemsCount={productsCount}\r\n                            onChange={setCurrentPageNo}\r\n                            nextPageText={'Next'}\r\n                            prevPageText={'Prev'}\r\n                            firstPageText={'First'}\r\n                            lastPageText={'Last'}\r\n                            itemClass='page-item'\r\n                            linkClass='page-link'\r\n                        />\r\n                    </div>\r\n                )} \r\n                \r\n            </Fragment>\r\n    )\r\n}\r\n\r\nexport default Products;\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\ProductsME.js",["318"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport '../css/products.css'\r\nimport '../css/bootstrap.min.css'\r\nimport '../fonts/font-awesome.min.css'\r\nimport MetaData from './layout/MetaData'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getProducts, clearErrors } from '../actions/productActions'\r\nimport ProductDisplay from './product/ProductDisplay'\r\nimport Loader from './layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\nimport Pagination from 'react-js-pagination'\r\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\r\n\r\nconst ProductsME = () => { \r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products);\r\n    const [category, setMainCategory] = useState('Mechanical Engineering');\r\n    const [subcategory, setSubCategory] = useState('');\r\n\r\n    const me_subCategory = [\r\n        'Pumps and System',\r\n        'Fire Protection Systems',\r\n        'Others'\r\n    ]\r\n    \r\n    useEffect(() => {\r\n        if(error){\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n        dispatch(getProducts(currentPage, category, subcategory));\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_FALSE\r\n        })\r\n    }, [dispatch, alert, error, currentPage, category, subcategory]);\r\n\r\n    function setCurrentPageNo(pageNumber) {\r\n        setCurrentPage(pageNumber);\r\n    }\r\n\r\n    let count = productsCount;\r\n    \r\n    if(category) {\r\n        count = filteredProductsCount\r\n    }\r\n\r\n    return (\r\n            <Fragment>\r\n                \r\n                <MetaData title={`${category}`}/>\r\n                <div class=\"container-fluid\">\r\n                    <div class=\"product-header-container\">\r\n                        <h1 class=\"text-center product-text\">Our Products</h1>\r\n                        <h3 class=\"text-center product-category\">{category}</h3>\r\n                        <ul class=\"product-categories\">\r\n                            {me_subCategory.map( category => (\r\n                                <li\r\n                                    key={category}\r\n                                    onClick={() => {setCurrentPageNo(1); setSubCategory(category)}}\r\n                                    className={subcategory === category ? \"current-active\" : null}\r\n                                >\r\n                                        <Link>{category}</Link>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                    <div class=\"container product-list-container\">\r\n                        <div class=\"list-products\">\r\n                            <div class=\"row product-container-row\">\r\n                                {loading ? <Loader/> : (\r\n                                    <Fragment>\r\n                                        {products && products.map( product => (\r\n                                            <ProductDisplay key={product._id} product={product}/>\r\n                                        ))}\r\n                                    </Fragment>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {resPerPage < count && (\r\n                    <div className=\"d-flex justify-content-center mt-5\">\r\n                        <Pagination \r\n                            activePage={currentPage}\r\n                            itemsCountPerPage={resPerPage}\r\n                            totalItemsCount={productsCount}\r\n                            onChange={setCurrentPageNo}\r\n                            nextPageText={'Next'}\r\n                            prevPageText={'Prev'}\r\n                            firstPageText={'First'}\r\n                            lastPageText={'Last'}\r\n                            itemClass='page-item'\r\n                            linkClass='page-link'\r\n                        />\r\n                    </div>\r\n                )}\r\n            </Fragment>\r\n    )\r\n}\r\n\r\nexport default ProductsME;\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\ProductsDC.js",["319"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport '../css/products.css'\r\nimport '../css/bootstrap.min.css'\r\nimport '../fonts/font-awesome.min.css'\r\nimport MetaData from './layout/MetaData'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getProducts, clearErrors } from '../actions/productActions'\r\nimport ProductDisplay from './product/ProductDisplay'\r\nimport Loader from './layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\nimport Pagination from 'react-js-pagination'\r\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\r\n\r\nconst ProductsDC = () => { \r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products);\r\n    const [category, setMainCategory] = useState('DC Power Systems');\r\n    const [subcategory, setSubCategory] = useState('');\r\n\r\n    const dc_subCategory = [\r\n        'Uninterrupted Power System',\r\n        'Battery Monitoring System',\r\n        'Batteries',\r\n        'Others'\r\n    ]\r\n    \r\n    useEffect(() => {\r\n        if(error){\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n        dispatch(getProducts(currentPage, category, subcategory));\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_FALSE\r\n        })\r\n    }, [dispatch, alert, error, currentPage, category, subcategory]);\r\n\r\n    function setCurrentPageNo(pageNumber) {\r\n        setCurrentPage(pageNumber);\r\n    }\r\n\r\n    let count = productsCount;\r\n    \r\n    if(category) {\r\n        count = filteredProductsCount\r\n    }\r\n\r\n    return (\r\n            <Fragment>\r\n                <MetaData title={`${category}`}/>\r\n                <div class=\"container-fluid\">\r\n                    <div class=\"product-header-container\">\r\n                        <h1 class=\"text-center product-text\">Our Products</h1>\r\n                        <h3 class=\"text-center product-category\">{category}</h3>\r\n                        <ul class=\"product-categories\">\r\n                            {dc_subCategory.map( category => (\r\n                                <li\r\n                                    key={category}\r\n                                    onClick={() => {setCurrentPageNo(1); setSubCategory(category)}}\r\n                                    className={subcategory === category ? \"current-active\" : null}\r\n                                >\r\n                                        <Link>{category}</Link>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                    <div class=\"container product-list-container\">\r\n                        <div class=\"list-products\">\r\n                            <div class=\"row product-container-row\">\r\n                                {loading ? <Loader/> : (\r\n                                <Fragment>\r\n                                    {products && products.map( product => (\r\n                                        <ProductDisplay key={product._id} product={product}/>\r\n                                    ))}\r\n                                </Fragment>\r\n                            )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {resPerPage < count && (\r\n                    <div className=\"d-flex justify-content-center mt-5\">\r\n                        <Pagination \r\n                            activePage={currentPage}\r\n                            itemsCountPerPage={resPerPage}\r\n                            totalItemsCount={productsCount}\r\n                            onChange={setCurrentPageNo}\r\n                            nextPageText={'Next'}\r\n                            prevPageText={'Prev'}\r\n                            firstPageText={'First'}\r\n                            lastPageText={'Last'}\r\n                            itemClass='page-item'\r\n                            linkClass='page-link'\r\n                        />\r\n                    </div>\r\n                )}\r\n            </Fragment>\r\n    )\r\n}\r\n\r\nexport default ProductsDC;\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\ProductsEEE.js",["320"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport '../css/products.css'\r\nimport '../css/bootstrap.min.css'\r\nimport '../fonts/font-awesome.min.css'\r\nimport MetaData from './layout/MetaData'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getProducts, clearErrors } from '../actions/productActions'\r\nimport ProductDisplay from './product/ProductDisplay'\r\nimport Loader from './layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\nimport Pagination from 'react-js-pagination'\r\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\r\n\r\nconst ProductsEEE = () => { \r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products);\r\n    const [category, setMainCategory] = useState('Electrical Engineering Equipment');\r\n    const [subcategory, setSubCategory] = useState('');\r\n\r\n    const eee_subCategory = [\r\n        'Transformers',\r\n        'Others'\r\n    ]\r\n    \r\n    useEffect(() => {\r\n        if(error){\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n        dispatch(getProducts(currentPage, category, subcategory));\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_FALSE\r\n        })\r\n    }, [dispatch, alert, error, currentPage, category, subcategory]);\r\n\r\n    function setCurrentPageNo(pageNumber) {\r\n        setCurrentPage(pageNumber);\r\n    }\r\n\r\n    let count = productsCount;\r\n    \r\n    if(category) {\r\n        count = filteredProductsCount\r\n    }\r\n\r\n    return (\r\n            <Fragment>\r\n                <MetaData title={`${category}`}/>\r\n                <div class=\"container-fluid\">\r\n                    <div class=\"product-header-container\">\r\n                        <h1 class=\"text-center product-text\">Our Products</h1>\r\n                        <h3 class=\"text-center product-category\">{category}</h3>\r\n                        <ul class=\"product-categories\">\r\n                            {eee_subCategory.map( category => (\r\n                                <li\r\n                                    key={category}\r\n                                    onClick={() => {setCurrentPageNo(1); setSubCategory(category)}}\r\n                                    className={subcategory === category ? \"current-active\" : null}\r\n                                >\r\n                                        <Link>{category}</Link>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                    <div class=\"container product-list-container\">\r\n                        <div class=\"list-products\">\r\n                            <div class=\"row product-container-row\">\r\n                                {loading ? <Loader/> : (\r\n                                <Fragment>\r\n                                    {products && products.map( product => (\r\n                                        <ProductDisplay key={product._id} product={product}/>\r\n                                    ))}\r\n                                </Fragment>\r\n                            )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {resPerPage < count && (\r\n                    <div className=\"d-flex justify-content-center mt-5\">\r\n                        <Pagination \r\n                            activePage={currentPage}\r\n                            itemsCountPerPage={resPerPage}\r\n                            totalItemsCount={productsCount}\r\n                            onChange={setCurrentPageNo}\r\n                            nextPageText={'Next'}\r\n                            prevPageText={'Prev'}\r\n                            firstPageText={'First'}\r\n                            lastPageText={'Last'}\r\n                            itemClass='page-item'\r\n                            linkClass='page-link'\r\n                        />\r\n                    </div>\r\n                )}\r\n            </Fragment>\r\n                \r\n    )\r\n}\r\n\r\nexport default ProductsEEE;\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\ProductsTE.js",["321"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport '../css/products.css'\r\nimport '../css/bootstrap.min.css'\r\nimport '../fonts/font-awesome.min.css'\r\nimport MetaData from './layout/MetaData'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getProducts, clearErrors } from '../actions/productActions'\r\nimport ProductDisplay from './product/ProductDisplay'\r\nimport Loader from './layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\nimport Pagination from 'react-js-pagination'\r\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\r\n\r\nconst ProductsTE = () => { \r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products);\r\n    const [category, setMainCategory] = useState('Test Equipment');\r\n    const [subcategory, setSubCategory] = useState('');\r\n\r\n    const te_subCategory = [\r\n        'Partial Discharge Detection',\r\n        'Battery Discharge Capacity Tester',\r\n        'Battery Impedance or Internal Resistance',\r\n        'Load Banks',\r\n        'Battery Test Monitor',\r\n        'Portable Direct Ground Fault Finder',\r\n        'Earth Tester or Clamp Type',\r\n        'Others'\r\n    ]\r\n    \r\n    useEffect(() => {\r\n        if(error){\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n        dispatch(getProducts(currentPage, category, subcategory));\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_FALSE\r\n        })\r\n    }, [dispatch, alert, error, currentPage, category, subcategory]);\r\n\r\n    function setCurrentPageNo(pageNumber) {\r\n        setCurrentPage(pageNumber);\r\n    }\r\n\r\n    let count = productsCount;\r\n    \r\n    if(category) {\r\n        count = filteredProductsCount\r\n    }\r\n\r\n    return (\r\n            <Fragment>\r\n                <MetaData title={`${category}`}/>\r\n                    <div class=\"container-fluid\">\r\n                        <div class=\"product-header-container\">\r\n                            <h1 class=\"text-center product-text\">Our Products</h1>\r\n                            <h3 class=\"text-center product-category\">{category}</h3>\r\n                            <ul class=\"product-categories\">\r\n                                {te_subCategory.map( category => (\r\n                                    <li\r\n                                        key={category}\r\n                                        onClick={() => {setCurrentPageNo(1); setSubCategory(category)}}\r\n                                        className={subcategory === category ? \"current-active\" : null}\r\n                                        >\r\n                                            <Link>{category}</Link>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                        <div class=\"container product-list-container\">\r\n                            <div class=\"list-products\">\r\n                                <div class=\"row product-container-row\">\r\n                                    {loading ? <Loader/> : (\r\n                                        <Fragment>\r\n                                            {products && products.map( product => (\r\n                                                <ProductDisplay key={product._id} product={product}/>\r\n                                            ))}\r\n                                        </Fragment>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {resPerPage < count && (\r\n                        <div className=\"d-flex justify-content-center mt-5\">\r\n                            <Pagination \r\n                                activePage={currentPage}\r\n                                itemsCountPerPage={resPerPage}\r\n                                totalItemsCount={productsCount}\r\n                                onChange={setCurrentPageNo}\r\n                                nextPageText={'Next'}\r\n                                prevPageText={'Prev'}\r\n                                firstPageText={'First'}\r\n                                lastPageText={'Last'}\r\n                                itemClass='page-item'\r\n                                linkClass='page-link'\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </Fragment>\r\n    )\r\n}\r\n\r\nexport default ProductsTE;\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\Contact.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\layout\\Loader.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\Services.js",["322","323"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport '../css/services.css'\r\nimport '../css/bootstrap.min.css'\r\nimport '../fonts/font-awesome.min.css'\r\nimport { useAlert } from 'react-alert'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getServices, clearErrors } from '../actions/websiteActions'\r\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\r\nimport { Link } from 'react-router-dom'\r\nimport MetaData from './layout/MetaData'\r\n\r\nconst Services = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { loading,\r\n            error,\r\n            it1_subtitle,\r\n            it2_subtitle,\r\n            etd1_subtitle,\r\n            etd2_subtitle,\r\n\r\n            it1_desc,\r\n            it2_desc,\r\n            etd1_desc,\r\n            etd2_desc,\r\n\r\n            it1_icon,\r\n            it2_icon,\r\n            etd1_icon,\r\n            etd2_icon,\r\n\r\n            it1_iconBg,\r\n            it2_iconBg,\r\n            etd1_iconBg,\r\n            etd2_iconBg\r\n        } = useSelector(state => state.services)\r\n\r\n    useEffect(() => {\r\n        dispatch(getServices())\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_FALSE\r\n        })\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n    }, [dispatch, alert, error]) //loop if homePage added as dependency\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Our Services'} />\r\n            <div class=\"container-fluid\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 contact-us-banner\">\r\n                        <h1 class=\"text-center\">Have some questions?</h1>\r\n                        <p class=\"text-center\">We are ready to help you.</p>\r\n                        <Link to='/contact-us'>\r\n                            <button class=\"btn btn-primary contact-us-button\" type=\"button\">\r\n                                    Contact Us\r\n                            </button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                        <div class=\"row second-level-row\">\r\n                            <div class=\"col-12\">\r\n                                <h1 style={{fontSize: '3rem', fontWeight: 'bold', paddingBottom: '30px'}}>OUR SERVICES</h1>\r\n                            </div>\r\n                            <div class=\"col-12 title-section\">\r\n                                <h2>Information Technology</h2>\r\n                            </div>\r\n                            <div class=\"col-md-6 item-card\">\r\n                                <p>\r\n                                    <span className=\"fa-stack fa-4x\">\r\n                                        <i className={`fa fa-circle fa-stack-2x text-${it1_iconBg}`}></i>\r\n                                        <i className={`fa fa-${it1_icon} fa-stack-1x fa-inverse`}></i>\r\n                                    </span>\r\n                                </p>\r\n                                <h4>{it1_subtitle}</h4>\r\n                                <p className=\"description\">{it1_desc}</p>\r\n                            </div>\r\n                            <div class=\"col-md-6 item-card\">\r\n                                <p>\r\n                                    <span className=\"fa-stack fa-4x\">\r\n                                        <i className={`fa fa-circle fa-stack-2x text-${it2_iconBg}`}></i>\r\n                                        <i className={`fa fa-${it2_icon} fa-stack-1x fa-inverse`}></i>\r\n                                    </span>\r\n                                </p>\r\n                                <h4>{it2_subtitle}</h4>\r\n                                <p className=\"description\">{it2_desc}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                        <div class=\"row second-level-row\">\r\n                            <div class=\"col-12 title-section\">\r\n                                <h2>Engineering and Technical Services</h2>\r\n                            </div>\r\n                            <div class=\"col-md-6 item-card\">\r\n                                <p>\r\n                                    <span className=\"fa-stack fa-4x\">\r\n                                        <i className={`fa fa-circle fa-stack-2x text-${etd1_iconBg}`}></i>\r\n                                        <i className={`fa fa-${etd1_icon} fa-stack-1x fa-inverse`}></i>\r\n                                    </span>\r\n                                </p>\r\n                                <h4>{etd1_subtitle}</h4>\r\n                                <p className=\"description\">{etd1_desc}</p>\r\n                            </div>\r\n                            <div class=\"col-md-6 item-card\">\r\n                                <p>\r\n                                    <span className=\"fa-stack fa-4x\">\r\n                                        <i className={`fa fa-circle fa-stack-2x text-${etd2_iconBg}`}></i>\r\n                                        <i className={`fa fa-${etd2_icon} fa-stack-1x fa-inverse`}></i>\r\n                                    </span>\r\n                                </p>\r\n                                <h4>{etd2_subtitle}</h4>\r\n                                <p className=\"description\">{etd2_desc}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Services\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateFooter.js",["324","325","326","327"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateFooter, getFooterDetails, clearErrors } from '../../actions/websiteActions'\r\nimport { UPDATE_FOOTER_RESET } from '../../constants/websiteConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst UpdateFooter = ({history}) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const [footerTitle, setFooterTitle] = useState('')\r\n    const [footerDescription, setFooterDescription] = useState('')\r\n    const [addressInfo, setAddressInfo] = useState('')\r\n    const [phoneInfo, setPhoneInfo] = useState('')\r\n    const [cellphoneInfo, setCellphoneInfo] = useState('')\r\n    const [emailInfo, setEmailInfo] = useState('')\r\n\r\n    const { error, footerInfo } = useSelector(state => state.footerDetails)\r\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.website);\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    useEffect(() => {\r\n        if(footerInfo){\r\n            setFooterTitle(footerInfo.footerTitle)\r\n            setFooterDescription(footerInfo.footerDescription)\r\n            setAddressInfo(footerInfo.addressInfo)\r\n            setPhoneInfo(footerInfo.phoneInfo)\r\n            setCellphoneInfo(footerInfo.cellphoneInfo)\r\n            setEmailInfo(footerInfo.emailInfo)\r\n        } \r\n\r\n        if(error){\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(updateError){\r\n            alert.error(updateError);\r\n            dispatch(clearErrors());\r\n        }\r\n        \r\n        if(isUpdated) {\r\n            history.push('/admin/footer');\r\n            alert.success('Footer updated successfully.')\r\n\r\n            dispatch({\r\n                type: UPDATE_FOOTER_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, history, updateError, isUpdated])\r\n    \r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('footerTitle', footerTitle);\r\n        formData.set('footerDescription', footerDescription);\r\n        formData.set('addressInfo', addressInfo);\r\n        formData.set('phoneInfo', phoneInfo);\r\n        formData.set('cellphoneInfo', cellphoneInfo);\r\n        formData.set('emailInfo', emailInfo);\r\n\r\n        dispatch(updateFooter(formData));\r\n    }\r\n\r\n    return (<Fragment>\r\n        <MetaData title={'Update Footer'}/>\r\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\r\n                <div id=\"sidebar-wrapper\" >\r\n                    <ul className=\"sidebar-nav\">\r\n                                <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                                <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                                <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                                <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                                {user && user.role !== 'admin' ? (\r\n                                        <Fragment>\r\n                                            <hr/>\r\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\r\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\r\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\r\n                                        </Fragment>\r\n                                    ) : (\r\n                                        <Fragment>\r\n                                            <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                            <hr/>\r\n                                            <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                            <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                            <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                            <hr/>\r\n                                            <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                            <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                        </Fragment>\r\n                                    )\r\n                                }\r\n                                <hr/>\r\n                                <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                            </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} >\r\n                            <i className=\"fa fa-bars\"   ></i>\r\n                        </a>\r\n                    <Fragment>\r\n                        <div className=\"login-clean\">\r\n                            \r\n                            <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data'   >\r\n                                <h2 className=\"sr-only\">Update Footer</h2>\r\n                                <div className=\"div-forgot-password\">\r\n                                    <h3 className=\"forgot-password-heading\">Update Footer</h3>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Footer Title</h6>\r\n                                    <textarea \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"footerTitle\"\r\n                                        value={footerTitle}\r\n                                        placeholder=\"Title\"\r\n                                        style={{width: '100%'}}\r\n                                        onChange={(e) => setFooterTitle(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Footer Description</h6>\r\n                                    <textarea\r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"footerDescription\"\r\n                                        value={footerDescription}\r\n                                        placeholder=\"Description\"\r\n                                        style={{width: '100%', height: '250px'}}\r\n                                        onChange={(e) => setFooterDescription(e.target.value)}\r\n                                        height='55px'\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Address Info</h6>\r\n                                    <textarea \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"addressInfo\"\r\n                                        value={addressInfo}\r\n                                        placeholder=\"Address\"\r\n                                        style={{width: '100%', height: '150px'}}\r\n                                        onChange={(e) => setAddressInfo(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Phone Info</h6>\r\n                                    <textarea \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"phoneInfo\"\r\n                                        value={phoneInfo}\r\n                                        placeholder=\"Phone Number\"\r\n                                        style={{width: '100%'}}\r\n                                        onChange={(e) => setPhoneInfo(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Cellphone Info</h6>\r\n                                    <textarea \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"cellphoneInfo\"\r\n                                        value={cellphoneInfo}\r\n                                        placeholder=\"Cellphone Number\"\r\n                                        style={{width: '100%'}}\r\n                                        onChange={(e) => setCellphoneInfo(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Email Info</h6>\r\n                                    <textarea \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"emailInfo\"\r\n                                        value={emailInfo}\r\n                                        placeholder=\"Email\"\r\n                                        style={{width: '100%'}}\r\n                                        onChange={(e) => setEmailInfo(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                        <button \r\n                                        className=\"btn btn-primary btn-block\" \r\n                                        type=\"submit\"\r\n                                    >\r\n                                        Update Footer\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <Link to='/admin/footer'>\r\n                                        <button\r\n                                            className=\"btn btn-secondary btn-block\"\r\n                                        >Discard</button>\r\n                                    </Link>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateFooter","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\ConfirmationPage.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateAbout.js",["328","329"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateAbout, getSingleAbout, clearErrors } from '../../actions/websiteActions'\r\nimport { UPDATE_ABOUT_RESET } from '../../constants/websiteConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst UpdateAbout = ({ match, history }) => {\r\n\r\n    const [title, setTitle] = useState('')\r\n    const [description, setDescription] = useState('')\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { error, about } = useSelector(state => state.aboutDetails)\r\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.website);\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const aboutId = match.params.id\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n    \r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(about && about._id !== aboutId) {\r\n            dispatch(getSingleAbout(aboutId))\r\n        }\r\n        else { \r\n            setTitle(about.title)\r\n            setDescription(about.description)\r\n        }\r\n\r\n        if(error){\r\n            history.push('/admin/about');\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(updateError){\r\n            history.push('/admin/about');\r\n            alert.error(updateError);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(isUpdated) {\r\n            history.push('/admin/about');\r\n            alert.success('Information updated successfully.')\r\n\r\n            dispatch({\r\n                type: UPDATE_ABOUT_RESET\r\n            })\r\n        }\r\n        \r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, error, alert, isUpdated, updateError, about, aboutId, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('title', title);\r\n        formData.set('description', description);\r\n\r\n        dispatch(updateAbout(about._id, formData));\r\n    }\r\n\r\n\r\n    return (<Fragment>\r\n        <MetaData title={'Update About'}/>\r\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\r\n            <div id=\"sidebar-wrapper\" >\r\n                    <ul className=\"sidebar-nav\">\r\n                                <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                                <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                                <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                                <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                                {user && user.role !== 'admin' ? (\r\n                                        <Fragment>\r\n                                            <hr/>\r\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\r\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\r\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\r\n                                        </Fragment>\r\n                                    ) : (\r\n                                        <Fragment>\r\n                                            <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                            <hr/>\r\n                                            <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                            <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                            <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                            <hr/>\r\n                                            <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                            <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                        </Fragment>\r\n                                    )\r\n                                }\r\n                                <hr/>\r\n                                <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                            </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} >\r\n                            <i className=\"fa fa-bars\" ></i>\r\n                        </a>\r\n                    <Fragment>\r\n                        <div className=\"login-clean\">\r\n                            <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data'   >\r\n                                <h2 className=\"sr-only\">Update About: \"{about.title}\"</h2>\r\n                                <div className=\"div-forgot-password\">\r\n                                    <h3 className=\"forgot-password-heading\">Update About \"{about.title}\"</h3>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Name</h6>\r\n                                    <textarea \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"title\"\r\n                                        value={title}\r\n                                        placeholder=\"Title\"\r\n                                        style={{width: '100%'}}\r\n                                        onChange={(e) => setTitle(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Description</h6>\r\n                                    <textarea\r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"description\"\r\n                                        value={description}\r\n                                        placeholder=\"Description\"\r\n                                        style={{width: '100%', height: '250px'}}\r\n                                        onChange={(e) => setDescription(e.target.value)}\r\n                                        height='55px'\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                        <button \r\n                                        className=\"btn btn-primary btn-block\" \r\n                                        type=\"submit\"\r\n                                    >\r\n                                        Update Information\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <Link to='/admin/about'>\r\n                                        <button\r\n                                            className=\"btn btn-secondary btn-block\"\r\n                                        >Discard</button>\r\n                                    </Link>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    </Fragment>\r\n)\r\n}\r\n\r\nexport default UpdateAbout\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\EmailSent.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateHome.js",["330","331","332"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from  'react-redux'\r\nimport { updateHome, getHomeDetails, clearErrors } from '../../actions/websiteActions'\r\nimport { UPDATE_HOME_RESET } from '../../constants/websiteConstants'\r\n\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { logout } from '../../actions/userActions'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\n\r\nconst UpdateHome = ({ match, history }) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [image, setImage] = useState('');\r\n    const [imagePreview, setImagePreview] = useState('images/default_avatar.png');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, home } = useSelector(state => state.homeDetails);\r\n    const { error: updateError, isUpdated, loading } = useSelector(state => state.website);\r\n    const { user } = useSelector(state => state.auth)\r\n    \r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    const homeId = match.params.id\r\n\r\n    useEffect(() => {\r\n        if(home && home._id !== homeId) {\r\n            dispatch(getHomeDetails(homeId))\r\n        }\r\n        else {\r\n            setName(home.name);\r\n            setDescription(home.description);\r\n            setImagePreview(home.image.url);\r\n        }\r\n\r\n        if(error){\r\n            history.push('/admin/home')\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n\r\n        }\r\n        \r\n        if(updateError){\r\n            history.push('/admin/home')\r\n            alert.error(updateError);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(isUpdated){\r\n            alert.success('Home updated successfully');\r\n\r\n            history.push('/admin/home')\r\n\r\n            dispatch({\r\n                type: UPDATE_HOME_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n\r\n    }, [dispatch, alert, error, history, home, homeId, isUpdated, updateError])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('description', description);\r\n        formData.set('image', image);\r\n\r\n        dispatch(updateHome(home._id, formData));\r\n    }\r\n\r\n    const onChange = e => {\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = () => {\r\n            if(reader.readyState === 2){\r\n                setImagePreview(reader.result)\r\n                setImage(reader.result)\r\n            }\r\n        }\r\n\r\n        reader.readAsDataURL(e.target.files[0])\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Update Home'}/>\r\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}>\r\n            <div id=\"sidebar-wrapper\">\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <hr/>\r\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\r\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\r\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )\r\n                        }\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} >\r\n                            <i className=\"fa fa-bars\"   ></i>\r\n                        </a>\r\n                        <div className=\"login-clean\">\r\n                            <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data' >\r\n                                <h2 className=\"sr-only\">Update Home</h2>\r\n                                <div className=\"div-forgot-password\">\r\n                                    <h3 className=\"forgot-password-heading\">Update Home </h3>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <h6>Name</h6>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        id=\"name\" \r\n                                        name=\"name\" \r\n                                        value={name}\r\n                                        disabled={true}\r\n                                        style={{backgroundColor: '#F5F5F5', color: 'gray'}}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <h6>Description</h6>\r\n                                    <textarea \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        id=\"description\" \r\n                                        name=\"description\" \r\n                                        placeholder=\"Description\"\r\n                                        value={description}\r\n                                        disabled={String(home.name).includes('Description') ? false : true}\r\n                                        style={String(home.name).includes('Description') ? {width: '100%', height: '150px'} : {backgroundColor: '#F5F5F5', color: 'gray', width: '100%', height: '150px'}}\r\n                                        onChange={(e) => setDescription(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Image</h6>\r\n                                    <figure>\r\n                                        <img \r\n                                            src={imagePreview} \r\n                                            className='mt-3 mr-2' \r\n                                            width='110' \r\n                                            height='104'\r\n                                        />\r\n                                    </figure>\r\n                                    <input \r\n                                        type=\"file\" \r\n                                        id=\"image\" \r\n                                        name=\"image\" \r\n                                        accept=\"images/*\"\r\n                                        disabled={String(home.name).includes('Description') ? true : false} \r\n                                        onChange={onChange}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <button \r\n                                        className=\"btn btn-primary btn-block\" \r\n                                        type=\"submit\"\r\n                                    >\r\n                                        Update Home\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <Link to='/admin/home'>\r\n                                        <button\r\n                                            className=\"btn btn-secondary btn-block\"\r\n                                        >Discard</button>\r\n                                    </Link>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateHome\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\layout\\Footer.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\product\\ProductDetails.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdatePassword.js",["333","334","335","336"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from  'react-redux'\r\nimport '../../css/bootstrap.min.css'\r\nimport '../../css/dashboard.css'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport { updatePassword, clearErrors } from './../../actions/userActions'\r\nimport { UPDATE_PASSWORD_RESET } from '../../constants/userConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst UpdatePassword = ( { history }) => {\r\n    \r\n    const [oldPassword, setOldPassword] = useState('');\r\n    const [newPassword, setNewPassword] = useState('');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, isUpdated, loading } = useSelector(state => state.user);\r\n    const [isToggled, setToggled] = useState('false')\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n     \r\n    const [showOld, setOld] = useState('false')\r\n\r\n    const showOldToggle = () => {\r\n        setOld(!showOld)\r\n    }\r\n\r\n    const [showNew, setNew] = useState('false')\r\n\r\n    const showNewToggle = () => {\r\n        setNew(!showNew)\r\n    }\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n    \r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n    \r\n    useEffect(() => {\r\n\r\n        if(error){\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(isUpdated){\r\n            history.push('/admin/me');\r\n            alert.success('Password updated successfully.');\r\n\r\n            dispatch({\r\n                type: UPDATE_PASSWORD_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n\r\n    }, [dispatch, alert, error, history, isUpdated])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('oldPassword', oldPassword);\r\n        formData.set('newPassword', newPassword);\r\n\r\n        dispatch(updatePassword(formData));\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Change Password'}/>\r\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\r\n                <div id=\"sidebar-wrapper\" >\r\n                    <ul className=\"sidebar-nav\">\r\n                                <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                                <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                                <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                                <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                                {user && user.role !== 'admin' ? (\r\n                                        <Fragment>\r\n                                            <hr/>\r\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\r\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\r\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\r\n                                        </Fragment>\r\n                                    ) : (\r\n                                        <Fragment>\r\n                                            <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                            <hr/>\r\n                                            <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                            <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                            <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                            <hr/>\r\n                                            <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                            <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                        </Fragment>\r\n                                    )\r\n                                }\r\n                                <hr/>\r\n                                <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                            </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} >\r\n                            <i className=\"fa fa-bars\"   ></i>\r\n                        </a>\r\n                        <div className=\"login-clean\" style={{paddingTop: '65px'}}>\r\n                            <form method=\"post\" onSubmit={submitHandler}>\r\n                                <h2 className=\"sr-only\">Change Password</h2>\r\n                                <div className=\"div-forgot-password\">\r\n                                    <h3 className=\"forgot-password-heading\">Change Password</h3>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Old Password</h6>\r\n                                    <div class=\"input-group mb-3\">\r\n                                        <input \r\n                                            type={showOld ? \"password\" : \"text\"} \r\n                                            className=\"form-control\" \r\n                                            name=\"oldPassword\"\r\n                                            value={oldPassword}\r\n                                            placeholder=\"Old Password\"\r\n                                            onChange={(e) => setOldPassword(e.target.value)}\r\n                                            aria-label=\"oldpassword\" aria-describedby=\"basic-addon1\"\r\n                                        />\r\n                                        <div class=\"input-group-prepend\">\r\n                                            <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                                <a\r\n                                                    onClick={showOldToggle}\r\n                                                    style={{cursor: 'pointer'}}\r\n                                                >\r\n                                                    <span className=\"fa-lg\">\r\n                                                        <i className={showOld ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\r\n                                                    </span>\r\n                                                </a>\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>New Password</h6>\r\n                                    <div class=\"input-group mb-3\">\r\n                                        <input\r\n                                            type={showNew ? \"password\" : \"text\"} \r\n                                            className=\"form-control\"\r\n                                            name=\"newPassword\"\r\n                                            value={newPassword}\r\n                                            placeholder=\"New Password\"\r\n                                            onChange={(e) => setNewPassword(e.target.value)}\r\n                                            aria-label=\"newpassword\" aria-describedby=\"basic-addon1\"\r\n                                        />\r\n                                        <div class=\"input-group-prepend\">\r\n                                            <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                                <a\r\n                                                    onClick={showNewToggle}\r\n                                                    style={{cursor: 'pointer'}}\r\n                                                >\r\n                                                    <span className=\"fa-lg\">\r\n                                                        <i className={showNew ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\r\n                                                    </span>\r\n                                                </a>\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <button\r\n                                        className=\"btn btn-primary btn-block\"\r\n                                        type=\"submit\"\r\n                                    >Update Password</button>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <Link to='/admin/me'>\r\n                                        <button\r\n                                            className=\"btn btn-secondary btn-block\"\r\n                                        >Discard</button>\r\n                                    </Link>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdatePassword\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListAbout.js",["337"],"import React, { Fragment, useEffect , useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTableV5 } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport '../../css/dashboard.css'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getAboutDetails, clearErrors } from '../../actions/websiteActions'\r\nimport { UPDATE_ABOUT_RESET } from '../../constants/websiteConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst ListAbout = ({history}) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, abouts } = useSelector(state => state.abouts)\r\n    const { isUpdated } = useSelector(state => state.website)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getAboutDetails());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n        \r\n        if(isUpdated){\r\n            alert.success('About Us information has been updated successfully.');\r\n            history.push('/admin/about')\r\n\r\n            dispatch({\r\n                type: UPDATE_ABOUT_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, isUpdated, history])\r\n\r\n    const setAboutData = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Title',\r\n                    field: 'title',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Description',\r\n                    field: 'description',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                    sort: 'asc'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         abouts.forEach(about => {\r\n            data.rows.push({\r\n                title: about.title,\r\n                description: about.description,\r\n                actions:\r\n                <Fragment>\r\n                    <div style={{display: 'flex'}}>\r\n                        <Link to={`/admin/about/${about._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                            <i className='fa fa-pencil'></i>\r\n                        </Link>\r\n                    </div>\r\n                </Fragment>\r\n             })\r\n         })\r\n\r\n         return data\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'All About Us'}/>\r\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\r\n                <div id=\"sidebar-wrapper\" >\r\n                    <ul className=\"sidebar-nav\">\r\n                                <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                                <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                                <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                                <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                                {user && user.role !== 'admin' ? (\r\n                                        <Fragment>\r\n                                            <hr/>\r\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\r\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\r\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\r\n                                        </Fragment>\r\n                                    ) : (\r\n                                        <Fragment>\r\n                                            <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                            <hr/>\r\n                                            <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                            <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                            <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                            <hr/>\r\n                                            <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                            <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                        </Fragment>\r\n                                    )\r\n                                }\r\n                                <hr/>\r\n                                <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                            </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\r\n                            <i className=\"fa fa-bars\"   ></i>\r\n                        </a>\r\n                        <Fragment>\r\n                        <div style={{padding: '30px'}}>\r\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Update About Us</h1>\r\n                            {loading ? <Loader/> : (\r\n                                <MDBDataTableV5\r\n                                    data={setAboutData()}\r\n                                    paging={false}\r\n                                    searching={false}\r\n                                    searchTop\r\n                                    scrollX\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListAbout\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListTrash.js",["338","339","340","341"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTableV5 } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { deleteInquiry, updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\r\nimport { DELETE_INQUIRY_RESET, UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst ListTrash = ( { history} ) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\r\n    const { deleteError, isUpdated, isDeleted } = useSelector(state => state.inquiry)\r\n\r\n    let deleteAll = false\r\n\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(listInquiry());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n        \r\n        if(deleteError){\r\n            alert.error(deleteError)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(isUpdated){\r\n            alert.success('Inquiry has been updated successfully.');\r\n            history.push('/admin/trash')\r\n\r\n            dispatch({\r\n                type: UPDATE_INQUIRY_RESET\r\n            })\r\n        }\r\n\r\n        if(isDeleted && deleteAll){\r\n            alert.success('Inquiry has been deleted successfully.');\r\n            history.push('/admin/trash')\r\n\r\n            dispatch({\r\n                type: DELETE_INQUIRY_RESET\r\n            })\r\n        }\r\n        \r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, history, isDeleted, isUpdated, deleteError])\r\n\r\n    let len = 0;\r\n\r\n    const setInquiries = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Date / Time',\r\n                    field: 'createdAt',\r\n                    sort: 'desc'\r\n                },\r\n                {\r\n                    label: 'Last Name',\r\n                    field: 'lastName'\r\n                },\r\n                {\r\n                    label: 'First Name',\r\n                    field: 'firstName'\r\n                },\r\n                {\r\n                    label: 'Company Name',\r\n                    field: 'companyName'\r\n                },\r\n                \r\n                {\r\n                    label: 'Concern Type',\r\n                    field: 'concernType'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         inquiries.forEach(inquiry => {\r\n             if(inquiry.inquiryStatus==='Deleted'){\r\n                len += 1\r\n                data.rows.push({\r\n                    createdAt: inquiry.createdAt,\r\n                    firstName: inquiry.firstName,\r\n                    lastName: inquiry.lastName,\r\n                    companyName: inquiry.companyName,\r\n                    concernType: String(inquiry.concernType),\r\n                    actions:\r\n                    <Fragment>\r\n                        <div style={{display: 'flex'}}>\r\n                            <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                                <i className='fa fa-eye'></i>\r\n                            </Link>\r\n                            <button className=\"btn btn-secondary py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Resolved\")}>\r\n                                <i className='fa fa-undo'></i>\r\n                            </button>\r\n                            <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteInquiryHandler(inquiry._id)}>\r\n                                <i className='fa fa-trash'></i>\r\n                            </button>\r\n                        </div>\r\n                    </Fragment>\r\n                 })\r\n             }\r\n         })\r\n\r\n         return data\r\n    }\r\n\r\n    const updateInquiryHandler = (id, inquiryStatus) => { \r\n        const formData = new FormData();\r\n        formData.set('inquiryStatus', inquiryStatus);\r\n\r\n        dispatch(updateInquiry(id, formData));\r\n    }\r\n\r\n    const deleteInquiryHandler = (id) => {\r\n        if(window.confirm(\"Are you sure you want to delete this message? This cannot be undone.\")){\r\n            dispatch(deleteInquiry(id))\r\n        }\r\n    }\r\n\r\n    const emptyTrash = () => {\r\n        if(window.confirm(\"Are you sure you want to delete ALL messages? This cannot be undone.\")){\r\n            deleteAll = true \r\n\r\n            let deletedInquiryCount = 0\r\n\r\n            inquiries.forEach(inquiry => {\r\n\r\n                if(inquiry.inquiryStatus === 'Deleted') {\r\n                    deletedInquiryCount += 1\r\n                    dispatch(deleteInquiry(inquiry._id))\r\n                    deletedInquiryCount -= 1\r\n                }\r\n            })\r\n\r\n            if(deletedInquiryCount == 0){\r\n                alert.success('Trash has been emptied.'); //this is working\r\n            }\r\n        }   \r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Trash'}/>\r\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\r\n                <div id=\"sidebar-wrapper\" >\r\n                    <ul className=\"sidebar-nav\">\r\n                                <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                                <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                                <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                                <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                                {user && user.role !== 'admin' ? (\r\n                                        <Fragment>\r\n                                            <hr/>\r\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\r\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\r\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\r\n                                        </Fragment>\r\n                                    ) : (\r\n                                        <Fragment>\r\n                                            <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                            <hr/>\r\n                                            <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                            <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                            <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                            <hr/>\r\n                                            <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                            <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                        </Fragment>\r\n                                    )\r\n                                }\r\n                                <hr/>\r\n                                <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                            </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\r\n                            <i className=\"fa fa-bars\"   ></i>\r\n                        </a>\r\n                        <Fragment>\r\n                        <div style={{padding: '30px'}}>\r\n                            <div style={{display: 'flex'}}>\r\n                                <div style={{marginRight: 'auto'}}>\r\n                                    <h1 className='mt-3 mb-3 ml-10 mr-10'>Trash</h1>\r\n                                </div>\r\n                                <div style={{marginLeft: 'auto', marginTop: '30px'}}>\r\n                                    <Link>\r\n                                        <button className='btn btn-dark btn-sm text-capitalize mb-5' onClick={emptyTrash}>\r\n                                            Empty Trash\r\n                                        </button>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                            {loading? <Loader/> : (\r\n                                <MDBDataTableV5\r\n                                    data={setInquiries()}\r\n                                    entries={5}\r\n                                    entriesOptions={[5, 10, 15, 20]}\r\n                                    searchTop\r\n                                    scrollX\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListTrash","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListOthers.js",["342","343"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTableV5 } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\r\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst ListOrders = ({history}) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\r\n    const { isUpdated } = useSelector(state => state.inquiry)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(listInquiry());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(isUpdated){\r\n            alert.success('Inquiry has been moved to trash successfully.');\r\n            history.push('/admin/others')\r\n\r\n            dispatch({\r\n                type: UPDATE_INQUIRY_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, isUpdated, history])\r\n\r\n    const updateInquiryHandler = (id, inquiryStatus) => { \r\n        if(window.confirm(\"Are you sure you want to delete this? This message will be moved to Trash.\")){\r\n            const formData = new FormData();\r\n            formData.set('inquiryStatus', inquiryStatus);\r\n    \r\n            dispatch(updateInquiry(id, formData));\r\n        }\r\n    }\r\n    \r\n    let len = 0;\r\n\r\n    const setInquiries = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Date / Time',\r\n                    field: 'createdAt',\r\n                    sort: 'desc'\r\n                },\r\n                {\r\n                    label: 'Last Name',\r\n                    field: 'lastName'\r\n                },\r\n                {\r\n                    label: 'First Name',\r\n                    field: 'firstName'\r\n                },\r\n                {\r\n                    label: 'Company Name',\r\n                    field: 'companyName'\r\n                },\r\n                \r\n                {\r\n                    label: 'Status',\r\n                    field: 'inquiryStatus'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         inquiries.forEach(inquiry => {\r\n             if(inquiry.concernType==='Others'  && (inquiry.inquiryStatus !== \"Deleted\" && inquiry.inquiryStatus !== \"Resolved\")){\r\n                len += 1\r\n                data.rows.push({\r\n                    createdAt: inquiry.createdAt,\r\n                    firstName: inquiry.firstName,\r\n                    lastName: inquiry.lastName,\r\n                    companyName: inquiry.companyName,\r\n                    inquiryStatus: inquiry.inquiryStatus && (String(inquiry.inquiryStatus).includes('Processing') || String(inquiry.inquiryStatus).includes('Resolved'))\r\n                        ? <p style={{ color: 'green' }}>{inquiry.inquiryStatus}</p>\r\n                        :  <p style={{ color: 'red' }}>{inquiry.inquiryStatus}</p>,\r\n                    actions:\r\n                    <Fragment>\r\n                        <div style={{display: 'flex'}}>\r\n                            <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                                <i className='fa fa-eye'></i>\r\n                            </Link>\r\n                            <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Deleted\")}>\r\n                                <i className='fa fa-trash'></i>\r\n                            </button>\r\n                        </div>\r\n                    </Fragment>\r\n                 })\r\n             }\r\n         }) \r\n         return data\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Others'}/>\r\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\r\n                <div id=\"sidebar-wrapper\" >\r\n                    <ul className=\"sidebar-nav\">\r\n                                <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                                <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                                <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                                <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                                {user && user.role !== 'admin' ? (\r\n                                        <Fragment>\r\n                                            <hr/>\r\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\r\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\r\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\r\n                                        </Fragment>\r\n                                    ) : (\r\n                                        <Fragment>\r\n                                            <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                            <hr/>\r\n                                            <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                            <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                            <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                            <hr/>\r\n                                            <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                            <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                        </Fragment>\r\n                                    )\r\n                                }\r\n                                <hr/>\r\n                                <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                            </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\r\n                            <i className=\"fa fa-bars\"   ></i>\r\n                        </a>\r\n                        <Fragment>\r\n                        <div style={{padding: '30px'}}>\r\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Inbox - Others</h1>\r\n                            {loading? <Loader/> : (\r\n                                <MDBDataTableV5\r\n                                    data={setInquiries()}\r\n                                    entries={5}\r\n                                    entriesOptions={[5, 10, 15, 20]}\r\n                                    searchTop\r\n                                    scrollX\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListOrders","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListArchives.js",["344","345"],"import React, { Fragment, useEffect , useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTableV5 } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport '../../css/dashboard.css'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\r\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst ListArchives = ({history}) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\r\n    const { isUpdated } = useSelector(state => state.inquiry)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(listInquiry());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n        \r\n        if(isUpdated){\r\n            alert.success('Inquiry status has been updated successfully.');\r\n            history.push('/admin/archives')\r\n\r\n            dispatch({\r\n                type: UPDATE_INQUIRY_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, isUpdated, history])\r\n\r\n    const updateInquiryHandler = (id, inquiryStatus) => { \r\n        const formData = new FormData();\r\n        formData.set('inquiryStatus', inquiryStatus);\r\n\r\n        dispatch(updateInquiry(id, formData));\r\n    }\r\n\r\n    let len = 0;\r\n\r\n    const setInquiries = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Date / Time',\r\n                    field: 'createdAt',\r\n                    sort: 'desc'\r\n                },\r\n                {\r\n                    label: 'Last Name',\r\n                    field: 'lastName'\r\n                },\r\n                {\r\n                    label: 'First Name',\r\n                    field: 'firstName'\r\n                },\r\n                {\r\n                    label: 'Company Name',\r\n                    field: 'companyName'\r\n                },\r\n                \r\n                {\r\n                    label: 'Concern Type',\r\n                    field: 'concernType'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         inquiries.forEach(inquiry => {\r\n             if(inquiry.inquiryStatus==='Resolved'){\r\n                len += 1\r\n                data.rows.push({\r\n                    createdAt: inquiry.createdAt,\r\n                    firstName: inquiry.firstName,\r\n                    lastName: inquiry.lastName,\r\n                    companyName: inquiry.companyName,\r\n                    concernType: String(inquiry.concernType),\r\n                    actions:\r\n                    <Fragment>\r\n                        <div style={{display: 'flex'}}>\r\n                            <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                                <i className='fa fa-eye'></i>\r\n                            </Link>\r\n                            <button className=\"btn btn-secondary py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Unresolved\")}>\r\n                                <i className='fa fa-undo'></i>\r\n                            </button>\r\n                            <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Deleted\")}>\r\n                                <i className='fa fa-trash'></i>\r\n                            </button>\r\n                        </div>\r\n                    </Fragment>\r\n                 })\r\n             }\r\n         })\r\n\r\n         return data\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Archives'}/>\r\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\r\n                <div id=\"sidebar-wrapper\" >\r\n                    <ul className=\"sidebar-nav\">\r\n                                <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                                <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                                <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                                <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                                {user && user.role !== 'admin' ? (\r\n                                        <Fragment>\r\n                                            <hr/>\r\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\r\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\r\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\r\n                                        </Fragment>\r\n                                    ) : (\r\n                                        <Fragment>\r\n                                            <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                            <hr/>\r\n                                            <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                            <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                            <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                            <hr/>\r\n                                            <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                            <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                        </Fragment>\r\n                                    )\r\n                                }\r\n                                <hr/>\r\n                                <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                            </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\r\n                            <i className=\"fa fa-bars\"   ></i>\r\n                        </a>\r\n                        <Fragment>\r\n                            <div style={{padding: '30px'}}>\r\n                                <h1 className='mt-3 mb-3 ml-10 mr-10'>Archives</h1>\r\n                                {loading? <Loader/> : (\r\n                                    <MDBDataTableV5\r\n                                        data={setInquiries()}\r\n                                        entries={5}\r\n                                        entriesOptions={[5, 10, 15, 20]}\r\n                                        searchTop\r\n                                        scrollX\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListArchives","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ProductsList.js",["346","347"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTableV5 } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport '../../css/dashboard.css'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getAdminProducts, deleteProduct, clearErrors } from '../../actions/productActions'\r\nimport { DELETE_PRODUCT_RESET } from '../../constants/productConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\n\r\nconst ProductsList = ( {history} ) => {\r\n    \r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, products } = useSelector(state => state.products)\r\n    const { deleteError, isDeleted } = useSelector(state => state.product)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getAdminProducts());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(deleteError){\r\n            alert.error(deleteError)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(isDeleted){\r\n            alert.success('Product has been deleted successfully.');\r\n            history.push('/admin/products')\r\n\r\n            dispatch({\r\n                type: DELETE_PRODUCT_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, history, isDeleted, deleteError])\r\n\r\n    let len = 0;\r\n\r\n    const setProducts = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Product Name',\r\n                    field: 'name',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Description',\r\n                    field: 'description',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Main Category',\r\n                    field: 'category',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Sub Category',\r\n                    field: 'subcategory',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         products.forEach(product => {\r\n            len += 1\r\n             data.rows.push({\r\n                name: product.name,\r\n                description: product.description,\r\n                category: product.category,\r\n                subcategory: product.subcategory,\r\n                actions:\r\n                <Fragment>\r\n                    <div style={{display: 'flex'}}>\r\n                        <Link to={`/admin/product/${product._id}`} className='btn btn-primary py-1 px-2'>\r\n                            <i className='fa fa-pencil'></i>\r\n                        </Link>\r\n                        <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteProductHandler(product._id)}>\r\n                            <i className='fa fa-trash'></i>\r\n                        </button>\r\n                    </div>\r\n                </Fragment>\r\n             })\r\n         })\r\n         return data\r\n    }\r\n\r\n    const deleteProductHandler = (id) => {\r\n        if(window.confirm('Are you sure you want to delete the product? This cannot be undone.')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'All Products'}/>\r\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\r\n            <div id=\"sidebar-wrapper\" >\r\n                    <ul className=\"sidebar-nav\">\r\n                                <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                                <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                                <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                                <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                                {user && user.role !== 'admin' ? (\r\n                                        <Fragment>\r\n                                            <hr/>\r\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\r\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\r\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\r\n                                        </Fragment>\r\n                                    ) : (\r\n                                        <Fragment>\r\n                                            <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                            <hr/>\r\n                                            <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                            <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                            <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                            <hr/>\r\n                                            <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                            <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                        </Fragment>\r\n                                    )\r\n                                }\r\n                                <hr/>\r\n                                <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                            </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\r\n                            <i className=\"fa fa-bars\"   ></i>\r\n                        </a>\r\n                        <Fragment>\r\n                            <div style={{padding: '30px'}}>\r\n                                <div style={{display: 'flex'}}>\r\n                                    <div style={{marginRight: 'auto'}}>\r\n                                        <h1 className='mt-3 mb-3 ml-10 mr-10'>All Products</h1>\r\n                                    </div>\r\n                                    <div style={{marginLeft: 'auto', marginTop: '30px'}}>\r\n                                        <Link to='/admin/newProduct'>\r\n                                            <button className='btn btn-dark btn-sm text-capitalize mb-5'>\r\n                                                Add New Product\r\n                                            </button>\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n                                {loading ? <Loader/> : (\r\n                                    <MDBDataTableV5\r\n                                        data={setProducts()}\r\n                                        entries={5}\r\n                                        entriesOptions={[5, 10, 15, 20]}\r\n                                        searchTop\r\n                                        scrollX\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ProductsList\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListServices.js",["348"],"import React, { Fragment, useEffect , useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTableV5 } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport '../../css/dashboard.css'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getServices, clearErrors } from '../../actions/websiteActions'\r\nimport { UPDATE_SERVICES_RESET } from '../../constants/websiteConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst ListServices = ({history}) => {\r\n    \r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, services } = useSelector(state => state.services)\r\n    const { isUpdated } = useSelector(state => state.website)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getServices());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n        \r\n        if(isUpdated){\r\n            alert.success('Services information has been updated successfully.');\r\n            history.push('/admin/service')\r\n\r\n            dispatch({\r\n                type: UPDATE_SERVICES_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, isUpdated, history])\r\n\r\n    const setServiceData = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Title',\r\n                    field: 'title',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Subtitle',\r\n                    field: 'subtitle',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Description',\r\n                    field: 'description',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Icon Preview',\r\n                    field: 'icon',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                    sort: 'asc'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         services.forEach(service => {\r\n            data.rows.push({\r\n                title: service.title,\r\n                subtitle: service.subtitle,\r\n                description: service.description,\r\n                icon: <Fragment>\r\n                    <span className=\"fa-stack fa-2x\">\r\n                        <i className=\"fa fa-circle fa-stack-2x text-primary\"></i>\r\n                        <i className={`fa fa-${service.icon} fa-stack-1x fa-inverse`}></i>\r\n                    </span>\r\n                </Fragment>,\r\n                actions:\r\n                <Fragment>\r\n                    <div style={{display: 'flex'}}>\r\n                        <Link to={`/admin/service/${service._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                            <i className='fa fa-pencil'></i>\r\n                        </Link>\r\n                    </div>\r\n                </Fragment>\r\n             })\r\n         })\r\n\r\n         return data\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Home'}/>\r\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\r\n                <div id=\"sidebar-wrapper\" >\r\n                    <ul className=\"sidebar-nav\">\r\n                                <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                                <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                                <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                                <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                                {user && user.role !== 'admin' ? (\r\n                                        <Fragment>\r\n                                            <hr/>\r\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\r\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\r\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\r\n                                        </Fragment>\r\n                                    ) : (\r\n                                        <Fragment>\r\n                                            <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                            <hr/>\r\n                                            <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                            <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                            <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                            <hr/>\r\n                                            <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                            <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                        </Fragment>\r\n                                    )\r\n                                }\r\n                                <hr/>\r\n                                <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                            </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\r\n                            <i className=\"fa fa-bars\"   ></i>\r\n                        </a>\r\n                        <Fragment>\r\n                        <div style={{padding: '30px'}}>\r\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Update Services</h1>\r\n                            {loading ? <Loader/> : (\r\n                                <MDBDataTableV5\r\n                                    data={setServiceData()}\r\n                                    searchTop\r\n                                    scrollX\r\n                                    searching={false}\r\n                                    paging={false}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListServices\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateProduct.js",["349","350","351"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateProduct, getProductDetails, clearErrors } from '../../actions/productActions'\r\nimport { UPDATE_PRODUCT_RESET } from '../../constants/productConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst UpdateProduct = ( { match, history } ) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [images, setImages] = useState([]);\r\n    const [category, setMainCategory] = useState('');\r\n    const [subcategory, setSubCategory] = useState('');\r\n    const [imagesPreview, setImagesPreview] = useState([])\r\n    const [oldImages, setOldImages] = useState([]);\r\n    const [useDefaultImage, setUseDefaultImage] = useState('')\r\n    \r\n    const [isChecked, setChecked] = useState('false')\r\n\r\n    const checkboxCheck = () => {\r\n        setChecked(!isChecked)\r\n    }\r\n\r\n    const categories = [\r\n        ' - ',\r\n        'Mechanical Engineering',\r\n        'DC Power Systems',\r\n        'Electrical Engineering Equipment',\r\n        'Test Equipment',\r\n        'Others'\r\n    ]\r\n\r\n    const me_subCategory = [\r\n        '-',\r\n        'Pumps and System',\r\n        'Fire Protection Systems',\r\n        'Others'\r\n    ]\r\n\r\n    const dc_subCategory = [\r\n        '-',\r\n        'Uninterrupted Power System',\r\n        'Battery Monitoring System',\r\n        'Batteries',\r\n        'Others'\r\n    ]\r\n    \r\n    const eee_subCategory = [\r\n        '-',\r\n        'Transformers',\r\n        'Others'\r\n    ]\r\n\r\n    const te_subCategory = [\r\n        '-',\r\n        'Partial Discharge Detection',\r\n        'Battery Discharge Capacity Tester',\r\n        'Battery Impedance or Internal Resistance',\r\n        'Load Banks',\r\n        'Battery Test Monitor',\r\n        'Portable Direct Ground Fault Finder',\r\n        'Earth Tester or Clamp Type',\r\n        'Others'\r\n    ]\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { error, product } = useSelector(state => state.productDetails)\r\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.product);\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const productId = match.params.id\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n    \r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if(product && product._id !== productId) {\r\n            dispatch(getProductDetails(productId))\r\n        }\r\n        else { \r\n            setName(product.name)\r\n            setDescription(product.description)\r\n            setMainCategory(product.category)\r\n            setSubCategory(product.subcategory)\r\n            setOldImages(product.images)\r\n        }\r\n\r\n        if(error){\r\n            history.push('/admin/products')\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(updateError){\r\n            history.push('/admin/products')\r\n            alert.error(updateError);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(isUpdated) {\r\n            history.push('/admin/products');\r\n            alert.success('Product updated successfully.')\r\n\r\n            dispatch({\r\n                type: UPDATE_PRODUCT_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, error, alert, isUpdated, updateError, product, productId, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('description', description);\r\n        formData.set('category', category);\r\n        if(String(category).includes(\"Others\")) {\r\n            formData.set('subcategory', \"Others\");\r\n        } else {\r\n            formData.set('subcategory', subcategory);\r\n        }\r\n        formData.set('useDefaultImage', useDefaultImage)\r\n\r\n        images.forEach(image => {\r\n            formData.append('images', image)\r\n        });\r\n\r\n        dispatch(updateProduct(product._id, formData));\r\n    }\r\n\r\n    const onChange = e => {\r\n\r\n        if(e.target.name === 'useDefaultImage') {\r\n            let chkbox = document.getElementById('useDefaultImage')\r\n\r\n            if(chkbox.checked == true) { //if changed to ===, register would not work\r\n                setUseDefaultImage(\"True\")\r\n            }\r\n            else{\r\n                setUseDefaultImage(\"False\")\r\n            }\r\n\r\n        } else {\r\n            const files = Array.from(e.target.files)\r\n\r\n            setImagesPreview([]);\r\n            setImages([])\r\n            setOldImages([])\r\n\r\n            files.forEach(file => {\r\n                const reader = new FileReader();\r\n\r\n                reader.onload = () => {\r\n                    if(reader.readyState === 2){\r\n                        setImagesPreview(oldArray => [...oldArray, reader.result])\r\n                        setImages(oldArray => [...oldArray, reader.result])\r\n                    }\r\n                }\r\n\r\n                reader.readAsDataURL(file)\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Update Product'}/>\r\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\r\n            <div id=\"sidebar-wrapper\" >\r\n                    <ul className=\"sidebar-nav\">\r\n                                <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                                <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                                <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                                <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                                {user && user.role !== 'admin' ? (\r\n                                        <Fragment>\r\n                                            <hr/>\r\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\r\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\r\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\r\n                                        </Fragment>\r\n                                    ) : (\r\n                                        <Fragment>\r\n                                            <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                            <hr/>\r\n                                            <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                            <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                            <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                            <hr/>\r\n                                            <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                            <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                        </Fragment>\r\n                                    )\r\n                                }\r\n                                <hr/>\r\n                                <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                            </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} >\r\n                            <i className=\"fa fa-bars\"   ></i>\r\n                        </a>\r\n                        <Fragment>\r\n                        <div className=\"login-clean\">\r\n                            \r\n                            <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data'   >\r\n                                <h2 className=\"sr-only\">Update Product</h2>\r\n                                <div className=\"div-forgot-password\">\r\n                                    <h3 className=\"forgot-password-heading\">Update Product</h3>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Name</h6>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"product_name\"\r\n                                        value={name}\r\n                                        placeholder=\"Product Name\"\r\n                                        style={{width: '100%'}}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Description</h6>\r\n                                    <textarea\r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"product_name\"\r\n                                        value={description}\r\n                                        placeholder=\"Product Description\"\r\n                                        style={{width: '100%', height: '150px'}}\r\n                                        onChange={(e) => setDescription(e.target.value)}\r\n                                        height='55px'\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                <h6>Main Category</h6>\r\n                                <div className=\"dropdown show\">\r\n                                    <select \r\n                                        name=\"mainCategory\" \r\n                                        className=\"product-dropdown\" \r\n                                        id=\"mainCategory\"\r\n                                        value={category}\r\n                                        onChange={(e) => setMainCategory(e.target.value)}\r\n                                    >\r\n                                        {categories.map(category => (\r\n                                            <option key={category} value={category}>{category}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <h6>Sub Category</h6>\r\n                                <div className=\"dropdown show\">\r\n                                    <select \r\n                                        name=\"subCategory\" \r\n                                        className=\"product-dropdown\" \r\n                                        id=\"subCategory\"\r\n                                        value={subcategory}\r\n                                        disabled={String(category).includes(\"Others\") ? true : false}\r\n                                        onChange={(e) => setSubCategory(e.target.value)}\r\n                                    >\r\n                                    \r\n                                    {String(category).includes(\"Mechanical Engineering\") ? (\r\n                                        <Fragment>\r\n                                            {me_subCategory.map(category => (\r\n                                                <option key={category} value={category}>{category}</option>\r\n                                            ))}\r\n                                        </Fragment>\r\n                                    ) : ((String(category).includes(\"DC Power Systems\") ? (\r\n                                        <Fragment>\r\n                                            {dc_subCategory.map(category => (\r\n                                                <option key={category} value={category}>{category}</option>\r\n                                            ))}\r\n                                        </Fragment>) : (\r\n                                            (String(category).includes(\"Electrical Engineering Equipment\")) ? (\r\n                                                <Fragment>\r\n                                                    {eee_subCategory.map(category => (\r\n                                                        <option key={category} value={category}>{category}</option>\r\n                                                    ))}\r\n                                                </Fragment>\r\n                                            ) : (\r\n                                                (String(category).includes(\"Test Equipment\")) ? (\r\n                                                    <Fragment>\r\n                                                        {te_subCategory.map(category => (\r\n                                                            <option key={category} value={category}>{category}</option>\r\n                                                        ))}\r\n                                                    </Fragment>) : (\r\n                                                        <Fragment>\r\n                                                            <option key=\"Others\" value=\"Others\">Others</option>\r\n                                                        </Fragment>)\r\n                                                )\r\n                                            )))\r\n                                        }\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Images</h6>\r\n                                    <input \r\n                                        type=\"file\" \r\n                                        name=\"product_images\" \r\n                                        onChange={onChange}\r\n                                        disabled={isChecked ? false : true}\r\n                                        multiple\r\n                                    />\r\n                                    <br/>\r\n                                    <input \r\n                                        type='checkbox'\r\n                                        id='useDefaultImage'\r\n                                        name='useDefaultImage'\r\n                                        value={useDefaultImage}\r\n                                        onChange={onChange}\r\n                                        onClick={checkboxCheck}\r\n                                    />\r\n                                        &nbsp;or Use default image\r\n                                </div>\r\n                                \r\n                                {oldImages && oldImages.map(img => (\r\n                                    <img \r\n                                        className='mt-3 mr-2'\r\n                                        src={img.url}\r\n                                        alt={img.url}\r\n                                        key={img}\r\n                                        width='55' \r\n                                        height='52'\r\n                                    />\r\n\r\n                                ))}\r\n\r\n                                {imagesPreview.map(img => (\r\n                                    <img \r\n                                        src={img} \r\n                                        key={img} \r\n                                        alt='Images Preview'\r\n                                        className='mt-3 mr-2' \r\n                                        width='110' \r\n                                        height='104'\r\n                                    />\r\n                                ))}\r\n\r\n                                <div className=\"form-group\">\r\n                                        <button \r\n                                        className=\"btn btn-primary btn-block\" \r\n                                        type=\"submit\"\r\n                                    >\r\n                                        Update Product\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <Link to='/admin/products'>\r\n                                        <button\r\n                                            className=\"btn btn-secondary btn-block\"\r\n                                        >Discard</button>\r\n                                    </Link>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateProduct\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListHome.js",["352","353"],"import React, { Fragment, useEffect , useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTableV5 } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport '../../css/dashboard.css'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getHomes, clearErrors } from '../../actions/websiteActions'\r\nimport { UPDATE_HOME_RESET } from '../../constants/websiteConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst ListHome = ({history}) => {\r\n    \r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, homes } = useSelector(state => state.homes)\r\n    const { isUpdated } = useSelector(state => state.website)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getHomes());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n        \r\n        if(isUpdated){\r\n            alert.success('Home information has been updated successfully.');\r\n            history.push('/admin/homes')\r\n\r\n            dispatch({\r\n                type: UPDATE_HOME_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, isUpdated, history])\r\n\r\n    const setHomeData = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Title',\r\n                    field: 'name',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Description',\r\n                    field: 'description',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Image Preview',\r\n                    field: 'image',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                    sort: 'asc'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         homes.forEach(home => {\r\n            data.rows.push({\r\n                name: home.name,\r\n                description: home.description,\r\n                image: <Fragment>\r\n                    <figure>\r\n                        <img \r\n                            src={home.image.url} \r\n                            className='mt-3 mr-2' \r\n                            width='110' \r\n                            height='104'\r\n                        />\r\n                    </figure>\r\n                </Fragment>,\r\n                actions:\r\n                <Fragment>\r\n                    <div style={{display: 'flex'}}>\r\n                        <Link to={`/admin/home/${home._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                            <i className='fa fa-pencil'></i>\r\n                        </Link>\r\n                    </div>\r\n                </Fragment>\r\n             })\r\n         })\r\n\r\n         return data\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Home'}/>\r\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\r\n                <div id=\"sidebar-wrapper\" >\r\n                    <ul className=\"sidebar-nav\">\r\n                                <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                                <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                                <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                                <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                                {user && user.role !== 'admin' ? (\r\n                                        <Fragment>\r\n                                            <hr/>\r\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\r\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\r\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\r\n                                        </Fragment>\r\n                                    ) : (\r\n                                        <Fragment>\r\n                                            <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                            <hr/>\r\n                                            <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                            <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                            <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                            <hr/>\r\n                                            <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                            <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                        </Fragment>\r\n                                    )\r\n                                }\r\n                                <hr/>\r\n                                <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                            </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\r\n                            <i className=\"fa fa-bars\"   ></i>\r\n                        </a>\r\n                        <Fragment>\r\n                        <div style={{padding: '30px'}}>\r\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Update Home</h1>\r\n                            {loading ? <Loader/> : (\r\n                                <MDBDataTableV5\r\n                                    data={setHomeData()}\r\n                                    entries={5}\r\n                                    entriesOptions={[5, 10, 15, 20]}\r\n                                    paging={false}\r\n                                    searching={false}\r\n                                    searchTop\r\n                                    scrollX\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListHome\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateInquiry.js",["354"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateInquiry, getInquiryDetails, clearErrors } from '../../actions/inquiryActions'\r\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst UpdateInquiry = ( { match, history } ) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { error, inquiry } = useSelector(state => state.inquiryDetails)\r\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.inquiry);\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const inquiryId = match.params.id\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => { \r\n        if(inquiry && inquiry._id !== inquiryId) {\r\n            dispatch(getInquiryDetails(inquiryId))\r\n        }\r\n\r\n        if(error){\r\n            history.push('/admin/dashboard')\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(updateError){\r\n            history.push('/admin/dashboard')\r\n            alert.error(updateError);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(isUpdated) {\r\n            history.push('/admin/dashboard');\r\n            alert.success('Inquiry updated successfully.')\r\n\r\n            dispatch({\r\n                type: UPDATE_INQUIRY_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, error, alert, isUpdated, updateError, inquiry, inquiryId, history])\r\n\r\n    const updateInquiryHandler = (id, inquiryStatus) => { \r\n        const formData = new FormData();\r\n        formData.set('inquiryStatus', inquiryStatus);\r\n\r\n        dispatch(updateInquiry(id, formData));\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'View Message'}/>\r\n            <div id=\"wrapper\" className={isToggled ? null : \"toggled\"}>\r\n                <div id=\"sidebar-wrapper\" >\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <hr/>\r\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\r\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\r\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )\r\n                        }\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                    <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\r\n                        <i className=\"fa fa-bars\"   ></i>\r\n                    </a>\r\n                    <Fragment>\r\n                        {loading ? <Loader/> : (\r\n                            <section className=\"process-section\" style={{fontSize: '100%', fontWeight: '400', lineHeight: '1.3', color: '#000', width: '100%', paddingTop: '11px'}}>\r\n                                <table style={{width: '85%', minWidth: '150px', margin: '20px auto', backgroundColor: '#fff', padding: '30px', WebkitBorderRadius: '3px', MozBorderRadius: '3px', borderRadius: '3px', WebkitBoxShadow: '0 1px 3px rgba(0,0,0.12), 0 1px 2px rgba(0,0,0,.24)', MozBoxShadow: '0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24)', boxShadow: '0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24)', borderTop: 'solid 10px #1b1449'}}>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td style={{height: '20px'}}></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td style={{width: '100%', padding: '15px', verticalAlign: 'top'}}>\r\n                                                <p style={{margin: '0 0 10[x 0', padding: '0', fontSize: '14px'}}><span style={{display: 'block', fontWeight: 'bold', fontSize: '13px'}}>Concern Type</span> {inquiry.concernType}</p>\r\n                                                <br/>\r\n                                                <p style={{margin: '0 0 10[x 0', padding: '0', fontSize: '14px'}}><span style={{display: 'block', fontWeight: 'bold', fontSize: '13px'}}>Name</span> {inquiry.firstName} {inquiry.lastName}</p>\r\n                                                <p style={{margin: '0 0 10[x 0', padding: '0', fontSize: '14px'}}><span style={{display: 'block', fontWeight: 'bold', fontSize: '13px'}}>Company and Position</span> {inquiry.companyName}, {inquiry.position}</p>\r\n                                                <p style={{margin: '0 0 10[x 0', padding: '0', fontSize: '14px'}}><span style={{display: 'block', fontWeight: 'bold', fontSize: '13px'}}>Email</span> {inquiry.customerEmail}</p>\r\n                                                <p style={{margin: '0 0 10[x 0', padding: '0', fontSize: '14px'}}><span style={{display: 'block', fontWeight: 'bold', fontSize: '13px'}}>Phone</span> {inquiry.contactNumber}</p>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td colspan=\"2\" style={{padding: '0 15px'}}>\r\n                                                <h3 style={{margin: '0 0 10px 0', padding: '0'}}>Message Content</h3>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td colspan=\"2\" style={{padding:'15px'}}>\r\n                                                <p style={{fontSize: '15px', margin: '0', padding: '10px 40px', textAlign: 'justify'}}>\r\n                                                {inquiry.customerMessage}\r\n                                                </p>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr style={{ width: '100%'}}>\r\n                                            {(inquiry.inquiryStatus === 'Resolved' ) ? (\r\n                                                <Fragment>\r\n                                                    <button \r\n                                                        className=\"btn btn-primary update-status-button\" \r\n                                                        type=\"button\"\r\n                                                        onClick={() => updateInquiryHandler(inquiry._id, 'Unresolved')}\r\n                                                        style={{margin: '50px auto 50px auto', display: 'block'}}>\r\n                                                        Restore message back to {inquiry.concernType}\r\n                                                    </button>\r\n                                                </Fragment>\r\n                                            ) : ((inquiry.inquiryStatus === 'Deleted') ? (\r\n                                                <Fragment>\r\n                                                    <button \r\n                                                        className=\"btn btn-primary update-status-button align-center\" \r\n                                                        type=\"button\"\r\n                                                        onClick={() => updateInquiryHandler(inquiry._id, 'Resolved')}\r\n                                                        style={{margin: '50px auto 50px auto', display: 'block'}}>\r\n                                                        Restore message back to Archives\r\n                                                    </button>\r\n                                                </Fragment>\r\n                                            ) : (\r\n                                                <Fragment>\r\n                                                    <div style={{margin: '20px auto', display: 'flex', alignContent: 'center', justifyContent: 'center'}}>\r\n                                                        <button \r\n                                                            className=\"btn btn-primary update-status-button align-center ml-2 mr-2\" \r\n                                                            type=\"button\"\r\n                                                            onClick={() => updateInquiryHandler(inquiry._id, 'Resolved')}\r\n                                                            >\r\n                                                            Resolve message\r\n                                                        </button>\r\n                                                        <button \r\n                                                            className=\"btn btn-secondary update-status-button align-center ml-2 mr-2\" \r\n                                                            type=\"button\"\r\n                                                            onClick={() => updateInquiryHandler(inquiry._id, 'Deleted')}>\r\n                                                            Delete message\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </Fragment>\r\n                                            )\r\n\r\n                                            )}\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </section>\r\n                        )}\r\n                    </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateInquiry\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\Profile.js",["355"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport MetaData from './../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport '../../css/profile.css'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { logout } from './../../actions/userActions'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\n\r\nconst Profile = ({history}) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { user, loading } = useSelector(state => state.auth)\r\n    \r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n    \r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading ? <Loader /> : (\r\n                <Fragment>\r\n                    <MetaData title={'My Profile'} />\r\n                    <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\r\n                        <div id=\"sidebar-wrapper\" >\r\n                            <ul className=\"sidebar-nav\">\r\n                                <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                                <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                                <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                                <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                                {user && user.role !== 'admin' ? (\r\n                                        <Fragment>\r\n                                            <hr/>\r\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\r\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\r\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\r\n                                        </Fragment>\r\n                                    ) : (\r\n                                        <Fragment>\r\n                                            <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                            <hr/>\r\n                                            <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                            <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                            <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                            <hr/>\r\n                                            <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                            <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                        </Fragment>\r\n                                    )\r\n                                }\r\n                                <hr/>\r\n                                <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                            </ul>\r\n                        </div>\r\n                            <div className=\"page-content-wrapper\">\r\n                                <div className=\"container-fluid\">\r\n                                    <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\r\n                                        <i className=\"fa fa-bars\"   ></i>\r\n                                    </a>\r\n                                    <div className=\"container\">\r\n                                        <div className=\"main-body\">\r\n                                            <div className=\"row gutters-sm\">\r\n                                                <div className=\"col-md-4 mb-3\">\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"d-flex flex-column align-items-center text-center\">\r\n                                                                <img src={user.avatar.url} alt=\"Admin\" className=\"rounded-circle\" width=\"100%\" style={{minWidth: '100px', maxWidth: '150px'}}/>\r\n                                                                <div className=\"mt-3\">\r\n                                                                    <h4>{user.name}</h4>\r\n                                                                    <p className=\"text-secondary mb-1\" style={{textTransform: 'uppercase'}}>{user.role}</p>\r\n                                                                    <Link className=\"btn btn-dark btn-sm ml-3 mt-3\" type=\"button\" to=\"/admin/edit-profile\">Edit Profile</Link>\r\n                                                                    <Link className=\"btn btn-dark btn-sm ml-3 mt-3\" type=\"button\" to=\"/password/update\">Change Password</Link>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col-md-8\">\r\n                                                    <div className=\"card mb-3\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-sm-3\">\r\n                                                                    <h6 className=\"mb-0\">Full Name</h6>\r\n                                                                </div>\r\n                                                                <div className=\"col-sm-9 text-secondary\">\r\n                                                                    {user.name}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <hr/>\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-sm-3\">\r\n                                                                    <h6 className=\"mb-0\">Email</h6>\r\n                                                                </div>\r\n                                                                <div className=\"col-sm-9 text-secondary\">\r\n                                                                    {user.email}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <hr/>\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-sm-3\">\r\n                                                                    <h6 className=\"mb-0\">Phone</h6>\r\n                                                                </div>\r\n                                                                <div className=\"col-sm-9 text-secondary\">\r\n                                                                    {user.contactNumber}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <hr/>\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-sm-3\">\r\n                                                                    <h6 className=\"mb-0\">Address</h6>\r\n                                                                </div>\r\n                                                                <div className=\"col-sm-9 text-secondary\">\r\n                                                                    {user.address}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>    \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListInquiries.js",["356","357"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTableV5 } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\r\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst ListOrders = ({history}) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\r\n    const { isUpdated } = useSelector(state => state.inquiry)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n        \r\n        dispatch(listInquiry());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(isUpdated){\r\n            alert.success('Inquiry has been moved to trash successfully.');\r\n            history.push('/admin/inquiries')\r\n\r\n            dispatch({\r\n                type: UPDATE_INQUIRY_RESET\r\n            })\r\n        }\r\n    }, [dispatch, alert, error, isUpdated, history])\r\n\r\n    const updateInquiryHandler = (id, inquiryStatus) => { \r\n        if(window.confirm(\"Are you sure you want to delete this? This message will be moved to Trash.\")){\r\n            const formData = new FormData();\r\n            formData.set('inquiryStatus', inquiryStatus);\r\n    \r\n            dispatch(updateInquiry(id, formData));\r\n        }\r\n    }\r\n    \r\n    let len = 0;\r\n    \r\n    const setInquiries = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Date / Time',\r\n                    field: 'createdAt',\r\n                    sort: 'desc'\r\n                },\r\n                {\r\n                    label: 'Last Name',\r\n                    field: 'lastName'\r\n                },\r\n                {\r\n                    label: 'First Name',\r\n                    field: 'firstName'\r\n                },\r\n                {\r\n                    label: 'Company Name',\r\n                    field: 'companyName'\r\n                },\r\n                \r\n                {\r\n                    label: 'Status',\r\n                    field: 'inquiryStatus'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         inquiries.forEach(inquiry => {\r\n             if(inquiry.concernType==='Inquiry' && (inquiry.inquiryStatus !== \"Deleted\" && inquiry.inquiryStatus !== \"Resolved\")){\r\n                len += 1\r\n                data.rows.push({\r\n                    createdAt: inquiry.createdAt,\r\n                    firstName: inquiry.firstName,\r\n                    lastName: inquiry.lastName,\r\n                    companyName: inquiry.companyName,\r\n                    inquiryStatus: inquiry.inquiryStatus && (String(inquiry.inquiryStatus).includes('Processing') || String(inquiry.inquiryStatus).includes('Resolved'))\r\n                        ? <p style={{ color: 'green' }}>{inquiry.inquiryStatus}</p>\r\n                        :  <p style={{ color: 'red' }}>{inquiry.inquiryStatus}</p>,\r\n                    actions:\r\n                    <Fragment>\r\n                        <div style={{display: 'flex'}}>\r\n                            <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                                <i className='fa fa-eye'></i>\r\n                            </Link>\r\n                            <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Deleted\")}>\r\n                                <i className='fa fa-trash'></i>\r\n                            </button>\r\n                        </div>\r\n                    </Fragment>\r\n                 })\r\n             }\r\n         })\r\n\r\n         return data\r\n    }\r\n    \r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Inquiries'}/>\r\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\r\n                <div id=\"sidebar-wrapper\" >\r\n                    <ul className=\"sidebar-nav\">\r\n                                <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                                <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                                <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                                <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                                {user && user.role !== 'admin' ? (\r\n                                        <Fragment>\r\n                                            <hr/>\r\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\r\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\r\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\r\n                                        </Fragment>\r\n                                    ) : (\r\n                                        <Fragment>\r\n                                            <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                            <hr/>\r\n                                            <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                            <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                            <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                            <hr/>\r\n                                            <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                            <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                        </Fragment>\r\n                                    )\r\n                                }\r\n                                <hr/>\r\n                                <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                            </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\r\n                            <i className=\"fa fa-bars\"   ></i>\r\n                        </a>\r\n                        <Fragment>\r\n                            <div style={{padding: '30px'}}>\r\n                                <h1 className='mt-3 mb-3 ml-10 mr-10'>Inbox - Inquiry</h1>\r\n                                {loading? <Loader/> : (\r\n                                    <MDBDataTableV5\r\n                                        data={setInquiries()}\r\n                                        entries={5}\r\n                                        entriesOptions={[5, 10, 15, 20]}\r\n                                        searchTop\r\n                                        scrollX\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListOrders","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListFooter.js",["358"],"import React, { Fragment, useEffect , useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTableV5 } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport '../../css/dashboard.css'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { UPDATE_FOOTER_RESET } from '../../constants/websiteConstants'\r\nimport { getFooterDetails, clearErrors } from '../../actions/websiteActions'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst ListFooter = ({history}) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, footerInfo } = useSelector(state => state.footerDetails)\r\n    const { isUpdated } = useSelector(state => state.website)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getFooterDetails());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n        \r\n        if(isUpdated){\r\n            alert.success('Footer has been updated successfully.');\r\n            history.push('/admin/footer')\r\n\r\n            dispatch({\r\n                type: UPDATE_FOOTER_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, isUpdated, history])\r\n\r\n    const setFooterData = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Details',\r\n                    field: 'text',\r\n                    sort: 'asc'\r\n                }\r\n            ],\r\n            rows: [\r\n                {\r\n                    text: footerInfo.footerTitle\r\n                },\r\n                {\r\n                    text: footerInfo.footerDescription\r\n                },\r\n                {\r\n                    text: footerInfo.addressInfo\r\n                },\r\n                {\r\n                    text: footerInfo.phoneInfo\r\n                },\r\n                {\r\n                    text: footerInfo.cellphoneInfo\r\n                },\r\n                {\r\n                    text: footerInfo.emailInfo\r\n                }\r\n            ]\r\n         }\r\n         return data\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'All About Us'}/>\r\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}>\r\n                <div id=\"sidebar-wrapper\">\r\n                    <ul className=\"sidebar-nav\">\r\n                                <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                                <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                                <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                                <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                                {user && user.role !== 'admin' ? (\r\n                                        <Fragment>\r\n                                            <hr/>\r\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\r\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\r\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\r\n                                        </Fragment>\r\n                                    ) : (\r\n                                        <Fragment>\r\n                                            <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                            <hr/>\r\n                                            <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                            <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                            <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                            <hr/>\r\n                                            <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                            <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                        </Fragment>\r\n                                    )\r\n                                }\r\n                                <hr/>\r\n                                <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                            </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}>\r\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                        </a>\r\n                        <Fragment>\r\n                        <div style={{padding: '30px'}}>\r\n                            <div style={{display: 'flex'}}>\r\n                                <div style={{marginRight: 'auto'}}>\r\n                                    <h1 className='mt-3 mb-3 ml-10 mr-10'>Footer Details</h1>\r\n                                </div>\r\n                                <div style={{marginLeft: 'auto', marginTop: '30px'}}>\r\n                                    <Link to='/admin/newProduct'>\r\n                                        <button className='btn btn-dark btn-sm text-capitalize mb-5'>\r\n                                            Update Footer\r\n                                        </button>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                            {loading ? <Loader/> : (\r\n                                <MDBDataTableV5\r\n                                    data={setFooterData()}\r\n                                    paging={false}\r\n                                    searcing={false}\r\n                                    searchTop\r\n                                    scrollX\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListFooter\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListAppointments.js",["359","360"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTableV5 } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\r\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from '../../actions/userActions'\r\n\r\nconst ListOrders = ({history}) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\r\n    const { isUpdated } = useSelector(state => state.inquiry)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n    useEffect(() => {\r\n        dispatch(listInquiry());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(isUpdated){\r\n            alert.success('Inquiry has been moved to trash successfully.');\r\n            history.push('/admin/appointments')\r\n\r\n            dispatch({\r\n                type: UPDATE_INQUIRY_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, history, isUpdated])\r\n\r\n    const updateInquiryHandler = (id, inquiryStatus) => { \r\n        if(window.confirm(\"Are you sure you want to delete this? This message will be moved to Trash.\")){\r\n            const formData = new FormData();\r\n            formData.set('inquiryStatus', inquiryStatus);\r\n    \r\n            dispatch(updateInquiry(id, formData));\r\n        }\r\n    }\r\n\r\n    let len = 0;\r\n    \r\n    const setInquiries = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Date / Time',\r\n                    field: 'createdAt',\r\n                    sort: 'desc'\r\n                },\r\n                {\r\n                    label: 'Last Name',\r\n                    field: 'lastName'\r\n                },\r\n                {\r\n                    label: 'First Name',\r\n                    field: 'firstName'\r\n                },\r\n                {\r\n                    label: 'Company Name',\r\n                    field: 'companyName'\r\n                },\r\n                \r\n                {\r\n                    label: 'Status',\r\n                    field: 'inquiryStatus'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         inquiries.forEach(inquiry => {\r\n             if(inquiry.concernType==='Appointment' && (inquiry.inquiryStatus !== \"Deleted\" && inquiry.inquiryStatus !== \"Resolved\")){\r\n                len += 1\r\n                data.rows.push({\r\n                    createdAt: inquiry.createdAt,\r\n                    firstName: inquiry.firstName,\r\n                    lastName: inquiry.lastName,\r\n                    companyName: inquiry.companyName,\r\n                    inquiryStatus: inquiry.inquiryStatus && (String(inquiry.inquiryStatus).includes('Processing') || String(inquiry.inquiryStatus).includes('Resolved'))\r\n                        ? <p style={{ color: 'green' }}>{inquiry.inquiryStatus}</p>\r\n                        :  <p style={{ color: 'red' }}>{inquiry.inquiryStatus}</p>,\r\n                    actions:\r\n                    <Fragment>\r\n                        <div style={{display: 'flex'}}>\r\n                            <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                                <i className='fa fa-eye'></i>\r\n                            </Link>\r\n                            <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Deleted\")}>\r\n                                <i className='fa fa-trash'></i>\r\n                            </button>\r\n                        </div>     \r\n                    </Fragment>\r\n                 })\r\n             }\r\n         })\r\n\r\n         return data\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Appointments'}/>\r\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\r\n                <div id=\"sidebar-wrapper\" >\r\n                    <ul className=\"sidebar-nav\">\r\n                                <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                                <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                                <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                                <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                                {user && user.role !== 'admin' ? (\r\n                                        <Fragment>\r\n                                            <hr/>\r\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\r\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\r\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\r\n                                        </Fragment>\r\n                                    ) : (\r\n                                        <Fragment>\r\n                                            <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                            <hr/>\r\n                                            <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                            <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                            <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                            <hr/>\r\n                                            <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                            <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                        </Fragment>\r\n                                    )\r\n                                }\r\n                                <hr/>\r\n                                <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                            </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\r\n                            <i className=\"fa fa-bars\"   ></i>\r\n                        </a>\r\n                        <Fragment>\r\n                        <div style={{padding: '30px'}}>\r\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Inbox - Appointments</h1>\r\n                            {loading? <Loader/> : (\r\n                                <MDBDataTableV5\r\n                                    data={setInquiries()}\r\n                                    entries={5}\r\n                                    entriesOptions={[5, 10, 15, 20]}\r\n                                    searchTop\r\n                                    scrollX\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListOrders","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListSuperAdmins.js",["361","362","363","364"],"import React, { Fragment, useEffect , useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTableV5 } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport '../../css/dashboard.css'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getUsers, deleteUser, clearErrors } from '../../actions/userActions'\r\nimport { DELETE_USER_RESET, UPDATE_USER_RESET } from '../../constants/userConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from '../../actions/userActions'\r\n\r\nconst ListUsers = ({history}) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, users } = useSelector(state => state.users)\r\n    const { user } = useSelector(state => state.auth)\r\n    const { isUpdated } = useSelector(state => state.updateUser)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getUsers());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n        \r\n        if(isUpdated){\r\n            alert.success('User has been updated successfully.');\r\n            history.push('/admin/users/superadmin')\r\n\r\n            dispatch({\r\n                type: UPDATE_USER_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, isUpdated, history])\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    let len = 0;\r\n\r\n    const setSuperAdminData = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Role',\r\n                    field: 'role',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Name',\r\n                    field: 'name',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Contact Number',\r\n                    field: 'contactNumber',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Email',\r\n                    field: 'email',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                    sort: 'asc'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         users.forEach(superadmin => {\r\n            if(superadmin.role === 'superadmin') {\r\n                len += 1\r\n                data.rows.push({\r\n                    role: superadmin.role,\r\n                    name: superadmin.name,\r\n                    contactNumber: superadmin.contactNumber,\r\n                    email: superadmin.email,\r\n                    actions:   \r\n                    <Fragment>\r\n                        <div style={{display: 'flex'}}>\r\n                            <button\r\n                                className='btn btn-primary py-1 px-2 ml-2'\r\n                                disabled={(user.email === superadmin.email) ? false : true}\r\n                                onClick={\r\n                                    () => updateUser(superadmin._id)\r\n                                }\r\n                            >\r\n                                <i className='fa fa-pencil'></i>\r\n                            </button>\r\n                            <button className=\"btn btn-danger py-1 px-2 ml-2\"\r\n                                    disabled={true}\r\n                            >\r\n                                <i className='fa fa-trash'></i>\r\n                            </button>\r\n                        </div>\r\n                    </Fragment>\r\n                })\r\n            }\r\n         })\r\n\r\n         return data\r\n    }\r\n\r\n    const updateUser = (id) => {\r\n        history.replace(`/superadmin/user/${id}`)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Superadmins'}/>\r\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\r\n            <div id=\"sidebar-wrapper\" >\r\n                <ul className=\"sidebar-nav\">\r\n                    <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                    <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                    <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                    <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                    {user && user.role !== 'admin' ? (\r\n                            <Fragment>\r\n                                <hr/>\r\n                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\r\n                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\r\n                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\r\n                            </Fragment>\r\n                        ) : (\r\n                            <Fragment>\r\n                                <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                <hr/>\r\n                                <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                <hr/>\r\n                                <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                            </Fragment>\r\n                        )}\r\n\r\n                    <hr/>\r\n                    <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                </ul>\r\n            </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\r\n                            <i className=\"fa fa-bars\"   ></i>\r\n                        </a>\r\n                        <Fragment>\r\n                        <div style={{padding: '30px'}}>\r\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Superadmins</h1>\r\n                            {loading? <Loader/> : (\r\n                                <MDBDataTableV5\r\n                                    data={setSuperAdminData()}\r\n                                    entries={5}\r\n                                    entriesOptions={[5, 10, 15, 20]}\r\n                                    searchTop\r\n                                    scrollX\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListUsers\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\user\\RegisterSuccess.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\user\\Register.js",["365","366","367","368","369"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from  'react-redux'\r\nimport { register } from './../../actions/userActions'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Register = ( { history } ) => {\r\n\r\n    const [user, setUser] = useState({\r\n        name: '',\r\n        email: '',\r\n        contactNumber: '',\r\n        address: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    })\r\n\r\n    const { name, email, contactNumber, address, password, confirmPassword } = user;\r\n    const [avatar, setAvatar] = useState('');\r\n    const [avatarPreview, setAvatarPreview] = useState('images/default_avatar.png');\r\n    const [useDefaultImage, setUseDefaultImage] = useState('')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, loading, success } = useSelector(state => state.register);\r\n\r\n    const [isChecked, setChecked] = useState('false')\r\n\r\n    const checkboxCheck = () => {\r\n        setChecked(!isChecked)\r\n    }\r\n\r\n    const [showOld, setOld] = useState('false')\r\n\r\n    const showOldToggle = () => {\r\n        setOld(!showOld)\r\n    }\r\n\r\n    const [showNew, setNew] = useState('false')\r\n\r\n    const showNewToggle = () => {\r\n        setNew(!showNew)\r\n    }\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n    \r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(error){\r\n            history.push('/register-error')\r\n        }\r\n        if(success){\r\n            history.push('/register-success')\r\n        }\r\n        \r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n\r\n    }, [dispatch, alert, error, success, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('email', email);\r\n        formData.set('password', password);\r\n        formData.set('confirmPassword', confirmPassword);\r\n        formData.set('contactNumber', contactNumber);\r\n        formData.set('address', address);\r\n        formData.set('avatar', avatar);\r\n        formData.set('useDefaultImage', useDefaultImage)\r\n\r\n        dispatch(register(formData));\r\n    }\r\n\r\n    const onChange = e => {\r\n        \r\n        if(e.target.name === 'useDefaultImage') {\r\n            let chkbox = document.getElementById('useDefaultImage')\r\n\r\n            if(chkbox.checked == true) { //if changed to ===, register would not work\r\n                setUseDefaultImage(\"True\")\r\n            }\r\n            else{\r\n                setUseDefaultImage(\"False\")\r\n            }\r\n\r\n        } else {\r\n            if(e.target.name === 'avatar') {\r\n\r\n                const reader = new FileReader();\r\n    \r\n                reader.onload = () => {\r\n                    if(reader.readyState === 2){\r\n                        setAvatarPreview(reader.result)\r\n                        setAvatar(reader.result)\r\n                    }\r\n                }\r\n    \r\n                reader.readAsDataURL(e.target.files[0])\r\n    \r\n            }\r\n            else {\r\n                setUser({\r\n                    ...user,\r\n                    [e.target.name]: e.target.value\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Register'}/>\r\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\r\n                <div id=\"sidebar-wrapper\" >\r\n                    <ul className=\"sidebar-nav\">\r\n                                <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                                <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                                <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                                <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                                {user && user.role !== 'admin' ? (\r\n                                        <Fragment>\r\n                                            <hr/>\r\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\r\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\r\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\r\n                                        </Fragment>\r\n                                    ) : (\r\n                                        <Fragment>\r\n                                            <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                            <hr/>\r\n                                            <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                            <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                            <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                            <hr/>\r\n                                            <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                            <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                        </Fragment>\r\n                                    )\r\n                                }\r\n                                <hr/>\r\n                                <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                            </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\r\n                            <i className=\"fa fa-bars\"   ></i>\r\n                        </a>\r\n                        <div className=\"container\">\r\n                            <div className=\"main-body\">\r\n                                <div className=\"row gutters-sm\">\r\n                                    <div className=\"col-md-4 mb-3\">\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-body\">   \r\n                                                <div className=\"row text-center\">\r\n                                                    <h3 className=\"ml-3 mb-5 \">Register New User</h3>\r\n                                                </div>\r\n                                                <div className=\"d-flex flex-column align-items-center text-center\">\r\n                                                    <img src={avatarPreview} alt=\"Admin\" className=\"rounded-circle\" width=\"150\"/>\r\n                                                    <div className=\"mt-3\">\r\n                                                        <hr/>\r\n                                                            <input \r\n                                                                type=\"file\" \r\n                                                                id=\"avatar\" \r\n                                                                name=\"avatar\" \r\n                                                                accept=\"images/*\"\r\n                                                                onChange={onChange}\r\n                                                                style={{width: '90%'}}\r\n                                                                disabled={isChecked ? false : true}\r\n                                                            />\r\n                                                            <br/>\r\n                                                            <input \r\n                                                                type='checkbox'\r\n                                                                id='useDefaultImage'\r\n                                                                name='useDefaultImage'\r\n                                                                value={useDefaultImage}\r\n                                                                onChange={onChange}\r\n                                                                onClick={checkboxCheck}\r\n                                                            />\r\n                                                                &nbsp;Use default image\r\n                                                        <br/>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-8\">\r\n                                        <div className=\"card mb-3\">\r\n                                            <div className=\"card-body\">\r\n                                                <form method=\"post\" onSubmit={submitHandler}>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-sm-3\">\r\n                                                            <h6 className=\"mb-0\">Full Name</h6>\r\n                                                        </div>\r\n                                                        <div className=\"col-sm-9 text-secondary\">\r\n                                                            <input \r\n                                                                type=\"text\" \r\n                                                                className=\"form-control\" \r\n                                                                name=\"name\"\r\n                                                                value={name}\r\n                                                                placeholder=\"Name\"\r\n                                                                pattern=\"[A-Za-z\\s]{1,}\"\r\n                                                                onChange={onChange}\r\n                                                            />\r\n                                                            </div>\r\n                                                    </div>\r\n                                                    <hr/>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-sm-3\">\r\n                                                            <h6 className=\"mb-0\">Email</h6>\r\n                                                        </div>\r\n                                                        <div className=\"col-sm-9 text-secondary\">\r\n                                                            <input \r\n                                                                type=\"email\" \r\n                                                                className=\"form-control\" \r\n                                                                name=\"email\"\r\n                                                                value={email}\r\n                                                                placeholder=\"Email\"\r\n                                                                onChange={onChange}\r\n                                                            />\r\n                                                            </div>\r\n                                                    </div>\r\n                                                    <hr/>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-sm-3\">\r\n                                                            <h6 className=\"mb-0\">Contact Number</h6>\r\n                                                        </div>\r\n                                                        <div className=\"col-sm-9 text-secondary\">\r\n                                                            <input \r\n                                                                type=\"tel\" \r\n                                                                className=\"form-control\" \r\n                                                                name=\"contactNumber\" \r\n                                                                value={contactNumber}\r\n                                                                placeholder=\"09xx-xxx-xxxx\"\r\n                                                                pattern=\"^[0][9]\\d{2}-\\d{3}-\\d{4}$\"\r\n                                                                onChange={onChange}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <hr/>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-sm-3\">\r\n                                                            <h6 className=\"mb-0\">Address</h6>\r\n                                                        </div>\r\n                                                        <div className=\"col-sm-9 text-secondary\">\r\n                                                            <textarea \r\n                                                                type=\"text\"\r\n                                                                className=\"form-control\"\r\n                                                                name=\"address\"\r\n                                                                value={address}\r\n                                                                onChange={onChange}\r\n                                                                placeholder=\"Address\"\r\n                                                                style={{height: '150px'}}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <hr/>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-sm-3\">\r\n                                                            <h6 className=\"mb-0\">Password</h6>\r\n                                                        </div>\r\n                                                        <div className=\"col-sm-9 text-secondary\">\r\n                                                            <div class=\"input-group mb-3\">\r\n                                                                <input \r\n                                                                    type={showOld ? \"password\" : \"text\"} \r\n                                                                    className=\"form-control\" \r\n                                                                    name=\"password\"\r\n                                                                    value={password}\r\n                                                                    placeholder=\"Password\"\r\n                                                                    onChange={onChange}\r\n                                                                    aria-label=\"password\" aria-describedby=\"basic-addon1\"\r\n                                                                />\r\n                                                                <div class=\"input-group-prepend\">\r\n                                                                    <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                                                        <a\r\n                                                                            onClick={showOldToggle}\r\n                                                                            style={{cursor: 'pointer'}}\r\n                                                                        >\r\n                                                                            <span className=\"fa-lg\">\r\n                                                                                <i className={showOld ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\r\n                                                                            </span>\r\n                                                                        </a>\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <hr/>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-sm-3\">\r\n                                                            <h6 className=\"mb-0\">Confirm Password</h6>\r\n                                                        </div>\r\n                                                        <div className=\"col-sm-9 text-secondary\">\r\n                                                            <div class=\"input-group mb-3\">\r\n                                                                <input\r\n                                                                    type={showNew ? \"password\" : \"text\"} \r\n                                                                    className=\"form-control\"\r\n                                                                    name=\"confirmPassword\"\r\n                                                                    value={confirmPassword}\r\n                                                                    placeholder=\"Confirm Password\"\r\n                                                                    onChange={onChange}\r\n                                                                    aria-label=\"confirm\" aria-describedby=\"basic-addon1\"\r\n                                                                />\r\n                                                                <div class=\"input-group-prepend\">\r\n                                                                    <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                                                        <a\r\n                                                                            onClick={showNewToggle}\r\n                                                                            style={{cursor: 'pointer'}}\r\n                                                                        >\r\n                                                                            <span className=\"fa-lg\">\r\n                                                                                <i className={showNew ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\r\n                                                                            </span>\r\n                                                                        </a>\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-sm-6\">\r\n                                                            <button\r\n                                                                className=\"btn btn-primary btn-block mt-5\"\r\n                                                                type=\"submit\"\r\n                                                            >Register</button>\r\n                                                        </div>\r\n                                                        <div className=\"col-sm-6\">\r\n                                                            <Link to='admin/dashboard'>\r\n                                                                <button\r\n                                                                    className=\"btn btn-secondary btn-block mt-5\"\r\n                                                                    type=\"submit\"\r\n                                                                >Cancel</button>\r\n                                                            </Link>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>    \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateUser.js",["370","371"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateUser, getUserDetails, clearErrors } from '../../actions/userActions'\r\nimport { UPDATE_USER_RESET } from '../../constants/userConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\n\r\nconst UpdateUser = ({ match, history }) => {\r\n    const [name, setName] = useState('');\r\n    const [contactNumber, setContactNumber] = useState('');\r\n    const [role, setRole] = useState([]);\r\n    const [address, setAddress] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { error, user } = useSelector(state => state.getUser)\r\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.updateUser);\r\n\r\n    const userId = match.params.id\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n    \r\n    const roles = [\r\n        'admin',\r\n        'superadmin'\r\n    ]\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if(user && user._id !== userId) {\r\n            dispatch(getUserDetails(userId))\r\n        }\r\n        else { \r\n            setName(user.name)\r\n            setContactNumber(user.contactNumber)\r\n            setRole(user.role)\r\n            setAddress(user.address)\r\n        }\r\n\r\n        if(error){\r\n            history.push('/admin/dashboard')\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(updateError){\r\n            history.push('/admin/dashboard')\r\n            alert.error(updateError);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(isUpdated) {\r\n            history.push('/admin/dashboard')\r\n            alert.success('User updated successfully.')\r\n\r\n            dispatch({\r\n                type: UPDATE_USER_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, error, alert, isUpdated, updateError, user, userId, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('contactNumber', contactNumber);\r\n        formData.set('address', address);\r\n        formData.set('role', role);\r\n\r\n        dispatch(updateUser(user._id, formData));\r\n    }\r\n    \r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Update User'}/>\r\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\r\n                <div id=\"sidebar-wrapper\" >\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        <hr/>\r\n                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\r\n                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\r\n                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} >\r\n                            <i className=\"fa fa-bars\"   ></i>\r\n                        </a>\r\n                        <Fragment>\r\n                        <div className=\"login-clean\">\r\n                            <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data'   >\r\n                                <h2 className=\"sr-only\">Update User</h2>\r\n                                <div className=\"div-forgot-password\">\r\n                                    <h3 className=\"forgot-password-heading\">Update User</h3>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Name</h6>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"name\"\r\n                                        value={name}\r\n                                        placeholder=\"Name\"\r\n                                        pattern=\"[A-Za-z\\s]{1,}\"\r\n                                        style={{width: '100%'}}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Contact Number</h6>\r\n                                    <input\r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"contactNumber\"\r\n                                        value={contactNumber}\r\n                                        placeholder=\"09xx-xxx-xxxx\" \r\n                                        pattern=\"^[0][9]\\d{2}-\\d{3}-\\d{4}$\"\r\n                                        onChange={(e) => setContactNumber(e.target.value)}\r\n                                        height='55px'\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Address</h6>\r\n                                    <textarea\r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"address\"\r\n                                        value={address}\r\n                                        placeholder=\"Address\"\r\n                                        style={{width: '100%', height: '150px'}}\r\n                                        onChange={(e) => setAddress(e.target.value)}\r\n                                        height='55px'\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Role</h6>\r\n                                    <div className=\"dropdown show\">\r\n                                        <select \r\n                                            name=\"role\" \r\n                                            className=\"product-dropdown\" \r\n                                            id=\"role\"\r\n                                            value={role}\r\n                                            onChange={(e) => setRole(e.target.value)}\r\n                                        >\r\n                                            {roles.map(role => (\r\n                                                <option key={role} value={role}>{role}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <button \r\n                                        className=\"btn btn-primary btn-block\" \r\n                                        type=\"submit\"\r\n                                    >\r\n                                        Update User\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <Link to='/admin/dashboard'>\r\n                                        <button\r\n                                            className=\"btn btn-secondary btn-block\"\r\n                                        >Discard</button>\r\n                                    </Link>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateUser\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateServices.js",["372","373"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from  'react-redux'\r\nimport { updateServices, getServiceDetails, clearErrors } from '../../actions/websiteActions'\r\nimport { UPDATE_SERVICES_RESET } from '../../constants/websiteConstants'\r\n\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { logout } from '../../actions/userActions'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\n\r\nconst UpdateServices = ({ match, history }) => {\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [subtitle, setSubtitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [iconBackground, setIconBackground] = useState('');\r\n    const [icon, setIcon] = useState('');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, service } = useSelector(state => state.serviceDetails);\r\n    const { error: updateError, isUpdated, loading } = useSelector(state => state.website);\r\n    const { user } = useSelector(state => state.auth)\r\n    \r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    const serviceId = match.params.id\r\n\r\n    useEffect(() => {\r\n        if(service && service._id !== serviceId) {\r\n            dispatch(getServiceDetails(serviceId))\r\n        }\r\n        else {\r\n            setTitle(service.title);\r\n            setSubtitle(service.subtitle);\r\n            setDescription(service.description);\r\n            setIconBackground(service.iconBackground);\r\n            setIcon(service.icon);\r\n        }\r\n\r\n        if(error){\r\n            history.push('/admin/service')\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n        \r\n        if(updateError){\r\n            history.push('/admin/service')\r\n            alert.error(updateError);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(isUpdated){\r\n            alert.success('Service updated successfully');\r\n\r\n            history.push('/admin/service')\r\n\r\n            dispatch({\r\n                type: UPDATE_SERVICES_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n\r\n    }, [dispatch, alert, error, history, service, serviceId, isUpdated, updateError])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('title', title);\r\n        formData.set('subtitle', subtitle);\r\n        formData.set('description', description);\r\n        formData.set('iconBackground', iconBackground);\r\n        formData.set('icon', icon);\r\n\r\n        dispatch(updateServices(service._id, formData));\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Update Services'}/>\r\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\r\n            <div id=\"sidebar-wrapper\" >\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <hr/>\r\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\r\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\r\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )\r\n                        }\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} >\r\n                            <i className=\"fa fa-bars\"   ></i>\r\n                        </a>\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"login-clean\">\r\n                            <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data'    >\r\n                                <h2 className=\"sr-only\">Update Services</h2>\r\n                                <div className=\"div-forgot-password\">\r\n                                    <h3 className=\"forgot-password-heading\">Update Services </h3>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Title</h6>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        id=\"title\" \r\n                                        name=\"title\" \r\n                                        placeholder=\"Title\"\r\n                                        value={title}\r\n                                        disabled={true}\r\n                                        style={{backgroundColor: '#F5F5F5', color: 'gray'}}\r\n                                        onChange={(e) => setTitle(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Subtitle</h6>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        id=\"subtitle\" \r\n                                        name=\"subtitle\" \r\n                                        value={subtitle}\r\n                                        disabled={true}\r\n                                        onChange={(e) => setSubtitle(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Description</h6>\r\n                                    <textarea\r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"description\"\r\n                                        value={description}\r\n                                        placeholder=\"Services Description\"\r\n                                        style={{width: '100%', height: '150px'}}\r\n                                        onChange={(e) => setDescription(e.target.value)}\r\n                                        height='55px'\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Icon Background (eg. primary, secondary)</h6>\r\n                                    <div class=\"input-group mb-3\">\r\n                                        <div class=\"input-group-prepend\">\r\n                                            <span class=\"input-group-text\" id=\"basic-addon2\">\r\n                                                text-\r\n                                            </span>\r\n                                        </div>\r\n                                        <input \r\n                                            type=\"text\" \r\n                                            className=\"form-control\" \r\n                                            id=\"iconBackground\" \r\n                                            name=\"iconBackground\" \r\n                                            value={iconBackground}\r\n                                            onChange={(e) => setIconBackground(e.target.value)}\r\n                                            aria-label=\"iconBackground\"\r\n                                            aria-describedby=\"basic-addon2\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Icon (eg. eye, check, info)</h6>\r\n                                    <div class=\"input-group mb-3\">\r\n                                        <div class=\"input-group-prepend\">\r\n                                            <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                                fa-\r\n                                            </span>\r\n                                        </div>\r\n                                        <input \r\n                                            type=\"text\" \r\n                                            className=\"form-control\" \r\n                                            id=\"icon\" \r\n                                            name=\"icon\" \r\n                                            value={icon}\r\n                                            onChange={(e) => setIcon(e.target.value)}\r\n                                            aria-label=\"icon\"\r\n                                            aria-describedby=\"basic-addon1\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group text-center\">\r\n                                    <h6 style={{textAlign: 'left'}}>Icon Preview</h6>\r\n                                    <span className=\"fa-stack fa-4x\">\r\n                                        <i className={`fa fa-circle fa-stack-2x text-${iconBackground}`}></i>\r\n                                        <i className={`fa fa-${icon} fa-stack-1x fa-inverse`}></i>\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <button \r\n                                        className=\"btn btn-primary btn-block\" \r\n                                        type=\"submit\"\r\n                                    >\r\n                                        Update Services\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <Link to='/admin/service'>\r\n                                        <button\r\n                                            className=\"btn btn-secondary btn-block\"\r\n                                        >Discard</button>\r\n                                    </Link>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateServices\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\user\\RegisterError.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\reducers\\dashboardReducers.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListAdmins.js",["374","375"],"import React, { Fragment, useEffect , useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTableV5 } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport '../../css/dashboard.css'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getUsers, deleteUser, clearErrors } from '../../actions/userActions'\r\nimport { DELETE_USER_RESET, UPDATE_USER_RESET } from '../../constants/userConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from '../../actions/userActions'\r\n\r\nconst ListUsers = ({history}) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, users } = useSelector(state => state.users)\r\n    const { user } = useSelector(state => state.auth)\r\n    const { deleteError, isUpdated, isDeleted } = useSelector(state => state.updateUser)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getUsers());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n        \r\n        if(deleteError){\r\n            alert.error(deleteError)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(isUpdated){\r\n            alert.success('User has been updated successfully.');\r\n            history.push('/admin/users/admin')\r\n\r\n            dispatch({\r\n                type: UPDATE_USER_RESET\r\n            })\r\n        }\r\n\r\n        if(isDeleted){\r\n            alert.success('User has been deleted successfully.');\r\n            history.push('/admin/users/admin')\r\n\r\n            dispatch({\r\n                type: DELETE_USER_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, isDeleted, isUpdated, deleteError, history])\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    let len = 0;\r\n    \r\n    const setAdminData = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Role',\r\n                    field: 'role',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Name',\r\n                    field: 'name',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Contact Number',\r\n                    field: 'contactNumber',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Email',\r\n                    field: 'email',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                    sort: 'asc'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         users.forEach(user => {\r\n            if(user.role === 'admin'){\r\n                len += 1\r\n                data.rows.push({\r\n                    role: user.role,\r\n                    name: user.name,\r\n                    contactNumber: user.contactNumber,\r\n                    email: user.email,\r\n                    actions:\r\n                    <Fragment>\r\n                        <div style={{display: 'flex'}}>\r\n                            <Link to={`/superadmin/user/${user._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                                <i className='fa fa-pencil'></i>\r\n                            </Link>\r\n                            <button className=\"btn btn-danger py-1 px-2 ml-2\"\r\n                                disabled={user.role === 'superadmin' ? true : false}\r\n                                onClick={() => deleteUserHandler(user._id)}\r\n                            >\r\n                                <i className='fa fa-trash'></i>\r\n                            </button>\r\n                        </div>\r\n                    </Fragment>\r\n                })\r\n            }\r\n         })\r\n\r\n         return data\r\n    }\r\n\r\n    const deleteUserHandler = (id) => {\r\n        if(window.confirm(\"Are you sure you want to delete this user? This cannot be undone.\")){\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Admins'}/>\r\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\r\n            <div id=\"sidebar-wrapper\" >\r\n                <ul className=\"sidebar-nav\">\r\n                    <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                    <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                    <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                    <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                    {user && user.role !== 'admin' ? (\r\n                            <Fragment>\r\n                                <hr/>\r\n                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\r\n                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\r\n                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\r\n                            </Fragment>\r\n                        ) : (\r\n                            <Fragment>\r\n                                <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                <hr/>\r\n                                <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                <hr/>\r\n                                <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                            </Fragment>\r\n                        )}\r\n\r\n                    <hr/>\r\n                    <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                </ul>\r\n            </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\r\n                            <i className=\"fa fa-bars\"   ></i>\r\n                        </a>\r\n                        <Fragment>\r\n                        <div style={{padding: '30px'}}>\r\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Admins</h1>\r\n                            {loading? <Loader/> : (\r\n                                <MDBDataTableV5\r\n                                    data={setAdminData()}\r\n                                    entries={5}\r\n                                    entriesOptions={[5, 10, 15, 20]}\r\n                                    searchTop\r\n                                    scrollX\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListUsers\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\user\\ForgotPassword.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\reducers\\websiteReducers.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\reducers\\productReducers.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\reducers\\userReducers.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\user\\PasswordSuccess.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\route\\ProtectedRoute.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\user\\NewPassword.js",["376","377"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from  'react-redux'\r\nimport { resetPassword, clearErrors } from './../../actions/userActions'\r\nimport { INSIDE_DASHBOARD_FALSE } from '../../constants/dashboardConstants'\r\n\r\nconst NewPassword = ({ history, match }) => {\r\n\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, success } = useSelector(state => state.forgotPassword);\r\n    \r\n    const [showOld, setOld] = useState('false')\r\n\r\n    const showOldToggle = () => {\r\n        setOld(!showOld)\r\n    }\r\n\r\n    const [showNew, setNew] = useState('false')\r\n\r\n    const showNewToggle = () => {\r\n        setNew(!showNew)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(success){\r\n            history.push('/password-success')\r\n            alert.success('Password updated successfully');\r\n        }\r\n        \r\n        if(error){\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_FALSE\r\n        })\r\n\r\n    }, [dispatch, alert, error, success, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('password', password);\r\n        formData.set('confirmPassword', confirmPassword);\r\n\r\n        dispatch(resetPassword(match.params.token, formData));\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Reset Password'}/>\r\n            <div className=\"login\" style={{paddingTop: '100px'}}>\r\n                <form onSubmit={submitHandler}>\r\n                    <h2 className=\"sr-only\">New Password</h2>\r\n                    <div className=\"div-forgot-password\">\r\n                        <h3 className=\"forgot-password-heading\">New Password</h3>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <h6>New Password</h6>\r\n                        <div class=\"input-group mb-3\">\r\n                            <input \r\n                                type={showOld ? \"password\" : \"text\"} \r\n                                className=\"form-control\" \r\n                                name=\"password\"\r\n                                value={password}\r\n                                placeholder=\"New Password\"\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                                aria-label=\"oldpassword\" aria-describedby=\"basic-addon1\"\r\n                            />\r\n                            <div class=\"input-group-prepend\">\r\n                                <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                    <a\r\n                                        onClick={showOldToggle}\r\n                                        style={{cursor: 'pointer'}}\r\n                                    >\r\n                                        <span className=\"fa-lg\">\r\n                                            <i className={showOld ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\r\n                                        </span>\r\n                                    </a>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <h6>Confirm Password</h6>\r\n                        <div class=\"input-group mb-3\">\r\n                            <input\r\n                                type={showNew ? \"password\" : \"text\"} \r\n                                className=\"form-control\"\r\n                                name=\"confirmPassword\"\r\n                                value={confirmPassword}\r\n                                placeholder=\"Confirm Password\"\r\n                                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                                aria-label=\"confirm\" aria-describedby=\"basic-addon1\"\r\n                            />\r\n                            <div class=\"input-group-prepend\">\r\n                                <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                    <a\r\n                                        onClick={showNewToggle}\r\n                                        style={{cursor: 'pointer'}}\r\n                                    >\r\n                                        <span className=\"fa-lg\">\r\n                                            <i className={showNew ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\r\n                                        </span>\r\n                                    </a>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <button \r\n                            className=\"btn btn-primary btn-block\" \r\n                            type=\"submit\"\r\n                        >Update New Password</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NewPassword\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\actions\\userActions.js",["378","379"],"import axios from 'axios'\r\nimport {\r\n    LOGIN_REQUEST,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    REGISTER_USER_REQUEST,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAIL,\r\n    LOAD_USER_REQUEST,\r\n    LOAD_USER_SUCCESS,\r\n    LOAD_USER_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    UPDATE_PROFILE_REQUEST,\r\n    UPDATE_PROFILE_SUCCESS,\r\n    UPDATE_PROFILE_FAIL,\r\n    UPDATE_PASSWORD_REQUEST,\r\n    UPDATE_PASSWORD_SUCCESS,\r\n    UPDATE_PASSWORD_FAIL,\r\n    FORGOT_PASSWORD_REQUEST,\r\n    FORGOT_PASSWORD_SUCCESS,\r\n    FORGOT_PASSWORD_FAIL,\r\n    NEW_PASSWORD_REQUEST,\r\n    NEW_PASSWORD_SUCCESS,\r\n    NEW_PASSWORD_FAIL,\r\n    ALL_USERS_REQUEST,\r\n    ALL_USERS_SUCCESS,\r\n    ALL_USERS_FAIL,\r\n    GET_USER_REQUEST,\r\n    GET_USER_SUCCESS,\r\n    GET_USER_FAIL,\r\n    UPDATE_USER_REQUEST,\r\n    UPDATE_USER_SUCCESS,\r\n    UPDATE_USER_FAIL,\r\n    UPDATE_USER_RESET,\r\n    DELETE_USER_REQUEST,\r\n    DELETE_USER_SUCCESS,\r\n    DELETE_USER_RESET,\r\n    DELETE_USER_FAIL,\r\n    LOGOUT_FAIL,\r\n    CLEAR_ERRORS\r\n} from '../constants/userConstants'\r\n\r\n//Get product details\r\nexport const getUserDetails = (id) => async(dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: GET_USER_REQUEST\r\n        })\r\n\r\n        const { data } = await axios.get(`/api/v1/superadmin/user/${id}`)\r\n\r\n        dispatch({\r\n            type: GET_USER_SUCCESS,\r\n            payload: data.user\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type: GET_USER_FAIL,\r\n            payload: error.response.data.message\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n// Update user (SUPERADMIN)\r\nexport const updateUser = (id, userData) => async(dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: UPDATE_USER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }\r\n        const { data } = await axios.put(`/api/v1/superadmin/user/${id}`, userData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_USER_SUCCESS,\r\n            payload: data.success\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type: UPDATE_USER_FAIL,\r\n            payload: error.response.data.message\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n// Delete user (ADMIN)\r\nexport const deleteUser = (id) => async(dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: DELETE_USER_REQUEST\r\n        })\r\n\r\n        const { data } = await axios.delete(`/api/v1/superadmin/user/${id}`)\r\n\r\n        dispatch({\r\n            type: DELETE_USER_SUCCESS,\r\n            payload: data.success\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type: DELETE_USER_FAIL,\r\n            payload: error.response.data.message\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport const getUsers = () => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: ALL_USERS_REQUEST\r\n        })\r\n\r\n        const { data } = await axios.get('/api/v1/superadmin/users')\r\n\r\n        dispatch({\r\n            type: ALL_USERS_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type: ALL_USERS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Login\r\nexport const login = ( email, password ) => async (dispatch) => {\r\n    try {\r\n        dispatch ({\r\n            type: LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/v1/login', { email, password }, config)\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOGIN_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Register user\r\nexport const register = ( userData ) => async (dispatch) => {\r\n    try {\r\n        dispatch ({\r\n            type: REGISTER_USER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/v1/superadmin/register', userData, config)\r\n\r\n        dispatch({\r\n            type: REGISTER_USER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: REGISTER_USER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Load user\r\nexport const loadUser = () => async (dispatch) => {\r\n    try {\r\n        dispatch ({\r\n            type: LOAD_USER_REQUEST\r\n        })\r\n\r\n        const { data } = await axios.get('/api/v1/me')\r\n\r\n        dispatch({\r\n            type: LOAD_USER_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOAD_USER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Logout user\r\nexport const logout = () => async (dispatch) => {\r\n    try {\r\n        await axios.get('/api/v1/logout')\r\n\r\n        dispatch({\r\n            type: LOGOUT_SUCCESS\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOGOUT_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Update user profile\r\nexport const updateProfile = ( userData ) => async (dispatch) => {\r\n    try {\r\n        dispatch ({\r\n            type: UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put('/api/v1/me/update', userData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_PROFILE_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Update user password\r\nexport const updatePassword = ( passwords ) => async (dispatch) => {\r\n    try {\r\n        dispatch ({\r\n            type: UPDATE_PASSWORD_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put('/api/v1/password/update', passwords, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_PASSWORD_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_PASSWORD_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Forgot password\r\nexport const forgotPassword = ( email ) => async (dispatch) => {\r\n    try {\r\n        dispatch ({\r\n            type: FORGOT_PASSWORD_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/v1/password/forgot', email, config)\r\n\r\n        dispatch({\r\n            type: FORGOT_PASSWORD_SUCCESS,\r\n            payload: data.message\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: FORGOT_PASSWORD_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// New password\r\nexport const resetPassword = ( token, passwords ) => async (dispatch) => {\r\n    try {\r\n        dispatch ({\r\n            type: NEW_PASSWORD_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/password/reset/${token}`, passwords, config)\r\n\r\n        dispatch({\r\n            type: NEW_PASSWORD_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_PASSWORD_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n//clear errors\r\nexport const clearErrors = () => async(dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERRORS\r\n    })\r\n}","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\reducers\\inquiryReducers.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\Home.js",["380","381","382","383","384","385","386","387","388","389"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport '../css/styles.css'\r\nimport MetaData from './layout/MetaData'\r\nimport Loader from './layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getHomes, clearErrors } from '../actions/websiteActions'\r\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Home = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { loading,\r\n            error,\r\n            productsDescription,\r\n            servicesDescription,\r\n            productImageLeft,\r\n            productImageRight,\r\n            titleBackground,\r\n            servicesBackground\r\n        } = useSelector(state => state.homes)\r\n\r\n    useEffect(() => {\r\n        dispatch(getHomes())\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_FALSE\r\n        })\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n    }, [dispatch, alert, error]) //loop if homePage added as dependency\r\n\r\n    return (\r\n            <Fragment>\r\n                <MetaData title={'Home'}/>\r\n                {loading ? <Loader/> : (\r\n                    <Fragment>\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 text-center\"\r\n                                    style={{\r\n                                    background: \"linear-gradient(to bottom, rgba(216, 203, 194, 0.8) 0%, rgba(34, 33, 32, 0.8) 100%), url(\"+`${titleBackground}`+\") center / auto no-repeat\", \r\n                                    backgroundSize: \"cover\", \r\n                                    width: \"100%\", \r\n                                    height: \"100%\"}\r\n                                }>\r\n                                    <div className=\"main-section\">\r\n                                        <img className=\"logo\" src=\"https://res.cloudinary.com/agiletechnodynamicsinc/image/upload/v1615205387/websiteImages/agile-logo-home_nhud2z.png\"/>\r\n                                        <h1 className=\"pt-3 main-text\">AGILE TECHNODYNAMICS, INC.</h1>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"row agile-products-home\">\r\n                                    <div className=\"col\">\r\n                                        <h1>Our Products</h1>\r\n                                        <p className=\"our-products-description\">{productsDescription}</p>\r\n                                        <Link className=\"mt-4\" to=\"/our-products\">See Products <i className=\"fa fa-angle-right\"></i></Link>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\" style={{margin: 'auto'}}>\r\n                                    <div className=\"col-sm-12 col-md-6\">\r\n                                        <div className=\"product-container\" style={{background: \"url(\"+`${productImageLeft}`+\") center / auto no-repeat\", backgroundSize: 'contain'}}></div>\r\n                                    </div>\r\n                                    <div className=\"col-sm-12 col-md-6\">\r\n                                        <div className=\"product-container\" style={{background: \"url(\"+`${productImageRight}`+\") center / auto no-repeat\", backgroundSize: 'contain'}}></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row services-container\" \r\n                                style={{\r\n                                    background: \"linear-gradient(to right, rgb(0,0,0) 0%, rgba(151,161,179,0.4) 100%), url(\"+`${servicesBackground}`+\") no-repeat\", \r\n                                    backgroundSize: \"cover\", \r\n                                    backgroundPosition: \"right\"\r\n                                }}\r\n                            >\r\n                                <div className=\"col-sm-12 col-md-6\">\r\n                                    <div>\r\n                                        <div className=\"col-auto our-services-description\">\r\n                                            <h1 className=\"text-center\">Our Services</h1>\r\n                                            <p>{servicesDescription}</p>\r\n                                            <Link className=\"mt-4\" to=\"/our-services\">See Services <i className=\"fa fa-angle-right\"></i></Link>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Fragment>\r\n                )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Home;","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\About.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\layout\\Header.js",["390","391","392","393","394","395"],"import React, { Fragment, useState } from 'react'\r\nimport '../../css/Navbar---Apple.css'\r\nimport '../../css/Navbar---Apple-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useAlert } from 'react-alert'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst Header = () => {\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n    const { user, loading } = useSelector(state => state.auth)\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n    \r\n    let userAvatar = \"\"\r\n\r\n    if(user && user.avatar) {\r\n        userAvatar = user.avatar.url\r\n    } else {\r\n        userAvatar = \"\"\r\n    }\r\n\r\n    const [isOpen, setOpen] = useState('true');\r\n\r\n    const toggle = () => {\r\n        setOpen(!isOpen)\r\n    }\r\n\r\n    const [isProductOpen, setProductOpen] = useState('false');\r\n\r\n    const productToggle = () => {\r\n        setProductOpen(!isProductOpen)\r\n    }\r\n\r\n    const [isUserOpen, setUserOpen] = useState('false');\r\n\r\n    const userToggle = () => {\r\n        setUserOpen(!isUserOpen)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <nav className=\"navbar navbar-light navbar-expand-md fixed-top bg-light navbar--apple\">\r\n                <div className=\"container\">\r\n                    <button \r\n                        data-toggle=\"collapse\" \r\n                        data-target=\"#menu\" \r\n                        className={isOpen ? \"navbar-toggler\" : \"navbar-toggler collapsed\"}\r\n                        aria-expanded={isOpen ? true : false}\r\n                        onClick={toggle}\r\n                    >\r\n                        <span className=\"sr-only\">Toggle navigation</span>\r\n                        <span className=\"navbar-toggler-icon\"><i className=\"la la-navicon\"></i></span>\r\n                    </button>\r\n                    <div className={isOpen ? \"collapse navbar-collapse show\" : \"collapse navbar-collapse d-none\"} id=\"menu\">\r\n                        <ul className=\"navbar-nav flex-grow-1 justify-content-between\">\r\n                            <li className=\"nav-item d-none d-xs-block d-md-block\">\r\n                                <a href=\"/\">\r\n                                    <img className=\"nav-link nav-logo\" src=\"https://res.cloudinary.com/agiletechnodynamicsinc/image/upload/v1615205387/websiteImages/agile-header-logo_tan5lw.png\"/>\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/\"><strong></strong></Link></li>\r\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/\"><strong>Home</strong></Link></li>\r\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/about-us\"><strong>About Us</strong></Link></li>\r\n                        <div className=\"dropdown d-inline\">    \r\n                            <button\r\n                                className=\"btn dropdown-toggle text-black nav-link\"\r\n                                type=\"button\"\r\n                                id=\"productMenuButton\"\r\n                                data-toggle=\"dropdown\"\r\n                                aria-aria-haspopup=\"true\"\r\n                                aria-expanded=\"false\"\r\n                                style={{fontSize: '15px'}}\r\n                                onClick={productToggle}\r\n                            >\r\n                                <strong>Products</strong>\r\n                            </button>\r\n                            <div className=\"dropdown-menu\" aria-aria-labelledby=\"productMenuButton\">\r\n                                <Link className=\"dropdown-item\" to='/our-products'>\r\n                                    All Products\r\n                                </Link>\r\n                                <hr/>\r\n                                <Link className=\"dropdown-item\" to='/products/Mechanical Engineering'>\r\n                                    Mechanical Engineering\r\n                                </Link>\r\n                                <Link className=\"dropdown-item\" to='/products/DC Power Systems'>\r\n                                    DC Power Systems\r\n                                </Link>\r\n                                <Link className=\"dropdown-item\" to='/products/Electrical Engineering Equipment'>\r\n                                    Electrical Engineering Equipment\r\n                                </Link>\r\n                                <Link className=\"dropdown-item\" to='/products/Test Equipment'>\r\n                                    Test Equipment\r\n                                </Link>\r\n                                <Link className=\"dropdown-item\" to='/products/Others'>\r\n                                    Others\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/our-services\"><strong>Services</strong></Link></li>\r\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/contact-us\"><strong>Contact Us</strong></Link></li>\r\n                        {user ? (\r\n                            <div class=\"dropdown d-inline\">\r\n                                <button\r\n                                    className=\"btn dropdown-toggle text-black nav-link\"\r\n                                    type=\"button\"\r\n                                    id=\"userMenuButton\"\r\n                                    data-toggle=\"dropdown\"\r\n                                    aria-aria-haspopup=\"true\"\r\n                                    aria-expanded=\"false\"\r\n                                    style={{fontSize: '15px'}}\r\n                                    onClick={userToggle}\r\n                                >\r\n                                    <img \r\n                                        class='mr-2 rounded-circle'\r\n                                        src={userAvatar}\r\n                                        width='30' \r\n                                        height='32'\r\n                                    />{user && user.name}\r\n                                </button>\r\n                                <div class=\"dropdown-menu\" aria-aria-labelledby=\"userMenuButton\">\r\n                                    <Link className=\"dropdown-item\" to=\"/admin/dashboard\">\r\n                                        Dashboard\r\n                                    </Link>\r\n                                    <Link className=\"dropdown-item text-danger\" to=\"/\" onClick={logoutHandler}>\r\n                                        Log out\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                            ) : !loading && <Link to=\"/login\">\r\n                                <div></div>\r\n                            </Link>}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Header;","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateProfile.js",["396","397"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from  'react-redux'\r\nimport { updateProfile, loadUser, clearErrors } from './../../actions/userActions'\r\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants'\r\n\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { logout } from './../../actions/userActions'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\n\r\nconst UpdateProfile = ({ history }) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [contactNumber, setContactNumber] = useState('');\r\n    const [address, setAddress] = useState('');\r\n    const [avatar, setAvatar] = useState('');\r\n    const [avatarPreview, setAvatarPreview] = useState('images/default_avatar.png');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user } = useSelector(state => state.auth);\r\n    const { error, isUpdated, loading } = useSelector(state => state.user);\r\n    \r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(user) {\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n            setContactNumber(user.contactNumber);\r\n            setAddress(user.address);\r\n            setAvatarPreview(user.avatar.url);\r\n        }\r\n\r\n        if(error){\r\n            history.push('/admin/me')\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(isUpdated){\r\n            history.push('/admin/me')\r\n            alert.success('User updated successfully');\r\n            dispatch(loadUser());\r\n\r\n            dispatch({\r\n                type: UPDATE_PROFILE_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n\r\n    }, [dispatch, alert, error, history, user, isUpdated])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('email', email);\r\n        formData.set('contactNumber', contactNumber);\r\n        formData.set('address', address);\r\n        formData.set('avatar', avatar);\r\n\r\n        dispatch(updateProfile(formData));\r\n    }\r\n\r\n    const onChange = e => {\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = () => {\r\n            if(reader.readyState === 2){\r\n                setAvatarPreview(reader.result)\r\n                setAvatar(reader.result)\r\n            }\r\n        }\r\n\r\n        reader.readAsDataURL(e.target.files[0])\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Update Profile'}/>\r\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\r\n                <div id=\"sidebar-wrapper\" >\r\n                    <ul className=\"sidebar-nav\">\r\n                                <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                                <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                                <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                                <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                                {user && user.role !== 'admin' ? (\r\n                                        <Fragment>\r\n                                            <hr/>\r\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\r\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\r\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\r\n                                        </Fragment>\r\n                                    ) : (\r\n                                        <Fragment>\r\n                                            <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                            <hr/>\r\n                                            <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                            <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                            <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                            <hr/>\r\n                                            <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                            <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                        </Fragment>\r\n                                    )\r\n                                }\r\n                                <hr/>\r\n                                <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                            </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} >\r\n                            <i className=\"fa fa-bars\"   ></i>\r\n                        </a>\r\n                        <div className=\"container\">\r\n                            <div className=\"main-body\">\r\n                                <div className=\"row gutters-sm\">\r\n                                    <div className=\"col-md-4 mb-3\">\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-body\">\r\n                                                <div className=\"d-flex flex-column align-items-center text-center\">\r\n                                                    <img src={avatarPreview} alt=\"Admin\" className=\"rounded-circle\" width=\"100%\" style={{minWidth: '100px', maxWidth: '150px'}}/>\r\n                                                    <div className=\"mt-3\">\r\n                                                    <hr/>\r\n                                                    <input \r\n                                                        type=\"file\" \r\n                                                        id=\"avatar\" \r\n                                                        name=\"avatar\" \r\n                                                        accept=\"images/*\"\r\n                                                        onChange={onChange}\r\n                                                        style={{width: '90%'}}\r\n                                                    />\r\n                                                    <br/>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-8\">\r\n                                        <div className=\"card mb-3\">\r\n                                            <div className=\"card-body\">\r\n                                                <form method=\"post\" onSubmit={submitHandler}>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-sm-3\">\r\n                                                        <h6 className=\"mb-0\">Full Name</h6>\r\n                                                        </div>\r\n                                                        <div className=\"col-sm-9 text-secondary\">\r\n                                                        <input \r\n                                                            type=\"text\" \r\n                                                            className=\"form-control\" \r\n                                                            name=\"name\"\r\n                                                            value={name}\r\n                                                            placeholder=\"Name\"\r\n                                                            onChange={(e) => setName(e.target.value)}\r\n                                                        />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <hr/>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-sm-3\">\r\n                                                        <h6 className=\"mb-0\">Email</h6>\r\n                                                        </div>\r\n                                                        <div className=\"col-sm-9 text-secondary\">\r\n                                                        <input \r\n                                                            type=\"email\" \r\n                                                            className=\"form-control\" \r\n                                                            name=\"email\"\r\n                                                            value={email}\r\n                                                            placeholder=\"Email\"\r\n                                                            onChange={(e) => setEmail(e.target.value)}\r\n                                                        />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <hr/>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-sm-3\">\r\n                                                        <h6 className=\"mb-0\">Phone</h6>\r\n                                                        </div>\r\n                                                        <div className=\"col-sm-9 text-secondary\">\r\n                                                        <input \r\n                                                            type=\"text\" \r\n                                                            className=\"form-control\" \r\n                                                            name=\"contactNumber\"\r\n                                                            value={contactNumber}\r\n                                                            placeholder=\"09xx-xxx-xxxx\"\r\n                                                            pattern=\"^[0][9]\\d{2}-\\d{3}-\\d{4}$\"\r\n                                                            onChange={(e) => setContactNumber(e.target.value)}\r\n                                                        />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <hr/>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-sm-3\">\r\n                                                        <h6 className=\"mb-0\">Address</h6>\r\n                                                        </div>\r\n                                                        <div className=\"col-sm-9 text-secondary\">\r\n                                                            <textarea \r\n                                                                type=\"text\"\r\n                                                                className=\"form-control\"\r\n                                                                name=\"address\"\r\n                                                                value={address}\r\n                                                                placeholder=\"Address\"\r\n                                                                onChange={(e) => setAddress(e.target.value)}\r\n                                                                style={{height: '150px'}}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-sm-12\">\r\n                                                            <button\r\n                                                                className=\"btn btn-primary btn-block mt-5\"\r\n                                                                type=\"submit\"\r\n                                                            >Update Profile</button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-sm-12\">\r\n                                                            <Link to='/admin/me' className='text-decoration-none'>\r\n                                                                <button\r\n                                                                    className=\"btn btn-secondary btn-block mt-2\"\r\n                                                                    type=\"submit\"\r\n                                                                >Discard Changes</button>\r\n                                                            </Link>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>    \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateProfile\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\Dashboard.js",["398","399","400"],"import React, { Fragment, useEffect, useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport MetaData from './../layout/MetaData'\r\nimport Loader from './../layout/Loader'\r\nimport '../../css/bootstrap.min.css'\r\nimport '../../css/dashboard.css'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getAdminProducts } from '../../actions/productActions'\r\nimport { listInquiry } from '../../actions/inquiryActions'\r\nimport { getUsers } from '../../actions/userActions'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst Dashboard = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { loading, products } = useSelector(state => state.products)\r\n    const { users, adminCount, superadminCount } = useSelector(state => state.users)\r\n    const { inquiryCount, appointmentCount, otherCount } = useSelector(state => state.listInquiry)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n    \r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getAdminProducts())\r\n        dispatch(listInquiry())\r\n        dispatch(getUsers())\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch])\r\n    \r\n    console.log(inquiryCount)\r\n    \r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Dashboard'}/>\r\n            <Fragment>\r\n                {loading ? <Loader/> : (\r\n                    <Fragment>\r\n                        <MetaData title={'Admin Dashboard'}/>\r\n                        <div id=\"wrapper\" className={isToggled ? null : \"toggled\"}   >\r\n                            <div id=\"sidebar-wrapper\" >\r\n                                <ul className=\"sidebar-nav\">\r\n                                    <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                                    <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                                    <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                                    <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                                    {user && user.role !== 'admin' ? (\r\n                                            <Fragment>\r\n                                                <hr/>\r\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\r\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\r\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\r\n                                            </Fragment>\r\n                                        ) : (\r\n                                            <Fragment>\r\n                                                <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                                <hr/>\r\n                                                <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                                <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                                <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                                <hr/>\r\n                                                <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                                <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                            </Fragment>\r\n                                        )}\r\n\r\n                                    <hr/>\r\n                                    <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                                </ul>\r\n                            </div>\r\n                            <div className=\"page-content-wrapper\">\r\n                                <div className=\"container-fluid\">\r\n                                    <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\r\n                                        <i className=\"fa fa-bars\"   ></i>\r\n                                    </a>\r\n                                    {user && user.role !== 'admin' ? (\r\n                                        <Fragment>\r\n                                            <div className=\"main-section\" style={{paddingTop: '65px'}}>\r\n                                                <h3><strong>Overview</strong></h3>\r\n                                                <div className=\"dashbord\">\r\n                                                    <div className=\"icon-section\">\r\n                                                        <i className=\"fa fa-users\" aria-hidden=\"true\"></i><br/>\r\n                                                        <small>Admins</small>\r\n                                                        <p>{adminCount} admins</p>\r\n                                                    </div>\r\n                                                    <div className=\"detail-section\">\r\n                                                        <Link to=\"/admin/users/admin\">More Info </Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"dashbord dashbord-green\">\r\n                                                    <div className=\"icon-section\">\r\n                                                        <i className=\"fa fa-user-circle\" aria-hidden=\"true\"></i><br/>\r\n                                                        <small>Super Admins</small>\r\n                                                        <p>{superadminCount}  superadmins</p>\r\n                                                    </div>\r\n                                                    <div className=\"detail-section\">\r\n                                                        <Link to=\"/admin/users/superadmin\">More Info </Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Fragment>\r\n                                    ) : (\r\n                                        <Fragment>\r\n                                            <div className=\"main-section\" style={{paddingTop: '65px'}}>\r\n                                                <h3><strong>Inbox</strong></h3>\r\n                                                <div className=\"dashbord\">\r\n                                                    <div className=\"icon-section\">\r\n                                                        <i className=\"fa fa-envelope\" aria-hidden=\"true\"></i><br/>\r\n                                                        <small>Inquiries</small>\r\n                                                        <p>{inquiryCount} messages</p>\r\n                                                    </div>\r\n                                                    <div className=\"detail-section\">\r\n                                                        <Link to=\"/admin/inquiries\">View Inquiries</Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"dashbord dashbord-green\">\r\n                                                    <div className=\"icon-section\">\r\n                                                        <i className=\"fa fa-archive\" aria-hidden=\"true\"></i><br/>\r\n                                                        <small>Appointments</small>\r\n                                                        <p>{appointmentCount} messages</p>\r\n                                                    </div>\r\n                                                    <div className=\"detail-section\">\r\n                                                        <Link to=\"/admin/appointments\">View Appointments</Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"dashbord dashbord-orange\">\r\n                                                    <div className=\"icon-section\">\r\n                                                        <i className=\"fa fa-inbox\" aria-hidden=\"true\"></i><br/>\r\n                                                        <small>Other Concerns</small>\r\n                                                        <p>{otherCount} messages</p>\r\n                                                    </div>\r\n                                                    <div className=\"detail-section\">\r\n                                                        <Link to=\"/admin/others\">View Others</Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Fragment>\r\n                                    )}\r\n                                    <div className=\"main-section\" style={{paddingTop: '65px'}}>\r\n                                        <h3><strong>Settings</strong></h3>\r\n                                        <div className=\"dashbord dashbord-blue\">\r\n                                            <div className=\"icon-section\">\r\n                                                <i className=\"fa fa-home\" aria-hidden=\"true\"></i><br/>\r\n                                                <p>Update Home</p>\r\n                                            </div>\r\n                                            <div className=\"detail-section\">\r\n                                                <Link to=\"/admin/home\">Update <i className=\"fa fa-angle-right\"></i></Link>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"dashbord dashbord-red\">\r\n                                            <div className=\"icon-section\">\r\n                                                <i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i><br/>\r\n                                                <p>Update About</p>\r\n                                            </div>\r\n                                            <div className=\"detail-section\">\r\n                                                <Link to=\"/admin/about\">Update <i className=\"fa fa-angle-right\"></i></Link>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"dashbord dashbord-skyblue\">\r\n                                            <div className=\"icon-section\">\r\n                                                <i className=\"fa fa-quote-left\" aria-hidden=\"true\"></i><br/>\r\n                                                <p>Update Footer</p>\r\n                                            </div>\r\n                                            <div className=\"detail-section\">\r\n                                                <Link to=\"/admin/footer\">Update <i className=\"fa fa-angle-right\"></i></Link>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"dashbord dashbord-green\">\r\n                                            <div className=\"icon-section\">\r\n                                                <i className=\"fa fa-check\" aria-hidden=\"true\"></i><br/>\r\n                                                <p>Update Services</p>\r\n                                            </div>\r\n                                            <div className=\"detail-section\">\r\n                                                <Link to=\"/admin/service\">Update <i className=\"fa fa-angle-right\"></i></Link>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Fragment>\r\n                )}\r\n            </Fragment>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\user\\Login.js",["401"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Loader from '../layout/Loader'\r\nimport MetaData from '../layout/MetaData'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from  'react-redux'\r\nimport { login, clearErrors } from './../../actions/userActions'\r\nimport { INSIDE_DASHBOARD_FALSE } from '../../constants/dashboardConstants'\r\nimport '../../css/forms.css'\r\n\r\nconst Login = ( { history }) => {\r\n\r\n    const [ email, setEmail ] = useState('');\r\n    const [ password, setPassword ] = useState('');\r\n    \r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\r\n\r\n    const [isChecked, setChecked] = useState('false')\r\n\r\n    const checkboxCheck = () => {\r\n        setChecked(!isChecked)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(isAuthenticated) {\r\n            history.push('/')\r\n        }\r\n\r\n        if(error){\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        } //loadError in load_user_fail\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_FALSE\r\n        })\r\n    }, [dispatch, alert, isAuthenticated, error, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(login(email, password));\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading ? <Loader/> : (\r\n                <Fragment>\r\n                    <MetaData title={'Login'}/>\r\n                    <div className=\"login\" style={{paddingTop: '150px'}}>\r\n                        <form onSubmit={submitHandler}>\r\n                            <h2 className=\"sr-only\">Login Form</h2>\r\n                            <div className=\"illustration\">\r\n                                <img className=\"login-logo\" alt=\"company logo\" src=\"https://res.cloudinary.com/agiletechnodynamicsinc/image/upload/v1615205387/websiteImages/agile-logo-home_nhud2z.png\"/>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input className=\"form-control\" type=\"email\" name=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div class=\"input-group mb-3\">\r\n                                    <input \r\n                                        className=\"form-control\" \r\n                                        type={isChecked ? \"password\" : \"text\"}  \r\n                                        name=\"password\" \r\n                                        placeholder=\"Password\" \r\n                                        value={password} \r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                    />\r\n                                    <div class=\"input-group-prepend\">\r\n                                        <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                            <a\r\n                                                onClick={checkboxCheck}\r\n                                                style={{cursor: 'pointer'}}\r\n                                            >\r\n                                                <span className=\"fa-lg\">\r\n                                                    <i className={isChecked ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\r\n                                                </span>\r\n                                            </a>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button className=\"btn btn-primary btn-block\" type=\"submit\">Log In</button>\r\n                            </div>\r\n                            <Link className=\"forgot\" to=\"/password/forgot\">Forgot your password?</Link>\r\n                        </form>\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\NewProduct.js",["402","403","404"],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\layout\\MetaData.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\product\\ProductDisplay.js",["405"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProductList = ({ product }) => {\r\n    return (\r\n        <div class=\"col-sm-6 col-md-4 col-lg-3 col-xl-3 product-image\">\r\n            <div>\r\n                <img alt={`Image of ${product.name}`} src={product.images[0].url}/>\r\n            </div>\r\n            <Link to={`/our-products/${product._id}`} class=\"product-name\">\r\n                {product.name}\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductList\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\actions\\productActions.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\actions\\websiteActions.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\constants\\dashboardConstants.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\constants\\userConstants.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\constants\\inquiryConstants.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\constants\\websiteConstants.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\constants\\productConstants.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\actions\\inquiryActions.js",[],{"ruleId":"406","replacedBy":"407"},{"ruleId":"408","replacedBy":"409"},{"ruleId":"410","severity":1,"message":"411","line":62,"column":8,"nodeType":"412","messageId":"413","endLine":62,"endColumn":14},{"ruleId":"410","severity":1,"message":"414","line":70,"column":20,"nodeType":"412","messageId":"413","endLine":70,"endColumn":35},{"ruleId":"410","severity":1,"message":"415","line":70,"column":37,"nodeType":"412","messageId":"413","endLine":70,"endColumn":41},{"ruleId":"410","severity":1,"message":"416","line":6,"column":10,"nodeType":"412","messageId":"413","endLine":6,"endColumn":14},{"ruleId":"410","severity":1,"message":"417","line":20,"column":22,"nodeType":"412","messageId":"413","endLine":20,"endColumn":37},{"ruleId":"410","severity":1,"message":"418","line":21,"column":25,"nodeType":"412","messageId":"413","endLine":21,"endColumn":39},{"ruleId":"410","severity":1,"message":"417","line":20,"column":22,"nodeType":"412","messageId":"413","endLine":20,"endColumn":37},{"ruleId":"410","severity":1,"message":"417","line":20,"column":22,"nodeType":"412","messageId":"413","endLine":20,"endColumn":37},{"ruleId":"410","severity":1,"message":"417","line":20,"column":22,"nodeType":"412","messageId":"413","endLine":20,"endColumn":37},{"ruleId":"410","severity":1,"message":"417","line":20,"column":22,"nodeType":"412","messageId":"413","endLine":20,"endColumn":37},{"ruleId":"410","severity":1,"message":"417","line":20,"column":22,"nodeType":"412","messageId":"413","endLine":20,"endColumn":37},{"ruleId":"410","severity":1,"message":"419","line":1,"column":38,"nodeType":"412","messageId":"413","endLine":1,"endColumn":46},{"ruleId":"410","severity":1,"message":"420","line":17,"column":13,"nodeType":"412","messageId":"413","endLine":17,"endColumn":20},{"ruleId":"410","severity":1,"message":"421","line":9,"column":24,"nodeType":"412","messageId":"413","endLine":9,"endColumn":40},{"ruleId":"410","severity":1,"message":"420","line":27,"column":13,"nodeType":"412","messageId":"413","endLine":27,"endColumn":20},{"ruleId":"422","severity":1,"message":"423","line":64,"column":8,"nodeType":"424","endLine":64,"endColumn":65,"suggestions":"425"},{"ruleId":"426","severity":1,"message":"427","line":125,"column":25,"nodeType":"428","endLine":125,"endColumn":108},{"ruleId":"410","severity":1,"message":"420","line":23,"column":13,"nodeType":"412","messageId":"413","endLine":23,"endColumn":20},{"ruleId":"426","severity":1,"message":"427","line":121,"column":25,"nodeType":"428","endLine":121,"endColumn":108},{"ruleId":"410","severity":1,"message":"420","line":26,"column":44,"nodeType":"412","messageId":"413","endLine":26,"endColumn":51},{"ruleId":"426","severity":1,"message":"427","line":142,"column":25,"nodeType":"428","endLine":142,"endColumn":108},{"ruleId":"429","severity":1,"message":"430","line":183,"column":41,"nodeType":"428","endLine":188,"endColumn":43},{"ruleId":"410","severity":1,"message":"420","line":23,"column":31,"nodeType":"412","messageId":"413","endLine":23,"endColumn":38},{"ruleId":"426","severity":1,"message":"427","line":118,"column":25,"nodeType":"428","endLine":118,"endColumn":108},{"ruleId":"426","severity":1,"message":"427","line":141,"column":49,"nodeType":"428","endLine":144,"endColumn":50},{"ruleId":"426","severity":1,"message":"427","line":167,"column":49,"nodeType":"428","endLine":170,"endColumn":50},{"ruleId":"426","severity":1,"message":"427","line":136,"column":25,"nodeType":"428","endLine":136,"endColumn":109},{"ruleId":"422","severity":1,"message":"431","line":75,"column":8,"nodeType":"424","endLine":75,"endColumn":76,"suggestions":"432"},{"ruleId":"410","severity":1,"message":"433","line":114,"column":17,"nodeType":"412","messageId":"413","endLine":114,"endColumn":20},{"ruleId":"434","severity":1,"message":"435","line":170,"column":36,"nodeType":"436","messageId":"437","endLine":170,"endColumn":38},{"ruleId":"426","severity":1,"message":"427","line":212,"column":25,"nodeType":"428","endLine":212,"endColumn":109},{"ruleId":"410","severity":1,"message":"433","line":105,"column":17,"nodeType":"412","messageId":"413","endLine":105,"endColumn":20},{"ruleId":"426","severity":1,"message":"427","line":167,"column":25,"nodeType":"428","endLine":167,"endColumn":109},{"ruleId":"410","severity":1,"message":"433","line":104,"column":17,"nodeType":"412","messageId":"413","endLine":104,"endColumn":20},{"ruleId":"426","severity":1,"message":"427","line":168,"column":25,"nodeType":"428","endLine":168,"endColumn":109},{"ruleId":"410","severity":1,"message":"433","line":100,"column":13,"nodeType":"412","messageId":"413","endLine":100,"endColumn":16},{"ruleId":"426","severity":1,"message":"427","line":164,"column":25,"nodeType":"428","endLine":164,"endColumn":109},{"ruleId":"426","severity":1,"message":"427","line":153,"column":25,"nodeType":"428","endLine":153,"endColumn":109},{"ruleId":"410","severity":1,"message":"420","line":77,"column":13,"nodeType":"412","messageId":"413","endLine":77,"endColumn":20},{"ruleId":"434","severity":1,"message":"435","line":159,"column":31,"nodeType":"436","messageId":"437","endLine":159,"endColumn":33},{"ruleId":"426","severity":1,"message":"427","line":224,"column":25,"nodeType":"428","endLine":224,"endColumn":108},{"ruleId":"429","severity":1,"message":"430","line":93,"column":25,"nodeType":"428","endLine":98,"endColumn":27},{"ruleId":"426","severity":1,"message":"427","line":151,"column":25,"nodeType":"428","endLine":151,"endColumn":109},{"ruleId":"426","severity":1,"message":"427","line":112,"column":21,"nodeType":"428","endLine":112,"endColumn":105},{"ruleId":"426","severity":1,"message":"427","line":75,"column":37,"nodeType":"428","endLine":75,"endColumn":121},{"ruleId":"410","severity":1,"message":"433","line":104,"column":17,"nodeType":"412","messageId":"413","endLine":104,"endColumn":20},{"ruleId":"426","severity":1,"message":"427","line":167,"column":25,"nodeType":"428","endLine":167,"endColumn":109},{"ruleId":"426","severity":1,"message":"427","line":129,"column":25,"nodeType":"428","endLine":129,"endColumn":107},{"ruleId":"410","severity":1,"message":"433","line":104,"column":17,"nodeType":"412","messageId":"413","endLine":104,"endColumn":20},{"ruleId":"426","severity":1,"message":"427","line":167,"column":25,"nodeType":"428","endLine":167,"endColumn":109},{"ruleId":"410","severity":1,"message":"438","line":12,"column":20,"nodeType":"412","messageId":"413","endLine":12,"endColumn":30},{"ruleId":"410","severity":1,"message":"439","line":13,"column":10,"nodeType":"412","messageId":"413","endLine":13,"endColumn":27},{"ruleId":"410","severity":1,"message":"433","line":96,"column":17,"nodeType":"412","messageId":"413","endLine":96,"endColumn":20},{"ruleId":"426","severity":1,"message":"427","line":168,"column":25,"nodeType":"428","endLine":168,"endColumn":109},{"ruleId":"410","severity":1,"message":"420","line":29,"column":20,"nodeType":"412","messageId":"413","endLine":29,"endColumn":27},{"ruleId":"434","severity":1,"message":"435","line":96,"column":31,"nodeType":"436","messageId":"437","endLine":96,"endColumn":33},{"ruleId":"426","severity":1,"message":"427","line":163,"column":25,"nodeType":"428","endLine":163,"endColumn":109},{"ruleId":"426","severity":1,"message":"427","line":292,"column":73,"nodeType":"428","endLine":295,"endColumn":74},{"ruleId":"426","severity":1,"message":"427","line":323,"column":73,"nodeType":"428","endLine":326,"endColumn":74},{"ruleId":"410","severity":1,"message":"420","line":25,"column":13,"nodeType":"412","messageId":"413","endLine":25,"endColumn":20},{"ruleId":"426","severity":1,"message":"427","line":116,"column":25,"nodeType":"428","endLine":116,"endColumn":108},{"ruleId":"410","severity":1,"message":"420","line":27,"column":44,"nodeType":"412","messageId":"413","endLine":27,"endColumn":51},{"ruleId":"426","severity":1,"message":"427","line":133,"column":25,"nodeType":"428","endLine":133,"endColumn":108},{"ruleId":"410","severity":1,"message":"433","line":110,"column":17,"nodeType":"412","messageId":"413","endLine":110,"endColumn":20},{"ruleId":"426","severity":1,"message":"427","line":179,"column":25,"nodeType":"428","endLine":179,"endColumn":109},{"ruleId":"426","severity":1,"message":"427","line":80,"column":37,"nodeType":"428","endLine":83,"endColumn":38},{"ruleId":"426","severity":1,"message":"427","line":106,"column":37,"nodeType":"428","endLine":109,"endColumn":38},{"ruleId":"410","severity":1,"message":"440","line":34,"column":5,"nodeType":"412","messageId":"413","endLine":34,"endColumn":22},{"ruleId":"410","severity":1,"message":"439","line":37,"column":5,"nodeType":"412","messageId":"413","endLine":37,"endColumn":22},{"ruleId":"410","severity":1,"message":"419","line":1,"column":38,"nodeType":"412","messageId":"413","endLine":1,"endColumn":46},{"ruleId":"441","severity":1,"message":"442","line":49,"column":140,"nodeType":"436","messageId":"443","endLine":49,"endColumn":141},{"ruleId":"441","severity":1,"message":"442","line":49,"column":161,"nodeType":"436","messageId":"443","endLine":49,"endColumn":162},{"ruleId":"429","severity":1,"message":"430","line":55,"column":41,"nodeType":"428","endLine":55,"endColumn":186},{"ruleId":"441","severity":1,"message":"442","line":70,"column":102,"nodeType":"436","messageId":"443","endLine":70,"endColumn":103},{"ruleId":"441","severity":1,"message":"442","line":70,"column":124,"nodeType":"436","messageId":"443","endLine":70,"endColumn":125},{"ruleId":"441","severity":1,"message":"442","line":73,"column":102,"nodeType":"436","messageId":"443","endLine":73,"endColumn":103},{"ruleId":"441","severity":1,"message":"442","line":73,"column":125,"nodeType":"436","messageId":"443","endLine":73,"endColumn":126},{"ruleId":"441","severity":1,"message":"442","line":79,"column":125,"nodeType":"436","messageId":"443","endLine":79,"endColumn":126},{"ruleId":"441","severity":1,"message":"442","line":79,"column":149,"nodeType":"436","messageId":"443","endLine":79,"endColumn":150},{"ruleId":"429","severity":1,"message":"430","line":65,"column":37,"nodeType":"428","endLine":65,"endColumn":197},{"ruleId":"444","severity":1,"message":"445","line":77,"column":33,"nodeType":"446","endLine":77,"endColumn":58},{"ruleId":"444","severity":1,"message":"447","line":84,"column":60,"nodeType":"446","endLine":84,"endColumn":100},{"ruleId":"444","severity":1,"message":"445","line":115,"column":37,"nodeType":"446","endLine":115,"endColumn":62},{"ruleId":"429","severity":1,"message":"430","line":120,"column":37,"nodeType":"428","endLine":125,"endColumn":39},{"ruleId":"444","severity":1,"message":"447","line":127,"column":60,"nodeType":"446","endLine":127,"endColumn":97},{"ruleId":"410","severity":1,"message":"420","line":28,"column":31,"nodeType":"412","messageId":"413","endLine":28,"endColumn":38},{"ruleId":"426","severity":1,"message":"427","line":135,"column":25,"nodeType":"428","endLine":135,"endColumn":108},{"ruleId":"410","severity":1,"message":"448","line":24,"column":22,"nodeType":"412","messageId":"413","endLine":24,"endColumn":30},{"ruleId":"410","severity":1,"message":"449","line":25,"column":13,"nodeType":"412","messageId":"413","endLine":25,"endColumn":18},{"ruleId":"426","severity":1,"message":"427","line":93,"column":37,"nodeType":"428","endLine":93,"endColumn":121},{"ruleId":"426","severity":1,"message":"427","line":73,"column":45,"nodeType":"428","endLine":76,"endColumn":46},{"ruleId":"410","severity":1,"message":"420","line":75,"column":13,"nodeType":"412","messageId":"413","endLine":75,"endColumn":20},{"ruleId":"434","severity":1,"message":"435","line":136,"column":31,"nodeType":"436","messageId":"437","endLine":136,"endColumn":33},{"ruleId":"426","severity":1,"message":"427","line":201,"column":29,"nodeType":"428","endLine":201,"endColumn":111},{"ruleId":"450","severity":1,"message":"451","line":8,"column":17,"nodeType":"428","endLine":8,"endColumn":84},"no-native-reassign",["452"],"no-negated-in-lhs",["453"],"no-unused-vars","'Loader' is defined but never used.","Identifier","unusedVar","'isAuthenticated' is assigned a value but never used.","'user' is assigned a value but never used.","'Link' is defined but never used.","'setMainCategory' is assigned a value but never used.","'setSubCategory' is assigned a value but never used.","'useState' is defined but never used.","'loading' is assigned a value but never used.","'getFooterDetails' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'footerInfo'. Either include it or remove the dependency array.","ArrayExpression",["454"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'deleteAll'. Either include it or remove the dependency array.",["455"],"'len' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'deleteUser' is defined but never used.","'DELETE_USER_RESET' is defined but never used.","'UPDATE_USER_RESET' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","jsx-a11y/aria-props","aria-aria-haspopup: This attribute is an invalid ARIA attribute.","JSXAttribute","aria-aria-labelledby: This attribute is an invalid ARIA attribute.","'products' is assigned a value but never used.","'users' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation",{"desc":"456","fix":"457"},{"desc":"458","fix":"459"},"Update the dependencies array to be: [dispatch, alert, error, history, updateError, isUpdated, footerInfo]",{"range":"460","text":"461"},"Update the dependencies array to be: [dispatch, alert, error, history, isDeleted, isUpdated, deleteError, deleteAll]",{"range":"462","text":"463"},[2309,2366],"[dispatch, alert, error, history, updateError, isUpdated, footerInfo]",[2250,2318],"[dispatch, alert, error, history, isDeleted, isUpdated, deleteError, deleteAll]"]