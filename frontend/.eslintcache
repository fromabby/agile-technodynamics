[{"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\index.js":"1","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\store.js":"2","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\App.js":"3","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\reducers\\userReducers.js":"4","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\reducers\\dashboardReducers.js":"5","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\reducers\\productReducers.js":"6","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\reducers\\websiteReducers.js":"7","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\Home.js":"8","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\ProductsOthers.js":"9","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\ProductsEEE.js":"10","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\Products.js":"11","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\ProductsDC.js":"12","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\ProductsTE.js":"13","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\Services.js":"14","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\About.js":"15","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\ProductsME.js":"16","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\EmailSent.js":"17","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\Contact.js":"18","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\ConfirmationPage.js":"19","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\layout\\Header.js":"20","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\product\\ProductDetails.js":"21","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\layout\\Footer.js":"22","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\Profile.js":"23","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateFooter.js":"24","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateAbout.js":"25","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateProfile.js":"26","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListArchives.js":"27","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdatePassword.js":"28","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateHome.js":"29","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListInquiries.js":"30","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListTrash.js":"31","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListOthers.js":"32","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListServices.js":"33","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListAppointments.js":"34","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListHome.js":"35","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\NewProduct.js":"36","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListAbout.js":"37","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListUsers.js":"38","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ProductsList.js":"39","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateProduct.js":"40","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateServices.js":"41","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateInquiry.js":"42","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\user\\Login.js":"43","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\route\\ProtectedRoute.js":"44","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\user\\Register.js":"45","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\user\\ForgotPassword.js":"46","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\user\\NewPassword.js":"47","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateUser.js":"48","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\user\\RegisterSuccess.js":"49","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\actions\\userActions.js":"50","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\reducers\\inquiryReducers.js":"51","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\Dashboard.js":"52","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\layout\\Loader.js":"53","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\actions\\productActions.js":"54","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\product\\ProductDisplay.js":"55","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\layout\\MetaData.js":"56","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\actions\\websiteActions.js":"57","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\constants\\productConstants.js":"58","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\constants\\userConstants.js":"59","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\constants\\dashboardConstants.js":"60","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\constants\\inquiryConstants.js":"61","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\constants\\websiteConstants.js":"62","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\actions\\inquiryActions.js":"63"},{"size":609,"mtime":1614154818332,"results":"64","hashOfConfig":"65"},{"size":2060,"mtime":1614440293149,"results":"66","hashOfConfig":"65"},{"size":7062,"mtime":1614947873350,"results":"67","hashOfConfig":"65"},{"size":8210,"mtime":1614951321696,"results":"68","hashOfConfig":"65"},{"size":489,"mtime":1614154818333,"results":"69","hashOfConfig":"65"},{"size":4729,"mtime":1614154818333,"results":"70","hashOfConfig":"65"},{"size":9832,"mtime":1614927090321,"results":"71","hashOfConfig":"65"},{"size":5035,"mtime":1614927090079,"results":"72","hashOfConfig":"65"},{"size":3782,"mtime":1614947873470,"results":"73","hashOfConfig":"65"},{"size":4867,"mtime":1614947873458,"results":"74","hashOfConfig":"65"},{"size":4954,"mtime":1614947873420,"results":"75","hashOfConfig":"65"},{"size":4925,"mtime":1614947873448,"results":"76","hashOfConfig":"65"},{"size":5104,"mtime":1614947873471,"results":"77","hashOfConfig":"65"},{"size":3692,"mtime":1614440545615,"results":"78","hashOfConfig":"65"},{"size":3777,"mtime":1614947873360,"results":"79","hashOfConfig":"65"},{"size":4895,"mtime":1614947873458,"results":"80","hashOfConfig":"65"},{"size":1368,"mtime":1614947873398,"results":"81","hashOfConfig":"65"},{"size":8509,"mtime":1614947873379,"results":"82","hashOfConfig":"65"},{"size":1384,"mtime":1614947873367,"results":"83","hashOfConfig":"65"},{"size":6855,"mtime":1614959940886,"results":"84","hashOfConfig":"65"},{"size":2569,"mtime":1614947873526,"results":"85","hashOfConfig":"65"},{"size":4145,"mtime":1614154818304,"results":"86","hashOfConfig":"65"},{"size":9561,"mtime":1614154818302,"results":"87","hashOfConfig":"65"},{"size":11448,"mtime":1614927090159,"results":"88","hashOfConfig":"65"},{"size":8016,"mtime":1614927090142,"results":"89","hashOfConfig":"65"},{"size":13841,"mtime":1614927090222,"results":"90","hashOfConfig":"65"},{"size":7950,"mtime":1614154818299,"results":"91","hashOfConfig":"65"},{"size":9586,"mtime":1614947873508,"results":"92","hashOfConfig":"65"},{"size":9808,"mtime":1614927090177,"results":"93","hashOfConfig":"65"},{"size":8176,"mtime":1614947873485,"results":"94","hashOfConfig":"65"},{"size":9466,"mtime":1614154818300,"results":"95","hashOfConfig":"65"},{"size":7949,"mtime":1614154818300,"results":"96","hashOfConfig":"65"},{"size":7027,"mtime":1614611353618,"results":"97","hashOfConfig":"65"},{"size":7964,"mtime":1614154818298,"results":"98","hashOfConfig":"65"},{"size":7028,"mtime":1614440293083,"results":"99","hashOfConfig":"65"},{"size":15629,"mtime":1614927090119,"results":"100","hashOfConfig":"65"},{"size":6545,"mtime":1614154818297,"results":"101","hashOfConfig":"65"},{"size":7672,"mtime":1614154818301,"results":"102","hashOfConfig":"65"},{"size":7972,"mtime":1614927090129,"results":"103","hashOfConfig":"65"},{"size":17384,"mtime":1614927090215,"results":"104","hashOfConfig":"65"},{"size":9144,"mtime":1614947873516,"results":"105","hashOfConfig":"65"},{"size":11553,"mtime":1614927090185,"results":"106","hashOfConfig":"65"},{"size":4233,"mtime":1614947873548,"results":"107","hashOfConfig":"65"},{"size":1604,"mtime":1614154818306,"results":"108","hashOfConfig":"65"},{"size":21430,"mtime":1614951321688,"results":"109","hashOfConfig":"65"},{"size":2512,"mtime":1614947873536,"results":"110","hashOfConfig":"65"},{"size":5329,"mtime":1614947873562,"results":"111","hashOfConfig":"65"},{"size":9008,"mtime":1614927090258,"results":"112","hashOfConfig":"65"},{"size":1319,"mtime":1614947873570,"results":"113","hashOfConfig":"65"},{"size":8061,"mtime":1614154818293,"results":"114","hashOfConfig":"65"},{"size":4365,"mtime":1614951347167,"results":"115","hashOfConfig":"65"},{"size":16835,"mtime":1614951347159,"results":"116","hashOfConfig":"65"},{"size":170,"mtime":1614154818305,"results":"117","hashOfConfig":"65"},{"size":4658,"mtime":1614611353540,"results":"118","hashOfConfig":"65"},{"size":503,"mtime":1614154818305,"results":"119","hashOfConfig":"65"},{"size":283,"mtime":1614154818305,"results":"120","hashOfConfig":"65"},{"size":7683,"mtime":1614927090041,"results":"121","hashOfConfig":"65"},{"size":1320,"mtime":1614154818307,"results":"122","hashOfConfig":"65"},{"size":2255,"mtime":1614154818308,"results":"123","hashOfConfig":"65"},{"size":124,"mtime":1614154818307,"results":"124","hashOfConfig":"65"},{"size":1100,"mtime":1614154818307,"results":"125","hashOfConfig":"65"},{"size":2274,"mtime":1614440293124,"results":"126","hashOfConfig":"65"},{"size":3472,"mtime":1614951347049,"results":"127","hashOfConfig":"65"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"1utfutg",{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"130"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"130"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"130"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"130"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"130"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"130"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"130"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"130"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"130"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"130"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"130"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"130"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"130"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"130"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"130"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"130"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"130"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"130"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"130"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"130"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"130"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"130"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"130"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"130"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"130"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"130"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"130"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"130"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"130"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"130"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"130"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"130"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"130"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"130"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"130"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"130"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"130"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\index.js",[],["293","294"],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\store.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\App.js",["295","296"],"import { BrowserRouter as Router, Route } from 'react-router-dom' \r\nimport { useSelector } from 'react-redux'\r\n\r\nimport Header from './components/layout/Header'\r\nimport Footer from './components/layout/Footer'\r\nimport Home from './components/Home'\r\nimport Products from './components/Products'\r\n\r\nimport ProductsOthers from './components/ProductsOthers'\r\nimport ProductsDC from './components/ProductsDC'\r\nimport ProductsEEE from './components/ProductsEEE'\r\nimport ProductsME from './components/ProductsME'\r\nimport ProductsTE from './components/ProductsTE'\r\n\r\nimport ProductDetails from './components/product/ProductDetails'\r\nimport About from './components/About'\r\nimport Services from './components/Services'\r\nimport Contact from './components/Contact'\r\nimport ConfirmationPage from './components/ConfirmationPage'\r\n\r\nimport UpdateHome from './components/admin/UpdateHome'\r\nimport UpdateAbout from './components/admin/UpdateAbout'\r\nimport UpdateFooter from './components/admin/UpdateFooter'\r\n\r\nimport Login from './components/user/Login'\r\nimport Register from './components/user/Register'\r\nimport RegisterSuccess from './components/user/RegisterSuccess'\r\nimport Profile from './components/admin/Profile'\r\nimport UpdateProfile from './components/admin/UpdateProfile'\r\nimport UpdatePassword from './components/admin/UpdatePassword'\r\nimport ForgotPassword from './components/user/ForgotPassword'\r\nimport NewPassword from './components/user/NewPassword'\r\nimport EmailSent from './components/EmailSent'\r\n\r\nimport Dashboard from './components/admin/Dashboard'\r\nimport ListInquiries from './components/admin/ListInquiries'\r\nimport ListAppointments from './components/admin/ListAppointments'\r\nimport ListOthers from './components/admin/ListOthers'\r\nimport ListArchives from './components/admin/ListArchives'\r\nimport ListTrash from './components/admin/ListTrash'\r\nimport ListAbout from './components/admin/ListAbout'\r\nimport ListHome from './components/admin/ListHome'\r\nimport ListServices from './components/admin/ListServices'\r\nimport ProductsList from './components/admin/ProductsList'\r\nimport NewProduct from './components/admin/NewProduct'\r\nimport UpdateProduct from './components/admin/UpdateProduct'\r\nimport UpdateInquiry from './components/admin/UpdateInquiry'\r\nimport UpdateServices from './components/admin/UpdateServices'\r\n\r\nimport ListUsers from './components/admin/ListUsers'\r\nimport UpdateUser from './components/admin/UpdateUser'\r\n\r\nimport ProtectedRoute from './components/route/ProtectedRoute'\r\nimport { loadUser } from './actions/userActions'\r\nimport store from './store'\r\nimport { useEffect } from 'react'\r\n\r\nfunction App() {\r\n\r\n  useEffect(() => {\r\n    store.dispatch(loadUser());\r\n  }, [])\r\n\r\n  const { loading, isAuthenticated, user } = useSelector(state => state.auth);\r\n  const { isDashboard }  = useSelector(state => state.dashboard);\r\n\r\n  return (\r\n    <Router>\r\n        <div className=\"App\">\r\n                {!loading && !isDashboard && (\r\n                    <Header/>\r\n                )}\r\n                <Route path='/' component={Home} exact/>\r\n\r\n                <Route path={['/products/our-products', '/our-products']} component={Products} exact/>\r\n                <Route path='/products/Mechanical Engineering' component={ProductsME} exact/>\r\n                <Route path='/products/DC Power Systems' component={ProductsDC} exact/>\r\n                <Route path='/products/Electrical Engineering Equipment' component={ProductsEEE} exact/>\r\n                <Route path='/products/Test Equipment' component={ProductsTE} exact/>\r\n                <Route path='/products/Others' component={ProductsOthers} exact/>\r\n\r\n                <Route path='/our-products/:id' component={ProductDetails} exact/>\r\n\r\n                <Route path='/about-us' component={About} exact/>\r\n                <Route path='/our-services' component={Services} exact/>\r\n                <Route path='/contact-us' component={Contact} exact/>\r\n                <Route path='/confirmation' component={ConfirmationPage} exact/>\r\n                <Route path='/register-success' component={RegisterSuccess} exact/>\r\n\r\n                <ProtectedRoute path=\"/admin/me\" forAdmins={true} component={Profile} exact/>\r\n                <ProtectedRoute path=\"/admin/edit-profile\" forAdmins={true} component={UpdateProfile} exact/>\r\n                <ProtectedRoute path=\"/password/update\" forAdmins={true} component={UpdatePassword} exact/>\r\n\r\n                <Route path=\"/password/forgot\" component={ForgotPassword} exact/>\r\n                <Route path=\"/password/reset/:token\" component={NewPassword} exact/>\r\n                <Route path='/email-sent' component={EmailSent} exact/>\r\n\r\n                <Route path='/login' component={Login} exact/>\r\n                <ProtectedRoute path='/register' isSuperAdmin={true} component={Register} exact/>\r\n                <ProtectedRoute path='/admin/users' isSuperAdmin={true} component={ListUsers} exact/>\r\n                <ProtectedRoute path=\"/superadmin/user/:id\" isSuperAdmin={true} component={UpdateUser} exact/>\r\n                \r\n                <ProtectedRoute path=\"/admin/dashboard\" forAdmins={true} component={Dashboard} exact/>\r\n                <ProtectedRoute path=\"/admin/inquiries\" isAdmin={true} component={ListInquiries} exact/>\r\n                <ProtectedRoute path=\"/admin/appointments\" isAdmin={true} component={ListAppointments} exact/>\r\n                <ProtectedRoute path=\"/admin/others\" isAdmin={true} component={ListOthers} exact/>\r\n                <ProtectedRoute path=\"/admin/archives\" isAdmin={true} component={ListArchives} exact/>\r\n                <ProtectedRoute path=\"/admin/trash\" isAdmin={true} component={ListTrash} exact/>\r\n                \r\n                <ProtectedRoute path=\"/admin/about\" forAdmins={true} component={ListAbout} exact/>\r\n                <ProtectedRoute path=\"/admin/about/:id\" forAdmins={true} component={UpdateAbout} exact/>\r\n                <ProtectedRoute path=\"/admin/service\" forAdmins={true} component={ListServices} exact/>\r\n                <ProtectedRoute path=\"/admin/service/:id\" forAdmins={true} component={UpdateServices} exact/>\r\n                <ProtectedRoute path=\"/admin/home\" forAdmins={true} component={ListHome} exact/>\r\n                <ProtectedRoute path=\"/admin/home/:id\" forAdmins={true} component={UpdateHome} exact/>\r\n                <ProtectedRoute path=\"/admin/update-footer\" forAdmins={true} component={UpdateFooter} exact/>\r\n                \r\n                <ProtectedRoute path=\"/admin/products\" forAdmins={true} component={ProductsList} exact/>\r\n                <ProtectedRoute path=\"/admin/newProduct\" forAdmins={true} component={NewProduct} exact/>\r\n                <ProtectedRoute path=\"/admin/product/:id\" forAdmins={true} component={UpdateProduct} exact/>\r\n                <ProtectedRoute path=\"/admin/inquiry/:id\" isAdmin={true} component={UpdateInquiry} exact/>\r\n                \r\n                {!loading && !isDashboard && (\r\n                  <Footer/>\r\n                )}\r\n        </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\reducers\\userReducers.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\reducers\\dashboardReducers.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\reducers\\productReducers.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\reducers\\websiteReducers.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\Home.js",["297","298","299","300","301","302","303","304","305","306"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport '../css/styles.css'\r\nimport MetaData from './layout/MetaData'\r\nimport Loader from './layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getHomes, clearErrors } from '../actions/websiteActions'\r\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Home = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { loading,\r\n            error,\r\n            productsDescription,\r\n            servicesDescription,\r\n            productImageLeft,\r\n            productImageRight,\r\n            titleBackground,\r\n            servicesBackground\r\n        } = useSelector(state => state.homes)\r\n\r\n    useEffect(() => {\r\n        dispatch(getHomes())\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_FALSE\r\n        })\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n    }, [dispatch, alert, error]) //loop if homePage added as dependency\r\n\r\n    return (\r\n            <Fragment>\r\n                <MetaData title={'Home'}/>\r\n                {loading ? <Loader/> : (\r\n                    <Fragment>\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 text-center\"\r\n                                    style={{\r\n                                    background: \"linear-gradient(to bottom, rgba(216, 203, 194, 0.8) 0%, rgba(34, 33, 32, 0.8) 100%), url(\"+`${titleBackground}`+\") center / auto no-repeat\", \r\n                                    backgroundSize: \"cover\", \r\n                                    width: \"100%\", \r\n                                    height: \"100%\"}\r\n                                }>\r\n                                    <div className=\"main-section\">\r\n                                        <img className=\"logo\" src=\"https://res.cloudinary.com/agiletech3itf/image/upload/v1610472388/agile-logo_cqnjad.png\"/>\r\n                                        <h1 className=\"pt-3 main-text\">AGILE TECHNODYNAMICS, INC.</h1>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"row agile-products-home\">\r\n                                    <div className=\"col\">\r\n                                        <h1>Our Products</h1>\r\n                                        <p className=\"our-products-description\">{productsDescription}</p>\r\n                                        <Link className=\"mt-4\" to=\"/our-products\">See Products <i className=\"fa fa-angle-right\"></i></Link>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\" style={{margin: 'auto'}}>\r\n                                    <div className=\"col-sm-12 col-md-6\">\r\n                                        <div className=\"product-container\" style={{background: \"url(\"+`${productImageLeft}`+\") center / auto no-repeat\", backgroundSize: 'contain'}}></div>\r\n                                    </div>\r\n                                    <div className=\"col-sm-12 col-md-6\">\r\n                                        <div className=\"product-container\" style={{background: \"url(\"+`${productImageRight}`+\") center / auto no-repeat\", backgroundSize: 'contain'}}></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row services-container\" \r\n                                style={{\r\n                                    background: \"linear-gradient(to right, rgb(0,0,0) 0%, rgba(151,161,179,0.4) 100%), url(\"+`${servicesBackground}`+\") no-repeat\", \r\n                                    backgroundSize: \"cover\", \r\n                                    backgroundPosition: \"right\"\r\n                                }}\r\n                            >\r\n                                <div className=\"col-sm-12 col-md-6\">\r\n                                    <div>\r\n                                        <div className=\"col-auto our-services-description\">\r\n                                            <h1 className=\"text-center\">Our Services</h1>\r\n                                            <p>{servicesDescription}</p>\r\n                                            <Link className=\"mt-4\" to=\"/our-services\">See Services <i className=\"fa fa-angle-right\"></i></Link>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Fragment>\r\n                )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Home;","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\ProductsOthers.js",["307","308","309"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport '../css/products.css'\r\nimport '../css/bootstrap.min.css'\r\nimport '../fonts/font-awesome.min.css'\r\nimport MetaData from './layout/MetaData'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getProducts, clearErrors } from '../actions/productActions'\r\nimport ProductDisplay from './product/ProductDisplay'\r\nimport Loader from './layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\nimport Pagination from 'react-js-pagination'\r\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\r\n\r\nconst Products = () => { \r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products);\r\n    const [category, setMainCategory] = useState('Others');\r\n    const [subcategory, setSubCategory] = useState('Others');\r\n\r\n    \r\n    useEffect(() => {\r\n        if(error){\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n        dispatch(getProducts(currentPage, category, subcategory));\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_FALSE\r\n        })\r\n    }, [dispatch, alert, error, currentPage, category, subcategory]);\r\n\r\n    function setCurrentPageNo(pageNumber) {\r\n        setCurrentPage(pageNumber);\r\n    }\r\n\r\n    let count = productsCount;\r\n    \r\n    if(category) {\r\n        count = filteredProductsCount\r\n    }\r\n\r\n    return (\r\n            <Fragment>\r\n                {loading ? <Loader/> : \r\n                (\r\n                    <Fragment>\r\n                        <MetaData title={'Our Products'}/>\r\n                        <section id=\"products\" className=\"product-section\" style={{paddingTop: '65px'}}>\r\n                            <div className=\"our-products\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <h1 className=\"products-heading-title\">Our Products</h1>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div classNme=\"mt-5\">\r\n                                        </div>\r\n                                    </div>\r\n                                    {products && products.map( product => (\r\n                                        <ProductDisplay key={product._id} product={product}/>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n\r\n                        {resPerPage < count && (\r\n                            <div className=\"d-flex justify-content-center mt-5\">\r\n                                <Pagination \r\n                                    activePage={currentPage}\r\n                                    itemsCountPerPage={resPerPage}\r\n                                    totalItemsCount={productsCount}\r\n                                    onChange={setCurrentPageNo}\r\n                                    nextPageText={'Next'}\r\n                                    prevPageText={'Prev'}\r\n                                    firstPageText={'First'}\r\n                                    lastPageText={'Last'}\r\n                                    itemClass='page-item'\r\n                                    linkClass='page-link'\r\n                                />\r\n                            </div>\r\n                        )} \r\n                        \r\n                    </Fragment>\r\n                )}\r\n            </Fragment>\r\n    )\r\n}\r\n\r\nexport default Products;\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\ProductsEEE.js",["310","311"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport '../css/products.css'\r\nimport '../css/bootstrap.min.css'\r\nimport '../fonts/font-awesome.min.css'\r\nimport MetaData from './layout/MetaData'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getProducts, clearErrors } from '../actions/productActions'\r\nimport ProductDisplay from './product/ProductDisplay'\r\nimport Loader from './layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\nimport Pagination from 'react-js-pagination'\r\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\r\n\r\nconst Products = () => { \r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products);\r\n    const [category, setMainCategory] = useState('Electrical Engineering Equipment');\r\n    const [subcategory, setSubCategory] = useState('');\r\n\r\n    const eee_subCategory = [\r\n        'Transformers',\r\n        'Others'\r\n    ]\r\n    \r\n    useEffect(() => {\r\n        if(error){\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n        dispatch(getProducts(currentPage, category, subcategory));\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_FALSE\r\n        })\r\n    }, [dispatch, alert, error, currentPage, category, subcategory]);\r\n\r\n    function setCurrentPageNo(pageNumber) {\r\n        setCurrentPage(pageNumber);\r\n    }\r\n\r\n    let count = productsCount;\r\n    \r\n    if(category) {\r\n        count = filteredProductsCount\r\n    }\r\n\r\n    return (\r\n            <Fragment>\r\n                {loading ? <Loader/> : \r\n                (\r\n                    <Fragment>\r\n                        <MetaData title={'Our Products'}/>\r\n                        <section id=\"products\" className=\"product-section\" style={{paddingTop: '65px'}}>\r\n                            <div className=\"our-products\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <h1 className=\"products-heading-title\">Our Products</h1>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div classNme=\"mt-5\">\r\n                                            <ul className=\"pl-0\">\r\n                                                {eee_subCategory.map( category => (\r\n                                                    <li style={{listStyleType: 'none', cursor: 'pointer', display: 'inline-block', paddingLeft: '10px', paddingRight: '10px'}}\r\n                                                        key={category}\r\n                                                        onClick={() => {setCurrentPageNo(1); setSubCategory(category)}}>\r\n                                                            <a>{category}</a>\r\n                                                    </li>\r\n                                                ))}\r\n                                            </ul>\r\n                                            {subcategory && (\r\n                                                <Link to={`/products/${category}`}>View All Products</Link>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                    {products && products.map( product => (\r\n                                        <ProductDisplay key={product._id} product={product}/>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n\r\n                        {resPerPage < count && (\r\n                            <div className=\"d-flex justify-content-center mt-5\">\r\n                                <Pagination \r\n                                    activePage={currentPage}\r\n                                    itemsCountPerPage={resPerPage}\r\n                                    totalItemsCount={productsCount}\r\n                                    onChange={setCurrentPageNo}\r\n                                    nextPageText={'Next'}\r\n                                    prevPageText={'Prev'}\r\n                                    firstPageText={'First'}\r\n                                    lastPageText={'Last'}\r\n                                    itemClass='page-item'\r\n                                    linkClass='page-link'\r\n                                />\r\n                            </div>\r\n                        )} \r\n                        \r\n                    </Fragment>\r\n                )}\r\n            </Fragment>\r\n    )\r\n}\r\n\r\nexport default Products;\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\Products.js",["312"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport '../css/products.css'\r\nimport '../css/bootstrap.min.css'\r\nimport '../fonts/font-awesome.min.css'\r\nimport { Link } from 'react-router-dom'\r\nimport MetaData from './layout/MetaData'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getProducts, clearErrors } from '../actions/productActions'\r\nimport ProductDisplay from './product/ProductDisplay'\r\nimport Loader from './layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\nimport Pagination from 'react-js-pagination'\r\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\r\n\r\nconst Products = () => { \r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products);\r\n    const [category, setMainCategory] = useState('');\r\n    const [subcategory, setSubCategory] = useState('');\r\n\r\n    const categories = [\r\n        'Mechanical Engineering',\r\n        'DC Power Systems',\r\n        'Electrical Engineering Equipment',\r\n        'Test Equipment',\r\n        'Others'\r\n    ]\r\n    \r\n    useEffect(() => {\r\n        if(error){\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n        dispatch(getProducts(currentPage, category, subcategory));\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_FALSE\r\n        })\r\n    }, [dispatch, alert, error, currentPage, category, subcategory]);\r\n\r\n    function setCurrentPageNo(pageNumber) {\r\n        setCurrentPage(pageNumber);\r\n    }\r\n\r\n    let count = productsCount;\r\n    \r\n    if(category) {\r\n        count = filteredProductsCount\r\n    }\r\n\r\n    return (\r\n            <Fragment>\r\n                {loading ? <Loader/> : \r\n                (\r\n                    <Fragment>\r\n                        <MetaData title={'Our Products'}/>\r\n                        <section id=\"products\" className=\"product-section\" style={{paddingTop: '65px'}}>\r\n                            <div className=\"our-products\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <h1 className=\"products-heading-title\">Our Products</h1>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div classNme=\"mt-5\">\r\n                                            <ul className=\"pl-0\">\r\n                                                {categories.map( category => (\r\n                                                    <li style={{listStyleType: 'none', cursor: 'pointer', display: 'inline-block', paddingLeft: '10px', paddingRight: '10px'}}\r\n                                                        key={category}\r\n                                                        onClick={() => {setCurrentPageNo(1); setSubCategory(category)}}>\r\n                                                            <Link to={`/products/${category}`}>{category}</Link>\r\n                                                    </li>\r\n                                                ))}\r\n                                            </ul>\r\n                                            {category && (\r\n                                                <a href='/our-products'>View All Products</a>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                    {products && products.map( product => (\r\n                                        <ProductDisplay key={product._id} product={product}/>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n\r\n                        {resPerPage < count && (\r\n                            <div className=\"d-flex justify-content-center mt-5\">\r\n                                <Pagination \r\n                                    activePage={currentPage}\r\n                                    itemsCountPerPage={resPerPage}\r\n                                    totalItemsCount={productsCount}\r\n                                    onChange={setCurrentPageNo}\r\n                                    nextPageText={'Next'}\r\n                                    prevPageText={'Prev'}\r\n                                    firstPageText={'First'}\r\n                                    lastPageText={'Last'}\r\n                                    itemClass='page-item'\r\n                                    linkClass='page-link'\r\n                                />\r\n                            </div>\r\n                        )} \r\n                        \r\n                    </Fragment>\r\n                )}\r\n            </Fragment>\r\n    )\r\n}\r\n\r\nexport default Products;\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\ProductsDC.js",["313","314"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport '../css/products.css'\r\nimport '../css/bootstrap.min.css'\r\nimport '../fonts/font-awesome.min.css'\r\nimport MetaData from './layout/MetaData'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getProducts, clearErrors } from '../actions/productActions'\r\nimport ProductDisplay from './product/ProductDisplay'\r\nimport Loader from './layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\nimport Pagination from 'react-js-pagination'\r\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\r\n\r\nconst Products = () => { \r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products);\r\n    const [category, setMainCategory] = useState('DC Power Systems');\r\n    const [subcategory, setSubCategory] = useState('');\r\n\r\n    const dc_subCategory = [\r\n        'Uninterruptible Power System',\r\n        'Battery Monitoring System',\r\n        'Batteries',\r\n        'Others'\r\n    ]\r\n    \r\n    useEffect(() => {\r\n        if(error){\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n        dispatch(getProducts(currentPage, category, subcategory));\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_FALSE\r\n        })\r\n    }, [dispatch, alert, error, currentPage, category, subcategory]);\r\n\r\n    function setCurrentPageNo(pageNumber) {\r\n        setCurrentPage(pageNumber);\r\n    }\r\n\r\n    let count = productsCount;\r\n    \r\n    if(category) {\r\n        count = filteredProductsCount\r\n    }\r\n\r\n    return (\r\n            <Fragment>\r\n                {loading ? <Loader/> : \r\n                (\r\n                    <Fragment>\r\n                        <MetaData title={'Our Products'}/>\r\n                        <section id=\"products\" className=\"product-section\" style={{paddingTop: '65px'}}>\r\n                            <div className=\"our-products\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <h1 className=\"products-heading-title\">Our Products</h1>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div classNme=\"mt-5\">\r\n                                            <ul className=\"pl-0\">\r\n                                                {dc_subCategory.map( category => (\r\n                                                    <li style={{listStyleType: 'none', cursor: 'pointer', display: 'inline-block', paddingLeft: '10px', paddingRight: '10px'}}\r\n                                                        key={category}\r\n                                                        onClick={() => {setCurrentPageNo(1); setSubCategory(category)}}>\r\n                                                            <a>{category}</a>\r\n                                                    </li>\r\n                                                ))}\r\n                                            </ul>\r\n                                            {subcategory && (\r\n                                                <Link to={`/products/${category}`}>View All Products</Link>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                    {products && products.map( product => (\r\n                                        <ProductDisplay key={product._id} product={product}/>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n\r\n                        {resPerPage < count && (\r\n                            <div className=\"d-flex justify-content-center mt-5\">\r\n                                <Pagination \r\n                                    activePage={currentPage}\r\n                                    itemsCountPerPage={resPerPage}\r\n                                    totalItemsCount={productsCount}\r\n                                    onChange={setCurrentPageNo}\r\n                                    nextPageText={'Next'}\r\n                                    prevPageText={'Prev'}\r\n                                    firstPageText={'First'}\r\n                                    lastPageText={'Last'}\r\n                                    itemClass='page-item'\r\n                                    linkClass='page-link'\r\n                                />\r\n                            </div>\r\n                        )} \r\n                        \r\n                    </Fragment>\r\n                )}\r\n            </Fragment>\r\n    )\r\n}\r\n\r\nexport default Products;\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\ProductsTE.js",["315","316"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport '../css/products.css'\r\nimport '../css/bootstrap.min.css'\r\nimport '../fonts/font-awesome.min.css'\r\nimport MetaData from './layout/MetaData'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getProducts, clearErrors } from '../actions/productActions'\r\nimport ProductDisplay from './product/ProductDisplay'\r\nimport Loader from './layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\nimport Pagination from 'react-js-pagination'\r\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\r\n\r\nconst Products = () => { \r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products);\r\n    const [category, setMainCategory] = useState('Test Equipment');\r\n    const [subcategory, setSubCategory] = useState('');\r\n\r\n    const te_subCategory = [\r\n        'Partial Discharge Detection',\r\n        'Battery Discharge Capacity Tester',\r\n        'Battery Impedance or Internal Resistance',\r\n        'Load Banks',\r\n        'Battery Test Monitor',\r\n        'Portable Direct Ground Fault Finder',\r\n        'Earth Tester or Clamp Type',\r\n        'Others'\r\n    ]\r\n    \r\n    useEffect(() => {\r\n        if(error){\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n        dispatch(getProducts(currentPage, category, subcategory));\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_FALSE\r\n        })\r\n    }, [dispatch, alert, error, currentPage, category, subcategory]);\r\n\r\n    function setCurrentPageNo(pageNumber) {\r\n        setCurrentPage(pageNumber);\r\n    }\r\n\r\n    let count = productsCount;\r\n    \r\n    if(category) {\r\n        count = filteredProductsCount\r\n    }\r\n\r\n    return (\r\n            <Fragment>\r\n                {loading ? <Loader/> : \r\n                (\r\n                    <Fragment>\r\n                        <MetaData title={'Our Products'}/>\r\n                        <section id=\"products\" className=\"product-section\" style={{paddingTop: '65px'}}>\r\n                            <div className=\"our-products\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <h1 className=\"products-heading-title\">Our Products</h1>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div classNme=\"mt-5\">\r\n                                            <ul className=\"pl-0\">\r\n                                                {te_subCategory.map( category => (\r\n                                                    <li style={{listStyleType: 'none', cursor: 'pointer', display: 'inline-block', paddingLeft: '10px', paddingRight: '10px'}}\r\n                                                        key={category}\r\n                                                        onClick={() => {setCurrentPageNo(1); setSubCategory(category)}}>\r\n                                                            <a>{category}</a>\r\n                                                    </li>\r\n                                                ))}\r\n                                            </ul>\r\n                                            {subcategory && (\r\n                                                <Link to={`/products/${category}`}>View All Products</Link>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                    {products && products.map( product => (\r\n                                        <ProductDisplay key={product._id} product={product}/>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n\r\n                        {resPerPage < count && (\r\n                            <div className=\"d-flex justify-content-center mt-5\">\r\n                                <Pagination \r\n                                    activePage={currentPage}\r\n                                    itemsCountPerPage={resPerPage}\r\n                                    totalItemsCount={productsCount}\r\n                                    onChange={setCurrentPageNo}\r\n                                    nextPageText={'Next'}\r\n                                    prevPageText={'Prev'}\r\n                                    firstPageText={'First'}\r\n                                    lastPageText={'Last'}\r\n                                    itemClass='page-item'\r\n                                    linkClass='page-link'\r\n                                />\r\n                            </div>\r\n                        )} \r\n                        \r\n                    </Fragment>\r\n                )}\r\n            </Fragment>\r\n    )\r\n}\r\n\r\nexport default Products;\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\Services.js",["317","318","319"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport '../css/services.css'\r\nimport '../css/bootstrap.min.css'\r\nimport '../fonts/font-awesome.min.css'\r\nimport { useAlert } from 'react-alert'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getServices, clearErrors } from '../actions/websiteActions'\r\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\r\nimport { Link } from 'react-router-dom'\r\nimport MetaData from './layout/MetaData'\r\n\r\nconst Services = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { loading,\r\n            error,\r\n            networkSecurity,\r\n            websiteDevelopment,\r\n            batteryTestingServices,\r\n            partialDischargeDetection,\r\n            netSecIcon,\r\n            webDevIcon,\r\n            battTestIcon,\r\n            partDiscIcon\r\n        } = useSelector(state => state.services)\r\n\r\n    useEffect(() => {\r\n        dispatch(getServices())\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_FALSE\r\n        })\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n    }, [dispatch, alert, error]) //loop if homePage added as dependency\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Our Services'} />\r\n            <section id=\"services\" className=\"section2\" style={{paddingTop: '85px'}}>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12 text-center\">\r\n                            <h2 className=\"section-heading\">Our Services </h2>\r\n                           \r\n                        </div>\r\n                    </div>\r\n\r\n                    <h2 className=\"section-heading\" style={{textAlign: 'center'}}>Information Technology</h2>\r\n                    <div className=\"row text-center\">\r\n                        <div className=\"col-md-6\"><span className=\"fa-stack fa-4x\"><i className=\"fa fa-circle fa-stack-2x text-primary\"></i><i className={`fa ${netSecIcon} fa-stack-1x fa-inverse`}></i> </span>\r\n                            <h4 className=\"service-heading\">{networkSecurity}</h4>\r\n                            \r\n                        </div>\r\n                        <div className=\"col-md-6\"><span className=\"fa-stack fa-4x\"><i className=\"fa fa-circle fa-stack-2x text-primary\"></i><i className={`fa ${webDevIcon} fa-stack-1x fa-inverse`}></i> </span>\r\n                            <h4 className=\"service-heading\">{websiteDevelopment}</h4>\r\n                            \r\n                        </div>\r\n                    </div>\r\n\r\n                    <h2 className=\"section-heading\" style={{textAlign: 'center'}}>Engineering and Technical Services</h2>\r\n                    <div className=\"row text-center\">\r\n                        <div className=\"col-md-6\"><span className=\"fa-stack fa-4x\"><i className=\"fa fa-circle fa-stack-2x text-primary\"></i><i className={`fa ${battTestIcon} fa-stack-1x fa-inverse`}></i> </span>\r\n                            <h4 className=\"service-heading\">{batteryTestingServices}</h4>\r\n                            \r\n                        </div>\r\n                        <div className=\"col-md-6\"><span className=\"fa-stack fa-4x\"><i className=\"fa fa-circle fa-stack-2x text-primary\"></i><i className={`fa ${partDiscIcon} fa-stack-1x fa-inverse`}></i> </span>\r\n                            <h4 className=\"service-heading\">{partialDischargeDetection}</h4>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Services\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\About.js",["320"],"import React, { Fragment, useEffect } from 'react'\r\nimport '../css/about.css'\r\nimport '../css/bootstrap.min.css'\r\nimport '../fonts/font-awesome.min.css'\r\nimport MetaData from './layout/MetaData'\r\nimport { useAlert } from 'react-alert'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getAboutDetails, clearErrors } from '../actions/websiteActions'\r\nimport { Markup } from 'interweave'\r\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\r\n\r\nconst AboutMissionVision = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { \r\n        error, \r\n        abouts, \r\n        aboutCompany_title, \r\n        aboutCompany_description,\r\n        aboutScope_title, \r\n        aboutScope_description,\r\n        aboutObjectives_title, \r\n        aboutObjectives_description,\r\n        aboutMission_title, \r\n        aboutMission_description,\r\n        aboutVision_title, \r\n        aboutVision_description,\r\n        aboutHistory_title, \r\n        aboutHistory_description,\r\n    } = useSelector(state => state.abouts)\r\n\r\n    useEffect(() => {\r\n        dispatch(getAboutDetails());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_FALSE\r\n        })\r\n\r\n    }, [dispatch, error, alert]);\r\n\r\n    return (\r\n            <Fragment>\r\n                <MetaData title={'About Us'}/>\r\n                <div className=\"container-fluid\" style={{paddingTop: '77px'}}>\r\n                    <div className=\"header-wrapper\">\r\n                        <div className=\"header-container\" style={{display: 'block'}}>\r\n                            <h1 className=\"text-center about-text\">ABOUT US</h1>\r\n                            <ul className=\"about-list\">\r\n                                <li><a href=\"#company\">The Company</a></li>\r\n                                <li><a href=\"#objectives\">Objectives</a></li>\r\n                                <li><a href=\"#scope\">Scope of Activities</a></li>\r\n                                <li><a href=\"#mission\">Mission</a></li>\r\n                                <li><a href=\"#vision\">Vision</a></li>\r\n                                <li><a href=\"#history\">History</a></li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"company\" className=\"sections white-bg\">\r\n                        <h1>{aboutCompany_title}</h1>\r\n                        <Markup content={aboutCompany_description}/>\r\n                    </div>\r\n                    <div id=\"objectives\" className=\"sections blue-bg\">\r\n                        <h1>{aboutObjectives_title}</h1>\r\n                        <Markup content={aboutObjectives_description}/>\r\n                    </div>\r\n                    <div id=\"scope\" className=\"sections white-bg\">\r\n                        <h1>{aboutScope_title}</h1>\r\n                        <Markup content={aboutScope_description}/>\r\n                    </div>\r\n                    <div id=\"mission\" className=\"sections blue-bg\">\r\n                        <h1>{aboutMission_title}</h1>\r\n                        <Markup content={aboutMission_description}/>\r\n                    </div>\r\n                    <div id=\"vision\" className=\"sections white-bg\">\r\n                        <h1>{aboutVision_title}</h1>\r\n                        <Markup content={aboutVision_description}/>\r\n                    </div>\r\n                    <div id=\"history\" className=\"sections blue-bg\">\r\n                        <h1>{aboutHistory_title}</h1>\r\n                        <Markup content={aboutHistory_description}/>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n    )\r\n}\r\n\r\nexport default AboutMissionVision;","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\ProductsME.js",["321","322"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport '../css/products.css'\r\nimport '../css/bootstrap.min.css'\r\nimport '../fonts/font-awesome.min.css'\r\nimport MetaData from './layout/MetaData'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getProducts, clearErrors } from '../actions/productActions'\r\nimport ProductDisplay from './product/ProductDisplay'\r\nimport Loader from './layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\nimport Pagination from 'react-js-pagination'\r\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\r\n\r\nconst Products = () => { \r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products);\r\n    const [category, setMainCategory] = useState('Mechanical Engineering');\r\n    const [subcategory, setSubCategory] = useState('');\r\n\r\n    const me_subCategory = [\r\n        'Pumps and System',\r\n        'Fire Protection Systems',\r\n        'Others'\r\n    ]\r\n    \r\n    useEffect(() => {\r\n        if(error){\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n        dispatch(getProducts(currentPage, category, subcategory));\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_FALSE\r\n        })\r\n    }, [dispatch, alert, error, currentPage, category, subcategory]);\r\n\r\n    function setCurrentPageNo(pageNumber) {\r\n        setCurrentPage(pageNumber);\r\n    }\r\n\r\n    let count = productsCount;\r\n    \r\n    if(category) {\r\n        count = filteredProductsCount\r\n    }\r\n\r\n    return (\r\n            <Fragment>\r\n                {loading ? <Loader/> : \r\n                (\r\n                    <Fragment>\r\n                        <MetaData title={'Our Products'}/>\r\n                        <section id=\"products\" className=\"product-section\" style={{paddingTop: '65px'}}>\r\n                            <div className=\"our-products\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <h1 className=\"products-heading-title\">Our Products</h1>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div classNme=\"mt-5\">\r\n                                            <ul className=\"pl-0\">\r\n                                                {me_subCategory.map( category => (\r\n                                                    <li style={{listStyleType: 'none', cursor: 'pointer', display: 'inline-block', paddingLeft: '10px', paddingRight: '10px'}}\r\n                                                        key={category}\r\n                                                        onClick={() => {setCurrentPageNo(1); setSubCategory(category)}}>\r\n                                                            <a>{category}</a>\r\n                                                    </li>\r\n                                                ))}\r\n                                            </ul>\r\n                                            {subcategory && (\r\n                                                <Link to={`/products/${category}`}>View All Products</Link>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                    {products && products.map( product => (\r\n                                        <ProductDisplay key={product._id} product={product}/>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n\r\n                        {resPerPage < count && (\r\n                            <div className=\"d-flex justify-content-center mt-5\">\r\n                                <Pagination \r\n                                    activePage={currentPage}\r\n                                    itemsCountPerPage={resPerPage}\r\n                                    totalItemsCount={productsCount}\r\n                                    onChange={setCurrentPageNo}\r\n                                    nextPageText={'Next'}\r\n                                    prevPageText={'Prev'}\r\n                                    firstPageText={'First'}\r\n                                    lastPageText={'Last'}\r\n                                    itemClass='page-item'\r\n                                    linkClass='page-link'\r\n                                />\r\n                            </div>\r\n                        )} \r\n                        \r\n                    </Fragment>\r\n                )}\r\n            </Fragment>\r\n    )\r\n}\r\n\r\nexport default Products;\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\EmailSent.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\Contact.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\ConfirmationPage.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\layout\\Header.js",["323","324","325","326","327","328"],"import React, { Fragment, useState } from 'react'\r\nimport '../../css/Navbar---Apple.css'\r\nimport '../../css/Navbar---Apple-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useAlert } from 'react-alert'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst Header = () => {\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n    const { user, loading } = useSelector(state => state.auth)\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n    \r\n    let userAvatar = \"\"\r\n\r\n    if(user && user.avatar) {\r\n        userAvatar = user.avatar.url\r\n    } else {\r\n        userAvatar = \"\"\r\n    }\r\n\r\n    const [isOpen, setOpen] = useState('false');\r\n\r\n    const toggle = () => {\r\n        setOpen(!isOpen)\r\n    }\r\n\r\n    const [isProductOpen, setProductOpen] = useState('false');\r\n\r\n    const productToggle = () => {\r\n        setProductOpen(!isProductOpen)\r\n    }\r\n\r\n    const [isUserOpen, setUserOpen] = useState('false');\r\n\r\n    const userToggle = () => {\r\n        setUserOpen(!isUserOpen)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <nav className=\"navbar navbar-light navbar-expand-md fixed-top bg-light navbar--apple\">\r\n                <div className=\"container\">\r\n                    <button data-toggle=\"collapse\" data-target=\"#menu\" className=\"navbar-toggler\" onClick={toggle}>\r\n                    <span className=\"sr-only\">Toggle navigation</span>\r\n                    <span className=\"navbar-toggler-icon\"><i className=\"la la-navicon\"></i></span></button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"menu\">\r\n                        <ul className=\"navbar-nav flex-grow-1 justify-content-between\">\r\n                            <li className=\"nav-item d-none d-xs-block d-md-block\">\r\n                                <a href=\"/\">\r\n                                    <img className=\"nav-link nav-logo\" src=\"https://res.cloudinary.com/agiletech3itf/image/upload/v1610472388/agile-tech-big-blue-logo_cej4nt.png\"/>\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/\"><strong></strong></Link></li>\r\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/\"><strong>Home</strong></Link></li>\r\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/about-us\"><strong>About Us</strong></Link></li>\r\n                        <div className=\"dropdown d-inline\">    \r\n                            <button\r\n                                className=\"btn dropdown-toggle text-black nav-link\"\r\n                                type=\"button\"\r\n                                id=\"productMenuButton\"\r\n                                data-toggle=\"dropdown\"\r\n                                aria-aria-haspopup=\"true\"\r\n                                aria-expanded=\"false\"\r\n                                style={{fontSize: '15px'}}\r\n                                onClick={productToggle}\r\n                            >\r\n                                <strong>Products</strong>\r\n                            </button>\r\n                            <div className=\"dropdown-menu\" aria-aria-labelledby=\"productMenuButton\">\r\n                                <Link className=\"dropdown-item\" to='/our-products'>\r\n                                    All Products\r\n                                </Link>\r\n                                <hr/>\r\n                                <Link className=\"dropdown-item\" to='/products/Mechanical Engineering'>\r\n                                    Mechanical Engineering\r\n                                </Link>\r\n                                <Link className=\"dropdown-item\" to='/products/DC Power Systems'>\r\n                                    DC Power Systems\r\n                                </Link>\r\n                                <Link className=\"dropdown-item\" to='/products/Electrical Engineering Equipment'>\r\n                                    Electrical Engineering Equipment\r\n                                </Link>\r\n                                <Link className=\"dropdown-item\" to='/products/Test Equipment'>\r\n                                    Test Equipment\r\n                                </Link>\r\n                                <Link className=\"dropdown-item\" to='/products/Others'>\r\n                                    Others\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/our-services\"><strong>Services</strong></Link></li>\r\n                        <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/contact-us\"><strong>Contact Us</strong></Link></li>\r\n                        {user ? (\r\n                            <div class=\"dropdown d-inline\">\r\n                                <button\r\n                                    className=\"btn dropdown-toggle text-black nav-link\"\r\n                                    type=\"button\"\r\n                                    id=\"userMenuButton\"\r\n                                    data-toggle=\"dropdown\"\r\n                                    aria-aria-haspopup=\"true\"\r\n                                    aria-expanded=\"false\"\r\n                                    style={{fontSize: '15px'}}\r\n                                    onClick={userToggle}\r\n                                >\r\n                                    <img \r\n                                        class='mr-2 rounded-circle'\r\n                                        src={userAvatar}\r\n                                        width='30' \r\n                                        height='32'\r\n                                    />{user && user.name}\r\n                                </button>\r\n                                <div class=\"dropdown-menu\" aria-aria-labelledby=\"userMenuButton\">\r\n                                    <Link className=\"dropdown-item\" to=\"/admin/dashboard\">\r\n                                        Dashboard\r\n                                    </Link>\r\n                                    <Link className=\"dropdown-item text-danger\" to=\"/\" onClick={logoutHandler}>\r\n                                        Log out\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                            ) : !loading && <Link to=\"/login\">\r\n                                <div></div>\r\n                            </Link>}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Header;","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\product\\ProductDetails.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\layout\\Footer.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\Profile.js",["329"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport MetaData from './../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport '../../css/profile.css'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { logout } from './../../actions/userActions'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\n\r\nconst Profile = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { user, loading } = useSelector(state => state.auth)\r\n    \r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n    \r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading ? <Loader /> : (\r\n                <Fragment>\r\n                    <MetaData title={'My Profile'} />\r\n                    <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\r\n                        <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                            <ul className=\"sidebar-nav\">\r\n                                <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                                <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                                <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                                <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                                <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                <hr/>\r\n                                {user && user.role !== 'admin' ? (\r\n                                        <Fragment>\r\n                                            <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                                            <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                                        </Fragment>\r\n                                    ) : (\r\n                                        <Fragment>\r\n                                            <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                            <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                            <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                            <hr/>\r\n                                            <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                            <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                        </Fragment>\r\n                                    )}\r\n\r\n                                <hr/>\r\n                                <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                                <li></li>\r\n                            </ul>\r\n                        </div>\r\n                            <div className=\"page-content-wrapper\">\r\n                                <div className=\"container-fluid\">\r\n                                    <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{position: 'fixed'}}>\r\n                                        <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                                    </a>\r\n                                    <div className=\"container\">\r\n                                        <div className=\"main-body\">\r\n                                            <div className=\"row gutters-sm\">\r\n                                                <div className=\"col-md-4 mb-3\">\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"d-flex flex-column align-items-center text-center\">\r\n                                                                <img src={user.avatar.url} alt=\"Admin\" className=\"rounded-circle\" width=\"100%\" style={{minWidth: '100px', maxWidth: '150px'}}/>\r\n                                                                <div className=\"mt-3\">\r\n                                                                    <h4>{user.name}</h4>\r\n                                                                    <p className=\"text-secondary mb-1\">{user.role}</p>\r\n                                                                    <Link className=\"btn btn-dark btn-sm ml-3 mt-5\" type=\"button\" to=\"/admin/edit-profile\">Edit Profile</Link>\r\n                                                                    <Link className=\"btn btn-dark btn-sm ml-3 mt-5\" type=\"button\" to=\"/password/update\">Change Password</Link>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col-md-8\">\r\n                                                    <div className=\"card mb-3\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-sm-3\">\r\n                                                                    <h6 className=\"mb-0\">Full Name</h6>\r\n                                                                </div>\r\n                                                                <div className=\"col-sm-9 text-secondary\">\r\n                                                                    {user.name}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <hr/>\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-sm-3\">\r\n                                                                    <h6 className=\"mb-0\">Email</h6>\r\n                                                                </div>\r\n                                                                <div className=\"col-sm-9 text-secondary\">\r\n                                                                    {user.email}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <hr/>\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-sm-3\">\r\n                                                                    <h6 className=\"mb-0\">Phone</h6>\r\n                                                                </div>\r\n                                                                <div className=\"col-sm-9 text-secondary\">\r\n                                                                    {user.contactNumber}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <hr/>\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-sm-3\">\r\n                                                                    <h6 className=\"mb-0\">Address</h6>\r\n                                                                </div>\r\n                                                                <div className=\"col-sm-9 text-secondary\">\r\n                                                                    {user.address}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>    \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateFooter.js",["330","331","332","333"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateFooter, getFooterDetails, clearErrors } from '../../actions/websiteActions'\r\nimport { UPDATE_FOOTER_RESET } from '../../constants/websiteConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst UpdateFooter = ({history}) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const [footerTitle, setFooterTitle] = useState('')\r\n    const [footerDescription, setFooterDescription] = useState('')\r\n    const [addressInfo, setAddressInfo] = useState('')\r\n    const [phoneInfo, setPhoneInfo] = useState('')\r\n    const [cellphoneInfo, setCellphoneInfo] = useState('')\r\n    const [emailInfo, setEmailInfo] = useState('')\r\n\r\n    const { error, footerInfo } = useSelector(state => state.footerDetails)\r\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.website);\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    useEffect(() => {\r\n        if(footerInfo){\r\n            setFooterTitle(footerInfo.footerTitle)\r\n            setFooterDescription(footerInfo.footerDescription)\r\n            setAddressInfo(footerInfo.addressInfo)\r\n            setPhoneInfo(footerInfo.phoneInfo)\r\n            setCellphoneInfo(footerInfo.cellphoneInfo)\r\n            setEmailInfo(footerInfo.emailInfo)\r\n        } \r\n\r\n        if(error){\r\n            history.push('/admin/dashboard')\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(updateError){\r\n            history.push('/admin/dashboard')\r\n            alert.error(updateError);\r\n            dispatch(clearErrors());\r\n        }\r\n        \r\n        if(isUpdated) {\r\n            history.push('/admin/dashboard');\r\n            alert.success('Footer updated successfully.')\r\n\r\n            dispatch({\r\n                type: UPDATE_FOOTER_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, history, updateError, isUpdated])\r\n    \r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('footerTitle', footerTitle);\r\n        formData.set('footerDescription', footerDescription);\r\n        formData.set('addressInfo', addressInfo);\r\n        formData.set('phoneInfo', phoneInfo);\r\n        formData.set('cellphoneInfo', cellphoneInfo);\r\n        formData.set('emailInfo', emailInfo);\r\n\r\n        dispatch(updateFooter(formData));\r\n    }\r\n\r\n    return (<Fragment>\r\n        <MetaData title={'Update Footer'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\r\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                        <hr/>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )}\r\n\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                    <Fragment>\r\n                        <div className=\"login-clean\">\r\n                            <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{marginTop: '-65px', position: 'fixed'}}>\r\n                                <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                            </a>\r\n                            <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data' style={{maxWidth: '500px'}}>\r\n                                <h2 className=\"sr-only\">Update Footer</h2>\r\n                                <div className=\"div-forgot-password\">\r\n                                    <h3 className=\"forgot-password-heading\">Update Footer</h3>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Footer Title</h6>\r\n                                    <textarea \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"footerTitle\"\r\n                                        value={footerTitle}\r\n                                        placeholder=\"Title\"\r\n                                        style={{width: '100%'}}\r\n                                        onChange={(e) => setFooterTitle(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Footer Description</h6>\r\n                                    <textarea\r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"footerDescription\"\r\n                                        value={footerDescription}\r\n                                        placeholder=\"Description\"\r\n                                        style={{width: '100%', height: '250px'}}\r\n                                        onChange={(e) => setFooterDescription(e.target.value)}\r\n                                        height='55px'\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Address Info</h6>\r\n                                    <textarea \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"addressInfo\"\r\n                                        value={addressInfo}\r\n                                        placeholder=\"Address\"\r\n                                        style={{width: '100%', height: '150px'}}\r\n                                        onChange={(e) => setAddressInfo(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Phone Info</h6>\r\n                                    <textarea \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"phoneInfo\"\r\n                                        value={phoneInfo}\r\n                                        placeholder=\"Phone Number\"\r\n                                        style={{width: '100%'}}\r\n                                        onChange={(e) => setPhoneInfo(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Cellphone Info</h6>\r\n                                    <textarea \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"cellphoneInfo\"\r\n                                        value={cellphoneInfo}\r\n                                        placeholder=\"Cellphone Number\"\r\n                                        style={{width: '100%'}}\r\n                                        onChange={(e) => setCellphoneInfo(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Email Info</h6>\r\n                                    <textarea \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"emailInfo\"\r\n                                        value={emailInfo}\r\n                                        placeholder=\"Email\"\r\n                                        style={{width: '100%'}}\r\n                                        onChange={(e) => setEmailInfo(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                        <button \r\n                                        className=\"btn btn-primary btn-block\" \r\n                                        type=\"submit\"\r\n                                    >\r\n                                        Update Footer\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateFooter","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateAbout.js",["334","335"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateAbout, getSingleAbout, clearErrors } from '../../actions/websiteActions'\r\nimport { UPDATE_ABOUT_RESET } from '../../constants/websiteConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst UpdateAbout = ({ match, history }) => {\r\n\r\n    const [title, setTitle] = useState('')\r\n    const [description, setDescription] = useState('')\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { error, about } = useSelector(state => state.aboutDetails)\r\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.website);\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const aboutId = match.params.id\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n    \r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(about && about._id !== aboutId) {\r\n            dispatch(getSingleAbout(aboutId))\r\n        }\r\n        else { \r\n            setTitle(about.title)\r\n            setDescription(about.description)\r\n        }\r\n\r\n        if(error){\r\n            history.push('/admin/about');\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(updateError){\r\n            history.push('/admin/about');\r\n            alert.error(updateError);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(isUpdated) {\r\n            history.push('/admin/about');\r\n            alert.success('Information updated successfully.')\r\n\r\n            dispatch({\r\n                type: UPDATE_ABOUT_RESET\r\n            })\r\n        }\r\n        \r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, error, alert, isUpdated, updateError, about, aboutId, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('title', title);\r\n        formData.set('description', description);\r\n\r\n        dispatch(updateAbout(about._id, formData));\r\n    }\r\n\r\n\r\n    return (<Fragment>\r\n        <MetaData title={'Update About'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\r\n            <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                        <hr/>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )}\r\n\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                    <Fragment>\r\n                        <div className=\"login-clean\">\r\n                            <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{marginTop: '-65px', position: 'fixed'}}>\r\n                                <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                            </a>\r\n                            <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data' style={{maxWidth: '500px'}}>\r\n                                <h2 className=\"sr-only\">Update About: \"{about.title}\"</h2>\r\n                                <div className=\"div-forgot-password\">\r\n                                    <h3 className=\"forgot-password-heading\">Update About \"{about.title}\"</h3>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Name</h6>\r\n                                    <textarea \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"title\"\r\n                                        value={title}\r\n                                        placeholder=\"Title\"\r\n                                        style={{width: '100%'}}\r\n                                        onChange={(e) => setTitle(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Description</h6>\r\n                                    <textarea\r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"description\"\r\n                                        value={description}\r\n                                        placeholder=\"Description\"\r\n                                        style={{width: '100%', height: '250px'}}\r\n                                        onChange={(e) => setDescription(e.target.value)}\r\n                                        height='55px'\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                        <button \r\n                                        className=\"btn btn-primary btn-block\" \r\n                                        type=\"submit\"\r\n                                    >\r\n                                        Update Information\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    </Fragment>\r\n)\r\n}\r\n\r\nexport default UpdateAbout\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateProfile.js",["336","337"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from  'react-redux'\r\nimport { updateProfile, loadUser, clearErrors } from './../../actions/userActions'\r\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants'\r\n\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { logout } from './../../actions/userActions'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\n\r\nconst UpdateProfile = ({ history }) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [contactNumber, setContactNumber] = useState('');\r\n    const [address, setAddress] = useState('');\r\n    const [avatar, setAvatar] = useState('');\r\n    const [avatarPreview, setAvatarPreview] = useState('images/default_avatar.png');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user } = useSelector(state => state.auth);\r\n    const { error, isUpdated, loading } = useSelector(state => state.user);\r\n    \r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(user) {\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n            setContactNumber(user.contactNumber);\r\n            setAddress(user.address);\r\n            setAvatarPreview(user.avatar.url);\r\n        }\r\n\r\n        if(error){\r\n            history.push('/admin/me')\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(isUpdated){\r\n            history.push('/admin/me')\r\n            alert.success('User updated successfully');\r\n            dispatch(loadUser());\r\n\r\n            dispatch({\r\n                type: UPDATE_PROFILE_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n\r\n    }, [dispatch, alert, error, history, user, isUpdated])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('email', email);\r\n        formData.set('contactNumber', contactNumber);\r\n        formData.set('address', address);\r\n        formData.set('avatar', avatar);\r\n\r\n        dispatch(updateProfile(formData));\r\n    }\r\n\r\n    const onChange = e => {\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = () => {\r\n            if(reader.readyState === 2){\r\n                setAvatarPreview(reader.result)\r\n                setAvatar(reader.result)\r\n            }\r\n        }\r\n\r\n        reader.readAsDataURL(e.target.files[0])\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Update Profile'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\r\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                        <hr/>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )}\r\n\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{marginTop: '-65px', position: 'fixed'}}>\r\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                        </a>\r\n                        <div className=\"container\">\r\n                            <div className=\"main-body\">\r\n                                <div className=\"row gutters-sm\">\r\n                                    <div className=\"col-md-4 mb-3\">\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-body\">\r\n                                                <div className=\"d-flex flex-column align-items-center text-center\">\r\n                                                    <img src={avatarPreview} alt=\"Admin\" className=\"rounded-circle\" width=\"100%\" style={{minWidth: '100px', maxWidth: '150px'}}/>\r\n                                                    <div className=\"mt-3\">\r\n                                                    <hr/>\r\n                                                    <input \r\n                                                        type=\"file\" \r\n                                                        id=\"avatar\" \r\n                                                        name=\"avatar\" \r\n                                                        accept=\"images/*\"\r\n                                                        onChange={onChange}\r\n                                                        style={{width: '90%'}}\r\n                                                    />\r\n                                                    <br/>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-8\">\r\n                                        <div className=\"card mb-3\">\r\n                                            <div className=\"card-body\">\r\n                                                <form method=\"post\" onSubmit={submitHandler}>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-sm-3\">\r\n                                                        <h6 className=\"mb-0\">Full Name</h6>\r\n                                                        </div>\r\n                                                        <div className=\"col-sm-9 text-secondary\">\r\n                                                        <input \r\n                                                            type=\"text\" \r\n                                                            className=\"form-control\" \r\n                                                            name=\"name\"\r\n                                                            value={name}\r\n                                                            placeholder=\"Name\"\r\n                                                            onChange={(e) => setName(e.target.value)}\r\n                                                        />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <hr/>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-sm-3\">\r\n                                                        <h6 className=\"mb-0\">Email</h6>\r\n                                                        </div>\r\n                                                        <div className=\"col-sm-9 text-secondary\">\r\n                                                        <input \r\n                                                            type=\"email\" \r\n                                                            className=\"form-control\" \r\n                                                            name=\"email\"\r\n                                                            value={email}\r\n                                                            placeholder=\"Email\"\r\n                                                            onChange={(e) => setEmail(e.target.value)}\r\n                                                        />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <hr/>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-sm-3\">\r\n                                                        <h6 className=\"mb-0\">Phone</h6>\r\n                                                        </div>\r\n                                                        <div className=\"col-sm-9 text-secondary\">\r\n                                                        <input \r\n                                                            type=\"text\" \r\n                                                            className=\"form-control\" \r\n                                                            name=\"contactNumber\"\r\n                                                            value={contactNumber}\r\n                                                            placeholder=\"09xx-xxx-xxxx\"\r\n                                                            pattern=\"^[0][9]\\d{2}-\\d{3}-\\d{4}$\"\r\n                                                            onChange={(e) => setContactNumber(e.target.value)}\r\n                                                        />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <hr/>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-sm-3\">\r\n                                                        <h6 className=\"mb-0\">Address</h6>\r\n                                                        </div>\r\n                                                        <div className=\"col-sm-9 text-secondary\">\r\n                                                            <textarea \r\n                                                                type=\"text\"\r\n                                                                className=\"form-control\"\r\n                                                                name=\"address\"\r\n                                                                value={address}\r\n                                                                placeholder=\"Address\"\r\n                                                                onChange={(e) => setAddress(e.target.value)}\r\n                                                                style={{height: '150px'}}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"row\">\r\n                                                        <br/>\r\n                                                        <br/>\r\n                                                        <button\r\n                                                            className=\"btn btn-primary btn-block\"\r\n                                                            type=\"submit\"\r\n                                                        >Update Profile</button>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>    \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateProfile\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListArchives.js",["338"],"import React, { Fragment, useEffect , useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport '../../css/dashboard.css'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\r\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst ListArchives = ({history}) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\r\n    const { isUpdated } = useSelector(state => state.inquiry)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(listInquiry());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n        \r\n        if(isUpdated){\r\n            alert.success('Inquiry status has been updated successfully.');\r\n            history.push('/admin/archives')\r\n\r\n            dispatch({\r\n                type: UPDATE_INQUIRY_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, isUpdated, history])\r\n\r\n    const updateInquiryHandler = (id, inquiryStatus) => { \r\n        const formData = new FormData();\r\n        formData.set('inquiryStatus', inquiryStatus);\r\n\r\n        dispatch(updateInquiry(id, formData));\r\n    }\r\n\r\n    const setInquiries = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Date / Time',\r\n                    field: 'createdAt',\r\n                    sort: 'desc'\r\n                },\r\n                {\r\n                    label: 'Last Name',\r\n                    field: 'lastName'\r\n                },\r\n                {\r\n                    label: 'First Name',\r\n                    field: 'firstName'\r\n                },\r\n                {\r\n                    label: 'Company Name',\r\n                    field: 'companyName'\r\n                },\r\n                \r\n                {\r\n                    label: 'Status',\r\n                    field: 'inquiryStatus'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         inquiries.forEach(inquiry => {\r\n             if(inquiry.inquiryStatus==='Resolved'){\r\n                data.rows.push({\r\n                    createdAt: inquiry.createdAt,\r\n                    firstName: inquiry.firstName,\r\n                    lastName: inquiry.lastName,\r\n                    companyName: inquiry.companyName,\r\n                    concernType: String(inquiry.concernType),\r\n                    actions:   <Fragment>\r\n                                <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                                    <i className='fa fa-eye'></i>\r\n                                </Link>\r\n                                <button className=\"btn btn-secondary py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Unresolved\")}>\r\n                                    <i className='fa fa-undo'></i>\r\n                                </button>\r\n                                <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Deleted\")}>\r\n                                    <i className='fa fa-trash'></i>\r\n                                </button>\r\n                            </Fragment>\r\n                 })\r\n             }\r\n         })\r\n\r\n         return data\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Archives'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\r\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                        <hr/>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )}\r\n\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{position: 'fixed'}}>\r\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                        </a>\r\n                        <Fragment>\r\n                            <div style={{padding: '30px'}}>\r\n                                <h1 className='mt-3 mb-3 ml-10 mr-10'>Archives</h1>\r\n                                {loading? <Loader/> : (\r\n                                    <MDBDataTable\r\n                                        data={setInquiries()}\r\n                                        className='px-3'\r\n                                        bordered\r\n                                        striped\r\n                                        hover\r\n                                        entries={5}\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListArchives","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdatePassword.js",["339","340","341","342"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from  'react-redux'\r\nimport '../../css/bootstrap.min.css'\r\nimport '../../css/dashboard.css'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport { updatePassword, clearErrors } from './../../actions/userActions'\r\nimport { UPDATE_PASSWORD_RESET } from '../../constants/userConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst UpdatePassword = ( { history }) => {\r\n    \r\n    const [oldPassword, setOldPassword] = useState('');\r\n    const [newPassword, setNewPassword] = useState('');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, isUpdated, loading } = useSelector(state => state.user);\r\n    const [isToggled, setToggled] = useState('false')\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n     \r\n    const [showOld, setOld] = useState('false')\r\n\r\n    const showOldToggle = () => {\r\n        setOld(!showOld)\r\n    }\r\n\r\n    const [showNew, setNew] = useState('false')\r\n\r\n    const showNewToggle = () => {\r\n        setNew(!showNew)\r\n    }\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n    \r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n    \r\n    useEffect(() => {\r\n\r\n        if(error){\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(isUpdated){\r\n            history.push('/admin/me')\r\n            alert.success('Password updated successfully');\r\n\r\n            dispatch({\r\n                type: UPDATE_PASSWORD_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n\r\n    }, [dispatch, alert, error, history, isUpdated])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('oldPassword', oldPassword);\r\n        formData.set('newPassword', newPassword);\r\n\r\n        dispatch(updatePassword(formData));\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Change Password'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\r\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                        <hr/>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )}\r\n\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{marginTop: '-65px', position: 'fixed'}}>\r\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                        </a>\r\n                        <div className=\"login-clean\" style={{paddingTop: '65px'}}>\r\n                            <form method=\"post\" onSubmit={submitHandler}>\r\n                                <h2 className=\"sr-only\">Change Password</h2>\r\n                                <div className=\"div-forgot-password\">\r\n                                    <h3 className=\"forgot-password-heading\">Change Password</h3>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Old Password</h6>\r\n                                    <div class=\"input-group mb-3\">\r\n                                        <input \r\n                                            type={showOld ? \"password\" : \"text\"} \r\n                                            className=\"form-control\" \r\n                                            name=\"oldPassword\"\r\n                                            value={oldPassword}\r\n                                            placeholder=\"Old Password\"\r\n                                            onChange={(e) => setOldPassword(e.target.value)}\r\n                                            aria-label=\"oldpassword\" aria-describedby=\"basic-addon1\"\r\n                                        />\r\n                                        <div class=\"input-group-prepend\">\r\n                                            <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                                <a\r\n                                                    onClick={showOldToggle}\r\n                                                    style={{cursor: 'pointer'}}\r\n                                                >\r\n                                                    <span className=\"fa-lg\">\r\n                                                        <i className={showOld ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\r\n                                                    </span>\r\n                                                </a>\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>New Password</h6>\r\n                                    <div class=\"input-group mb-3\">\r\n                                        <input\r\n                                            type={showNew ? \"password\" : \"text\"} \r\n                                            className=\"form-control\"\r\n                                            name=\"newPassword\"\r\n                                            value={newPassword}\r\n                                            placeholder=\"New Password\"\r\n                                            onChange={(e) => setNewPassword(e.target.value)}\r\n                                            aria-label=\"newpassword\" aria-describedby=\"basic-addon1\"\r\n                                        />\r\n                                        <div class=\"input-group-prepend\">\r\n                                            <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                                <a\r\n                                                    onClick={showNewToggle}\r\n                                                    style={{cursor: 'pointer'}}\r\n                                                >\r\n                                                    <span className=\"fa-lg\">\r\n                                                        <i className={showNew ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\r\n                                                    </span>\r\n                                                </a>\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <button\r\n                                        className=\"btn btn-primary btn-block\"\r\n                                        type=\"submit\"\r\n                                    >Update Password</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdatePassword\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateHome.js",["343","344","345"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from  'react-redux'\r\nimport { updateHome, getHomeDetails, clearErrors } from '../../actions/websiteActions'\r\nimport { UPDATE_HOME_RESET } from '../../constants/websiteConstants'\r\n\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { logout } from '../../actions/userActions'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\n\r\nconst UpdateHome = ({ match, history }) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [image, setImage] = useState('');\r\n    const [imagePreview, setImagePreview] = useState('images/default_avatar.png');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, home } = useSelector(state => state.homeDetails);\r\n    const { error: updateError, isUpdated, loading } = useSelector(state => state.website);\r\n    const { user } = useSelector(state => state.auth)\r\n    \r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    const homeId = match.params.id\r\n\r\n    useEffect(() => {\r\n        if(home && home._id !== homeId) {\r\n            dispatch(getHomeDetails(homeId))\r\n        }\r\n        else {\r\n            setName(home.name);\r\n            setDescription(home.description);\r\n            setImagePreview(home.image.url);\r\n        }\r\n\r\n        if(error){\r\n            history.push('/admin/home')\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n\r\n        }\r\n        \r\n        if(updateError){\r\n            history.push('/admin/home')\r\n            alert.error(updateError);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(isUpdated){\r\n            alert.success('Home updated successfully');\r\n\r\n            history.push('/admin/home')\r\n\r\n            dispatch({\r\n                type: UPDATE_HOME_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n\r\n    }, [dispatch, alert, error, history, home, homeId, isUpdated, updateError])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('description', description);\r\n        formData.set('image', image);\r\n\r\n        dispatch(updateHome(home._id, formData));\r\n    }\r\n\r\n    const onChange = e => {\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = () => {\r\n            if(reader.readyState === 2){\r\n                setImagePreview(reader.result)\r\n                setImage(reader.result)\r\n            }\r\n        }\r\n\r\n        reader.readAsDataURL(e.target.files[0])\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Update Home'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\r\n            <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                        <hr/>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )}\r\n\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"login-clean\">\r\n                            <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{marginTop: '-65px', position: 'fixed'}}>\r\n                                <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                            </a>\r\n                            <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data'  style={{maxWidth: '500px'}}>\r\n                                <h2 className=\"sr-only\">Update Home</h2>\r\n                                <div className=\"div-forgot-password\">\r\n                                    <h3 className=\"forgot-password-heading\">Update Home </h3>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <h6>Name</h6>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        id=\"name\" \r\n                                        name=\"name\" \r\n                                        value={name}\r\n                                        disabled={true}\r\n                                        style={{backgroundColor: '#F5F5F5', color: 'gray'}}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <h6>Description</h6>\r\n                                    <textarea \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        id=\"description\" \r\n                                        name=\"description\" \r\n                                        placeholder=\"Description\"\r\n                                        value={description}\r\n                                        disabled={String(home.name).includes('Description') ? false : true}\r\n                                        style={String(home.name).includes('Description') ? {width: '100%', height: '150px'} : {backgroundColor: '#F5F5F5', color: 'gray', width: '100%', height: '150px'}}\r\n                                        onChange={(e) => setDescription(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Image</h6>\r\n                                    <figure>\r\n                                        <img \r\n                                            src={imagePreview} \r\n                                            className='mt-3 mr-2' \r\n                                            width='110' \r\n                                            height='104'\r\n                                        />\r\n                                    </figure>\r\n                                    <input \r\n                                        type=\"file\" \r\n                                        id=\"image\" \r\n                                        name=\"image\" \r\n                                        accept=\"images/*\"\r\n                                        disabled={String(home.name).includes('Description') ? true : false} \r\n                                        onChange={onChange}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <button \r\n                                        className=\"btn btn-primary btn-block\" \r\n                                        type=\"submit\"\r\n                                    >\r\n                                        Update Home\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateHome\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListInquiries.js",["346"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\r\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\n// import \"mdbreact/dist/css/mdb.css\";\r\n// import \"@fortawesome/fontawesome-free/css/all.min.css\";\r\n// import \"bootstrap-css-only/css/bootstrap.min.css\";\r\n\r\nconst ListOrders = ({history}) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\r\n    const { isUpdated } = useSelector(state => state.inquiry)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n        \r\n        dispatch(listInquiry());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(isUpdated){\r\n            alert.success('Inquiry has been moved to trash successfully.');\r\n            history.push('/admin/inquiries')\r\n\r\n            dispatch({\r\n                type: UPDATE_INQUIRY_RESET\r\n            })\r\n        }\r\n    }, [dispatch, alert, error, isUpdated, history])\r\n\r\n    const updateInquiryHandler = (id, inquiryStatus) => { \r\n        const formData = new FormData();\r\n        formData.set('inquiryStatus', inquiryStatus);\r\n\r\n        dispatch(updateInquiry(id, formData));\r\n    }\r\n    \r\n    const setInquiries = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Date / Time',\r\n                    field: 'createdAt',\r\n                    sort: 'desc'\r\n                },\r\n                {\r\n                    label: 'Last Name',\r\n                    field: 'lastName'\r\n                },\r\n                {\r\n                    label: 'First Name',\r\n                    field: 'firstName'\r\n                },\r\n                {\r\n                    label: 'Company Name',\r\n                    field: 'companyName'\r\n                },\r\n                \r\n                {\r\n                    label: 'Status',\r\n                    field: 'inquiryStatus'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         inquiries.forEach(inquiry => {\r\n             if(inquiry.concernType==='Inquiry' && (inquiry.inquiryStatus !== \"Deleted\" && inquiry.inquiryStatus !== \"Resolved\")){\r\n                data.rows.push({\r\n                    createdAt: inquiry.createdAt,\r\n                    firstName: inquiry.firstName,\r\n                    lastName: inquiry.lastName,\r\n                    companyName: inquiry.companyName,\r\n                    inquiryStatus: inquiry.inquiryStatus && (String(inquiry.inquiryStatus).includes('Processing') || String(inquiry.inquiryStatus).includes('Resolved'))\r\n                        ? <p style={{ color: 'green' }}>{inquiry.inquiryStatus}</p>\r\n                        :  <p style={{ color: 'red' }}>{inquiry.inquiryStatus}</p>,\r\n                    actions:   <Fragment>\r\n                                <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                                    <i className='fa fa-eye'></i>\r\n                                </Link>\r\n                                <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Deleted\")}>\r\n                                    <i className='fa fa-trash'></i>\r\n                                </button>\r\n                            </Fragment>\r\n                 })\r\n             }\r\n         })\r\n\r\n         return data\r\n    }\r\n    \r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Inquiries'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\r\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                        <hr/>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )}\r\n\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{position: 'fixed'}}>\r\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                        </a>\r\n                        <Fragment>\r\n                            <div style={{padding: '30px'}}>\r\n                                <h1 className='mt-3 mb-3 ml-10 mr-10'>Inbox - Inquiry</h1>\r\n                                {loading? <Loader/> : (\r\n                                    <MDBDataTable\r\n                                        data={setInquiries()}\r\n                                        className='px-3'\r\n                                        bordered\r\n                                        striped\r\n                                        hover\r\n                                        entries={5}\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListOrders","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListTrash.js",["347","348","349"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { deleteInquiry, updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\r\nimport { DELETE_INQUIRY_RESET, UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst ListTrash = ( { history} ) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\r\n    const { deleteError, isUpdated, isDeleted } = useSelector(state => state.inquiry)\r\n\r\n    let deleteAll = false\r\n\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(listInquiry());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n        \r\n        if(deleteError){\r\n            alert.error(deleteError)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(isUpdated){\r\n            alert.success('Inquiry has been updated successfully.');\r\n            history.push('/admin/trash')\r\n\r\n            dispatch({\r\n                type: UPDATE_INQUIRY_RESET\r\n            })\r\n        }\r\n\r\n        if(isDeleted && deleteAll){\r\n            alert.success('Inquiry has been deleted successfully.');\r\n            history.push('/admin/trash')\r\n\r\n            dispatch({\r\n                type: DELETE_INQUIRY_RESET\r\n            })\r\n        }\r\n        \r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, history, isDeleted, isUpdated, deleteError])\r\n\r\n    const setInquiries = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Date / Time',\r\n                    field: 'createdAt',\r\n                    sort: 'desc'\r\n                },\r\n                {\r\n                    label: 'Last Name',\r\n                    field: 'lastName'\r\n                },\r\n                {\r\n                    label: 'First Name',\r\n                    field: 'firstName'\r\n                },\r\n                {\r\n                    label: 'Company Name',\r\n                    field: 'companyName'\r\n                },\r\n                \r\n                {\r\n                    label: 'Status',\r\n                    field: 'inquiryStatus'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         inquiries.forEach(inquiry => {\r\n             if(inquiry.inquiryStatus==='Deleted'){\r\n                data.rows.push({\r\n                    createdAt: inquiry.createdAt,\r\n                    firstName: inquiry.firstName,\r\n                    lastName: inquiry.lastName,\r\n                    companyName: inquiry.companyName,\r\n                    concernType: String(inquiry.concernType),\r\n                    actions:   <Fragment>\r\n                                <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                                    <i className='fa fa-eye'></i>\r\n                                </Link>\r\n                                <button className=\"btn btn-secondary py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Resolved\")}>\r\n                                    <i className='fa fa-undo'></i>\r\n                                </button>\r\n                                <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteInquiryHandler(inquiry._id)}>\r\n                                    <i className='fa fa-trash'></i>\r\n                                </button>\r\n                            </Fragment>\r\n                 })\r\n             }\r\n         })\r\n\r\n         return data\r\n    }\r\n\r\n    const updateInquiryHandler = (id, inquiryStatus) => { \r\n        const formData = new FormData();\r\n        formData.set('inquiryStatus', inquiryStatus);\r\n\r\n        dispatch(updateInquiry(id, formData));\r\n    }\r\n\r\n    const deleteInquiryHandler = (id) => {\r\n\r\n        if(window.confirm(\"Are you sure you want to delete this message? This cannot be undone.\")){\r\n            dispatch(deleteInquiry(id))\r\n        }\r\n    }\r\n\r\n    const emptyTrash = () => {\r\n        if(window.confirm(\"Are you sure you want to delete ALL messages? This cannot be undone.\")){\r\n            deleteAll = true \r\n\r\n            let deletedInquiryCount = 0\r\n\r\n            inquiries.forEach(inquiry => {\r\n\r\n                if(inquiry.inquiryStatus === 'Deleted') {\r\n                    deletedInquiryCount += 1\r\n                    dispatch(deleteInquiry(inquiry._id))\r\n                    deletedInquiryCount -= 1\r\n                }\r\n            })\r\n\r\n            if(deletedInquiryCount == 0){\r\n                alert.success('Trash has been emptied.'); //this is working\r\n            }\r\n        }   \r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Trash'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\r\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                        <hr/>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )}\r\n\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{position: 'fixed'}}>\r\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                        </a>\r\n                        <Fragment>\r\n                        <div style={{padding: '30px'}}>\r\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Trash</h1>\r\n                            <Link>\r\n                                <button className='btn btn-dark btn-sm text-capitalize mb-5' onClick={emptyTrash}>\r\n                                    Empty Trash\r\n                                </button>\r\n                            </Link>\r\n                            {loading? <Loader/> : (\r\n                                <MDBDataTable\r\n                                    data={setInquiries()}\r\n                                    className='px-3'\r\n                                    bordered\r\n                                    striped\r\n                                    hover\r\n                                    entries={5}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListTrash","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListOthers.js",["350"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\r\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst ListOrders = ({history}) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\r\n    const { isUpdated } = useSelector(state => state.inquiry)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(listInquiry());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(isUpdated){\r\n            alert.success('Inquiry has been moved to trash successfully.');\r\n            history.push('/admin/others')\r\n\r\n            dispatch({\r\n                type: UPDATE_INQUIRY_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, isUpdated, history])\r\n\r\n    const updateInquiryHandler = (id, inquiryStatus) => { \r\n        const formData = new FormData();\r\n        formData.set('inquiryStatus', inquiryStatus);\r\n\r\n        dispatch(updateInquiry(id, formData));\r\n    }\r\n    \r\n    const setInquiries = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Date / Time',\r\n                    field: 'createdAt',\r\n                    sort: 'desc'\r\n                },\r\n                {\r\n                    label: 'Last Name',\r\n                    field: 'lastName'\r\n                },\r\n                {\r\n                    label: 'First Name',\r\n                    field: 'firstName'\r\n                },\r\n                {\r\n                    label: 'Company Name',\r\n                    field: 'companyName'\r\n                },\r\n                \r\n                {\r\n                    label: 'Status',\r\n                    field: 'inquiryStatus'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         inquiries.forEach(inquiry => {\r\n             if(inquiry.concernType==='Others'  && (inquiry.inquiryStatus !== \"Deleted\" && inquiry.inquiryStatus !== \"Resolved\")){\r\n                data.rows.push({\r\n                    createdAt: inquiry.createdAt,\r\n                    firstName: inquiry.firstName,\r\n                    lastName: inquiry.lastName,\r\n                    companyName: inquiry.companyName,\r\n                    inquiryStatus: inquiry.inquiryStatus && (String(inquiry.inquiryStatus).includes('Processing') || String(inquiry.inquiryStatus).includes('Resolved'))\r\n                        ? <p style={{ color: 'green' }}>{inquiry.inquiryStatus}</p>\r\n                        :  <p style={{ color: 'red' }}>{inquiry.inquiryStatus}</p>,\r\n                    actions:   <Fragment>\r\n                                <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                                    <i className='fa fa-eye'></i>\r\n                                </Link>\r\n                                <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Deleted\")}>\r\n                                    <i className='fa fa-trash'></i>\r\n                                </button>\r\n                            </Fragment>\r\n                 })\r\n             }\r\n         }) \r\n         return data\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Others'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\r\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                        <hr/>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )}\r\n\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{position: 'fixed'}}>\r\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                        </a>\r\n                        <Fragment>\r\n                        <div style={{padding: '30px'}}>\r\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Inbox - Others</h1>\r\n                            {loading? <Loader/> : (\r\n                                <MDBDataTable\r\n                                    data={setInquiries()}\r\n                                    className='px-3'\r\n                                    bordered\r\n                                    striped\r\n                                    hover\r\n                                    entries={5}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListOrders","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListServices.js",["351"],"import React, { Fragment, useEffect , useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport '../../css/dashboard.css'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getServices, clearErrors } from '../../actions/websiteActions'\r\nimport { UPDATE_SERVICES_RESET } from '../../constants/websiteConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst ListServices = ({history}) => {\r\n    \r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, services } = useSelector(state => state.services)\r\n    const { isUpdated } = useSelector(state => state.website)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getServices());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n        \r\n        if(isUpdated){\r\n            alert.success('Services information has been updated successfully.');\r\n            history.push('/admin/service')\r\n\r\n            dispatch({\r\n                type: UPDATE_SERVICES_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, isUpdated, history])\r\n\r\n    const setServiceData = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Title',\r\n                    field: 'title',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Subtitle',\r\n                    field: 'subtitle',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Icon Preview',\r\n                    field: 'icon',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                    sort: 'asc'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         services.forEach(service => {\r\n            data.rows.push({\r\n                title: service.title,\r\n                subtitle: service.subtitle,\r\n                icon: <Fragment>\r\n                    <span className=\"fa-stack fa-2x\">\r\n                        <i className=\"fa fa-circle fa-stack-2x text-primary\"></i>\r\n                        <i className={`fa ${service.icon} fa-stack-1x fa-inverse`}></i>\r\n                    </span>\r\n                </Fragment>,\r\n                actions:   <Fragment>\r\n                            <Link to={`/admin/service/${service._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                                <i className='fa fa-pencil'></i>\r\n                            </Link>\r\n                        </Fragment>\r\n             })\r\n         })\r\n\r\n         return data\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Home'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\r\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                        <hr/>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )}\r\n\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{position: 'fixed'}}>\r\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                        </a>\r\n                        <Fragment>\r\n                        <div style={{padding: '30px'}}>\r\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Update Services</h1>\r\n                            {loading ? <Loader/> : (\r\n                                <MDBDataTable\r\n                                    data={setServiceData()}\r\n                                    className='px-3'\r\n                                    bordered\r\n                                    striped\r\n                                    hover\r\n                                    entries={5}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListServices\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListAppointments.js",["352"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateInquiry, listInquiry, clearErrors } from '../../actions/inquiryActions'\r\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from '../../actions/userActions'\r\n\r\nconst ListOrders = ({history}) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, inquiries } = useSelector(state => state.listInquiry)\r\n    const { isUpdated } = useSelector(state => state.inquiry)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n    useEffect(() => {\r\n        dispatch(listInquiry());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(isUpdated){\r\n            alert.success('Inquiry has been moved to trash successfully.');\r\n            history.push('/admin/appointments')\r\n\r\n            dispatch({\r\n                type: UPDATE_INQUIRY_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, history, isUpdated])\r\n\r\n    const updateInquiryHandler = (id, inquiryStatus) => { \r\n        const formData = new FormData();\r\n        formData.set('inquiryStatus', inquiryStatus);\r\n\r\n        dispatch(updateInquiry(id, formData));\r\n    }\r\n\r\n    const setInquiries = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Date / Time',\r\n                    field: 'createdAt',\r\n                    sort: 'desc'\r\n                },\r\n                {\r\n                    label: 'Last Name',\r\n                    field: 'lastName'\r\n                },\r\n                {\r\n                    label: 'First Name',\r\n                    field: 'firstName'\r\n                },\r\n                {\r\n                    label: 'Company Name',\r\n                    field: 'companyName'\r\n                },\r\n                \r\n                {\r\n                    label: 'Status',\r\n                    field: 'inquiryStatus'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         inquiries.forEach(inquiry => {\r\n             if(inquiry.concernType==='Appointment' && (inquiry.inquiryStatus !== \"Deleted\" && inquiry.inquiryStatus !== \"Resolved\")){\r\n                data.rows.push({\r\n                    createdAt: inquiry.createdAt,\r\n                    firstName: inquiry.firstName,\r\n                    lastName: inquiry.lastName,\r\n                    companyName: inquiry.companyName,\r\n                    inquiryStatus: inquiry.inquiryStatus && (String(inquiry.inquiryStatus).includes('Processing') || String(inquiry.inquiryStatus).includes('Resolved'))\r\n                        ? <p style={{ color: 'green' }}>{inquiry.inquiryStatus}</p>\r\n                        :  <p style={{ color: 'red' }}>{inquiry.inquiryStatus}</p>,\r\n                    actions:   <Fragment>\r\n                                <Link to={`/admin/inquiry/${inquiry._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                                    <i className='fa fa-eye'></i>\r\n                                </Link>\r\n                                <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => updateInquiryHandler(inquiry._id, \"Deleted\")}>\r\n                                    <i className='fa fa-trash'></i>\r\n                                </button>\r\n                            </Fragment>\r\n                 })\r\n             }\r\n         })\r\n\r\n         return data\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Appointments'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\r\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                        <hr/>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )}\r\n\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{position: 'fixed'}}>\r\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                        </a>\r\n                        <Fragment>\r\n                        <div style={{padding: '30px'}}>\r\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Inbox - Appointments</h1>\r\n                            {loading? <Loader/> : (\r\n                                <MDBDataTable\r\n                                    data={setInquiries()}\r\n                                    className='px-3'\r\n                                    bordered\r\n                                    striped\r\n                                    hover\r\n                                    entries={5}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListOrders","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListHome.js",["353","354"],"import React, { Fragment, useEffect , useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport '../../css/dashboard.css'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getHomes, clearErrors } from '../../actions/websiteActions'\r\nimport { UPDATE_HOME_RESET } from '../../constants/websiteConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst ListHome = ({history}) => {\r\n    \r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, homes } = useSelector(state => state.homes)\r\n    const { isUpdated } = useSelector(state => state.website)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getHomes());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n        \r\n        if(isUpdated){\r\n            alert.success('Home information has been updated successfully.');\r\n            history.push('/admin/homes')\r\n\r\n            dispatch({\r\n                type: UPDATE_HOME_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, isUpdated, history])\r\n\r\n    const setHomeData = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Title',\r\n                    field: 'name',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Description',\r\n                    field: 'description',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Image Preview',\r\n                    field: 'image',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                    sort: 'asc'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         homes.forEach(home => {\r\n            data.rows.push({\r\n                name: home.name,\r\n                description: home.description,\r\n                image: <Fragment>\r\n                    <figure>\r\n                        <img \r\n                            src={home.image.url} \r\n                            className='mt-3 mr-2' \r\n                            width='110' \r\n                            height='104'\r\n                        />\r\n                    </figure>\r\n                </Fragment>,\r\n                actions:   <Fragment>\r\n                            <Link to={`/admin/home/${home._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                                <i className='fa fa-pencil'></i>\r\n                            </Link>\r\n                        </Fragment>\r\n             })\r\n         })\r\n\r\n         return data\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Home'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\r\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                        <hr/>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )}\r\n\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{position: 'fixed'}}>\r\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                        </a>\r\n                        <Fragment>\r\n                        <div style={{padding: '30px'}}>\r\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Update Home</h1>\r\n                            {loading ? <Loader/> : (\r\n                                <MDBDataTable\r\n                                    data={setHomeData()}\r\n                                    className='px-3'\r\n                                    bordered\r\n                                    striped\r\n                                    hover\r\n                                    entries={5}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListHome\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\NewProduct.js",["355","356","357"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { newProduct, clearErrors } from '../../actions/productActions'\r\nimport { NEW_PRODUCT_RESET } from '../../constants/productConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst NewProduct = ( { history } ) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [images, setImages] = useState([]);\r\n    const [category, setMainCategory] = useState('');\r\n    const [subcategory, setSubCategory] = useState('');\r\n    const [imagesPreview, setImagesPreview] = useState([])\r\n    const [useDefaultImage, setUseDefaultImage] = useState('')\r\n\r\n    const [isChecked, setChecked] = useState('false')\r\n\r\n    const checkboxCheck = () => {\r\n        setChecked(!isChecked)\r\n    }\r\n\r\n    const categories = [\r\n        ' - ',\r\n        'Mechanical Engineering',\r\n        'DC Power Systems',\r\n        'Electrical Engineering Equipment',\r\n        'Test Equipment',\r\n        'Others'\r\n    ]\r\n\r\n    const me_subCategory = [\r\n        '-',\r\n        'Pumps and System',\r\n        'Fire Protection System',\r\n        'Others'\r\n    ]\r\n\r\n    const dc_subCategory = [\r\n        '-',\r\n        'Uninterrupted Power System',\r\n        'Battery Monitoring System',\r\n        'Batteries',\r\n        'Others'\r\n    ]\r\n    \r\n    const eee_subCategory = [\r\n        '-',\r\n        'Transformers',\r\n        'Others'\r\n    ]\r\n\r\n    const te_subCategory = [\r\n        '-',\r\n        'Partial Discharge Detection',\r\n        'Battery Discharge Capacity Tester',\r\n        'Battery Impedance or Internal Resistance',\r\n        'Load Banks',\r\n        'Battery Test Monitor',\r\n        'Portable Direct Ground Fault Finder',\r\n        'Earth Tester or Clamp Type',\r\n        'Others'\r\n    ]\r\n\r\n    const { loading, error, success } = useSelector(state => state.newProduct);\r\n\r\n    const { user } = useSelector(state => state.auth)\r\n    const [isToggled, setToggled] = useState('false')\r\n    \r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n    \r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(success) {\r\n            history.push('/admin/products');\r\n            alert.success('Product created successfully.')\r\n        \r\n            dispatch({\r\n                type: NEW_PRODUCT_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, error, alert, success, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('description', description);\r\n        formData.set('category', category);\r\n        if(String(category).includes(\"Others\")) {\r\n            formData.set('subcategory', \"Others\");\r\n        } else {\r\n            formData.set('subcategory', subcategory);\r\n        }\r\n        formData.set('useDefaultImage', useDefaultImage)\r\n\r\n        images.forEach(image => {\r\n            formData.append('images', image)\r\n        });\r\n\r\n        dispatch(newProduct(formData));\r\n    }\r\n\r\n    const onChange = e => {\r\n\r\n        if(e.target.name === 'useDefaultImage') {\r\n            let chkbox = document.getElementById('useDefaultImage')\r\n\r\n            if(chkbox.checked == true) { //if changed to ===, register would not work\r\n                setUseDefaultImage(\"True\")\r\n            }\r\n            else{\r\n                setUseDefaultImage(\"False\")\r\n            }\r\n\r\n        } else {\r\n            const files = Array.from(e.target.files)\r\n\r\n            setImagesPreview([]);\r\n            setImages([])\r\n    \r\n            files.forEach(file => {\r\n                const reader = new FileReader();\r\n    \r\n                reader.onload = () => {\r\n                    if(reader.readyState === 2){\r\n                        setImagesPreview(oldArray => [...oldArray, reader.result])\r\n                        setImages(oldArray => [...oldArray, reader.result])\r\n                    }\r\n                }\r\n    \r\n                reader.readAsDataURL(file)\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'New Product'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\r\n            <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                        <hr/>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )}\r\n\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                    <Fragment>\r\n                    <div className=\"login-clean\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{marginTop: '-65px', position: 'fixed'}}>\r\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                        </a>\r\n                        <form method=\"post\" onSubmit={submitHandler} encType='multipart/form-data' style={{maxWidth: '500px'}}>\r\n                            <h2 className=\"sr-only\">New Product</h2>\r\n                            <div className=\"div-forgot-password\">\r\n                                <h3 className=\"forgot-password-heading\">New Product</h3>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <h6>Name</h6>\r\n                                <textarea \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    name=\"product_name\"\r\n                                    value={name}\r\n                                    placeholder=\"Product Name\"\r\n                                    style={{width: '100%'}}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <h6>Description</h6>\r\n                                <textarea\r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    name=\"product_name\"\r\n                                    style={{width: '100%', height: '150px'}}\r\n                                    value={description}\r\n                                    placeholder=\"Product Description\"\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            \r\n                            \r\n\r\n                            <div className=\"form-group\">\r\n                                <h6>Main Category</h6>\r\n                                <div className=\"dropdown show\">\r\n                                    <select \r\n                                        name=\"mainCategory\" \r\n                                        className=\"product-dropdown\" \r\n                                        id=\"mainCategory\"\r\n                                        value={category}\r\n                                        onChange={(e) => setMainCategory(e.target.value)}\r\n                                    >\r\n                                        {categories.map(category => (\r\n                                            <option key={category} value={category}>{category}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <h6>Sub Category</h6>\r\n                                <div className=\"dropdown show\">\r\n                                    <select \r\n                                        name=\"subCategory\" \r\n                                        className=\"product-dropdown\" \r\n                                        id=\"subCategory\"\r\n                                        value={subcategory}\r\n                                        disabled={String(category).includes(\"Others\") ? true : false}\r\n                                        onChange={(e) => setSubCategory(e.target.value)}\r\n                                    >\r\n                                    \r\n                                    {String(category).includes(\"Mechanical Engineering\") ? (\r\n                                        <Fragment>\r\n                                            {me_subCategory.map(category => (\r\n                                                <option key={category} value={category}>{category}</option>\r\n                                            ))}\r\n                                        </Fragment>\r\n                                    ) : ((String(category).includes(\"DC Power Systems\") ? (\r\n                                        <Fragment>\r\n                                            {dc_subCategory.map(category => (\r\n                                                <option key={category} value={category}>{category}</option>\r\n                                            ))}\r\n                                        </Fragment>) : (\r\n                                            (String(category).includes(\"Electrical Engineering Equipment\")) ? (\r\n                                                <Fragment>\r\n                                                    {eee_subCategory.map(category => (\r\n                                                        <option key={category} value={category}>{category}</option>\r\n                                                    ))}\r\n                                                </Fragment>\r\n                                            ) : (\r\n                                                (String(category).includes(\"Test Equipment\")) ? (\r\n                                                    <Fragment>\r\n                                                        {te_subCategory.map(category => (\r\n                                                            <option key={category} value={category}>{category}</option>\r\n                                                        ))}\r\n                                                    </Fragment>) : (\r\n                                                        <Fragment>\r\n                                                            <option key=\"Others\" value=\"Others\">Others</option>\r\n                                                        </Fragment>)\r\n                                            )\r\n                                        )))\r\n                                    }\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <input \r\n                                type='checkbox'\r\n                                id='useDefaultImage'\r\n                                name='useDefaultImage'\r\n                                value={useDefaultImage}\r\n                                onChange={onChange}\r\n                                onClick={checkboxCheck}\r\n                            />\r\n                                &nbsp;Use default image\r\n                                \r\n                            <div className=\"form-group\">\r\n                                <h6>Images</h6>\r\n                                <input \r\n                                    type=\"file\" \r\n                                    name=\"product_images\" \r\n                                    onChange={onChange}\r\n                                    disabled={isChecked ? false : true}\r\n                                    multiple={true}\r\n                                />\r\n                            </div>\r\n                            \r\n                            {imagesPreview.map(img => (\r\n                                <img \r\n                                    src={img} \r\n                                    key={img} \r\n                                    alt='Images Preview'\r\n                                    className='mt-3 mr-2' \r\n                                    width='55' \r\n                                    height='52'\r\n                                />\r\n                            ))}\r\n\r\n                            <div className=\"form-group\">\r\n                                <button \r\n                                    className=\"btn btn-primary btn-block\" \r\n                                    type=\"submit\"\r\n                                >\r\n                                    Create\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NewProduct\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListAbout.js",["358"],"import React, { Fragment, useEffect , useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport '../../css/dashboard.css'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getAboutDetails, clearErrors } from '../../actions/websiteActions'\r\nimport { UPDATE_ABOUT_RESET } from '../../constants/websiteConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst ListAbout = ({history}) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, abouts } = useSelector(state => state.abouts)\r\n    const { isUpdated } = useSelector(state => state.website)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getAboutDetails());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n        \r\n        if(isUpdated){\r\n            alert.success('About Us information has been updated successfully.');\r\n            history.push('/admin/about')\r\n\r\n            dispatch({\r\n                type: UPDATE_ABOUT_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, isUpdated, history])\r\n\r\n    const setAboutData = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Title',\r\n                    field: 'title',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Description',\r\n                    field: 'description',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                    sort: 'asc'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         abouts.forEach(about => {\r\n            data.rows.push({\r\n                title: about.title,\r\n                description: about.description,\r\n                actions:   <Fragment>\r\n                            <Link to={`/admin/about/${about._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                                <i className='fa fa-pencil'></i>\r\n                            </Link>\r\n                        </Fragment>\r\n             })\r\n         })\r\n\r\n         return data\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'All About Us'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\r\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                        <hr/>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )}\r\n\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{position: 'fixed'}}>\r\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                        </a>\r\n                        <Fragment>\r\n                        <div style={{padding: '30px'}}>\r\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Update About Us</h1>\r\n                            {loading ? <Loader/> : (\r\n                                <MDBDataTable\r\n                                    data={setAboutData()}\r\n                                    className='px-3'\r\n                                    bordered\r\n                                    striped\r\n                                    hover\r\n                                    entries={5}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListAbout\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ListUsers.js",["359"],"import React, { Fragment, useEffect , useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport '../../css/dashboard.css'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getUsers, deleteUser, clearErrors } from '../../actions/userActions'\r\nimport { DELETE_USER_RESET, UPDATE_USER_RESET } from '../../constants/userConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst ListUsers = ({history}) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, users } = useSelector(state => state.users)\r\n    const { user } = useSelector(state => state.auth)\r\n    const { deleteError, isUpdated, isDeleted } = useSelector(state => state.updateUser)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getUsers());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n        \r\n        if(deleteError){\r\n            alert.error(deleteError)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(isUpdated){\r\n            alert.success('User has been updated successfully.');\r\n            history.push('/admin/users')\r\n\r\n            dispatch({\r\n                type: UPDATE_USER_RESET\r\n            })\r\n        }\r\n\r\n        if(isDeleted){\r\n            alert.success('User has been deleted successfully.');\r\n            history.push('/admin/users')\r\n\r\n            dispatch({\r\n                type: DELETE_USER_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, isDeleted, isUpdated, deleteError, history])\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    const setUsersData = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Role',\r\n                    field: 'role',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Name',\r\n                    field: 'name',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Contact Number',\r\n                    field: 'contactNumber',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Email',\r\n                    field: 'email',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                    sort: 'asc'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         users.forEach(user => {\r\n            data.rows.push({\r\n                role: user.role,\r\n                name: user.name,\r\n                contactNumber: user.contactNumber,\r\n                email: user.email,\r\n                actions:   <Fragment>\r\n                    <Link to={`/superadmin/user/${user._id}`} className='btn btn-primary py-1 px-2 ml-2'>\r\n                        <i className='fa fa-pencil'></i>\r\n                    </Link>\r\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\"\r\n                            disabled={user.role === 'superadmin' ? true : false}\r\n                            onClick={() => deleteUserHandler(user._id)}\r\n                    >\r\n                        <i className='fa fa-trash'></i>\r\n                    </button>\r\n                </Fragment>\r\n             })\r\n         })\r\n\r\n         return data\r\n    }\r\n\r\n    const deleteUserHandler = (id) => {\r\n\r\n        if(window.confirm(\"Are you sure you want to delete this user? This cannot be undone.\")){\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Users'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\r\n            <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                <ul className=\"sidebar-nav\">\r\n                    <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                    <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                    <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                    <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                    <hr/>\r\n                    {user && user.role !== 'admin' ? (\r\n                            <Fragment>\r\n                                <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                                <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                            </Fragment>\r\n                        ) : (\r\n                            <Fragment>\r\n                                <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                <hr/>\r\n                                <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                            </Fragment>\r\n                        )}\r\n\r\n                    <hr/>\r\n                    <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                    <li></li>\r\n                </ul>\r\n            </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{position: 'fixed'}}>\r\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                        </a>\r\n                        <Fragment>\r\n                        <div style={{padding: '30px'}}>\r\n                            <h1 className='mt-3 mb-3 ml-10 mr-10'>Users</h1>\r\n                            {loading? <Loader/> : (\r\n                                <MDBDataTable\r\n                                    data={setUsersData()}\r\n                                    className='px-3'\r\n                                    bordered\r\n                                    striped\r\n                                    hover\r\n                                    entries={5}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListUsers\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\ProductsList.js",["360"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport '../../css/dashboard.css'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getAdminProducts, deleteProduct, clearErrors } from '../../actions/productActions'\r\nimport { DELETE_PRODUCT_RESET } from '../../constants/productConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\n\r\nconst ProductsList = ( {history} ) => {\r\n    \r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, products } = useSelector(state => state.products)\r\n    const { deleteError, isDeleted } = useSelector(state => state.product)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getAdminProducts());\r\n\r\n        if(error){\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(deleteError){\r\n            alert.error(deleteError)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if(isDeleted){\r\n            alert.success('Product has been deleted successfully.');\r\n            history.push('/admin/products')\r\n\r\n            dispatch({\r\n                type: DELETE_PRODUCT_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, alert, error, history, isDeleted, deleteError])\r\n\r\n    const setProducts = () => {\r\n        const data = { \r\n            columns: [\r\n                {\r\n                    label: 'Product Name',\r\n                    field: 'name',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Description',\r\n                    field: 'description',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Main Category',\r\n                    field: 'category',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Sub Category',\r\n                    field: 'subcategory',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions'\r\n                }\r\n            ],\r\n            rows: []\r\n         }\r\n\r\n         products.forEach(product => {\r\n             data.rows.push({\r\n                name: product.name,\r\n                description: product.description,\r\n                category: product.category,\r\n                subcategory: product.subcategory,\r\n                actions: <Fragment>\r\n                            <Link to={`/admin/product/${product._id}`} className='btn btn-primary py-1 px-2'>\r\n                                <i className='fa fa-pencil'></i>\r\n                            </Link>\r\n                            <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteProductHandler(product._id)}>\r\n                                <i className='fa fa-trash'></i>\r\n                            </button>\r\n                        </Fragment>\r\n             })\r\n         })\r\n         return data\r\n    }\r\n\r\n    const deleteProductHandler = (id) => {\r\n        if(window.confirm('Are you sure you want to delete the product? This cannot be undone.')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'All Products'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\r\n            <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                        <hr/>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )}\r\n\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{position: 'fixed'}}>\r\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                        </a>\r\n                        <Fragment>\r\n                            <div style={{padding: '30px'}}>\r\n                                <h1 className=\"mt-3 mb-3 ml-10 mr-10\">\r\n                                    All Products\r\n                                </h1>\r\n                                <Link to='/admin/newProduct'>\r\n                                    <button className='btn btn-dark btn-sm text-capitalize ml-3 mb-5'>\r\n                                        Add New Product\r\n                                    </button>\r\n                                </Link>\r\n                                {loading ? <Loader/> : (\r\n                                    <MDBDataTable\r\n                                        data={setProducts()}\r\n                                        className='px-10 table-sm'\r\n                                        bordered\r\n                                        striped\r\n                                        hover\r\n                                        entries={5}\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ProductsList\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateProduct.js",["361","362","363"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateProduct, getProductDetails, clearErrors } from '../../actions/productActions'\r\nimport { UPDATE_PRODUCT_RESET } from '../../constants/productConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst UpdateProduct = ( { match, history } ) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [images, setImages] = useState([]);\r\n    const [category, setMainCategory] = useState('');\r\n    const [subcategory, setSubCategory] = useState('');\r\n    const [imagesPreview, setImagesPreview] = useState([])\r\n    const [oldImages, setOldImages] = useState([]);\r\n    const [useDefaultImage, setUseDefaultImage] = useState('')\r\n    \r\n    const [isChecked, setChecked] = useState('false')\r\n\r\n    const checkboxCheck = () => {\r\n        setChecked(!isChecked)\r\n    }\r\n\r\n    const categories = [\r\n        ' - ',\r\n        'Mechanical Engineering',\r\n        'DC Power Systems',\r\n        'Electrical Engineering Equipment',\r\n        'Test Equipment',\r\n        'Others'\r\n    ]\r\n\r\n    const me_subCategory = [\r\n        '-',\r\n        'Pumps and System',\r\n        'Fire Protection Systems',\r\n        'Others'\r\n    ]\r\n\r\n    const dc_subCategory = [\r\n        '-',\r\n        'Uninterrupted Power System',\r\n        'Battery Monitoring System',\r\n        'Batteries',\r\n        'Others'\r\n    ]\r\n    \r\n    const eee_subCategory = [\r\n        '-',\r\n        'Transformers',\r\n        'Others'\r\n    ]\r\n\r\n    const te_subCategory = [\r\n        '-',\r\n        'Partial Discharge Detection',\r\n        'Battery Discharge Capacity Tester',\r\n        'Battery Impedance or Internal Resistance',\r\n        'Load Banks',\r\n        'Battery Test Monitor',\r\n        'Portable Direct Ground Fault Finder',\r\n        'Earth Tester or Clamp Type',\r\n        'Others'\r\n    ]\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { error, product } = useSelector(state => state.productDetails)\r\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.product);\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const productId = match.params.id\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n    \r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if(product && product._id !== productId) {\r\n            dispatch(getProductDetails(productId))\r\n        }\r\n        else { \r\n            setName(product.name)\r\n            setDescription(product.description)\r\n            setMainCategory(product.category)\r\n            setSubCategory(product.subcategory)\r\n            setOldImages(product.images)\r\n        }\r\n\r\n        if(error){\r\n            history.push('/admin/products')\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(updateError){\r\n            history.push('/admin/products')\r\n            alert.error(updateError);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(isUpdated) {\r\n            history.push('/admin/products');\r\n            alert.success('Product updated successfully.')\r\n\r\n            dispatch({\r\n                type: UPDATE_PRODUCT_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, error, alert, isUpdated, updateError, product, productId, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('description', description);\r\n        formData.set('category', category);\r\n        if(String(category).includes(\"Others\")) {\r\n            formData.set('subcategory', \"Others\");\r\n        } else {\r\n            formData.set('subcategory', subcategory);\r\n        }\r\n        formData.set('useDefaultImage', useDefaultImage)\r\n\r\n        images.forEach(image => {\r\n            formData.append('images', image)\r\n        });\r\n\r\n        dispatch(updateProduct(product._id, formData));\r\n    }\r\n\r\n    const onChange = e => {\r\n\r\n        if(e.target.name === 'useDefaultImage') {\r\n            let chkbox = document.getElementById('useDefaultImage')\r\n\r\n            if(chkbox.checked == true) { //if changed to ===, register would not work\r\n                setUseDefaultImage(\"True\")\r\n            }\r\n            else{\r\n                setUseDefaultImage(\"False\")\r\n            }\r\n\r\n        } else {\r\n            const files = Array.from(e.target.files)\r\n\r\n            setImagesPreview([]);\r\n            setImages([])\r\n            setOldImages([])\r\n\r\n            files.forEach(file => {\r\n                const reader = new FileReader();\r\n\r\n                reader.onload = () => {\r\n                    if(reader.readyState === 2){\r\n                        setImagesPreview(oldArray => [...oldArray, reader.result])\r\n                        setImages(oldArray => [...oldArray, reader.result])\r\n                    }\r\n                }\r\n\r\n                reader.readAsDataURL(file)\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Update Product'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\r\n            <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                        <hr/>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )}\r\n\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <Fragment>\r\n                        <div className=\"login-clean\">\r\n                            <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{marginTop: '-65px', position: 'fixed'}}>\r\n                                <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                            </a>\r\n                            <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data' style={{maxWidth: '500px'}}>\r\n                                <h2 className=\"sr-only\">Update Product</h2>\r\n                                <div className=\"div-forgot-password\">\r\n                                    <h3 className=\"forgot-password-heading\">Update Product</h3>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Name</h6>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"product_name\"\r\n                                        value={name}\r\n                                        placeholder=\"Product Name\"\r\n                                        style={{width: '100%'}}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Description</h6>\r\n                                    <textarea\r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"product_name\"\r\n                                        value={description}\r\n                                        placeholder=\"Product Description\"\r\n                                        style={{width: '100%', height: '150px'}}\r\n                                        onChange={(e) => setDescription(e.target.value)}\r\n                                        height='55px'\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                <h6>Main Category</h6>\r\n                                <div className=\"dropdown show\">\r\n                                    <select \r\n                                        name=\"mainCategory\" \r\n                                        className=\"product-dropdown\" \r\n                                        id=\"mainCategory\"\r\n                                        value={category}\r\n                                        onChange={(e) => setMainCategory(e.target.value)}\r\n                                    >\r\n                                        {categories.map(category => (\r\n                                            <option key={category} value={category}>{category}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <h6>Sub Category</h6>\r\n                                <div className=\"dropdown show\">\r\n                                    <select \r\n                                        name=\"subCategory\" \r\n                                        className=\"product-dropdown\" \r\n                                        id=\"subCategory\"\r\n                                        value={subcategory}\r\n                                        disabled={String(category).includes(\"Others\") ? true : false}\r\n                                        onChange={(e) => setSubCategory(e.target.value)}\r\n                                    >\r\n                                    \r\n                                    {String(category).includes(\"Mechanical Engineering\") ? (\r\n                                        <Fragment>\r\n                                            {me_subCategory.map(category => (\r\n                                                <option key={category} value={category}>{category}</option>\r\n                                            ))}\r\n                                        </Fragment>\r\n                                    ) : ((String(category).includes(\"DC Power Systems\") ? (\r\n                                        <Fragment>\r\n                                            {dc_subCategory.map(category => (\r\n                                                <option key={category} value={category}>{category}</option>\r\n                                            ))}\r\n                                        </Fragment>) : (\r\n                                            (String(category).includes(\"Electrical Engineering Equipment\")) ? (\r\n                                                <Fragment>\r\n                                                    {eee_subCategory.map(category => (\r\n                                                        <option key={category} value={category}>{category}</option>\r\n                                                    ))}\r\n                                                </Fragment>\r\n                                            ) : (\r\n                                                (String(category).includes(\"Test Equipment\")) ? (\r\n                                                    <Fragment>\r\n                                                        {te_subCategory.map(category => (\r\n                                                            <option key={category} value={category}>{category}</option>\r\n                                                        ))}\r\n                                                    </Fragment>) : (\r\n                                                        <Fragment>\r\n                                                            <option key=\"Others\" value=\"Others\">Others</option>\r\n                                                        </Fragment>)\r\n                                                )\r\n                                            )))\r\n                                        }\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n\r\n                                <input \r\n                                    type='checkbox'\r\n                                    id='useDefaultImage'\r\n                                    name='useDefaultImage'\r\n                                    value={useDefaultImage}\r\n                                    onChange={onChange}\r\n                                    onClick={checkboxCheck}\r\n                                />\r\n                                    &nbsp;Use default image\r\n                                    \r\n                                <div className=\"form-group\">\r\n                                    <h6>Images</h6>\r\n                                    <input \r\n                                        type=\"file\" \r\n                                        name=\"product_images\" \r\n                                        onChange={onChange}\r\n                                        disabled={isChecked ? false : true}\r\n                                        multiple\r\n                                    />\r\n                                </div>\r\n                                \r\n                                {oldImages && oldImages.map(img => (\r\n                                    <img \r\n                                        className='mt-3 mr-2'\r\n                                        src={img.url}\r\n                                        alt={img.url}\r\n                                        key={img}\r\n                                        width='55' \r\n                                        height='52'\r\n                                    />\r\n\r\n                                ))}\r\n\r\n                                {imagesPreview.map(img => (\r\n                                    <img \r\n                                        src={img} \r\n                                        key={img} \r\n                                        alt='Images Preview'\r\n                                        className='mt-3 mr-2' \r\n                                        width='110' \r\n                                        height='104'\r\n                                    />\r\n                                ))}\r\n\r\n                                <div className=\"form-group\">\r\n                                        <button \r\n                                        className=\"btn btn-primary btn-block\" \r\n                                        type=\"submit\"\r\n                                    >\r\n                                        Update Product\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateProduct\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateServices.js",["364","365"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from  'react-redux'\r\nimport { updateServices, getServiceDetails, clearErrors } from '../../actions/websiteActions'\r\nimport { UPDATE_SERVICES_RESET } from '../../constants/websiteConstants'\r\n\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { logout } from '../../actions/userActions'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\n\r\nconst UpdateServices = ({ match, history }) => {\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [subtitle, setSubtitle] = useState('');\r\n    const [icon, setIcon] = useState('');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, service } = useSelector(state => state.serviceDetails);\r\n    const { error: updateError, isUpdated, loading } = useSelector(state => state.website);\r\n    const { user } = useSelector(state => state.auth)\r\n    \r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    const serviceId = match.params.id\r\n\r\n    useEffect(() => {\r\n        if(service && service._id !== serviceId) {\r\n            dispatch(getServiceDetails(serviceId))\r\n        }\r\n        else {\r\n            setTitle(service.title);\r\n            setSubtitle(service.subtitle);\r\n            setIcon(service.icon);\r\n        }\r\n\r\n        if(error){\r\n            history.push('/admin/service')\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n        \r\n        if(updateError){\r\n            history.push('/admin/service')\r\n            alert.error(updateError);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(isUpdated){\r\n            alert.success('Service updated successfully');\r\n\r\n            history.push('/admin/service')\r\n\r\n            dispatch({\r\n                type: UPDATE_SERVICES_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n\r\n    }, [dispatch, alert, error, history, service, serviceId, isUpdated, updateError])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('title', title);\r\n        formData.set('subtitle', subtitle);\r\n        formData.set('icon', icon);\r\n\r\n        dispatch(updateServices(service._id, formData));\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Update Services'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\r\n            <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                        <hr/>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )}\r\n\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"login-clean\">\r\n                            <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{marginTop: '-65px', position: 'fixed'}}>\r\n                                <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                            </a>\r\n                            <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data'  style={{maxWidth: '500px'}}>\r\n                                <h2 className=\"sr-only\">Update Services</h2>\r\n                                <div className=\"div-forgot-password\">\r\n                                    <h3 className=\"forgot-password-heading\">Update Services </h3>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <h6>Title</h6>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        id=\"title\" \r\n                                        name=\"title\" \r\n                                        placeholder=\"Title\"\r\n                                        value={title}\r\n                                        disabled={true}\r\n                                        style={{backgroundColor: '#F5F5F5', color: 'gray'}}\r\n                                        onChange={(e) => setTitle(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Subtitle</h6>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        id=\"subtitle\" \r\n                                        name=\"subtitle\" \r\n                                        value={subtitle}\r\n                                        disabled={true}\r\n                                        onChange={(e) => setSubtitle(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Icon</h6>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        id=\"icon\" \r\n                                        name=\"icon\" \r\n                                        value={icon}\r\n                                        onChange={(e) => setIcon(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <span className=\"fa-stack fa-2x\">\r\n                                        <i className=\"fa fa-circle fa-stack-2x text-primary\"></i>\r\n                                        <i className={`fa ${icon} fa-stack-1x fa-inverse`}></i>\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <button \r\n                                        className=\"btn btn-primary btn-block\" \r\n                                        type=\"submit\"\r\n                                    >\r\n                                        Update Services\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateServices\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateInquiry.js",["366"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateInquiry, getInquiryDetails, clearErrors } from '../../actions/inquiryActions'\r\nimport { UPDATE_INQUIRY_RESET } from '../../constants/inquiryConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst UpdateInquiry = ( { match, history } ) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { error, inquiry } = useSelector(state => state.inquiryDetails)\r\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.inquiry);\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const inquiryId = match.params.id\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => { \r\n        if(inquiry && inquiry._id !== inquiryId) {\r\n            dispatch(getInquiryDetails(inquiryId))\r\n        }\r\n\r\n        if(error){\r\n            history.push('/admin/dashboard')\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(updateError){\r\n            history.push('/admin/dashboard')\r\n            alert.error(updateError);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(isUpdated) {\r\n            history.push('/admin/dashboard');\r\n            alert.success('Inquiry updated successfully.')\r\n\r\n            dispatch({\r\n                type: UPDATE_INQUIRY_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, error, alert, isUpdated, updateError, inquiry, inquiryId, history])\r\n\r\n    const updateInquiryHandler = (id, inquiryStatus) => { \r\n        const formData = new FormData();\r\n        formData.set('inquiryStatus', inquiryStatus);\r\n\r\n        dispatch(updateInquiry(id, formData));\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'View Message'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\r\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                        <hr/>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )}\r\n\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                    <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{position: 'fixed'}}>\r\n                        <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                    </a>\r\n                    <Fragment>\r\n                        {loading ? <Loader/> : (\r\n                            <section className=\"process-section\" style={{backgroundColor: '#f1f7fc', fontSize: '100%', fontWeight: '400', lineHeight: '1.4', color: '#000'}}>\r\n                                <table style={{maxWidth: '670px', margin: '0 auto 20px auto', backgroundColor: '#fff', padding: '30px', WebkitBorderRadius: '3px', MozBorderRadius: '3px', borderRadius: '3px', WebkitBoxShadow: '0 1px 3px rgba(0,0,0.12), 0 1px 2px rgba(0,0,0,.24)', MozBoxShadow: '0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24)', boxShadow: '0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24)', borderTop: 'solid 10px #1b1449'}}>\r\n                                    <thead>\r\n                                        <tr>\r\n                                        <th style={{textAlign: 'left'}}><img style={{maxWidth: '300px'}} src=\"https://res.cloudinary.com/agiletech3itf/image/upload/v1610472388/agile-tech-big-blue-logo_cej4nt.png\" alt=\"logo\"/></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                        <td style={{height: '35px'}}></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                        <td colspan=\"2\" style={{border: 'solid 1px #ddd', padding:'10px 20px'}}>\r\n                                            <p style={{fontSize:'14px', margin:'0 0 6px 0'}}><span style={{fontWeight: 'bold', display: 'inline-block', minWidth: '150px'}}>Concern Type</span><b style={{color: 'green', fontWeight: 'normal', margin: '0'}}>{inquiry.concernType}</b></p>\r\n                                        </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                        <td style={{height: '35px'}}></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                        <td style={{width: '100%', padding: '20px', verticalAlign: 'top'}}>\r\n                                            <h2 style={{margin: '0 0 10px 0', padding: '0'}}>Sender Details</h2>\r\n                                            <p style={{margin: '0 0 10[x 0', padding: '0', fontSize: '14px'}}><span style={{display: 'block', fontWeight: 'bold', fontSize: '13px'}}>Name</span> {inquiry.firstName} {inquiry.lastName}</p>\r\n                                            <p style={{margin: '0 0 10[x 0', padding: '0', fontSize: '14px'}}><span style={{display: 'block', fontWeight: 'bold', fontSize: '13px'}}>Company and Position</span> {inquiry.companyName}, {inquiry.position}</p>\r\n                                            <p style={{margin: '0 0 10[x 0', padding: '0', fontSize: '14px'}}><span style={{display: 'block', fontWeight: 'bold', fontSize: '13px'}}>Email</span> {inquiry.customerEmail}</p>\r\n                                            <p style={{margin: '0 0 10[x 0', padding: '0', fontSize: '14px'}}><span style={{display: 'block', fontWeight: 'bold', fontSize: '13px'}}>Phone</span> {inquiry.contactNumber}</p>\r\n                                        </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                        <td colspan=\"2\" style={{padding: '30px 15px 0 15px'}}>\r\n                                            <h2 style={{margin: '0 0 10px 0', padding: '0'}}>Message Content</h2>\r\n                                        </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                        <td colspan=\"2\" style={{padding:'15px'}}>\r\n                                            <p style={{fontSize: '14px', margin: '0', padding: '10px', textAlign: 'justify'}}>\r\n                                            {inquiry.customerMessage}\r\n                                            </p>\r\n                                        </td>\r\n                                        </tr>\r\n                                        <tr style={{ width: '100%'}}>\r\n                                            {(inquiry.inquiryStatus === 'Resolved') ? (\r\n                                                <Fragment>\r\n                                                    <button \r\n                                                        className=\"btn btn-primary update-status-button\" \r\n                                                        type=\"button\"\r\n                                                        onClick={() => updateInquiryHandler(inquiry._id, 'Unresolved')}\r\n                                                        style={{margin: '50px auto 50px auto', display: 'block'}}>\r\n                                                        Mark this message as 'Resolved'\r\n                                                        Restore message back to {inquiry.concernType}\r\n                                                    </button>\r\n                                                </Fragment>\r\n                                            ) : (\r\n                                                <Fragment>\r\n                                                    <button \r\n                                                        className=\"btn btn-primary update-status-button align-center\" \r\n                                                        type=\"button\"\r\n                                                        onClick={() => updateInquiryHandler(inquiry._id, 'Resolved')}\r\n                                                        style={{margin: '50px auto 50px auto', display: 'block'}}>\r\n                                                        Mark this message as 'Resolved'\r\n                                                    </button>\r\n                                                </Fragment>\r\n                                            )}\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </section>\r\n                        )}\r\n                    </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateInquiry\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\user\\Login.js",["367"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Loader from '../layout/Loader'\r\nimport MetaData from '../layout/MetaData'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from  'react-redux'\r\nimport { login, clearErrors } from './../../actions/userActions'\r\nimport { INSIDE_DASHBOARD_FALSE } from '../../constants/dashboardConstants'\r\nimport '../../css/forms.css'\r\n\r\nconst Login = ( { history }) => {\r\n\r\n    const [ email, setEmail ] = useState('');\r\n    const [ password, setPassword ] = useState('');\r\n    \r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\r\n\r\n    const [isChecked, setChecked] = useState('false')\r\n\r\n    const checkboxCheck = () => {\r\n        setChecked(!isChecked)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(isAuthenticated) {\r\n            history.push('/')\r\n        }\r\n\r\n        if(error){\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        } //loadError in load_user_fail\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_FALSE\r\n        })\r\n    }, [dispatch, alert, isAuthenticated, error, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(login(email, password));\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading ? <Loader/> : (\r\n                <Fragment>\r\n                    <MetaData title={'Login'}/>\r\n                    <div className=\"login-clean\" style={{paddingTop: '150px'}}>\r\n                        <form onSubmit={submitHandler}>\r\n                            <h2 className=\"sr-only\">Login Form</h2>\r\n                            <div className=\"illustration\">\r\n                                <img className=\"login-logo\" alt=\"company logo\" src=\"https://res.cloudinary.com/agiletech3itf/image/upload/v1610472388/agile-logo_cqnjad.png\"/>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input className=\"form-control\" type=\"email\" name=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div class=\"input-group mb-3\">\r\n                                    <input \r\n                                        className=\"form-control\" \r\n                                        type={isChecked ? \"password\" : \"text\"}  \r\n                                        name=\"password\" \r\n                                        placeholder=\"Password\" \r\n                                        value={password} \r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                    />\r\n                                    <div class=\"input-group-prepend\">\r\n                                        <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                            <a\r\n                                                onClick={checkboxCheck}\r\n                                                style={{cursor: 'pointer'}}\r\n                                            >\r\n                                                <span className=\"fa-lg\">\r\n                                                    <i className={isChecked ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\r\n                                                </span>\r\n                                            </a>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button className=\"btn btn-primary btn-block\" type=\"submit\">Log In</button>\r\n                            </div>\r\n                            <Link className=\"forgot\" to=\"/password/forgot\">Forgot your password?</Link>\r\n                        </form>\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\route\\ProtectedRoute.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\user\\Register.js",["368","369","370","371"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from  'react-redux'\r\nimport { register, clearErrors } from './../../actions/userActions'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Register = ( { history } ) => {\r\n\r\n    const [user, setUser] = useState({\r\n        name: '',\r\n        email: '',\r\n        contactNumber: '',\r\n        address: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    })\r\n\r\n    const { name, email, contactNumber, address, password, confirmPassword } = user;\r\n    const [avatar, setAvatar] = useState('');\r\n    const [avatarPreview, setAvatarPreview] = useState('images/default_avatar.png');\r\n    const [useDefaultImage, setUseDefaultImage] = useState('')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { isCreated, error, loading, success } = useSelector(state => state.register);\r\n\r\n    const [isChecked, setChecked] = useState('false')\r\n\r\n    const checkboxCheck = () => {\r\n        setChecked(!isChecked)\r\n    }\r\n\r\n    const [showOld, setOld] = useState('false')\r\n\r\n    const showOldToggle = () => {\r\n        setOld(!showOld)\r\n    }\r\n\r\n    const [showNew, setNew] = useState('false')\r\n\r\n    const showNewToggle = () => {\r\n        setNew(!showNew)\r\n    }\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n    \r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(error){\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n        if(success){\r\n            // history.push('/register-success')\r\n            history.push('/')\r\n            alert.success(success)\r\n        }\r\n        \r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n\r\n    }, [dispatch, alert, isCreated, error, success, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('email', email);\r\n        formData.set('password', password);\r\n        formData.set('confirmPassword', confirmPassword);\r\n        formData.set('contactNumber', contactNumber);\r\n        formData.set('address', address);\r\n        formData.set('avatar', avatar);\r\n        formData.set('useDefaultImage', useDefaultImage)\r\n\r\n        dispatch(register(formData));\r\n    }\r\n\r\n    const onChange = e => {\r\n        \r\n        if(e.target.name === 'useDefaultImage') {\r\n            let chkbox = document.getElementById('useDefaultImage')\r\n\r\n            if(chkbox.checked == true) { //if changed to ===, register would not work\r\n                setUseDefaultImage(\"True\")\r\n            }\r\n            else{\r\n                setUseDefaultImage(\"False\")\r\n            }\r\n\r\n        } else {\r\n            if(e.target.name === 'avatar') {\r\n\r\n                const reader = new FileReader();\r\n    \r\n                reader.onload = () => {\r\n                    if(reader.readyState === 2){\r\n                        setAvatarPreview(reader.result)\r\n                        setAvatar(reader.result)\r\n                    }\r\n                }\r\n    \r\n                reader.readAsDataURL(e.target.files[0])\r\n    \r\n            }\r\n            else {\r\n                setUser({\r\n                    ...user,\r\n                    [e.target.name]: e.target.value\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Register'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\r\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                        <hr/>\r\n                        {user && user.role !== 'admin' ? (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                                    <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                    <hr/>\r\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                </Fragment>\r\n                            )}\r\n\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{position: 'fixed'}}>\r\n                            <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                        </a>\r\n                        <div className=\"container\">\r\n                            <div className=\"main-body\">\r\n                                <div className=\"row gutters-sm\">\r\n                                    <div className=\"col-md-4 mb-3\">\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-body\">   \r\n                                                <div className=\"row text-center\">\r\n                                                    <h3 className=\"ml-3 mb-5 \">Register New User</h3>\r\n                                                </div>\r\n                                                <div className=\"d-flex flex-column align-items-center text-center\">\r\n                                                    <img src={avatarPreview} alt=\"Admin\" className=\"rounded-circle\" width=\"150\"/>\r\n                                                    <div className=\"mt-3\">\r\n                                                        <hr/>\r\n                                                        <input \r\n                                                            type='checkbox'\r\n                                                            id='useDefaultImage'\r\n                                                            name='useDefaultImage'\r\n                                                            value={useDefaultImage}\r\n                                                            onChange={onChange}\r\n                                                            onClick={checkboxCheck}\r\n                                                        />\r\n                                                            &nbsp;Use default image\r\n                                                            <br/>\r\n                                                            <br/>\r\n                                                            <input \r\n                                                                type=\"file\" \r\n                                                                id=\"avatar\" \r\n                                                                name=\"avatar\" \r\n                                                                accept=\"images/*\"\r\n                                                                onChange={onChange}\r\n                                                                style={{width: '90%'}}\r\n                                                                disabled={isChecked ? false : true}\r\n                                                            />\r\n                                                        <br/>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-8\">\r\n                                        <div className=\"card mb-3\">\r\n                                            <div className=\"card-body\">\r\n                                                <form method=\"post\" onSubmit={submitHandler}>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-sm-3\">\r\n                                                            <h6 className=\"mb-0\">Full Name</h6>\r\n                                                        </div>\r\n                                                        <div className=\"col-sm-9 text-secondary\">\r\n                                                            <input \r\n                                                                type=\"text\" \r\n                                                                className=\"form-control\" \r\n                                                                name=\"name\"\r\n                                                                value={name}\r\n                                                                placeholder=\"Name\"\r\n                                                                pattern=\"[A-Za-z\\s]{1,}\"\r\n                                                                onChange={onChange}\r\n                                                            />\r\n                                                            </div>\r\n                                                    </div>\r\n                                                    <hr/>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-sm-3\">\r\n                                                            <h6 className=\"mb-0\">Email</h6>\r\n                                                        </div>\r\n                                                        <div className=\"col-sm-9 text-secondary\">\r\n                                                            <input \r\n                                                                type=\"email\" \r\n                                                                className=\"form-control\" \r\n                                                                name=\"email\"\r\n                                                                value={email}\r\n                                                                placeholder=\"Email\"\r\n                                                                onChange={onChange}\r\n                                                            />\r\n                                                            </div>\r\n                                                    </div>\r\n                                                    <hr/>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-sm-3\">\r\n                                                            <h6 className=\"mb-0\">Contact Number</h6>\r\n                                                        </div>\r\n                                                        <div className=\"col-sm-9 text-secondary\">\r\n                                                            <input \r\n                                                                type=\"tel\" \r\n                                                                className=\"form-control\" \r\n                                                                name=\"contactNumber\" \r\n                                                                value={contactNumber}\r\n                                                                placeholder=\"09xx-xxx-xxxx\"\r\n                                                                pattern=\"^[0][9]\\d{2}-\\d{3}-\\d{4}$\"\r\n                                                                onChange={onChange}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <hr/>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-sm-3\">\r\n                                                            <h6 className=\"mb-0\">Address</h6>\r\n                                                        </div>\r\n                                                        <div className=\"col-sm-9 text-secondary\">\r\n                                                            <textarea \r\n                                                                type=\"text\"\r\n                                                                className=\"form-control\"\r\n                                                                name=\"address\"\r\n                                                                value={address}\r\n                                                                onChange={onChange}\r\n                                                                placeholder=\"Address\"\r\n                                                                style={{height: '150px'}}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <hr/>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-sm-3\">\r\n                                                            <h6 className=\"mb-0\">Password</h6>\r\n                                                        </div>\r\n                                                        <div className=\"col-sm-9 text-secondary\">\r\n                                                            <div class=\"input-group mb-3\">\r\n                                                                <input \r\n                                                                    type={showOld ? \"password\" : \"text\"} \r\n                                                                    className=\"form-control\" \r\n                                                                    name=\"password\"\r\n                                                                    value={password}\r\n                                                                    placeholder=\"Password\"\r\n                                                                    onChange={onChange}\r\n                                                                    aria-label=\"password\" aria-describedby=\"basic-addon1\"\r\n                                                                />\r\n                                                                <div class=\"input-group-prepend\">\r\n                                                                    <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                                                        <a\r\n                                                                            onClick={showOldToggle}\r\n                                                                            style={{cursor: 'pointer'}}\r\n                                                                        >\r\n                                                                            <span className=\"fa-lg\">\r\n                                                                                <i className={showOld ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\r\n                                                                            </span>\r\n                                                                        </a>\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <hr/>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-sm-3\">\r\n                                                            <h6 className=\"mb-0\">Confirm Password</h6>\r\n                                                        </div>\r\n                                                        <div className=\"col-sm-9 text-secondary\">\r\n                                                            <div class=\"input-group mb-3\">\r\n                                                                <input\r\n                                                                    type={showNew ? \"password\" : \"text\"} \r\n                                                                    className=\"form-control\"\r\n                                                                    name=\"confirmPassword\"\r\n                                                                    value={confirmPassword}\r\n                                                                    placeholder=\"Confirm Password\"\r\n                                                                    onChange={onChange}\r\n                                                                    aria-label=\"confirm\" aria-describedby=\"basic-addon1\"\r\n                                                                />\r\n                                                                <div class=\"input-group-prepend\">\r\n                                                                    <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                                                        <a\r\n                                                                            onClick={showNewToggle}\r\n                                                                            style={{cursor: 'pointer'}}\r\n                                                                        >\r\n                                                                            <span className=\"fa-lg\">\r\n                                                                                <i className={showNew ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\r\n                                                                            </span>\r\n                                                                        </a>\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"row\">\r\n                                                        <br/>\r\n                                                        <br/>\r\n                                                        <button\r\n                                                            className=\"btn btn-primary btn-block\"\r\n                                                            type=\"submit\"\r\n                                                            disabled={ loading ? true : false}\r\n                                                        >Register</button>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>    \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\user\\ForgotPassword.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\user\\NewPassword.js",["372","373"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from  'react-redux'\r\nimport { resetPassword, clearErrors } from './../../actions/userActions'\r\nimport { INSIDE_DASHBOARD_FALSE } from '../../constants/dashboardConstants'\r\n\r\nconst NewPassword = ({ history, match }) => {\r\n\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, success } = useSelector(state => state.forgotPassword);\r\n    \r\n    const [showOld, setOld] = useState('false')\r\n\r\n    const showOldToggle = () => {\r\n        setOld(!showOld)\r\n    }\r\n\r\n    const [showNew, setNew] = useState('false')\r\n\r\n    const showNewToggle = () => {\r\n        setNew(!showNew)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(success){\r\n            history.push('/admin/me')\r\n            alert.success('Password updated successfully');\r\n        }\r\n        \r\n        if(error){\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_FALSE\r\n        })\r\n\r\n    }, [dispatch, alert, error, success, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('password', password);\r\n        formData.set('confirmPassword', confirmPassword);\r\n\r\n        dispatch(resetPassword(match.params.token, formData));\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Reset Password'}/>\r\n            <div className=\"login-clean\" style={{paddingTop: '65px'}}>\r\n                <form onSubmit={submitHandler}>\r\n                    <h2 className=\"sr-only\">New Password</h2>\r\n                    <div className=\"div-forgot-password\">\r\n                        <h3 className=\"forgot-password-heading\">New Password</h3>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <h6>New Password</h6>\r\n                        <div class=\"input-group mb-3\">\r\n                            <input \r\n                                type={showOld ? \"password\" : \"text\"} \r\n                                className=\"form-control\" \r\n                                name=\"password\"\r\n                                value={password}\r\n                                placeholder=\"Old Password\"\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                                aria-label=\"oldpassword\" aria-describedby=\"basic-addon1\"\r\n                            />\r\n                            <div class=\"input-group-prepend\">\r\n                                <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                    <a\r\n                                        onClick={showOldToggle}\r\n                                        style={{cursor: 'pointer'}}\r\n                                    >\r\n                                        <span className=\"fa-lg\">\r\n                                            <i className={showOld ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\r\n                                        </span>\r\n                                    </a>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <h6>Confirm Password</h6>\r\n                        <div class=\"input-group mb-3\">\r\n                            <input\r\n                                type={showNew ? \"password\" : \"text\"} \r\n                                className=\"form-control\"\r\n                                name=\"confirmPassword\"\r\n                                value={confirmPassword}\r\n                                placeholder=\"Confirm Password\"\r\n                                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                                aria-label=\"confirm\" aria-describedby=\"basic-addon1\"\r\n                            />\r\n                            <div class=\"input-group-prepend\">\r\n                                <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                    <a\r\n                                        onClick={showNewToggle}\r\n                                        style={{cursor: 'pointer'}}\r\n                                    >\r\n                                        <span className=\"fa-lg\">\r\n                                            <i className={showNew ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\r\n                                        </span>\r\n                                    </a>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <button \r\n                            className=\"btn btn-primary btn-block\" \r\n                            type=\"submit\"\r\n                        >Update New Password</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NewPassword\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\UpdateUser.js",["374","375"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\nimport '../../css/bootstrap.min.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateUser, getUserDetails, clearErrors } from '../../actions/userActions'\r\nimport { UPDATE_USER_RESET } from '../../constants/userConstants'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\n\r\nconst UpdateUser = ({ match, history }) => {\r\n    const [name, setName] = useState('');\r\n    const [contactNumber, setContactNumber] = useState('');\r\n    const [role, setRole] = useState([]);\r\n    const [address, setAddress] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { error, user } = useSelector(state => state.getUser)\r\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.updateUser);\r\n\r\n    const userId = match.params.id\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n    \r\n    const roles = [\r\n        'admin',\r\n        'superadmin'\r\n    ]\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if(user && user._id !== userId) {\r\n            dispatch(getUserDetails(userId))\r\n        }\r\n        else { \r\n            setName(user.name)\r\n            setContactNumber(user.contactNumber)\r\n            setRole(user.role)\r\n            setAddress(user.address)\r\n        }\r\n\r\n        if(error){\r\n            history.push('/admin/users')\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(updateError){\r\n            history.push('/admin/users')\r\n            alert.error(updateError);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(isUpdated) {\r\n            history.push('/admin/users')\r\n            alert.success('User updated successfully.')\r\n\r\n            dispatch({\r\n                type: UPDATE_USER_RESET\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n    }, [dispatch, error, alert, isUpdated, updateError, user, userId, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('contactNumber', contactNumber);\r\n        formData.set('address', address);\r\n        formData.set('role', role);\r\n\r\n        dispatch(updateUser(user._id, formData));\r\n    }\r\n    \r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Update User'}/>\r\n            <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\r\n                <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                    <ul className=\"sidebar-nav\">\r\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                        <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                        <hr/>\r\n                        <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                        <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                        <hr/>\r\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"page-content-wrapper\">\r\n                    <div className=\"container-fluid\">\r\n                        <Fragment>\r\n                        <div className=\"login-clean\">\r\n                            <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{marginTop: '-65px', position: 'fixed'}}>\r\n                                <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                            </a>\r\n                            <form method=\"put\" onSubmit={submitHandler} encType='multipart/form-data' style={{maxWidth: '500px'}}>\r\n                                <h2 className=\"sr-only\">Update User</h2>\r\n                                <div className=\"div-forgot-password\">\r\n                                    <h3 className=\"forgot-password-heading\">Update User</h3>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Name</h6>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"name\"\r\n                                        value={name}\r\n                                        placeholder=\"Name\"\r\n                                        pattern=\"[A-Za-z\\s]{1,}\"\r\n                                        style={{width: '100%'}}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Contact Number</h6>\r\n                                    <input\r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"contactNumber\"\r\n                                        value={contactNumber}\r\n                                        placeholder=\"09xx-xxx-xxxx\" \r\n                                        pattern=\"^[0][9]\\d{2}-\\d{3}-\\d{4}$\"\r\n                                        onChange={(e) => setContactNumber(e.target.value)}\r\n                                        height='55px'\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Address</h6>\r\n                                    <textarea\r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        name=\"address\"\r\n                                        value={address}\r\n                                        placeholder=\"Address\"\r\n                                        style={{width: '100%', height: '150px'}}\r\n                                        onChange={(e) => setAddress(e.target.value)}\r\n                                        height='55px'\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <h6>Role</h6>\r\n                                    <div className=\"dropdown show\">\r\n                                        <select \r\n                                            name=\"role\" \r\n                                            className=\"product-dropdown\" \r\n                                            id=\"role\"\r\n                                            value={role}\r\n                                            onChange={(e) => setRole(e.target.value)}\r\n                                        >\r\n                                            {roles.map(role => (\r\n                                                <option key={role} value={role}>{role}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                        <button \r\n                                        className=\"btn btn-primary btn-block\" \r\n                                        type=\"submit\"\r\n                                    >\r\n                                        Update User\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateUser\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\user\\RegisterSuccess.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\actions\\userActions.js",["376","377"],"import axios from 'axios'\r\nimport {\r\n    LOGIN_REQUEST,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    REGISTER_USER_REQUEST,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAIL,\r\n    LOAD_USER_REQUEST,\r\n    LOAD_USER_SUCCESS,\r\n    LOAD_USER_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    UPDATE_PROFILE_REQUEST,\r\n    UPDATE_PROFILE_SUCCESS,\r\n    UPDATE_PROFILE_FAIL,\r\n    UPDATE_PASSWORD_REQUEST,\r\n    UPDATE_PASSWORD_SUCCESS,\r\n    UPDATE_PASSWORD_FAIL,\r\n    FORGOT_PASSWORD_REQUEST,\r\n    FORGOT_PASSWORD_SUCCESS,\r\n    FORGOT_PASSWORD_FAIL,\r\n    NEW_PASSWORD_REQUEST,\r\n    NEW_PASSWORD_SUCCESS,\r\n    NEW_PASSWORD_FAIL,\r\n    ALL_USERS_REQUEST,\r\n    ALL_USERS_SUCCESS,\r\n    ALL_USERS_FAIL,\r\n    GET_USER_REQUEST,\r\n    GET_USER_SUCCESS,\r\n    GET_USER_FAIL,\r\n    UPDATE_USER_REQUEST,\r\n    UPDATE_USER_SUCCESS,\r\n    UPDATE_USER_FAIL,\r\n    UPDATE_USER_RESET,\r\n    DELETE_USER_REQUEST,\r\n    DELETE_USER_SUCCESS,\r\n    DELETE_USER_RESET,\r\n    DELETE_USER_FAIL,\r\n    LOGOUT_FAIL,\r\n    CLEAR_ERRORS\r\n} from '../constants/userConstants'\r\n\r\n//Get product details\r\nexport const getUserDetails = (id) => async(dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: GET_USER_REQUEST\r\n        })\r\n\r\n        const { data } = await axios.get(`/api/v1/superadmin/user/${id}`)\r\n\r\n        dispatch({\r\n            type: GET_USER_SUCCESS,\r\n            payload: data.user\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type: GET_USER_FAIL,\r\n            payload: error.response.data.message\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n// Update user (SUPERADMIN)\r\nexport const updateUser = (id, userData) => async(dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: UPDATE_USER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }\r\n        const { data } = await axios.put(`/api/v1/superadmin/user/${id}`, userData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_USER_SUCCESS,\r\n            payload: data.success\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type: UPDATE_USER_FAIL,\r\n            payload: error.response.data.message\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n// Delete user (ADMIN)\r\nexport const deleteUser = (id) => async(dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: DELETE_USER_REQUEST\r\n        })\r\n\r\n        const { data } = await axios.delete(`/api/v1/superadmin/user/${id}`)\r\n\r\n        dispatch({\r\n            type: DELETE_USER_SUCCESS,\r\n            payload: data.success\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type: DELETE_USER_FAIL,\r\n            payload: error.response.data.message\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport const getUsers = () => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: ALL_USERS_REQUEST\r\n        })\r\n\r\n        const { data } = await axios.get('/api/v1/superadmin/users')\r\n\r\n        dispatch({\r\n            type: ALL_USERS_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type: ALL_USERS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Login\r\nexport const login = ( email, password ) => async (dispatch) => {\r\n    try {\r\n        dispatch ({\r\n            type: LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/v1/login', { email, password }, config)\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOGIN_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Register user\r\nexport const register = ( userData ) => async (dispatch) => {\r\n    try {\r\n        dispatch ({\r\n            type: REGISTER_USER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/v1/superadmin/register', userData, config)\r\n\r\n        dispatch({\r\n            type: REGISTER_USER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: REGISTER_USER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Load user\r\nexport const loadUser = () => async (dispatch) => {\r\n    try {\r\n        dispatch ({\r\n            type: LOAD_USER_REQUEST\r\n        })\r\n\r\n        const { data } = await axios.get('/api/v1/me')\r\n\r\n        dispatch({\r\n            type: LOAD_USER_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOAD_USER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Logout user\r\nexport const logout = () => async (dispatch) => {\r\n    try {\r\n        await axios.get('/api/v1/logout')\r\n\r\n        dispatch({\r\n            type: LOGOUT_SUCCESS\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOGOUT_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Update user profile\r\nexport const updateProfile = ( userData ) => async (dispatch) => {\r\n    try {\r\n        dispatch ({\r\n            type: UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put('/api/v1/me/update', userData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_PROFILE_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Update user password\r\nexport const updatePassword = ( passwords ) => async (dispatch) => {\r\n    try {\r\n        dispatch ({\r\n            type: UPDATE_PASSWORD_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put('/api/v1/password/update', passwords, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_PASSWORD_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_PASSWORD_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Forgot password\r\nexport const forgotPassword = ( email ) => async (dispatch) => {\r\n    try {\r\n        dispatch ({\r\n            type: FORGOT_PASSWORD_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/v1/password/forgot', email, config)\r\n\r\n        dispatch({\r\n            type: FORGOT_PASSWORD_SUCCESS,\r\n            payload: data.message\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: FORGOT_PASSWORD_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// New password\r\nexport const resetPassword = ( token, passwords ) => async (dispatch) => {\r\n    try {\r\n        dispatch ({\r\n            type: NEW_PASSWORD_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/password/reset/${token}`, passwords, config)\r\n\r\n        dispatch({\r\n            type: NEW_PASSWORD_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_PASSWORD_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n//clear errors\r\nexport const clearErrors = () => async(dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERRORS\r\n    })\r\n}","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\reducers\\inquiryReducers.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\admin\\Dashboard.js",["378"],"import React, { Fragment, useEffect, useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport MetaData from './../layout/MetaData'\r\nimport Loader from './../layout/Loader'\r\nimport '../../css/bootstrap.min.css'\r\nimport '../../css/dashboard.css'\r\nimport '../../css/Sidebar-Menu.css'\r\nimport '../../css/Sidebar-Menu-1.css'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getAdminProducts } from '../../actions/productActions'\r\nimport { listInquiry } from '../../actions/inquiryActions'\r\nimport { getUsers } from '../../actions/userActions'\r\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\r\nimport { logout } from './../../actions/userActions'\r\n\r\nconst Dashboard = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { loading, products } = useSelector(state => state.products)\r\n    const { users } = useSelector(state => state.users)\r\n    const { inquiryCount, appointmentCount, otherCount } = useSelector(state => state.listInquiry)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [isToggled, setToggled] = useState('false')\r\n\r\n    const handleToggle = () => {\r\n        setToggled(!isToggled)\r\n    }\r\n    \r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n\r\n        alert.success('Logged out successfully')\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getAdminProducts())\r\n        dispatch(listInquiry())\r\n        dispatch(getUsers())\r\n\r\n        dispatch({\r\n            type: INSIDE_DASHBOARD_TRUE\r\n        })\r\n\r\n\r\n    }, [dispatch])\r\n    \r\n    console.log(inquiryCount)\r\n    \r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Dashboard'}/>\r\n            <Fragment>\r\n                {loading ? <Loader/> : (\r\n                    <Fragment>\r\n                        <MetaData title={'Admin Dashboard'}/>\r\n                        <div id=\"wrapper\" className={isToggled ? \"toggled\" : null} style={{paddingTop: '11px'}}>\r\n                            <div id=\"sidebar-wrapper\" style={{\"background\": \"var(--gray-dark)\", \"color\": \"var(--white)\"}}>\r\n                                <ul className=\"sidebar-nav\">\r\n                                    <li className=\"sidebar-brand\">Agile Technodynamics</li>\r\n                                    <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\r\n                                    <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\r\n                                    <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\r\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\r\n                                    <hr/>\r\n                                    {user && user.role !== 'admin' ? (\r\n                                            <Fragment>\r\n                                                <li> <Link to=\"/admin/users\"><i className=\"fa fa-user\"></i> Users</Link></li>\r\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user\"></i> Register</Link></li>\r\n                                            </Fragment>\r\n                                        ) : (\r\n                                            <Fragment>\r\n                                                <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\r\n                                                <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointment</Link></li>\r\n                                                <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\r\n                                                <hr/>\r\n                                                <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\r\n                                                <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\r\n                                            </Fragment>\r\n                                        )}\r\n\r\n                                    <hr/>\r\n                                    <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\r\n                                    <li></li>\r\n                                </ul>\r\n                            </div>\r\n                            <div className=\"page-content-wrapper\">\r\n                                <div className=\"container-fluid\">\r\n                                    <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle} style={{position: 'fixed'}}>\r\n                                        <i className=\"fa fa-bars\" style={{\"color\": \"var(--gray-dark)\"}}></i>\r\n                                    </a>\r\n                                    {user && user.role !== 'admin' ? (\r\n                                        <Fragment>\r\n                                            <div className=\"main-section\" style={{paddingTop: '65px'}}>\r\n                                                <h3><strong>Overview</strong></h3>\r\n                                                <div className=\"dashbord\">\r\n                                                    <div className=\"icon-section\">\r\n                                                        <i className=\"fa fa-users\" aria-hidden=\"true\"></i><br/>\r\n                                                        <small>Admins</small>\r\n                                                        <p>{users && users.length} admins</p>\r\n                                                    </div>\r\n                                                    <div className=\"detail-section\">\r\n                                                        <Link to=\"/admin/users\">More Info </Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"dashbord dashbord-green\">\r\n                                                    <div className=\"icon-section\">\r\n                                                        <i className=\"fa fa-user-circle\" aria-hidden=\"true\"></i><br/>\r\n                                                        <small>Super Admins</small>\r\n                                                        <p>{users && users.length}  superadmins</p>\r\n                                                    </div>\r\n                                                    <div className=\"detail-section\">\r\n                                                        <Link to=\"/admin/users\">More Info </Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"dashbord dashbord-orange\">\r\n                                                    <div className=\"icon-section\">\r\n                                                        <i className=\"fa fa-shopping-bag\" aria-hidden=\"true\"></i><br/>\r\n                                                        <small>Products</small>\r\n                                                        <p>{products && products.length} products</p>\r\n                                                    </div>\r\n                                                    <div className=\"detail-section\">\r\n                                                        <Link to=\"/admin/products\">More Info </Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"main-section\" style={{paddingTop: '65px'}}>\r\n                                                <h3><strong>Settings</strong></h3>\r\n                                                <div className=\"dashbord dashbord-blue\">\r\n                                                    <div className=\"icon-section\">\r\n                                                        <i className=\"fa fa-home\" aria-hidden=\"true\"></i><br/>\r\n                                                        <p>Update Home</p>\r\n                                                    </div>\r\n                                                    <div className=\"detail-section\">\r\n                                                        <Link to=\"/admin/update-home\">Update <i className=\"fa fa-angle-right\"></i></Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"dashbord dashbord-red\">\r\n                                                    <div className=\"icon-section\">\r\n                                                        <i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i><br/>\r\n                                                        <p>Update About</p>\r\n                                                    </div>\r\n                                                    <div className=\"detail-section\">\r\n                                                        <Link to=\"/admin/about\">Update <i className=\"fa fa-angle-right\"></i></Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"dashbord dashbord-skyblue\">\r\n                                                    <div className=\"icon-section\">\r\n                                                        <i className=\"fa fa-quote-left\" aria-hidden=\"true\"></i><br/>\r\n                                                        <p>Update Footer</p>\r\n                                                    </div>\r\n                                                    <div className=\"detail-section\">\r\n                                                        <Link to=\"/admin/update-footer\">Update <i className=\"fa fa-angle-right\"></i></Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Fragment>\r\n                                    ) : (\r\n                                        <Fragment>\r\n                                            <div className=\"main-section\" style={{paddingTop: '65px'}}>\r\n                                                <h3><strong>Inbox</strong></h3>\r\n                                                <div className=\"dashbord\">\r\n                                                    <div className=\"icon-section\">\r\n                                                        <i className=\"fa fa-envelope\" aria-hidden=\"true\"></i><br/>\r\n                                                        <small>Inquiries</small>\r\n                                                        <p>{inquiryCount} messages</p>\r\n                                                    </div>\r\n                                                    <div className=\"detail-section\">\r\n                                                        <Link to=\"/admin/inquiries\">More Info </Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"dashbord dashbord-green\">\r\n                                                    <div className=\"icon-section\">\r\n                                                        <i className=\"fa fa-archive\" aria-hidden=\"true\"></i><br/>\r\n                                                        <small>Appointments</small>\r\n                                                        <p>{appointmentCount} messages</p>\r\n                                                    </div>\r\n                                                    <div className=\"detail-section\">\r\n                                                        <Link to=\"/admin/appointments\">More Info </Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"dashbord dashbord-orange\">\r\n                                                    <div className=\"icon-section\">\r\n                                                        <i className=\"fa fa-inbox\" aria-hidden=\"true\"></i><br/>\r\n                                                        <small>Other Concerns</small>\r\n                                                        <p>{otherCount} messages</p>\r\n                                                    </div>\r\n                                                    <div className=\"detail-section\">\r\n                                                        <Link to=\"/admin/others\">More Info </Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"main-section\" style={{paddingTop: '65px'}}>\r\n                                                <h3><strong>Settings</strong></h3>\r\n                                                <div className=\"dashbord dashbord-blue\">\r\n                                                    <div className=\"icon-section\">\r\n                                                        <i className=\"fa fa-home\" aria-hidden=\"true\"></i><br/>\r\n                                                        <p>Update Home</p>\r\n                                                    </div>\r\n                                                    <div className=\"detail-section\">\r\n                                                        <Link to=\"/admin/home\">Update <i className=\"fa fa-angle-right\"></i></Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"dashbord dashbord-red\">\r\n                                                    <div className=\"icon-section\">\r\n                                                        <i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i><br/>\r\n                                                        <p>Update About</p>\r\n                                                    </div>\r\n                                                    <div className=\"detail-section\">\r\n                                                        <Link to=\"/admin/about\">Update <i className=\"fa fa-angle-right\"></i></Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"dashbord dashbord-skyblue\">\r\n                                                    <div className=\"icon-section\">\r\n                                                        <i className=\"fa fa-quote-left\" aria-hidden=\"true\"></i><br/>\r\n                                                        <p>Update Footer</p>\r\n                                                    </div>\r\n                                                    <div className=\"detail-section\">\r\n                                                        <Link to=\"/admin/update-footer\">Update <i className=\"fa fa-angle-right\"></i></Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"dashbord dashbord-green\">\r\n                                                    <div className=\"icon-section\">\r\n                                                        <i className=\"fa fa-check\" aria-hidden=\"true\"></i><br/>\r\n                                                        <p>Update Services</p>\r\n                                                    </div>\r\n                                                    <div className=\"detail-section\">\r\n                                                        <Link to=\"/admin/service\">More Info </Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Fragment>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Fragment>\r\n                )}\r\n            </Fragment>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\layout\\Loader.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\actions\\productActions.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\product\\ProductDisplay.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\components\\layout\\MetaData.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\actions\\websiteActions.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\constants\\productConstants.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\constants\\userConstants.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\constants\\dashboardConstants.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\constants\\inquiryConstants.js",[],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\constants\\websiteConstants.js",[],["379","380"],"D:\\Agile Project\\agile-technodynamics\\frontend\\src\\actions\\inquiryActions.js",[],{"ruleId":"381","replacedBy":"382"},{"ruleId":"383","replacedBy":"384"},{"ruleId":"385","severity":1,"message":"386","line":64,"column":20,"nodeType":"387","messageId":"388","endLine":64,"endColumn":35},{"ruleId":"385","severity":1,"message":"389","line":64,"column":37,"nodeType":"387","messageId":"388","endLine":64,"endColumn":41},{"ruleId":"385","severity":1,"message":"390","line":1,"column":38,"nodeType":"387","messageId":"388","endLine":1,"endColumn":46},{"ruleId":"391","severity":1,"message":"392","line":49,"column":140,"nodeType":"393","messageId":"394","endLine":49,"endColumn":141},{"ruleId":"391","severity":1,"message":"392","line":49,"column":161,"nodeType":"393","messageId":"394","endLine":49,"endColumn":162},{"ruleId":"395","severity":1,"message":"396","line":55,"column":41,"nodeType":"397","endLine":55,"endColumn":158},{"ruleId":"391","severity":1,"message":"392","line":70,"column":102,"nodeType":"393","messageId":"394","endLine":70,"endColumn":103},{"ruleId":"391","severity":1,"message":"392","line":70,"column":124,"nodeType":"393","messageId":"394","endLine":70,"endColumn":125},{"ruleId":"391","severity":1,"message":"392","line":73,"column":102,"nodeType":"393","messageId":"394","endLine":73,"endColumn":103},{"ruleId":"391","severity":1,"message":"392","line":73,"column":125,"nodeType":"393","messageId":"394","endLine":73,"endColumn":126},{"ruleId":"391","severity":1,"message":"392","line":79,"column":125,"nodeType":"393","messageId":"394","endLine":79,"endColumn":126},{"ruleId":"391","severity":1,"message":"392","line":79,"column":149,"nodeType":"393","messageId":"394","endLine":79,"endColumn":150},{"ruleId":"385","severity":1,"message":"398","line":6,"column":10,"nodeType":"387","messageId":"388","endLine":6,"endColumn":14},{"ruleId":"385","severity":1,"message":"399","line":20,"column":22,"nodeType":"387","messageId":"388","endLine":20,"endColumn":37},{"ruleId":"385","severity":1,"message":"400","line":21,"column":25,"nodeType":"387","messageId":"388","endLine":21,"endColumn":39},{"ruleId":"385","severity":1,"message":"399","line":20,"column":22,"nodeType":"387","messageId":"388","endLine":20,"endColumn":37},{"ruleId":"401","severity":1,"message":"402","line":69,"column":61,"nodeType":"397","endLine":69,"endColumn":64},{"ruleId":"385","severity":1,"message":"399","line":20,"column":22,"nodeType":"387","messageId":"388","endLine":20,"endColumn":37},{"ruleId":"385","severity":1,"message":"399","line":20,"column":22,"nodeType":"387","messageId":"388","endLine":20,"endColumn":37},{"ruleId":"401","severity":1,"message":"402","line":71,"column":61,"nodeType":"397","endLine":71,"endColumn":64},{"ruleId":"385","severity":1,"message":"399","line":20,"column":22,"nodeType":"387","messageId":"388","endLine":20,"endColumn":37},{"ruleId":"401","severity":1,"message":"402","line":75,"column":61,"nodeType":"397","endLine":75,"endColumn":64},{"ruleId":"385","severity":1,"message":"390","line":1,"column":38,"nodeType":"387","messageId":"388","endLine":1,"endColumn":46},{"ruleId":"385","severity":1,"message":"398","line":9,"column":10,"nodeType":"387","messageId":"388","endLine":9,"endColumn":14},{"ruleId":"385","severity":1,"message":"403","line":17,"column":13,"nodeType":"387","messageId":"388","endLine":17,"endColumn":20},{"ruleId":"385","severity":1,"message":"404","line":19,"column":9,"nodeType":"387","messageId":"388","endLine":19,"endColumn":15},{"ruleId":"385","severity":1,"message":"399","line":20,"column":22,"nodeType":"387","messageId":"388","endLine":20,"endColumn":37},{"ruleId":"401","severity":1,"message":"402","line":70,"column":61,"nodeType":"397","endLine":70,"endColumn":64},{"ruleId":"395","severity":1,"message":"396","line":58,"column":37,"nodeType":"397","endLine":58,"endColumn":181},{"ruleId":"405","severity":1,"message":"406","line":70,"column":33,"nodeType":"407","endLine":70,"endColumn":58},{"ruleId":"405","severity":1,"message":"408","line":77,"column":60,"nodeType":"407","endLine":77,"endColumn":100},{"ruleId":"405","severity":1,"message":"406","line":108,"column":37,"nodeType":"407","endLine":108,"endColumn":62},{"ruleId":"395","severity":1,"message":"396","line":113,"column":37,"nodeType":"397","endLine":118,"endColumn":39},{"ruleId":"405","severity":1,"message":"408","line":120,"column":60,"nodeType":"407","endLine":120,"endColumn":97},{"ruleId":"401","severity":1,"message":"402","line":74,"column":37,"nodeType":"397","endLine":74,"endColumn":147},{"ruleId":"385","severity":1,"message":"409","line":9,"column":24,"nodeType":"387","messageId":"388","endLine":9,"endColumn":40},{"ruleId":"385","severity":1,"message":"403","line":27,"column":13,"nodeType":"387","messageId":"388","endLine":27,"endColumn":20},{"ruleId":"410","severity":1,"message":"411","line":66,"column":8,"nodeType":"412","endLine":66,"endColumn":65,"suggestions":"413"},{"ruleId":"401","severity":1,"message":"402","line":128,"column":29,"nodeType":"397","endLine":128,"endColumn":159},{"ruleId":"385","severity":1,"message":"403","line":23,"column":13,"nodeType":"387","messageId":"388","endLine":23,"endColumn":20},{"ruleId":"401","severity":1,"message":"402","line":122,"column":29,"nodeType":"397","endLine":122,"endColumn":159},{"ruleId":"385","severity":1,"message":"403","line":28,"column":31,"nodeType":"387","messageId":"388","endLine":28,"endColumn":38},{"ruleId":"401","severity":1,"message":"402","line":134,"column":25,"nodeType":"397","endLine":134,"endColumn":155},{"ruleId":"401","severity":1,"message":"402","line":161,"column":25,"nodeType":"397","endLine":161,"endColumn":135},{"ruleId":"385","severity":1,"message":"403","line":23,"column":31,"nodeType":"387","messageId":"388","endLine":23,"endColumn":38},{"ruleId":"401","severity":1,"message":"402","line":117,"column":25,"nodeType":"397","endLine":117,"endColumn":155},{"ruleId":"401","severity":1,"message":"402","line":140,"column":49,"nodeType":"397","endLine":143,"endColumn":50},{"ruleId":"401","severity":1,"message":"402","line":166,"column":49,"nodeType":"397","endLine":169,"endColumn":50},{"ruleId":"385","severity":1,"message":"403","line":26,"column":44,"nodeType":"387","messageId":"388","endLine":26,"endColumn":51},{"ruleId":"401","severity":1,"message":"402","line":142,"column":29,"nodeType":"397","endLine":142,"endColumn":159},{"ruleId":"395","severity":1,"message":"396","line":182,"column":41,"nodeType":"397","endLine":187,"endColumn":43},{"ruleId":"401","severity":1,"message":"402","line":162,"column":25,"nodeType":"397","endLine":162,"endColumn":135},{"ruleId":"410","severity":1,"message":"414","line":75,"column":8,"nodeType":"412","endLine":75,"endColumn":76,"suggestions":"415"},{"ruleId":"416","severity":1,"message":"417","line":165,"column":36,"nodeType":"393","messageId":"418","endLine":165,"endColumn":38},{"ruleId":"401","severity":1,"message":"402","line":206,"column":25,"nodeType":"397","endLine":206,"endColumn":135},{"ruleId":"401","severity":1,"message":"402","line":158,"column":25,"nodeType":"397","endLine":158,"endColumn":135},{"ruleId":"401","severity":1,"message":"402","line":143,"column":25,"nodeType":"397","endLine":143,"endColumn":135},{"ruleId":"401","severity":1,"message":"402","line":158,"column":25,"nodeType":"397","endLine":158,"endColumn":135},{"ruleId":"395","severity":1,"message":"396","line":93,"column":25,"nodeType":"397","endLine":98,"endColumn":27},{"ruleId":"401","severity":1,"message":"402","line":147,"column":25,"nodeType":"397","endLine":147,"endColumn":135},{"ruleId":"385","severity":1,"message":"403","line":75,"column":13,"nodeType":"387","messageId":"388","endLine":75,"endColumn":20},{"ruleId":"416","severity":1,"message":"417","line":136,"column":31,"nodeType":"393","messageId":"418","endLine":136,"endColumn":33},{"ruleId":"401","severity":1,"message":"402","line":201,"column":25,"nodeType":"397","endLine":201,"endColumn":155},{"ruleId":"401","severity":1,"message":"402","line":132,"column":25,"nodeType":"397","endLine":132,"endColumn":135},{"ruleId":"401","severity":1,"message":"402","line":171,"column":25,"nodeType":"397","endLine":171,"endColumn":135},{"ruleId":"401","severity":1,"message":"402","line":157,"column":25,"nodeType":"397","endLine":157,"endColumn":135},{"ruleId":"385","severity":1,"message":"403","line":77,"column":13,"nodeType":"387","messageId":"388","endLine":77,"endColumn":20},{"ruleId":"416","severity":1,"message":"417","line":159,"column":31,"nodeType":"393","messageId":"418","endLine":159,"endColumn":33},{"ruleId":"401","severity":1,"message":"402","line":225,"column":29,"nodeType":"397","endLine":225,"endColumn":159},{"ruleId":"385","severity":1,"message":"403","line":25,"column":44,"nodeType":"387","messageId":"388","endLine":25,"endColumn":51},{"ruleId":"401","severity":1,"message":"402","line":128,"column":29,"nodeType":"397","endLine":128,"endColumn":159},{"ruleId":"401","severity":1,"message":"402","line":111,"column":21,"nodeType":"397","endLine":111,"endColumn":131},{"ruleId":"401","severity":1,"message":"402","line":73,"column":45,"nodeType":"397","endLine":76,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":99,"column":31,"nodeType":"393","messageId":"418","endLine":99,"endColumn":33},{"ruleId":"401","severity":1,"message":"402","line":165,"column":25,"nodeType":"397","endLine":165,"endColumn":135},{"ruleId":"401","severity":1,"message":"402","line":295,"column":73,"nodeType":"397","endLine":298,"endColumn":74},{"ruleId":"401","severity":1,"message":"402","line":326,"column":73,"nodeType":"397","endLine":329,"endColumn":74},{"ruleId":"401","severity":1,"message":"402","line":80,"column":37,"nodeType":"397","endLine":83,"endColumn":38},{"ruleId":"401","severity":1,"message":"402","line":106,"column":37,"nodeType":"397","endLine":109,"endColumn":38},{"ruleId":"385","severity":1,"message":"403","line":25,"column":13,"nodeType":"387","messageId":"388","endLine":25,"endColumn":20},{"ruleId":"401","severity":1,"message":"402","line":119,"column":29,"nodeType":"397","endLine":119,"endColumn":159},{"ruleId":"385","severity":1,"message":"419","line":34,"column":5,"nodeType":"387","messageId":"388","endLine":34,"endColumn":22},{"ruleId":"385","severity":1,"message":"420","line":37,"column":5,"nodeType":"387","messageId":"388","endLine":37,"endColumn":22},{"ruleId":"401","severity":1,"message":"402","line":94,"column":37,"nodeType":"397","endLine":94,"endColumn":147},{"ruleId":"381","replacedBy":"421"},{"ruleId":"383","replacedBy":"422"},"no-native-reassign",["423"],"no-negated-in-lhs",["424"],"no-unused-vars","'isAuthenticated' is assigned a value but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'useState' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","'setMainCategory' is assigned a value but never used.","'setSubCategory' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'loading' is assigned a value but never used.","'abouts' is assigned a value but never used.","jsx-a11y/aria-props","aria-aria-haspopup: This attribute is an invalid ARIA attribute.","JSXAttribute","aria-aria-labelledby: This attribute is an invalid ARIA attribute.","'getFooterDetails' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'footerInfo'. Either include it or remove the dependency array.","ArrayExpression",["425"],"React Hook useEffect has a missing dependency: 'deleteAll'. Either include it or remove the dependency array.",["426"],"eqeqeq","Expected '===' and instead saw '=='.","unexpected","'UPDATE_USER_RESET' is defined but never used.","'DELETE_USER_RESET' is defined but never used.",["423"],["424"],"no-global-assign","no-unsafe-negation",{"desc":"427","fix":"428"},{"desc":"429","fix":"430"},"Update the dependencies array to be: [dispatch, alert, error, history, updateError, isUpdated, footerInfo]",{"range":"431","text":"432"},"Update the dependencies array to be: [dispatch, alert, error, history, isDeleted, isUpdated, deleteError, deleteAll]",{"range":"433","text":"434"},[2404,2461],"[dispatch, alert, error, history, updateError, isUpdated, footerInfo]",[2248,2316],"[dispatch, alert, error, history, isDeleted, isUpdated, deleteError, deleteAll]"]