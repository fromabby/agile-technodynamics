[{"/Users/abby/Desktop/agile-technodynamics/frontend/src/index.js":"1","/Users/abby/Desktop/agile-technodynamics/frontend/src/store.js":"2","/Users/abby/Desktop/agile-technodynamics/frontend/src/App.js":"3","/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/productReducers.js":"4","/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/userReducers.js":"5","/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/inquiryReducers.js":"6","/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/websiteReducers.js":"7","/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/dashboardReducers.js":"8","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Products.js":"9","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductsOthers.js":"10","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductsDC.js":"11","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductsEEE.js":"12","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductsME.js":"13","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductsTE.js":"14","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/About.js":"15","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Services.js":"16","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Contact.js":"17","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ConfirmationPage.js":"18","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/EmailSent.js":"19","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/Footer.js":"20","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/Loader.js":"21","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateHome.js":"22","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateAbout.js":"23","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateFooter.js":"24","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/Profile.js":"25","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateProfile.js":"26","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdatePassword.js":"27","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListAppointments.js":"28","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListInquiries.js":"29","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListOthers.js":"30","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListArchives.js":"31","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListTrash.js":"32","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListAbout.js":"33","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListHome.js":"34","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListFooter.js":"35","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListServices.js":"36","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateInquiry.js":"37","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateProduct.js":"38","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListSuperAdmins.js":"39","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateServices.js":"40","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListAdmins.js":"41","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/product/ProductDetails.js":"42","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateUser.js":"43","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/user/Register.js":"44","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/user/PasswordSuccess.js":"45","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/user/ForgotPassword.js":"46","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/user/NewPassword.js":"47","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/route/ProtectedRoute.js":"48","/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/userActions.js":"49","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/NewProduct.js":"50","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Home.js":"51","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/Dashboard.js":"52","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/Header.js":"53","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/user/Login.js":"54","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/MetaData.js":"55","/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/productActions.js":"56","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/product/ProductDisplay.js":"57","/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/productConstants.js":"58","/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/userConstants.js":"59","/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/inquiryConstants.js":"60","/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/websiteConstants.js":"61","/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/dashboardConstants.js":"62","/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/websiteActions.js":"63","/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/inquiryActions.js":"64","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateUserSuccess.js":"65","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListProducts.js":"66"},{"size":586,"mtime":1615182325413,"results":"67","hashOfConfig":"68"},{"size":2009,"mtime":1615182325416,"results":"69","hashOfConfig":"68"},{"size":7283,"mtime":1615620540691,"results":"70","hashOfConfig":"68"},{"size":4698,"mtime":1615559801855,"results":"71","hashOfConfig":"68"},{"size":8439,"mtime":1615559819448,"results":"72","hashOfConfig":"68"},{"size":4183,"mtime":1615182325414,"results":"73","hashOfConfig":"68"},{"size":9742,"mtime":1615559837654,"results":"74","hashOfConfig":"68"},{"size":468,"mtime":1615182325413,"results":"75","hashOfConfig":"68"},{"size":4211,"mtime":1615552620672,"results":"76","hashOfConfig":"68"},{"size":3864,"mtime":1615552620672,"results":"77","hashOfConfig":"68"},{"size":4336,"mtime":1615552620672,"results":"78","hashOfConfig":"68"},{"size":4301,"mtime":1615552641370,"results":"79","hashOfConfig":"68"},{"size":4358,"mtime":1615552620672,"results":"80","hashOfConfig":"68"},{"size":4745,"mtime":1615552620672,"results":"81","hashOfConfig":"68"},{"size":4211,"mtime":1615551417081,"results":"82","hashOfConfig":"68"},{"size":6245,"mtime":1615549877930,"results":"83","hashOfConfig":"68"},{"size":9525,"mtime":1615616925924,"results":"84","hashOfConfig":"68"},{"size":1317,"mtime":1615182325181,"results":"85","hashOfConfig":"68"},{"size":1303,"mtime":1615356584111,"results":"86","hashOfConfig":"68"},{"size":3860,"mtime":1615621549896,"results":"87","hashOfConfig":"68"},{"size":411,"mtime":1615359817965,"results":"88","hashOfConfig":"68"},{"size":14014,"mtime":1615621294027,"results":"89","hashOfConfig":"68"},{"size":10535,"mtime":1615621292850,"results":"90","hashOfConfig":"68"},{"size":14376,"mtime":1615621387143,"results":"91","hashOfConfig":"68"},{"size":10406,"mtime":1615621306509,"results":"92","hashOfConfig":"68"},{"size":17523,"mtime":1615621328725,"results":"93","hashOfConfig":"68"},{"size":11881,"mtime":1615621337341,"results":"94","hashOfConfig":"68"},{"size":8805,"mtime":1615621289813,"results":"95","hashOfConfig":"68"},{"size":8821,"mtime":1615621353765,"results":"96","hashOfConfig":"68"},{"size":8746,"mtime":1615621352271,"results":"97","hashOfConfig":"68"},{"size":9180,"mtime":1615621339831,"results":"98","hashOfConfig":"68"},{"size":12226,"mtime":1615621297589,"results":"99","hashOfConfig":"68"},{"size":6440,"mtime":1615621335897,"results":"100","hashOfConfig":"68"},{"size":7020,"mtime":1615621333668,"results":"101","hashOfConfig":"68"},{"size":6828,"mtime":1615621334946,"results":"102","hashOfConfig":"68"},{"size":7100,"mtime":1615621300364,"results":"103","hashOfConfig":"68"},{"size":18798,"mtime":1615621308097,"results":"104","hashOfConfig":"68"},{"size":18248,"mtime":1615621350624,"results":"105","hashOfConfig":"68"},{"size":7449,"mtime":1615621355854,"results":"106","hashOfConfig":"68"},{"size":14790,"mtime":1615621396659,"results":"107","hashOfConfig":"68"},{"size":8850,"mtime":1615621369022,"results":"108","hashOfConfig":"68"},{"size":3270,"mtime":1615546830778,"results":"109","hashOfConfig":"68"},{"size":10382,"mtime":1615621298781,"results":"110","hashOfConfig":"68"},{"size":26430,"mtime":1615616925924,"results":"111","hashOfConfig":"68"},{"size":1351,"mtime":1615556169059,"results":"112","hashOfConfig":"68"},{"size":2659,"mtime":1615616925924,"results":"113","hashOfConfig":"68"},{"size":6425,"mtime":1615559267330,"results":"114","hashOfConfig":"68"},{"size":1769,"mtime":1615182325203,"results":"115","hashOfConfig":"68"},{"size":7712,"mtime":1615182325179,"results":"116","hashOfConfig":"68"},{"size":19223,"mtime":1615621309481,"results":"117","hashOfConfig":"68"},{"size":4969,"mtime":1615344911811,"results":"118","hashOfConfig":"68"},{"size":12691,"mtime":1615621360013,"results":"119","hashOfConfig":"68"},{"size":6922,"mtime":1615621531426,"results":"120","hashOfConfig":"68"},{"size":6485,"mtime":1615558989570,"results":"121","hashOfConfig":"68"},{"size":270,"mtime":1615182325200,"results":"122","hashOfConfig":"68"},{"size":4323,"mtime":1615546102087,"results":"123","hashOfConfig":"68"},{"size":751,"mtime":1615542697650,"results":"124","hashOfConfig":"68"},{"size":1292,"mtime":1615182325212,"results":"125","hashOfConfig":"68"},{"size":2376,"mtime":1615559253219,"results":"126","hashOfConfig":"68"},{"size":1077,"mtime":1615182325212,"results":"127","hashOfConfig":"68"},{"size":2226,"mtime":1615182325214,"results":"128","hashOfConfig":"68"},{"size":123,"mtime":1615182325211,"results":"129","hashOfConfig":"68"},{"size":7286,"mtime":1615359347566,"results":"130","hashOfConfig":"68"},{"size":3325,"mtime":1615182325179,"results":"131","hashOfConfig":"68"},{"size":1175,"mtime":1615621348426,"results":"132","hashOfConfig":"68"},{"size":9290,"mtime":1615621303905,"results":"133","hashOfConfig":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},"15m85vh",{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"136"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"136"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"136"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"136"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"136"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"136"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"136"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"136"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"136"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"230","messages":"231","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"136"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"136"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"136"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"247","messages":"248","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"136"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"136"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"136"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"136"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/abby/Desktop/agile-technodynamics/frontend/src/index.js",[],["283","284"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/store.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/App.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/productReducers.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/userReducers.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/inquiryReducers.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/websiteReducers.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/reducers/dashboardReducers.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Products.js",["285","286"],"import React, { Fragment, useState, useEffect } from 'react'\nimport '../css/products.css'\nimport '../css/bootstrap.min.css'\nimport '../fonts/font-awesome.min.css'\nimport { Link } from 'react-router-dom'\nimport MetaData from './layout/MetaData'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProducts, clearErrors } from '../actions/productActions'\nimport ProductDisplay from './product/ProductDisplay'\nimport Loader from './layout/Loader'\nimport { useAlert } from 'react-alert'\nimport Pagination from 'react-js-pagination'\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\n\nconst Products = () => { \n    const [currentPage, setCurrentPage] = useState(1);\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products);\n    const [category, setMainCategory] = useState('');\n    const [subcategory, setSubCategory] = useState('');\n\n    const categories = [\n        'Mechanical Engineering',\n        'DC Power Systems',\n        'Electrical Engineering Equipment',\n        'Test Equipment',\n        'Others'\n    ]\n    \n    useEffect(() => {\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n        dispatch(getProducts(currentPage, category, subcategory));\n\n        dispatch({\n            type: INSIDE_DASHBOARD_FALSE\n        })\n    }, [dispatch, alert, error, currentPage, category, subcategory]);\n\n    function setCurrentPageNo(pageNumber) {\n        setCurrentPage(pageNumber);\n    }\n\n    let count = productsCount;\n    \n    if(category) {\n        count = filteredProductsCount\n    }\n\n    return (\n            <Fragment>\n                <MetaData title={'Our Products'}/>\n                <div class=\"container-fluid\">\n                    <div class=\"product-header-container\">\n                        <h1 class=\"text-center product-text\">OUR PRODUCTS</h1>\n                        <ul class=\"product-categories\">\n                            {categories.map( category => (\n                                <li\n                                    key={category}\n                                    onClick={() => {setCurrentPageNo(1); setSubCategory(category)}}>\n                                        <Link to={`/products/${category}`}>{category}</Link>\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                    <div class=\"container product-list-container\">\n                        <div class=\"list-products\">\n                            <div class=\"row product-container-row\">\n                                {loading ? <Loader/> : (\n                                    <Fragment>\n                                        {products && (products.length != 0) ? products.map( product => (\n                                            <ProductDisplay key={product._id} product={product}/>\n                                        )) : (\n                                            <h3 style={{margin: '10px 0'}}>No products found.</h3>\n                                        )}\n                                    </Fragment>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {resPerPage < count && (\n                    <div className=\"d-flex justify-content-center mt-5\">\n                        <Pagination \n                            activePage={currentPage}\n                            itemsCountPerPage={resPerPage}\n                            totalItemsCount={productsCount}\n                            onChange={setCurrentPageNo}\n                            nextPageText={'Next'}\n                            prevPageText={'Prev'}\n                            firstPageText={'First'}\n                            lastPageText={'Last'}\n                            itemClass='page-item'\n                            linkClass='page-link'\n                        />\n                    </div>\n                )} \n                \n            </Fragment>\n    )\n}\n\nexport default Products;\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductsOthers.js",["287","288","289","290"],"import React, { Fragment, useState, useEffect } from 'react'\nimport '../css/products.css'\nimport '../css/bootstrap.min.css'\nimport '../fonts/font-awesome.min.css'\nimport MetaData from './layout/MetaData'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProducts, clearErrors } from '../actions/productActions'\nimport ProductDisplay from './product/ProductDisplay'\nimport Loader from './layout/Loader'\nimport { useAlert } from 'react-alert'\nimport Pagination from 'react-js-pagination'\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\n\nconst ProductsOthers = () => { \n    const [currentPage, setCurrentPage] = useState(1);\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products);\n    const [category, setMainCategory] = useState('Others');\n    const [subcategory, setSubCategory] = useState('Others');\n\n    \n    useEffect(() => {\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n        dispatch(getProducts(currentPage, category, subcategory));\n\n        dispatch({\n            type: INSIDE_DASHBOARD_FALSE\n        })\n    }, [dispatch, alert, error, currentPage, category, subcategory]);\n\n    function setCurrentPageNo(pageNumber) {\n        setCurrentPage(pageNumber);\n    }\n\n    let count = productsCount;\n    \n    if(category) {\n        count = filteredProductsCount\n    }\n\n    return (\n            <Fragment>\n                <MetaData title={`${category}`}/>\n                <div class=\"container-fluid\">\n                    <div class=\"product-header-container\">\n                        <h1 class=\"text-center product-text\">OUR PRODUCTS</h1>\n                        <h3 class=\"text-center product-category\">{category}</h3>\n                    </div>\n                    <div class=\"container product-list-container\">\n                        <div class=\"list-products\">\n                            <div class=\"row product-container-row\">\n                                {loading ? <Loader/> : (\n                                    <Fragment>\n                                        {loading ? <Loader/> : (\n                                        <Fragment>\n                                            {products && (products.length != 0) ? products.map( product => (\n                                                <ProductDisplay key={product._id} product={product}/>\n                                            )) : (\n                                                <h3 style={{margin: '10px 0'}}>No products found.</h3>\n                                            )}\n                                        </Fragment>\n                                    )}\n                                    </Fragment>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {resPerPage < count && (\n                    <div className=\"d-flex justify-content-center mt-5\">\n                        <Pagination \n                            activePage={currentPage}\n                            itemsCountPerPage={resPerPage}\n                            totalItemsCount={productsCount}\n                            onChange={setCurrentPageNo}\n                            nextPageText={'Next'}\n                            prevPageText={'Prev'}\n                            firstPageText={'First'}\n                            lastPageText={'Last'}\n                            itemClass='page-item'\n                            linkClass='page-link'\n                        />\n                    </div>\n                )}\n            </Fragment>\n               \n    )\n}\n\nexport default ProductsOthers;\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductsDC.js",["291","292"],"import React, { Fragment, useState, useEffect } from 'react'\nimport '../css/products.css'\nimport '../css/bootstrap.min.css'\nimport '../fonts/font-awesome.min.css'\nimport MetaData from './layout/MetaData'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProducts, clearErrors } from '../actions/productActions'\nimport ProductDisplay from './product/ProductDisplay'\nimport Loader from './layout/Loader'\nimport { useAlert } from 'react-alert'\nimport Pagination from 'react-js-pagination'\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\n\nconst ProductsDC = () => { \n    const [currentPage, setCurrentPage] = useState(1);\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products);\n    const [category, setMainCategory] = useState('DC Power Systems');\n    const [subcategory, setSubCategory] = useState('');\n\n    const dc_subCategory = [\n        'Uninterrupted Power System',\n        'Battery Monitoring System',\n        'Batteries',\n        'Others'\n    ]\n    \n    useEffect(() => {\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n        dispatch(getProducts(currentPage, category, subcategory));\n\n        dispatch({\n            type: INSIDE_DASHBOARD_FALSE\n        })\n    }, [dispatch, alert, error, currentPage, category, subcategory]);\n\n    function setCurrentPageNo(pageNumber) {\n        setCurrentPage(pageNumber);\n    }\n\n    let count = productsCount;\n    \n    if(category) {\n        count = filteredProductsCount\n    }\n\n    return (\n            <Fragment>\n                <MetaData title={`${category}`}/>\n                <div class=\"container-fluid\">\n                    <div class=\"product-header-container\">\n                        <h1 class=\"text-center product-text\">OUR PRODUCTS</h1>\n                        <h3 class=\"text-center product-category\">{category}</h3>\n                        <ul class=\"product-categories\">\n                            {dc_subCategory.map( category => (\n                                <li\n                                    key={category}\n                                    onClick={() => {setCurrentPageNo(1); setSubCategory(category)}}\n                                    className={subcategory === category ? \"current-active\" : null}\n                                >\n                                        <Link>{category}</Link>\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                    <div class=\"container product-list-container\">\n                        <div class=\"list-products\">\n                            <div class=\"row product-container-row\">\n                                {loading ? <Loader/> : (\n                                <Fragment>\n                                    {products && (products.length != 0) ? products.map( product => (\n                                        <ProductDisplay key={product._id} product={product}/>\n                                    )) : (\n                                        <h3 style={{margin: '10px 0'}}>No products found.</h3>\n                                    )}\n                                </Fragment>\n                            )}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {resPerPage < count && (\n                    <div className=\"d-flex justify-content-center mt-5\">\n                        <Pagination \n                            activePage={currentPage}\n                            itemsCountPerPage={resPerPage}\n                            totalItemsCount={productsCount}\n                            onChange={setCurrentPageNo}\n                            nextPageText={'Next'}\n                            prevPageText={'Prev'}\n                            firstPageText={'First'}\n                            lastPageText={'Last'}\n                            itemClass='page-item'\n                            linkClass='page-link'\n                        />\n                    </div>\n                )}\n            </Fragment>\n    )\n}\n\nexport default ProductsDC;\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductsEEE.js",["293","294"],"import React, { Fragment, useState, useEffect } from 'react'\nimport '../css/products.css'\nimport '../css/bootstrap.min.css'\nimport '../fonts/font-awesome.min.css'\nimport MetaData from './layout/MetaData'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProducts, clearErrors } from '../actions/productActions'\nimport ProductDisplay from './product/ProductDisplay'\nimport Loader from './layout/Loader'\nimport { useAlert } from 'react-alert'\nimport Pagination from 'react-js-pagination'\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\n\nconst ProductsEEE = () => { \n    const [currentPage, setCurrentPage] = useState(1);\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products);\n    const [category, setMainCategory] = useState('Electrical Engineering Equipment');\n    const [subcategory, setSubCategory] = useState('');\n\n    const eee_subCategory = [\n        'Transformers',\n        'Others'\n    ]\n    \n    useEffect(() => {\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n        dispatch(getProducts(currentPage, category, subcategory));\n\n        dispatch({\n            type: INSIDE_DASHBOARD_FALSE\n        })\n    }, [dispatch, alert, error, currentPage, category, subcategory]);\n\n    function setCurrentPageNo(pageNumber) {\n        setCurrentPage(pageNumber);\n    }\n\n    let count = productsCount;\n    \n    if(category) {\n        count = filteredProductsCount\n    }\n\n    return (\n            <Fragment>\n                <MetaData title={`${category}`}/>\n                <div class=\"container-fluid\">\n                    <div class=\"product-header-container\">\n                        <h1 class=\"text-center product-text\">OUR PRODUCTS</h1>\n                        <h3 class=\"text-center product-category\">{category}</h3>\n                        <ul class=\"product-categories\">\n                            {eee_subCategory.map( category => (\n                                <li\n                                    key={category}\n                                    onClick={() => {setCurrentPageNo(1); setSubCategory(category)}}\n                                    className={subcategory === category ? \"current-active\" : null}\n                                >\n                                        <Link>{category}</Link>\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                    <div class=\"container product-list-container\">\n                        <div class=\"list-products\">\n                            <div class=\"row product-container-row\">\n                                {loading ? <Loader/> : (\n                                <Fragment>\n                                    {products && (products.length != 0) ? products.map( product => (\n                                        <ProductDisplay key={product._id} product={product}/>\n                                    )) : (\n                                        <h3 style={{margin: '10px 0'}}>No products found.</h3>\n                                    )}\n                                </Fragment>\n                            )}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {resPerPage < count && (\n                    <div className=\"d-flex justify-content-center mt-5\">\n                        <Pagination \n                            activePage={currentPage}\n                            itemsCountPerPage={resPerPage}\n                            totalItemsCount={productsCount}\n                            onChange={setCurrentPageNo}\n                            nextPageText={'Next'}\n                            prevPageText={'Prev'}\n                            firstPageText={'First'}\n                            lastPageText={'Last'}\n                            itemClass='page-item'\n                            linkClass='page-link'\n                        />\n                    </div>\n                )}\n            </Fragment>\n                \n    )\n}\n\nexport default ProductsEEE;\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductsME.js",["295","296"],"import React, { Fragment, useState, useEffect } from 'react'\nimport '../css/products.css'\nimport '../css/bootstrap.min.css'\nimport '../fonts/font-awesome.min.css'\nimport MetaData from './layout/MetaData'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProducts, clearErrors } from '../actions/productActions'\nimport ProductDisplay from './product/ProductDisplay'\nimport Loader from './layout/Loader'\nimport { useAlert } from 'react-alert'\nimport Pagination from 'react-js-pagination'\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\n\nconst ProductsME = () => { \n    const [currentPage, setCurrentPage] = useState(1);\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products);\n    const [category, setMainCategory] = useState('Mechanical Engineering');\n    const [subcategory, setSubCategory] = useState('');\n\n    const me_subCategory = [\n        'Pumps and System',\n        'Fire Protection Systems',\n        'Others'\n    ]\n    \n    useEffect(() => {\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n        dispatch(getProducts(currentPage, category, subcategory));\n\n        dispatch({\n            type: INSIDE_DASHBOARD_FALSE\n        })\n    }, [dispatch, alert, error, currentPage, category, subcategory]);\n\n    function setCurrentPageNo(pageNumber) {\n        setCurrentPage(pageNumber);\n    }\n\n    let count = productsCount;\n    \n    if(category) {\n        count = filteredProductsCount\n    }\n\n    return (\n            <Fragment>\n                \n                <MetaData title={`${category}`}/>\n                <div class=\"container-fluid\">\n                    <div class=\"product-header-container\">\n                        <h1 class=\"text-center product-text\">OUR PRODUCTS</h1>\n                        <h3 class=\"text-center product-category\">{category}</h3>\n                        <ul class=\"product-categories\">\n                            {me_subCategory.map( category => (\n                                <li\n                                    key={category}\n                                    onClick={() => {setCurrentPageNo(1); setSubCategory(category)}}\n                                    className={subcategory === category ? \"current-active\" : null}\n                                >\n                                        <Link>{category}</Link>\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                    <div class=\"container product-list-container\">\n                        <div class=\"list-products\">\n                            <div class=\"row product-container-row\">\n                                {loading ? <Loader/> : (\n                                    <Fragment>\n                                        {products && (products.length != 0) ? products.map( product => (\n                                            <ProductDisplay key={product._id} product={product}/>\n                                        )) : (\n                                            <h3 style={{margin: '10px 0'}}>No products found.</h3>\n                                        )}\n                                    </Fragment>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {resPerPage < count && (\n                    <div className=\"d-flex justify-content-center mt-5\">\n                        <Pagination \n                            activePage={currentPage}\n                            itemsCountPerPage={resPerPage}\n                            totalItemsCount={productsCount}\n                            onChange={setCurrentPageNo}\n                            nextPageText={'Next'}\n                            prevPageText={'Prev'}\n                            firstPageText={'First'}\n                            lastPageText={'Last'}\n                            itemClass='page-item'\n                            linkClass='page-link'\n                        />\n                    </div>\n                )}\n            </Fragment>\n    )\n}\n\nexport default ProductsME;\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ProductsTE.js",["297","298"],"import React, { Fragment, useState, useEffect } from 'react'\nimport '../css/products.css'\nimport '../css/bootstrap.min.css'\nimport '../fonts/font-awesome.min.css'\nimport MetaData from './layout/MetaData'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProducts, clearErrors } from '../actions/productActions'\nimport ProductDisplay from './product/ProductDisplay'\nimport Loader from './layout/Loader'\nimport { useAlert } from 'react-alert'\nimport Pagination from 'react-js-pagination'\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\n\nconst ProductsTE = () => { \n    const [currentPage, setCurrentPage] = useState(1);\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products);\n    const [category, setMainCategory] = useState('Test Equipment');\n    const [subcategory, setSubCategory] = useState('');\n\n    const te_subCategory = [\n        'Partial Discharge Detection',\n        'Battery Discharge Capacity Tester',\n        'Battery Impedance or Internal Resistance',\n        'Load Banks',\n        'Battery Test Monitor',\n        'Portable Direct Ground Fault Finder',\n        'Earth Tester or Clamp Type',\n        'Others'\n    ]\n    \n    useEffect(() => {\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n        dispatch(getProducts(currentPage, category, subcategory));\n\n        dispatch({\n            type: INSIDE_DASHBOARD_FALSE\n        })\n    }, [dispatch, alert, error, currentPage, category, subcategory]);\n\n    function setCurrentPageNo(pageNumber) {\n        setCurrentPage(pageNumber);\n    }\n\n    let count = productsCount;\n    \n    if(category) {\n        count = filteredProductsCount\n    }\n\n    return (\n            <Fragment>\n                <MetaData title={`${category}`}/>\n                    <div class=\"container-fluid\">\n                        <div class=\"product-header-container\">\n                            <h1 class=\"text-center product-text\">OUR PRODUCTS</h1>\n                            <h3 class=\"text-center product-category\">{category}</h3>\n                            <ul class=\"product-categories\">\n                                {te_subCategory.map( category => (\n                                    <li\n                                        key={category}\n                                        onClick={() => {setCurrentPageNo(1); setSubCategory(category)}}\n                                        className={subcategory === category ? \"current-active\" : null}\n                                        >\n                                            <Link>{category}</Link>\n                                    </li>\n                                ))}\n                            </ul>\n                        </div>\n                        <div class=\"container product-list-container\">\n                            <div class=\"list-products\">\n                                <div class=\"row product-container-row\">\n                                    {loading ? <Loader/> : (\n                                        <Fragment>\n                                            {products && (products.length != 0) ? products.map( product => (\n                                                <ProductDisplay key={product._id} product={product}/>\n                                            )) : (\n                                                <h3 style={{margin: '10px 0'}}>No products found.</h3>\n                                            )}\n                                        </Fragment>\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    {resPerPage < count && (\n                        <div className=\"d-flex justify-content-center mt-5\">\n                            <Pagination \n                                activePage={currentPage}\n                                itemsCountPerPage={resPerPage}\n                                totalItemsCount={productsCount}\n                                onChange={setCurrentPageNo}\n                                nextPageText={'Next'}\n                                prevPageText={'Prev'}\n                                firstPageText={'First'}\n                                lastPageText={'Last'}\n                                itemClass='page-item'\n                                linkClass='page-link'\n                            />\n                        </div>\n                    )}\n                </Fragment>\n    )\n}\n\nexport default ProductsTE;\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/About.js",["299"],"import React, { Fragment, useEffect } from 'react'\nimport '../css/about.css'\nimport '../css/bootstrap.min.css'\nimport '../fonts/font-awesome.min.css'\nimport MetaData from './layout/MetaData'\nimport Loader from './layout/Loader'\nimport { useAlert } from 'react-alert'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getAboutDetails, clearErrors } from '../actions/websiteActions'\nimport { Markup } from 'interweave'\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\n\nconst About = () => {\n\n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const { \n        error,\n        loading, \n        abouts,\n        aboutCompany_title, \n        aboutCompany_description,\n        aboutScope_title, \n        aboutScope_description,\n        aboutObjectives_title, \n        aboutObjectives_description,\n        aboutMission_title, \n        aboutMission_description,\n        aboutVision_title, \n        aboutVision_description,\n        aboutHistory_title, \n        aboutHistory_description,\n    } = useSelector(state => state.abouts)\n\n    useEffect(() => {\n        dispatch(getAboutDetails());\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_FALSE\n        })\n\n    }, [dispatch, error, alert]);\n\n    return (\n            <Fragment>\n                <MetaData title={'About Us'}/>\n                <div className=\"container-fluid\" style={{paddingTop: '77px'}}>\n                    {loading ? <Loader/> : (\n                        <Fragment>\n                            <div className=\"header-wrapper\">    \n                                <div className=\"header-container\" style={{display: 'block'}}>\n                                    <h1 className=\"text-center about-text\">ABOUT US</h1>\n                                    <ul className=\"about-list\">\n                                        <li><a href=\"#company\">{aboutCompany_title}</a></li>\n                                        <li><a href=\"#objectives\">{aboutObjectives_title}</a></li>\n                                        <li><a href=\"#scope\">{aboutScope_title}</a></li>\n                                        <li><a href=\"#mission\">{aboutMission_title}</a></li>\n                                        <li><a href=\"#vision\">{aboutVision_title}</a></li>\n                                        <li><a href=\"#history\">{aboutHistory_title}</a></li>\n                                    </ul>\n                                </div>\n                            </div>\n                            <div id=\"company\" className=\"sections white-bg\">\n                                <h1>{aboutCompany_title}</h1>\n                                <Markup content={aboutCompany_description}/>\n                            </div>\n                            <div id=\"objectives\" className=\"sections blue-bg\">\n                                <h1>{aboutObjectives_title}</h1>\n                                <Markup content={aboutObjectives_description}/>\n                            </div>\n                            <div id=\"scope\" className=\"sections white-bg\">\n                                <h1>{aboutScope_title}</h1>\n                                <Markup content={aboutScope_description}/>\n                            </div>\n                            <div id=\"mission\" className=\"sections blue-bg\">\n                                <h1>{aboutMission_title}</h1>\n                                <Markup content={aboutMission_description}/>\n                            </div>\n                            <div id=\"vision\" className=\"sections white-bg\">\n                                <h1>{aboutVision_title}</h1>\n                                <Markup content={aboutVision_description}/>\n                            </div>\n                            <div id=\"history\" className=\"sections blue-bg\">\n                                <h1>{aboutHistory_title}</h1>\n                                <Markup content={aboutHistory_description}/>\n                            </div>\n                        </Fragment>\n                    )} \n                </div>\n            </Fragment>\n    )\n}\n\nexport default About;","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Services.js",["300"],"import React, { Fragment, useEffect, useState } from 'react'\nimport '../css/services.css'\nimport '../css/bootstrap.min.css'\nimport '../fonts/font-awesome.min.css'\nimport { useAlert } from 'react-alert'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getServices, clearErrors } from '../actions/websiteActions'\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\nimport { Link } from 'react-router-dom'\nimport MetaData from './layout/MetaData'\nimport Loader from './layout/Loader'\n\nconst Services = () => {\n\n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const { loading,\n            error,\n            it1_subtitle,\n            it2_subtitle,\n            etd1_subtitle,\n            etd2_subtitle,\n\n            it1_desc,\n            it2_desc,\n            etd1_desc,\n            etd2_desc,\n\n            it1_icon,\n            it2_icon,\n            etd1_icon,\n            etd2_icon,\n\n            it1_iconBg,\n            it2_iconBg,\n            etd1_iconBg,\n            etd2_iconBg\n        } = useSelector(state => state.services)\n\n    useEffect(() => {\n        dispatch(getServices())\n\n        dispatch({\n            type: INSIDE_DASHBOARD_FALSE\n        })\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n    }, [dispatch, alert, error]) //loop if homePage added as dependency\n\n    return (\n        <Fragment>\n            <MetaData title={'Our Services'} />\n            <div class=\"container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 contact-us-banner\">\n                        <h1 class=\"text-center\">Have some questions?</h1>\n                        <p class=\"text-center\">We are ready to help you.</p>\n                        <Link to='/contact-us'>\n                            <button class=\"btn btn-primary contact-us-button\" type=\"button\">\n                                    Contact Us\n                            </button>\n                        </Link>\n                    </div>\n                </div>\n                {loading ? <Loader/> : (\n                    <Fragment>\n                        <div class=\"row\">\n                            <div class=\"col\">\n                                <div class=\"row second-level-row\">\n                                    <div class=\"col-12\">\n                                        <h1 style={{fontSize: '3rem', fontWeight: 'bold', paddingBottom: '30px'}}>OUR SERVICES</h1>\n                                    </div>\n                                    <div class=\"col-12 title-section\">\n                                        <h2>Information Technology</h2>\n                                    </div>\n                                    <div class=\"col-md-6 item-card\">\n                                        <p>\n                                            <span className=\"fa-stack fa-4x\">\n                                                <i className={`fa fa-circle fa-stack-2x text-${it1_iconBg}`}></i>\n                                                <i className={`fa fa-${it1_icon} fa-stack-1x fa-inverse`}></i>\n                                            </span>\n                                        </p>\n                                        <h4>{it1_subtitle}</h4>\n                                        <p className=\"description\">{it1_desc}</p>\n                                    </div>\n                                    <div class=\"col-md-6 item-card\">\n                                        <p>\n                                            <span className=\"fa-stack fa-4x\">\n                                                <i className={`fa fa-circle fa-stack-2x text-${it2_iconBg}`}></i>\n                                                <i className={`fa fa-${it2_icon} fa-stack-1x fa-inverse`}></i>\n                                            </span>\n                                        </p>\n                                        <h4>{it2_subtitle}</h4>\n                                        <p className=\"description\">{it2_desc}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col\">\n                                <div class=\"row second-level-row\">\n                                    <div class=\"col-12 title-section\">\n                                        <h2>Engineering and Technical Services</h2>\n                                    </div>\n                                    <div class=\"col-md-6 item-card\">\n                                        <p>\n                                            <span className=\"fa-stack fa-4x\">\n                                                <i className={`fa fa-circle fa-stack-2x text-${etd1_iconBg}`}></i>\n                                                <i className={`fa fa-${etd1_icon} fa-stack-1x fa-inverse`}></i>\n                                            </span>\n                                        </p>\n                                        <h4>{etd1_subtitle}</h4>\n                                        <p className=\"description\">{etd1_desc}</p>\n                                    </div>\n                                    <div class=\"col-md-6 item-card\">\n                                        <p>\n                                            <span className=\"fa-stack fa-4x\">\n                                                <i className={`fa fa-circle fa-stack-2x text-${etd2_iconBg}`}></i>\n                                                <i className={`fa fa-${etd2_icon} fa-stack-1x fa-inverse`}></i>\n                                            </span>\n                                        </p>\n                                        <h4>{etd2_subtitle}</h4>\n                                        <p className=\"description\">{etd2_desc}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </Fragment>\n                )}\n            </div>\n        </Fragment>\n    )\n}\n\nexport default Services\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Contact.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/ConfirmationPage.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/EmailSent.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/Footer.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/Loader.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateHome.js",["301","302","303"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateAbout.js",["304","305"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateFooter.js",["306","307","308"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/Profile.js",["309"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateProfile.js",["310"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdatePassword.js",["311","312","313","314"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListAppointments.js",["315"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListInquiries.js",["316"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListOthers.js",["317"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListArchives.js",["318"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListTrash.js",["319","320","321"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListAbout.js",["322"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListHome.js",["323","324"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListFooter.js",["325"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListServices.js",["326"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateInquiry.js",["327"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateProduct.js",["328","329","330","331","332"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListSuperAdmins.js",["333","334","335"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateServices.js",["336","337"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListAdmins.js",["338"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/product/ProductDetails.js",["339","340"],"import React, { Fragment, useEffect, useState } from 'react'\nimport '../../css/individual-product.css'\nimport { useDispatch, useSelector } from  'react-redux'\nimport { getProductDetails, clearErrors } from '../../actions/productActions'\nimport Loader from '../layout/Loader'\nimport { useAlert } from 'react-alert'\nimport MetaData from '../layout/MetaData'\nimport {Carousel} from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { INSIDE_DASHBOARD_FALSE } from '../../constants/dashboardConstants'\n\nconst ProductDetails = ( { match } ) => {\n\n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const { loading, error, product } = useSelector(state => state.productDetails)\n    \n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n    const [image, setImage] = useState('');\n    const [category, setMainCategory] = useState('');\n    const [subcategory, setSubCategory] = useState('');\n\n    const productId = match.params.id\n\n\n    useEffect(() => {\n\n        if(product && product._id !== productId) {\n            dispatch(getProductDetails(productId))\n        }\n        else { \n            setName(product.name)\n            setDescription(product.description)\n            setMainCategory(product.category)\n            setSubCategory(product.subcategory)\n            setImage(product.image.url)\n        }\n        \n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n        \n        dispatch({\n            type: INSIDE_DASHBOARD_FALSE\n        })\n    }, [dispatch, alert, error, product, productId])\n\n    return (\n        <Fragment>\n            {loading ? <Loader/> : (\n                <Fragment>\n                    <MetaData title={name}/>\n                    <div class=\"container-fluid individual-product\">\n                        <div class=\"row my-container\">\n                            <div class=\"col-sm-12 col-md-6 image-container\">\n                                <img className=\"individual-product-image\" width=\"400px\" src={image} alt={`Image of ${name}`}/>\n                            </div>\n                            <div class=\"col-sm-12 col-md-6 info-container\">\n                                <div class=\"row\">\n                                    <div class=\"col\">\n                                        <h3>{name}</h3>\n                                        <h6>{category} <i className=\"fa fa-angle-right\"></i> {subcategory}</h6>\n                                        <p style={{paddingTop: '10px'}}>{description}</p>\n                                    </div>\n                                </div>\n                                <div class=\"row d-flex link\">\n                                    <div class=\"col my-link\">\n                                    <Link className=\"link-back\" to=\"/our-products\">\n                                        Back to Products <i className=\"fa fa-angle-right\"></i>\n                                    </Link>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nexport default ProductDetails\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateUser.js",["341","342"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/user/Register.js",["343","344","345","346","347"],"import React, { Fragment, useEffect, useState } from 'react'\nimport MetaData from '../layout/MetaData'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from  'react-redux'\nimport { register, clearErrors } from './../../actions/userActions'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { logout } from './../../actions/userActions'\nimport { Link } from 'react-router-dom'\nimport { Popover, OverlayTrigger, Tooltip, Modal, Button } from 'react-bootstrap'\nimport imageCompression from 'browser-image-compression';\nimport { REGISTER_USER_RESET, REGISTER_USER_REQUEST } from '../../constants/userConstants'\n\nconst popover = (\n    <Popover id=\"popover-basic\">\n      <Popover.Title as=\"h3\">Password Requirements</Popover.Title>\n      <Popover.Content>\n          &bull; Minimum of <strong>6 characters</strong>. <br/>\n          &bull; Must have at least 1 <strong>Uppercase and Lowercase</strong> letter.<br/>\n          &bull; Must have at least 2 <strong>numeric digits</strong>.<br/>\n          &bull; Must have <strong>no spaces</strong>.\n      </Popover.Content>\n    </Popover>\n);\n\nconst Register = ( { history } ) => {\n\n    const [user, setUser] = useState({\n        name: '',\n        email: '',\n        contactNumber: '',\n        address: '',\n        password: '',\n        confirmPassword: ''\n    })\n\n    const { name, email, contactNumber, address, password, confirmPassword } = user;\n    const [avatar, setAvatar] = useState('');\n    const [avatarPreview, setAvatarPreview] = useState('https://res.cloudinary.com/agiletechnodynamicsinc/image/upload/v1615204943/avatars/default-avatar_uzyujj.png');\n    const [useDefaultImage, setUseDefaultImage] = useState('')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, loading, success, isCreated } = useSelector(state => state.register);\n\n    const [isChecked, setChecked] = useState('false')\n\n    const checkboxCheck = () => {\n        setChecked(!isChecked)\n    }\n\n    const [showOld, setOld] = useState('false')\n\n    const showOldToggle = () => {\n        setOld(!showOld)\n    }\n\n    const [showNew, setNew] = useState('false')\n\n    const showNewToggle = () => {\n        setNew(!showNew)\n    }\n\n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => {\n        setToggled(!isToggled)\n    }\n    \n    const logoutHandler = () => {\n        dispatch(logout());\n\n        alert.success('Logged out successfully')\n    }\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n\n    useEffect(() => {\n        if(error){\n            if(error === 'Internal server error') {\n                alert.error('Please complete the form.')\n                dispatch(clearErrors())\n                dispatch({\n                    type: REGISTER_USER_RESET\n                })\n            } else {\n                alert.error(error)\n                dispatch(clearErrors())\n                dispatch({\n                    type: REGISTER_USER_RESET\n                })\n            }\n        }\n        if(isCreated){\n            alert.success('Registration successful')\n            history.push('/admin/dashboard')\n\n            dispatch({\n                type: REGISTER_USER_RESET\n            })\n        }\n        \n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n\n    }, [dispatch, alert, error, isCreated, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('email', email);\n        formData.set('password', password);\n        formData.set('confirmPassword', confirmPassword);\n        formData.set('contactNumber', contactNumber);\n        formData.set('address', address);\n        formData.set('avatar', avatar);\n        formData.set('useDefaultImage', useDefaultImage)\n\n        dispatch(register(formData));\n    }\n\n    const onChange = e => {\n        if(e.target.name === 'useDefaultImage') {\n            let chkbox = document.getElementById('useDefaultImage')\n\n            if(chkbox.checked == true) { //if changed to ===, register would not work\n                setUseDefaultImage(\"True\")\n                setAvatarPreview('https://res.cloudinary.com/agiletechnodynamicsinc/image/upload/v1615204943/avatars/default-avatar_uzyujj.png')\n            }\n            else{\n                setUseDefaultImage(\"False\")\n            }\n\n        } else {\n            setUser({\n                ...user,\n                [e.target.name]: e.target.value\n            })\n        }\n    }\n\n    const addAvatar = file => {\n        const reader = new FileReader();\n    \n        reader.onload = () => {\n            if(reader.readyState === 2){\n                setAvatarPreview(reader.result)\n                setAvatar(reader.result)\n            }\n        }\n        reader.readAsDataURL(file)\n        dispatch({\n            type: REGISTER_USER_RESET\n        })\n    }\n\n    const handleImageUpload = e => {\n\n        var imageFile = e.target.files[0];\n\n        var options = {\n          maxSizeMB: 0.6,\n          maxWidthOrHeight: 1920,\n          useWebWorker: true\n        }\n        \n        imageCompression(imageFile, options)\n          .then(function (compressedFile) {\n                addAvatar(compressedFile); // write your own logic\n            })\n            .catch(function (error) {\n                console.log(error.message);\n            });\t\n\n        dispatch({\n            type: REGISTER_USER_REQUEST\n        })\n    }\n\n    const discardChanges = () => {\n        handleClose()\n        history.push('/admin/dashboard')\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Register'}/>\n            <div id=\"wrapper\" className={ isToggled ? null : \"toggled\"}   >\n                <div id=\"sidebar-wrapper\" >\n                    <ul className=\"sidebar-nav\">\n                        <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                        <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                        <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                        <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                        {user && user.role !== 'admin' ? (\n                                <Fragment>\n                                    <hr/>\n                                        <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                        <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                        <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                    <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                    <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                    <hr/>\n                                    <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                    <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                </Fragment>\n                            )\n                        }\n                        <hr/>\n                        <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                    </ul>\n                </div>\n                <div className=\"page-content-wrapper\">\n                    <div className=\"container-fluid\">\n                        <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\n                            <i className=\"fa fa-bars\"   ></i>\n                        </a>\n                        <Modal show={show} onHide={handleClose}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Discard Changes?</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>Are you sure you want to discard your changes?</Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={handleClose}>\n                                    Close\n                                </Button>\n                                <Button variant=\"primary\" onClick={discardChanges}>\n                                    Yes, I'm sure\n                                </Button>\n                            </Modal.Footer>\n                        </Modal>\n                        <div className=\"container\">\n                            <div className=\"main-body\">\n                            <h1 style={{textAlign: 'center', padding:'0 0 15px 0'}}>Register New User</h1>\n                                <div className=\"row gutters-sm\">\n                                    <div className=\"col-md-4 mb-3\">\n                                        <div className=\"card\">\n                                            <div className=\"card-body\">   \n                                                <div className=\"d-flex flex-column align-items-center text-center\">\n                                                    <img src={avatarPreview} alt=\"Admin\" className=\"rounded-circle\" width=\"150px\" height=\"150px\"/>\n                                                    <div className=\"mt-3\">\n                                                        <hr/>\n                                                        {isChecked ? (\n                                                            <input \n                                                                type=\"file\" \n                                                                id=\"avatar\" \n                                                                name=\"avatar\" \n                                                                accept=\"images/*\"\n                                                                onChange={handleImageUpload}\n                                                                style={{width: '90%'}}\n                                                                \n                                                            />\n                                                        ) : (\n                                                            <OverlayTrigger overlay={<Tooltip id=\"tooltip-disabled\">Image upload disabled</Tooltip>}>\n                                                                <span className=\"d-inline-block\">\n                                                                <input \n                                                                    type=\"file\" \n                                                                    id=\"avatar\" \n                                                                    name=\"avatar\" \n                                                                    accept=\"images/*\"\n                                                                    onChange={onChange}\n                                                                    style={{width: '90%',  pointerEvents: 'none' }}\n                                                                    disabled={true}\n                                                                />\n                                                                </span>\n                                                            </OverlayTrigger>\n                                                        )}\n                                                        <br/>\n                                                        <input \n                                                            type='checkbox'\n                                                            id='useDefaultImage'\n                                                            name='useDefaultImage'\n                                                            value={useDefaultImage}\n                                                            onChange={onChange}\n                                                            onClick={checkboxCheck}\n                                                        />\n                                                            &nbsp;Use default image\n                                                        <br/>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <div className=\"card mb-3\">\n                                            <div className=\"card-body\">\n                                                <form method=\"post\" onSubmit={submitHandler}>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-3\">\n                                                            <h6 className=\"mb-0\">Full Name</h6>\n                                                        </div>\n                                                        <div className=\"col-sm-9 text-secondary\">\n                                                            <input \n                                                                type=\"text\" \n                                                                className=\"form-control\" \n                                                                name=\"name\"\n                                                                value={name}\n                                                                placeholder=\"Name\"\n                                                                pattern=\"[A-Za-z\\s]{1,}\"\n                                                                onChange={onChange}\n                                                            />\n                                                            </div>\n                                                    </div>\n                                                    <hr/>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-3\">\n                                                            <h6 className=\"mb-0\">Email</h6>\n                                                        </div>\n                                                        <div className=\"col-sm-9 text-secondary\">\n                                                            <input \n                                                                type=\"email\" \n                                                                className=\"form-control\" \n                                                                name=\"email\"\n                                                                value={email}\n                                                                placeholder=\"Email\"\n                                                                onChange={onChange}\n                                                            />\n                                                            </div>\n                                                    </div>\n                                                    <hr/>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-3\">\n                                                            <h6 className=\"mb-0\">Contact Number</h6>\n                                                        </div>\n                                                        <div className=\"col-sm-9 text-secondary\">\n                                                            <input \n                                                                type=\"tel\" \n                                                                className=\"form-control\" \n                                                                name=\"contactNumber\" \n                                                                value={contactNumber}\n                                                                placeholder=\"09xx-xxx-xxxx\"\n                                                                pattern=\"^[0][9]\\d{2}-\\d{3}-\\d{4}$\"\n                                                                onChange={onChange}\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                    <hr/>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-3\">\n                                                            <h6 className=\"mb-0\">Address</h6>\n                                                        </div>\n                                                        <div className=\"col-sm-9 text-secondary\">\n                                                            <textarea \n                                                                type=\"text\"\n                                                                className=\"form-control\"\n                                                                name=\"address\"\n                                                                value={address}\n                                                                onChange={onChange}\n                                                                placeholder=\"Address\"\n                                                                style={{height: '150px'}}\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                    <hr/>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-3\">\n                                                            <h6 className=\"mb-0\">Password \n                                                                <span className='fa-m' style={{margin: 'auto', paddingLeft: '15px'}}>\n                                                                    <OverlayTrigger trigger=\"hover\" placement=\"right\" overlay={popover}>\n                                                                        <i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i>\n                                                                    </OverlayTrigger>\n                                                                </span>\n                                                            </h6>\n                                                        </div>\n                                                        <div className=\"col-sm-9 text-secondary\">\n                                                            <div class=\"input-group mb-3\">\n                                                                <input \n                                                                    type={showOld ? \"password\" : \"text\"} \n                                                                    className=\"form-control\" \n                                                                    name=\"password\"\n                                                                    value={password}\n                                                                    placeholder=\"Password\"\n                                                                    onChange={onChange}\n                                                                    aria-label=\"password\" aria-describedby=\"basic-addon1\"\n                                                                />\n                                                                <div class=\"input-group-prepend\">\n                                                                    <span class=\"input-group-text\" id=\"basic-addon1\">\n                                                                        <a\n                                                                            onClick={showOldToggle}\n                                                                            style={{cursor: 'pointer'}}\n                                                                        >\n                                                                            <span className=\"fa-lg\">\n                                                                                <i className={showOld ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\n                                                                            </span>\n                                                                        </a>\n                                                                    </span>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <hr/>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-3\">\n                                                            <h6 className=\"mb-0\">Confirm Password</h6>\n                                                        </div>\n                                                        <div className=\"col-sm-9 text-secondary\">\n                                                            <div class=\"input-group mb-3\">\n                                                                <input\n                                                                    type={showNew ? \"password\" : \"text\"} \n                                                                    className=\"form-control\"\n                                                                    name=\"confirmPassword\"\n                                                                    value={confirmPassword}\n                                                                    placeholder=\"Confirm Password\"\n                                                                    onChange={onChange}\n                                                                    aria-label=\"confirm\" aria-describedby=\"basic-addon1\"\n                                                                />\n                                                                <div class=\"input-group-prepend\">\n                                                                    <span class=\"input-group-text\" id=\"basic-addon1\">\n                                                                        <a\n                                                                            onClick={showNewToggle}\n                                                                            style={{cursor: 'pointer'}}\n                                                                        >\n                                                                            <span className=\"fa-lg\">\n                                                                                <i className={showNew ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\n                                                                            </span>\n                                                                        </a>\n                                                                    </span>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-sm-12\">\n                                                            <button\n                                                                className=\"btn btn-primary btn-block mt-5\"\n                                                                type=\"submit\"\n                                                                disabled={loading ? true : false}\n                                                            >Register</button>\n                                                        </div>\n                                                    </div>\n                                                    <div className='row'>\n                                                        <div className=\"col-sm-12\">\n                                                            <button\n                                                                className=\"btn btn-secondary btn-block mt-2\"\n                                                                onClick={handleShow}\n                                                            >Discard</button>\n                                                        </div>\n                                                    </div>\n                                                </form>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>    \n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default Register\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/user/PasswordSuccess.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/user/ForgotPassword.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/user/NewPassword.js",["348","349"],"import React, { Fragment, useEffect, useState } from 'react'\nimport MetaData from '../layout/MetaData'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from  'react-redux'\nimport { resetPassword, clearErrors } from './../../actions/userActions'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport { Popover, OverlayTrigger} from 'react-bootstrap'\nimport { NEW_PASSWORD_RESET } from '../../constants/userConstants'\n\nconst popover = (\n    <Popover id=\"popover-basic\">\n      <Popover.Title as=\"h3\">Password Requirements</Popover.Title>\n      <Popover.Content>\n          &bull; Minimum of <strong>6 characters</strong>. <br/>\n          &bull; Must have at least 1 <strong>Uppercase and Lowercase</strong> letter.<br/>\n          &bull; Must have at least 2 <strong>numeric digits</strong>.<br/>\n          &bull; Must have <strong>no spaces</strong>.\n      </Popover.Content>\n    </Popover>\n);\n\nconst NewPassword = ({ history, match }) => {\n\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, success, loading } = useSelector(state => state.forgotPassword);\n    \n    const [showOld, setOld] = useState('false')\n\n    const showOldToggle = () => {\n        setOld(!showOld)\n    }\n\n    const [showNew, setNew] = useState('false')\n\n    const showNewToggle = () => {\n        setNew(!showNew)\n    }\n\n    useEffect(() => {\n        if(success){\n            history.push('/password-success')\n            alert.success('Password updated successfully');\n            dispatch({\n                type: NEW_PASSWORD_RESET\n            })\n        }\n        \n        if(error){\n            alert.error(error);\n            dispatch(clearErrors());\n            dispatch({\n                type: NEW_PASSWORD_RESET\n            })\n        }\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n\n    }, [dispatch, alert, error, success, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('password', password);\n        formData.set('confirmPassword', confirmPassword);\n\n        dispatch(resetPassword(match.params.token, formData));\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Reset Password'}/>\n            <div className=\"login\" style={{paddingTop: '100px'}}>\n                <form onSubmit={submitHandler}>\n                    <h2 className=\"sr-only\">New Password</h2>\n                    <div className=\"div-forgot-password\">\n                        <h3 className=\"forgot-password-heading\">New Password \n                            <span className='fa-xs' style={{margin: 'auto', paddingLeft: '15px'}}>\n                                <OverlayTrigger trigger=\"hover\" placement=\"right\" overlay={popover}>\n                                    <i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i>\n                                </OverlayTrigger>\n                            </span>\n                        </h3>\n                    </div>\n                    <div className=\"form-group\">\n                        <h6>New Password</h6>\n                        <div class=\"input-group mb-3\">\n                            <input \n                                type={showOld ? \"password\" : \"text\"} \n                                className=\"form-control\" \n                                name=\"password\"\n                                value={password}\n                                placeholder=\"New Password\"\n                                onChange={(e) => setPassword(e.target.value)}\n                                aria-label=\"oldpassword\" aria-describedby=\"basic-addon1\"\n                            />\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\" id=\"basic-addon1\">\n                                    <a\n                                        onClick={showOldToggle}\n                                        style={{cursor: 'pointer'}}\n                                    >\n                                        <span className=\"fa-lg\">\n                                            <i className={showOld ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\n                                        </span>\n                                    </a>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <h6>Confirm Password</h6>\n                        <div class=\"input-group mb-3\">\n                            <input\n                                type={showNew ? \"password\" : \"text\"} \n                                className=\"form-control\"\n                                name=\"confirmPassword\"\n                                value={confirmPassword}\n                                placeholder=\"Confirm Password\"\n                                onChange={(e) => setConfirmPassword(e.target.value)}\n                                aria-label=\"confirm\" aria-describedby=\"basic-addon1\"\n                            />\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\" id=\"basic-addon1\">\n                                    <a\n                                        onClick={showNewToggle}\n                                        style={{cursor: 'pointer'}}\n                                    >\n                                        <span className=\"fa-lg\">\n                                            <i className={showNew ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\n                                        </span>\n                                    </a>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <button \n                            className=\"btn btn-primary btn-block\" \n                            type=\"submit\"\n                            disabled={loading ? true : false}\n                        >Set Password</button>\n                    </div>\n                </form>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default NewPassword\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/route/ProtectedRoute.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/userActions.js",["350","351"],"import axios from 'axios'\nimport {\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    REGISTER_USER_REQUEST,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAIL,\n    LOAD_USER_REQUEST,\n    LOAD_USER_SUCCESS,\n    LOAD_USER_FAIL,\n    LOGOUT_SUCCESS,\n    UPDATE_PROFILE_REQUEST,\n    UPDATE_PROFILE_SUCCESS,\n    UPDATE_PROFILE_FAIL,\n    UPDATE_PASSWORD_REQUEST,\n    UPDATE_PASSWORD_SUCCESS,\n    UPDATE_PASSWORD_FAIL,\n    FORGOT_PASSWORD_REQUEST,\n    FORGOT_PASSWORD_SUCCESS,\n    FORGOT_PASSWORD_FAIL,\n    NEW_PASSWORD_REQUEST,\n    NEW_PASSWORD_SUCCESS,\n    NEW_PASSWORD_FAIL,\n    ALL_USERS_REQUEST,\n    ALL_USERS_SUCCESS,\n    ALL_USERS_FAIL,\n    GET_USER_REQUEST,\n    GET_USER_SUCCESS,\n    GET_USER_FAIL,\n    UPDATE_USER_REQUEST,\n    UPDATE_USER_SUCCESS,\n    UPDATE_USER_FAIL,\n    UPDATE_USER_RESET,\n    DELETE_USER_REQUEST,\n    DELETE_USER_SUCCESS,\n    DELETE_USER_RESET,\n    DELETE_USER_FAIL,\n    LOGOUT_FAIL,\n    CLEAR_ERRORS\n} from '../constants/userConstants'\n\n//Get product details\nexport const getUserDetails = (id) => async(dispatch) => {\n    try{\n        dispatch({\n            type: GET_USER_REQUEST\n        })\n\n        const { data } = await axios.get(`/api/v1/superadmin/user/${id}`)\n\n        dispatch({\n            type: GET_USER_SUCCESS,\n            payload: data.user\n        })\n    }\n    catch(error){\n        dispatch({\n            type: GET_USER_FAIL,\n            payload: error.response.data.message\n            }\n        )\n    }\n}\n\n// Update user (SUPERADMIN)\nexport const updateUser = (id, userData) => async(dispatch) => {\n    try{\n        dispatch({\n            type: UPDATE_USER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        }\n        const { data } = await axios.put(`/api/v1/superadmin/user/${id}`, userData, config)\n\n        dispatch({\n            type: UPDATE_USER_SUCCESS,\n            payload: data.success\n        })\n    }\n    catch(error){\n        dispatch({\n            type: UPDATE_USER_FAIL,\n            payload: error.response.data.message\n            }\n        )\n    }\n}\n\n// Delete user (ADMIN)\nexport const deleteUser = (id) => async(dispatch) => {\n    try{\n        dispatch({\n            type: DELETE_USER_REQUEST\n        })\n\n        const { data } = await axios.delete(`/api/v1/superadmin/user/${id}`)\n\n        dispatch({\n            type: DELETE_USER_SUCCESS,\n            payload: data.success\n        })\n    }\n    catch(error){\n        dispatch({\n            type: DELETE_USER_FAIL,\n            payload: error.response.data.message\n            }\n        )\n    }\n}\n\nexport const getUsers = () => async (dispatch) => {\n    try{\n        dispatch({\n            type: ALL_USERS_REQUEST\n        })\n\n        const { data } = await axios.get('/api/v1/superadmin/users')\n\n        dispatch({\n            type: ALL_USERS_SUCCESS,\n            payload: data\n        })\n    }\n    catch(error){\n        dispatch({\n            type: ALL_USERS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Login\nexport const login = ( email, password ) => async (dispatch) => {\n    try {\n        dispatch ({\n            type: LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/v1/login', { email, password }, config)\n\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: data.user\n        })\n\n    } catch (error) {\n        dispatch({\n            type: LOGIN_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Register user\nexport const register = ( userData ) => async (dispatch) => {\n    try {\n        dispatch ({\n            type: REGISTER_USER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        }\n\n        const { data } = await axios.post('/api/v1/superadmin/register', userData, config)\n\n        dispatch({\n            type: REGISTER_USER_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: REGISTER_USER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Load user\nexport const loadUser = () => async (dispatch) => {\n    try {\n        dispatch ({\n            type: LOAD_USER_REQUEST\n        })\n\n        const { data } = await axios.get('/api/v1/me')\n\n        dispatch({\n            type: LOAD_USER_SUCCESS,\n            payload: data.user\n        })\n\n    } catch (error) {\n        dispatch({\n            type: LOAD_USER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Logout user\nexport const logout = () => async (dispatch) => {\n    try {\n        await axios.get('/api/v1/logout')\n\n        dispatch({\n            type: LOGOUT_SUCCESS\n        })\n\n    } catch (error) {\n        dispatch({\n            type: LOGOUT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Update user profile\nexport const updateProfile = ( userData ) => async (dispatch) => {\n    try {\n        dispatch ({\n            type: UPDATE_PROFILE_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        }\n\n        const { data } = await axios.put('/api/v1/me/update', userData, config)\n\n        dispatch({\n            type: UPDATE_PROFILE_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PROFILE_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Update user password\nexport const updatePassword = ( passwords ) => async (dispatch) => {\n    try {\n        dispatch ({\n            type: UPDATE_PASSWORD_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put('/api/v1/password/update', passwords, config)\n\n        dispatch({\n            type: UPDATE_PASSWORD_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PASSWORD_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Forgot password\nexport const forgotPassword = ( email ) => async (dispatch) => {\n    try {\n        dispatch ({\n            type: FORGOT_PASSWORD_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/v1/password/forgot', email, config)\n\n        dispatch({\n            type: FORGOT_PASSWORD_SUCCESS,\n            payload: data.message\n        })\n\n    } catch (error) {\n        dispatch({\n            type: FORGOT_PASSWORD_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// New password\nexport const resetPassword = ( token, passwords ) => async (dispatch) => {\n    try {\n        dispatch ({\n            type: NEW_PASSWORD_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/password/reset/${token}`, passwords, config)\n\n        dispatch({\n            type: NEW_PASSWORD_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_PASSWORD_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n//clear errors\nexport const clearErrors = () => async(dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    })\n}","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/NewProduct.js",["352","353","354","355"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/Home.js",["356","357","358","359","360","361","362","363","364","365"],"import React, { Fragment, useEffect, useState } from 'react'\nimport '../css/styles.css'\nimport MetaData from './layout/MetaData'\nimport Loader from './layout/Loader'\nimport { useAlert } from 'react-alert'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getHomes, clearErrors } from '../actions/websiteActions'\nimport { INSIDE_DASHBOARD_FALSE } from '../constants/dashboardConstants'\nimport { Link } from 'react-router-dom'\n\nconst Home = () => {\n\n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const { loading,\n            error,\n            productsDescription,\n            servicesDescription,\n            productImageLeft,\n            productImageRight,\n            titleBackground,\n            servicesBackground\n        } = useSelector(state => state.homes)\n\n    useEffect(() => {\n        dispatch(getHomes())\n\n        dispatch({\n            type: INSIDE_DASHBOARD_FALSE\n        })\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n    }, [dispatch, alert, error]) //loop if homePage added as dependency\n\n    return (\n            <Fragment>\n                <MetaData title={'Home'}/>\n                {loading ? <Loader/> : (\n                    <Fragment>\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                <div className=\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 text-center\"\n                                    style={{\n                                    background: \"linear-gradient(to bottom, rgba(216, 203, 194, 0.8) 0%, rgba(34, 33, 32, 0.8) 100%), url(\"+`${titleBackground}`+\") center / auto no-repeat\", \n                                    backgroundSize: \"cover\", \n                                    width: \"100%\", \n                                    height: \"100%\"}\n                                }>\n                                    <div className=\"main-section\">\n                                        <img className=\"logo\" src=\"https://res.cloudinary.com/agiletechnodynamicsinc/image/upload/v1615205387/websiteImages/agile-logo-home_nhud2z.png\"/>\n                                        <h1 className=\"pt-3 main-text\">AGILE TECHNODYNAMICS, INC.</h1>\n                                    </div>\n                                </div>\n                            </div>\n                            <div>\n                                <div className=\"row agile-products-home\">\n                                    <div className=\"col\">\n                                        <h1>Our Products</h1>\n                                        <p className=\"our-products-description pb-3\" >{productsDescription}</p>\n                                        <Link className=\"mt-4\" to=\"/our-products\">See Products <i className=\"fa fa-angle-right\"></i></Link>\n                                    </div>\n                                </div>\n                                <div className=\"row\" style={{margin: 'auto'}}>\n                                    <div className=\"col-sm-12 col-md-6\">\n                                        <div className=\"product-container\" style={{background: \"url(\"+`${productImageLeft}`+\") center / auto no-repeat\", backgroundSize: 'contain'}}></div>\n                                    </div>\n                                    <div className=\"col-sm-12 col-md-6\">\n                                        <div className=\"product-container\" style={{background: \"url(\"+`${productImageRight}`+\") center / auto no-repeat\", backgroundSize: 'contain'}}></div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row services-container\" \n                                style={{\n                                    background: \"linear-gradient(to right, rgb(0,0,0) 0%, rgba(151,161,179,0.4) 100%), url(\"+`${servicesBackground}`+\") no-repeat\", \n                                    backgroundSize: \"cover\", \n                                    backgroundPosition: \"right\"\n                                }}\n                            >\n                                <div className=\"col-sm-12 col-md-6\">\n                                    <div>\n                                        <div className=\"col-auto our-services-description\">\n                                            <h1 className=\"text-center\">Our Services</h1>\n                                            <p>{servicesDescription}</p>\n                                            <Link className=\"mt-4\" to=\"/our-services\">See Services <i className=\"fa fa-angle-right\"></i></Link>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </Fragment>\n                )}\n        </Fragment>\n    )\n}\n\nexport default Home;","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/Dashboard.js",["366"],"import React, { Fragment, useEffect, useState} from 'react'\nimport { Link } from 'react-router-dom'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { listInquiry } from '../../actions/inquiryActions'\nimport { getUsers, logout } from '../../actions/userActions'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport MetaData from './../layout/MetaData'\nimport Loader from './../layout/Loader'\nimport '../../css/dashboard.css'\nimport '../../css/Sidebar-Menu.css'\nimport '../../css/Sidebar-Menu-1.css'\nimport '../../css/bootstrap.min.css'\n\nconst Dashboard = () => {\n    const dispatch = useDispatch()\n    const alert = useAlert()\n\n    const { loading, adminCount, superadminCount } = useSelector(state => state.users)\n    const { inquiryCount, appointmentCount, otherCount } = useSelector(state => state.listInquiry)\n    const { user } = useSelector(state => state.auth)\n\n    const [isToggled, setToggled] = useState('false')\n\n    const handleToggle = () => setToggled(!isToggled)\n    \n    const logoutHandler = () => {\n        dispatch(logout())\n        alert.success('Logged out successfully')\n    }\n\n    useEffect(() => {\n        dispatch(listInquiry())\n        dispatch(getUsers())\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch])\n    \n    return (\n        <Fragment>\n            <MetaData title={'Dashboard'}/>\n            <Fragment>\n                {loading ? <Loader/> : (\n                    <Fragment>\n                        <MetaData title={'Admin Dashboard'}/>\n                        <div id=\"wrapper\" className={isToggled ? null : \"toggled\"}   >\n                            <div id=\"sidebar-wrapper\" >\n                                <ul className=\"sidebar-nav\">\n                                    <li className=\"sidebar-brand\">Agile Technodynamics</li>\n                                    <li> <Link to=\"/admin/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link></li>\n                                    <li> <Link to=\"/admin/me\"><i className=\"fa fa-user\"></i> My Profile</Link></li>\n                                    <li> <Link to=\"/\"><i className=\"fa fa-home\"></i> Agile Homepage</Link></li>\n                                    {user && user.role !== 'admin' ? (\n                                            <Fragment>\n                                                <hr/>\n                                                <li> <Link to=\"/admin/users/admin\"><i className=\"fa fa-users\"></i> Admins</Link></li>\n                                                <li> <Link to=\"/admin/users/superadmin\"><i className=\"fa fa-user-circle\"></i> Superadmins</Link></li>\n                                                <li> <Link to=\"/register\"><i className=\"fa fa-user-plus\"></i> Register</Link></li>\n                                            </Fragment>\n                                        ) : (\n                                            <Fragment>\n                                                <li> <Link to=\"/admin/products\"><i className=\"fa fa-shopping-bag\"></i> Products</Link></li>\n                                                <hr/>\n                                                <li> <Link to=\"/admin/inquiries\"><i className=\"fa fa-envelope\"></i> Inquiries</Link></li>\n                                                <li> <Link to=\"/admin/appointments\"><i className=\"fa fa-archive\"></i> Appointments</Link></li>\n                                                <li> <Link to=\"/admin/others\"><i className=\"fa fa-inbox\"></i> Other Concerns</Link></li>\n                                                <hr/>\n                                                <li> <Link to=\"/admin/archives\"><i className=\"fa fa-envelope-open\"></i> Archives</Link></li>\n                                                <li> <Link to=\"/admin/trash\"><i className=\"fa fa-trash\"></i> Trash</Link></li>\n                                            </Fragment>\n                                        )}\n\n                                    <hr/>\n                                    <li className=\"text-danger\" onClick={logoutHandler}> <Link to=\"/\"><i className=\"fa fa-sign-out\"></i> Log out</Link></li>\n                                </ul>\n                            </div>\n                            <div className=\"page-content-wrapper\">\n                                <div className=\"container-fluid\">\n                                    <a className=\"btn btn-link\" role=\"button\" id=\"menu-toggle\" onClick={handleToggle}  >\n                                        <i className=\"fa fa-bars\"   ></i>\n                                    </a>\n                                    {user && user.role !== 'admin' ? (\n                                        <Fragment>\n                                            <div className=\"main-section\" style={{paddingTop: '65px'}}>\n                                                <h3><strong>Overview</strong></h3>\n                                                <div className=\"dashbord\">\n                                                    <div className=\"icon-section\">\n                                                        <i className=\"fa fa-users\" aria-hidden=\"true\"></i><br/>\n                                                        <small>Admins</small>\n                                                        <p>{adminCount} admins</p>\n                                                    </div>\n                                                    <div className=\"detail-section\">\n                                                        <Link to=\"/admin/users/admin\">More Info </Link>\n                                                    </div>\n                                                </div>\n                                                <div className=\"dashbord\">\n                                                    <div className=\"icon-section\">\n                                                        <i className=\"fa fa-user-circle\" aria-hidden=\"true\"></i><br/>\n                                                        <small>Super Admins</small>\n                                                        <p>{superadminCount}  superadmins</p>\n                                                    </div>\n                                                    <div className=\"detail-section\">\n                                                        <Link to=\"/admin/users/superadmin\">More Info </Link>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </Fragment>\n                                    ) : (\n                                        <Fragment>\n                                            <div className=\"main-section\" style={{paddingTop: '65px'}}>\n                                                <h3><strong>Inbox</strong></h3>\n                                                <div className=\"dashbord\">\n                                                    <div className=\"icon-section\">\n                                                        <i className=\"fa fa-envelope\" aria-hidden=\"true\"></i><br/>\n                                                        <small>Inquiries</small>\n                                                        <p>{inquiryCount} messages</p>\n                                                    </div>\n                                                    <div className=\"detail-section\">\n                                                        <Link to=\"/admin/inquiries\">View Inquiries</Link>\n                                                    </div>\n                                                </div>\n                                                <div className=\"dashbord\">\n                                                    <div className=\"icon-section\">\n                                                        <i className=\"fa fa-archive\" aria-hidden=\"true\"></i><br/>\n                                                        <small>Appointments</small>\n                                                        <p>{appointmentCount} messages</p>\n                                                    </div>\n                                                    <div className=\"detail-section\">\n                                                        <Link to=\"/admin/appointments\">View Appointments</Link>\n                                                    </div>\n                                                </div>\n                                                <div className=\"dashbord\">\n                                                    <div className=\"icon-section\">\n                                                        <i className=\"fa fa-inbox\" aria-hidden=\"true\"></i><br/>\n                                                        <small>Other Concerns</small>\n                                                        <p>{otherCount} messages</p>\n                                                    </div>\n                                                    <div className=\"detail-section\">\n                                                        <Link to=\"/admin/others\">View Others</Link>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </Fragment>\n                                    )}\n                                    <div className=\"main-section\" style={{paddingTop: '65px', paddingBottom: '65px'}}>\n                                        <h3><strong>Settings</strong></h3>\n                                        <div className=\"dashbord-25\">\n                                            <div className=\"icon-section\">\n                                                <i className=\"fa fa-home\" aria-hidden=\"true\"></i><br/>\n                                                <p>Update Home</p>\n                                            </div>\n                                            <div className=\"detail-section\">\n                                                <Link to=\"/admin/home\">Update <i className=\"fa fa-angle-right\"></i></Link>\n                                            </div>\n                                        </div>\n                                        <div className=\"dashbord-25\">\n                                            <div className=\"icon-section\">\n                                                <i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i><br/>\n                                                <p>Update About</p>\n                                            </div>\n                                            <div className=\"detail-section\">\n                                                <Link to=\"/admin/about\">Update <i className=\"fa fa-angle-right\"></i></Link>\n                                            </div>\n                                        </div>\n                                        <div className=\"dashbord-25\">\n                                            <div className=\"icon-section\">\n                                                <i className=\"fa fa-quote-left\" aria-hidden=\"true\"></i><br/>\n                                                <p>Update Footer</p>\n                                            </div>\n                                            <div className=\"detail-section\">\n                                                <Link to=\"/admin/footer\">Update <i className=\"fa fa-angle-right\"></i></Link>\n                                            </div>\n                                        </div>\n                                        <div className=\"dashbord-25\">\n                                            <div className=\"icon-section\">\n                                                <i className=\"fa fa-check\" aria-hidden=\"true\"></i><br/>\n                                                <p>Update Services</p>\n                                            </div>\n                                            <div className=\"detail-section\">\n                                                <Link to=\"/admin/service\">Update <i className=\"fa fa-angle-right\"></i></Link>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </Fragment>\n                )}\n            </Fragment>\n        </Fragment>\n    )\n}\n\nexport default Dashboard\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/Header.js",["367","368","369","370","371","372"],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/user/Login.js",["373","374","375"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport Loader from '../layout/Loader'\nimport MetaData from '../layout/MetaData'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from  'react-redux'\nimport { login, clearErrors } from './../../actions/userActions'\nimport { INSIDE_DASHBOARD_TRUE } from '../../constants/dashboardConstants'\nimport '../../css/forms.css'\n\nconst Login = ( { history }) => {\n\n    const [ email, setEmail ] = useState('');\n    const [ password, setPassword ] = useState('');\n    \n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\n\n    const [isChecked, setChecked] = useState('false')\n\n    const checkboxCheck = () => {\n        setChecked(!isChecked)\n    }\n\n    const [userInput, setUserInput ] = useState('')\n    const [isCorrect, setIsCorrect ] = useState('false')\n    const loginPassword = 'cgJBHJXe'\n    const [attempts, setAttempts] = useState(2)\n    let counter = 3;\n\n    const passwordCheck = (userInput) => {\n        if(userInput === loginPassword) {\n            setIsCorrect(!isCorrect)\n            alert.success('Access code is correct.')\n        } else {\n            setAttempts((attempts-1))\n\n            if(attempts > 0) {\n                alert.error(`You have ${attempts} attempts left`)\n            } else {\n                alert.error('Cannot redirect to log in page.')\n                history.push('/')\n            }\n        }\n    }\n\n    useEffect(() => {\n        if(isAuthenticated) {\n            history.push('/admin/dashboard')\n            alert.success('Logged in successfully.')\n        }\n\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors());\n        } //loadError in load_user_fail\n\n        dispatch({\n            type: INSIDE_DASHBOARD_TRUE\n        })\n    }, [dispatch, alert, isAuthenticated, error, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(login(email, password));\n    }\n\n    return (\n        <Fragment>\n            {loading ? <Loader/> : (\n                <Fragment>\n                <MetaData title={'Log In'}/>\n                <div className={isCorrect ? \"login\" : \"d-none\"} style={{margin: 'auto'}}>\n                    <form>\n                        <div className=\"illustration\">\n                            <img className=\"login-logo\" alt=\"company logo\" src=\"https://res.cloudinary.com/agiletechnodynamicsinc/image/upload/v1615205387/websiteImages/agile-logo-home_nhud2z.png\"/>\n                        </div>\n                        <div className=\"form-group\">\n                            <h6>Enter access code</h6>\n                            <p style={{color: '#333', fontSize: '10px'}}>If you don't know the code, contact your administrator.</p>\n                            <input \n                                className=\"form-control\" \n                                type=\"text\" \n                                name=\"userInput\"\n                                value={userInput}\n                                placeholder=\"xxxxxxxx\"\n                                maxLength=\"8\"\n                                onChange={(e) => setUserInput(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <a\n                                className=\"btn btn-primary btn-block\"\n                                style={{color: 'white'}}\n                                onClick={() => passwordCheck(userInput)}\n                            >Submit</a>\n                        </div>\n                    </form>\n                </div>\n                <div className={isCorrect ? \"d-none\" : \"login\"} style={{margin: 'auto'}}>\n                        <form onSubmit={submitHandler}>\n                            <h2 className=\"sr-only\">Login Form</h2>\n                            <div className=\"illustration\">\n                                <img className=\"login-logo\" alt=\"company logo\" src=\"https://res.cloudinary.com/agiletechnodynamicsinc/image/upload/v1615205387/websiteImages/agile-logo-home_nhud2z.png\"/>\n                            </div>\n                            <div className=\"form-group\">\n                                <input className=\"form-control\" type=\"email\" name=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <div class=\"input-group mb-3\">\n                                    <input \n                                        className=\"form-control\" \n                                        type={isChecked ? \"password\" : \"text\"}  \n                                        name=\"password\" \n                                        placeholder=\"Password\" \n                                        value={password} \n                                        onChange={(e) => setPassword(e.target.value)}\n                                    />\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\" id=\"basic-addon1\">\n                                            <a\n                                                onClick={checkboxCheck}\n                                                style={{cursor: 'pointer'}}\n                                            >\n                                                <span className=\"fa-lg\">\n                                                    <i className={isChecked ? \"fa fa-eye-slash\" : \"fa fa-eye\"}></i>\n                                                </span>\n                                            </a>\n                                        </span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <button className=\"btn btn-primary btn-block\" type=\"submit\" disabled={loading ? true : false}>Log In</button>\n                            </div>\n                            <Link className=\"forgot\" to=\"/password/forgot\">Forgot your password?</Link>\n                        </form>\n                    </div>\n            </Fragment>\n        )}\n        </Fragment>\n    )\n}\n\nexport default Login\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/components/layout/MetaData.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/productActions.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/product/ProductDisplay.js",["376"],"import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst ProductList = ({ product }) => {\n\n    function getName(name) {\n        var x = name;\n        var y = x.split(' ')\n        var z = x.split(' ').slice(0,5).join(' ');\n\n        if(y.length > 5) {\n            z = z + \"...\"\n        }\n        \n        return z\n    }\n\n    return (\n        <div class=\"col-sm-6 col-md-4 col-lg-3 col-xl-3 product-image\">\n            <div>\n                <img alt={`Image of ${product.name}`} height=\"250px\" src={product.image.url}/>\n            </div>\n            <Link to={`/our-products/${product._id}`} class=\"product-name text-nowrap\">\n                {getName(product.name)}\n            </Link>\n        </div>\n    )\n}\n\nexport default ProductList\n","/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/productConstants.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/userConstants.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/inquiryConstants.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/websiteConstants.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/constants/dashboardConstants.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/websiteActions.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/actions/inquiryActions.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/UpdateUserSuccess.js",[],"/Users/abby/Desktop/agile-technodynamics/frontend/src/components/admin/ListProducts.js",["377"],{"ruleId":"378","replacedBy":"379"},{"ruleId":"380","replacedBy":"381"},{"ruleId":"382","severity":1,"message":"383","line":20,"column":22,"nodeType":"384","messageId":"385","endLine":20,"endColumn":37},{"ruleId":"386","severity":1,"message":"387","line":74,"column":71,"nodeType":"388","messageId":"389","endLine":74,"endColumn":73},{"ruleId":"382","severity":1,"message":"390","line":6,"column":10,"nodeType":"384","messageId":"385","endLine":6,"endColumn":14},{"ruleId":"382","severity":1,"message":"383","line":20,"column":22,"nodeType":"384","messageId":"385","endLine":20,"endColumn":37},{"ruleId":"382","severity":1,"message":"391","line":21,"column":25,"nodeType":"384","messageId":"385","endLine":21,"endColumn":39},{"ruleId":"386","severity":1,"message":"387","line":61,"column":75,"nodeType":"388","messageId":"389","endLine":61,"endColumn":77},{"ruleId":"382","severity":1,"message":"383","line":20,"column":22,"nodeType":"384","messageId":"385","endLine":20,"endColumn":37},{"ruleId":"386","severity":1,"message":"387","line":76,"column":67,"nodeType":"388","messageId":"389","endLine":76,"endColumn":69},{"ruleId":"382","severity":1,"message":"383","line":20,"column":22,"nodeType":"384","messageId":"385","endLine":20,"endColumn":37},{"ruleId":"386","severity":1,"message":"387","line":74,"column":67,"nodeType":"388","messageId":"389","endLine":74,"endColumn":69},{"ruleId":"382","severity":1,"message":"383","line":20,"column":22,"nodeType":"384","messageId":"385","endLine":20,"endColumn":37},{"ruleId":"386","severity":1,"message":"387","line":76,"column":71,"nodeType":"388","messageId":"389","endLine":76,"endColumn":73},{"ruleId":"382","severity":1,"message":"383","line":20,"column":22,"nodeType":"384","messageId":"385","endLine":20,"endColumn":37},{"ruleId":"386","severity":1,"message":"387","line":80,"column":75,"nodeType":"388","messageId":"389","endLine":80,"endColumn":77},{"ruleId":"382","severity":1,"message":"392","line":21,"column":9,"nodeType":"384","messageId":"385","endLine":21,"endColumn":15},{"ruleId":"382","severity":1,"message":"393","line":1,"column":38,"nodeType":"384","messageId":"385","endLine":1,"endColumn":46},{"ruleId":"394","severity":1,"message":"395","line":181,"column":25,"nodeType":"396","endLine":181,"endColumn":108},{"ruleId":"397","severity":1,"message":"398","line":237,"column":49,"nodeType":"396","endLine":242,"endColumn":51},{"ruleId":"394","severity":1,"message":"395","line":277,"column":45,"nodeType":"396","endLine":281,"endColumn":46},{"ruleId":"394","severity":1,"message":"395","line":132,"column":29,"nodeType":"396","endLine":132,"endColumn":112},{"ruleId":"394","severity":1,"message":"395","line":192,"column":49,"nodeType":"396","endLine":196,"endColumn":50},{"ruleId":"399","severity":1,"message":"400","line":100,"column":8,"nodeType":"401","endLine":100,"endColumn":65,"suggestions":"402"},{"ruleId":"394","severity":1,"message":"395","line":138,"column":29,"nodeType":"396","endLine":138,"endColumn":111},{"ruleId":"394","severity":1,"message":"395","line":246,"column":49,"nodeType":"396","endLine":250,"endColumn":50},{"ruleId":"394","severity":1,"message":"395","line":73,"column":37,"nodeType":"396","endLine":73,"endColumn":121},{"ruleId":"394","severity":1,"message":"395","line":167,"column":25,"nodeType":"396","endLine":167,"endColumn":107},{"ruleId":"394","severity":1,"message":"395","line":126,"column":25,"nodeType":"396","endLine":126,"endColumn":107},{"ruleId":"394","severity":1,"message":"395","line":169,"column":49,"nodeType":"396","endLine":172,"endColumn":50},{"ruleId":"394","severity":1,"message":"395","line":195,"column":49,"nodeType":"396","endLine":198,"endColumn":50},{"ruleId":"394","severity":1,"message":"395","line":215,"column":37,"nodeType":"396","endLine":219,"endColumn":38},{"ruleId":"394","severity":1,"message":"395","line":167,"column":25,"nodeType":"396","endLine":167,"endColumn":109},{"ruleId":"394","severity":1,"message":"395","line":166,"column":25,"nodeType":"396","endLine":166,"endColumn":109},{"ruleId":"394","severity":1,"message":"395","line":166,"column":25,"nodeType":"396","endLine":166,"endColumn":109},{"ruleId":"394","severity":1,"message":"395","line":175,"column":25,"nodeType":"396","endLine":175,"endColumn":109},{"ruleId":"386","severity":1,"message":"403","line":69,"column":32,"nodeType":"388","messageId":"389","endLine":69,"endColumn":34},{"ruleId":"399","severity":1,"message":"404","line":115,"column":8,"nodeType":"401","endLine":115,"endColumn":76,"suggestions":"405"},{"ruleId":"394","severity":1,"message":"395","line":219,"column":25,"nodeType":"396","endLine":219,"endColumn":109},{"ruleId":"394","severity":1,"message":"395","line":131,"column":25,"nodeType":"396","endLine":131,"endColumn":109},{"ruleId":"397","severity":1,"message":"398","line":88,"column":25,"nodeType":"396","endLine":93,"endColumn":27},{"ruleId":"394","severity":1,"message":"395","line":146,"column":25,"nodeType":"396","endLine":146,"endColumn":109},{"ruleId":"394","severity":1,"message":"395","line":124,"column":25,"nodeType":"396","endLine":124,"endColumn":107},{"ruleId":"394","severity":1,"message":"395","line":148,"column":25,"nodeType":"396","endLine":148,"endColumn":109},{"ruleId":"394","severity":1,"message":"395","line":159,"column":21,"nodeType":"396","endLine":159,"endColumn":105},{"ruleId":"382","severity":1,"message":"406","line":33,"column":29,"nodeType":"384","messageId":"385","endLine":33,"endColumn":47},{"ruleId":"382","severity":1,"message":"407","line":45,"column":11,"nodeType":"384","messageId":"385","endLine":45,"endColumn":24},{"ruleId":"394","severity":1,"message":"395","line":196,"column":25,"nodeType":"396","endLine":196,"endColumn":107},{"ruleId":"408","severity":1,"message":"409","line":319,"column":41,"nodeType":"396","endLine":325,"endColumn":43},{"ruleId":"394","severity":1,"message":"395","line":337,"column":45,"nodeType":"396","endLine":341,"endColumn":46},{"ruleId":"382","severity":1,"message":"410","line":6,"column":20,"nodeType":"384","messageId":"385","endLine":6,"endColumn":30},{"ruleId":"382","severity":1,"message":"411","line":8,"column":10,"nodeType":"384","messageId":"385","endLine":8,"endColumn":27},{"ruleId":"394","severity":1,"message":"395","line":161,"column":25,"nodeType":"396","endLine":161,"endColumn":109},{"ruleId":"394","severity":1,"message":"395","line":141,"column":21,"nodeType":"396","endLine":141,"endColumn":104},{"ruleId":"394","severity":1,"message":"395","line":263,"column":45,"nodeType":"396","endLine":267,"endColumn":46},{"ruleId":"394","severity":1,"message":"395","line":178,"column":25,"nodeType":"396","endLine":178,"endColumn":109},{"ruleId":"382","severity":1,"message":"412","line":8,"column":9,"nodeType":"384","messageId":"385","endLine":8,"endColumn":17},{"ruleId":"408","severity":1,"message":"409","line":60,"column":33,"nodeType":"396","endLine":60,"endColumn":127},{"ruleId":"394","severity":1,"message":"395","line":129,"column":25,"nodeType":"396","endLine":129,"endColumn":108},{"ruleId":"394","severity":1,"message":"395","line":218,"column":37,"nodeType":"396","endLine":222,"endColumn":38},{"ruleId":"382","severity":1,"message":"413","line":44,"column":29,"nodeType":"384","messageId":"385","endLine":44,"endColumn":36},{"ruleId":"386","severity":1,"message":"403","line":133,"column":31,"nodeType":"388","messageId":"389","endLine":133,"endColumn":33},{"ruleId":"394","severity":1,"message":"395","line":228,"column":25,"nodeType":"396","endLine":228,"endColumn":109},{"ruleId":"394","severity":1,"message":"395","line":391,"column":73,"nodeType":"396","endLine":394,"endColumn":74},{"ruleId":"394","severity":1,"message":"395","line":422,"column":73,"nodeType":"396","endLine":425,"endColumn":74},{"ruleId":"394","severity":1,"message":"395","line":106,"column":37,"nodeType":"396","endLine":109,"endColumn":38},{"ruleId":"394","severity":1,"message":"395","line":132,"column":37,"nodeType":"396","endLine":135,"endColumn":38},{"ruleId":"382","severity":1,"message":"414","line":34,"column":5,"nodeType":"384","messageId":"385","endLine":34,"endColumn":22},{"ruleId":"382","severity":1,"message":"411","line":37,"column":5,"nodeType":"384","messageId":"385","endLine":37,"endColumn":22},{"ruleId":"386","severity":1,"message":"403","line":74,"column":31,"nodeType":"388","messageId":"389","endLine":74,"endColumn":33},{"ruleId":"394","severity":1,"message":"395","line":185,"column":29,"nodeType":"396","endLine":185,"endColumn":111},{"ruleId":"408","severity":1,"message":"409","line":327,"column":37,"nodeType":"396","endLine":333,"endColumn":39},{"ruleId":"394","severity":1,"message":"395","line":344,"column":41,"nodeType":"396","endLine":348,"endColumn":42},{"ruleId":"382","severity":1,"message":"393","line":1,"column":38,"nodeType":"384","messageId":"385","endLine":1,"endColumn":46},{"ruleId":"415","severity":1,"message":"416","line":49,"column":140,"nodeType":"388","messageId":"417","endLine":49,"endColumn":141},{"ruleId":"415","severity":1,"message":"416","line":49,"column":161,"nodeType":"388","messageId":"417","endLine":49,"endColumn":162},{"ruleId":"397","severity":1,"message":"398","line":55,"column":41,"nodeType":"396","endLine":55,"endColumn":186},{"ruleId":"415","severity":1,"message":"416","line":70,"column":102,"nodeType":"388","messageId":"417","endLine":70,"endColumn":103},{"ruleId":"415","severity":1,"message":"416","line":70,"column":124,"nodeType":"388","messageId":"417","endLine":70,"endColumn":125},{"ruleId":"415","severity":1,"message":"416","line":73,"column":102,"nodeType":"388","messageId":"417","endLine":73,"endColumn":103},{"ruleId":"415","severity":1,"message":"416","line":73,"column":125,"nodeType":"388","messageId":"417","endLine":73,"endColumn":126},{"ruleId":"415","severity":1,"message":"416","line":79,"column":125,"nodeType":"388","messageId":"417","endLine":79,"endColumn":126},{"ruleId":"415","severity":1,"message":"416","line":79,"column":149,"nodeType":"388","messageId":"417","endLine":79,"endColumn":150},{"ruleId":"394","severity":1,"message":"395","line":81,"column":37,"nodeType":"396","endLine":81,"endColumn":121},{"ruleId":"397","severity":1,"message":"398","line":55,"column":37,"nodeType":"396","endLine":55,"endColumn":197},{"ruleId":"418","severity":1,"message":"419","line":67,"column":33,"nodeType":"420","endLine":67,"endColumn":58},{"ruleId":"418","severity":1,"message":"421","line":74,"column":60,"nodeType":"420","endLine":74,"endColumn":100},{"ruleId":"418","severity":1,"message":"419","line":105,"column":37,"nodeType":"420","endLine":105,"endColumn":62},{"ruleId":"397","severity":1,"message":"398","line":110,"column":37,"nodeType":"396","endLine":115,"endColumn":39},{"ruleId":"418","severity":1,"message":"421","line":117,"column":60,"nodeType":"420","endLine":117,"endColumn":97},{"ruleId":"382","severity":1,"message":"422","line":31,"column":9,"nodeType":"384","messageId":"385","endLine":31,"endColumn":16},{"ruleId":"394","severity":1,"message":"395","line":94,"column":29,"nodeType":"396","endLine":98,"endColumn":30},{"ruleId":"394","severity":1,"message":"395","line":123,"column":45,"nodeType":"396","endLine":126,"endColumn":46},{"ruleId":"408","severity":1,"message":"409","line":21,"column":17,"nodeType":"396","endLine":21,"endColumn":95},{"ruleId":"394","severity":1,"message":"395","line":162,"column":25,"nodeType":"396","endLine":162,"endColumn":109},"no-native-reassign",["423"],"no-negated-in-lhs",["424"],"no-unused-vars","'setMainCategory' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Link' is defined but never used.","'setSubCategory' is assigned a value but never used.","'abouts' is assigned a value but never used.","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'footerInfo'. Either include it or remove the dependency array.","ArrayExpression",["425"],"Expected '===' and instead saw '=='.","React Hook useEffect has a missing dependency: 'deleteAll'. Either include it or remove the dependency array.",["426"],"'setUseDefaultImage' is assigned a value but never used.","'checkboxCheck' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'deleteUser' is defined but never used.","'DELETE_USER_RESET' is defined but never used.","'Carousel' is defined but never used.","'success' is assigned a value but never used.","'UPDATE_USER_RESET' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","jsx-a11y/aria-props","aria-aria-haspopup: This attribute is an invalid ARIA attribute.","JSXAttribute","aria-aria-labelledby: This attribute is an invalid ARIA attribute.","'counter' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"427","fix":"428"},{"desc":"429","fix":"430"},"Update the dependencies array to be: [dispatch, alert, error, history, updateError, isUpdated, footerInfo]",{"range":"431","text":"432"},"Update the dependencies array to be: [dispatch, alert, error, history, isDeleted, isUpdated, deleteError, deleteAll]",{"range":"433","text":"434"},[3365,3422],"[dispatch, alert, error, history, updateError, isUpdated, footerInfo]",[3484,3552],"[dispatch, alert, error, history, isDeleted, isUpdated, deleteError, deleteAll]"]